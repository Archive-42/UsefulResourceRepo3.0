<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Philip Walton on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Philip Walton</name>
  </author>
  <link href="https://web.dev/authors/philipwalton/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <icon>https://web-dev.imgix.net/image/admin/ovBM8MF9rYDxVVHUVlcG.jpg?auto=format</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Engineer at Google working on the Web Platform</subtitle>
  
  
  <entry>
    <title>Cumulative Layout Shift (CLS)</title>
    <link href="https://web.dev/cls/"/>
    <updated>2019-06-11T00:00:00Z</updated>
    <id>https://web.dev/cls/</id>
    <content type="text/html" mode="escaped">&lt;div role=&quot;banner&quot; class=&quot;w-banner w-banner--caution w-banner--body&quot;&gt;
&lt;p&gt;&lt;strong&gt;Jun 1, 2021:&lt;/strong&gt; The implementation of CLS has changed.
To learn more about the reasons behind the change, check out &lt;a href=&quot;https://web.dev/evolving-cls&quot;&gt;Evolving the
CLS metric&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--key-term&quot;&gt;
&lt;p&gt;&lt;strong&gt;Key Term&lt;/strong&gt;:
Cumulative Layout Shift (CLS) is an important, user-centric metric for
measuring &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;visual
stability&lt;/a&gt; because it
helps quantify how often users experience unexpected layout shifts—a low
CLS helps ensure that the page is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;delightful&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Have you ever been reading an article online when something suddenly changes on
the page? Without warning, the text moves, and you&#39;ve lost your place. Or even
worse: you&#39;re about to tap a link or a button, but in the instant before your
finger lands—BOOM—the link moves, and you end up clicking something
else!&lt;/p&gt;
&lt;p&gt;Most of the time these kinds of experiences are just annoying, but in some
cases, they can cause real damage.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot; poster=&quot;https://storage.googleapis.com/web-dev-assets/layout-instability-api/layout-instability-poster.png&quot; width=&quot;658&quot; height=&quot;510&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/layout-instability-api/layout-instability2.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/layout-instability-api/layout-instability2.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    A screencast illustrating how layout instability can negatively affect
    users.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Unexpected movement of page content usually happens because resources are loaded
asynchronously or DOM elements get dynamically added to the page above existing
content. The culprit might be an image or video with unknown dimensions, a font
that renders larger or smaller than its fallback, or a third-party ad or widget
that dynamically resizes itself.&lt;/p&gt;
&lt;p&gt;What makes this issue even more problematic is that how a site functions in
development is often quite different from how users experience it. Personalized
or third-party content often doesn&#39;t behave the same in development as it does
in production, test images are often already in the developer&#39;s browser cache,
and API calls that run locally are often so fast that the delay isn&#39;t
noticeable.&lt;/p&gt;
&lt;p&gt;The Cumulative Layout Shift (CLS) metric helps you address this problem by
measuring how often it&#39;s occurring for real users.&lt;/p&gt;
&lt;h2 id=&quot;what-is-cls&quot;&gt;What is CLS? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#what-is-cls&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CLS is a measure of the largest burst of &lt;em&gt;layout shift scores&lt;/em&gt; for every
&lt;a href=&quot;https://web.dev/cls/#expected-vs.-unexpected-layout-shifts&quot;&gt;unexpected&lt;/a&gt; layout shift that
occurs during the entire lifespan of a page.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;layout shift&lt;/em&gt; occurs any time a visible element changes its position from one
rendered frame to the next. (See below for details on how individual &lt;a href=&quot;https://web.dev/cls/#layout-shift-score&quot;&gt;layout
shift scores&lt;/a&gt; are calculated.)&lt;/p&gt;
&lt;p&gt;A burst of layout shifts, known as a &lt;a href=&quot;https://web.dev/evolving-cls/#why-a-session-window&quot;&gt;&lt;em&gt;session
window&lt;/em&gt;&lt;/a&gt;, is when one or more individual
layout shifts occur in rapid succession with less than 1-second in between each
shift and a maximum of 5 seconds for the total window duration.&lt;/p&gt;
&lt;p&gt;The largest burst is the session window with the maximum cumulative score of all
layout shifts within that window.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot; width=&quot;658&quot; height=&quot;452&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/better-layout-shift-metric/session-window.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/better-layout-shift-metric/session-window.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Example of session windows. Blue bars represent the scores of each individual layout shift.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Previously CLS measured the sum total of &lt;em&gt;all individual layout shift scores&lt;/em&gt;
that occurred during the entire lifespan of the page.
To see which tools still provide the ability to benchmark against the original
implementation, check out &lt;a href=&quot;https://web.dev/cls-web-tooling&quot;&gt;Evolving Cumulative Layout Shift in web tooling&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;what-is-a-good-cls-score&quot;&gt;What is a good CLS score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#what-is-a-good-cls-score&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have a CLS score of
&lt;strong&gt;0.1&lt;/strong&gt; or less. To ensure you&#39;re hitting this target for most of your users, a
good threshold to measure is the &lt;strong&gt;75th percentile&lt;/strong&gt; of page loads, segmented
across mobile and desktop devices.&lt;/p&gt;
&lt;picture&gt;
  &lt;source srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9mWVASbWDLzdBUpVcjE1.svg&quot; media=&quot;(min-width: 640px)&quot; width=&quot;400&quot; ,=&quot;&quot; height=&quot;100&quot; /&gt;
  &lt;img alt=&quot;Good CLS values are under 0.1, poor values are greater than 0.25 and anything in between needs improvement&quot; class=&quot;w-screenshot w-screenshot--filled width-full&quot; decoding=&quot;async&quot; height=&quot;300&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uqclEgIlTHhwIgNTXN3Y.svg&quot; width=&quot;400&quot; /&gt;
&lt;/picture&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To learn more about the research and methodology behind this recommendation,
see: &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/&quot;&gt;Defining the Core Web Vitals metrics
thresholds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;layout-shifts-in-detail&quot;&gt;Layout shifts in detail &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#layout-shifts-in-detail&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Layout shifts are defined by the &lt;a href=&quot;https://github.com/WICG/layout-instability&quot; rel=&quot;noopener&quot;&gt;Layout Instability
API&lt;/a&gt;, which reports &lt;code&gt;layout-shift&lt;/code&gt;
entries any time an element that is visible within the viewport changes its
start position (for example, its top and left position in the default &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode&quot; rel=&quot;noopener&quot;&gt;writing
mode&lt;/a&gt;) between
two frames. Such elements are considered &lt;em&gt;unstable elements&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Note that layout shifts only occur when existing elements change their start
position. If a new element is added to the DOM or an existing element changes
size, it doesn&#39;t count as a layout shift—as long as the change doesn&#39;t
cause other visible elements to change their start position.&lt;/p&gt;
&lt;h3 id=&quot;layout-shift-score&quot;&gt;Layout shift score &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#layout-shift-score&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To calculate the &lt;em&gt;layout shift score&lt;/em&gt;, the browser looks at the viewport size
and the movement of &lt;em&gt;unstable elements&lt;/em&gt; in the viewport between two rendered
frames. The layout shift score is a product of two measures of that movement:
the &lt;em&gt;impact fraction&lt;/em&gt; and the &lt;em&gt;distance fraction&lt;/em&gt; (both defined below).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;layout shift score = impact fraction * distance fraction&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;impact-fraction&quot;&gt;Impact fraction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#impact-fraction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/WICG/layout-instability#Impact-Fraction&quot; rel=&quot;noopener&quot;&gt;impact
fraction&lt;/a&gt; measures
how &lt;em&gt;unstable elements&lt;/em&gt; impact the viewport area between two frames.&lt;/p&gt;
&lt;p&gt;The union of the visible areas of all &lt;em&gt;unstable elements&lt;/em&gt; for the previous frame
&lt;em&gt;and&lt;/em&gt; the current frame—as a fraction of the total area of the
viewport—is the &lt;em&gt;impact fraction&lt;/em&gt; for the current frame.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&quot;&gt;&lt;img alt=&quot;Impact fraction example with one _unstable element_&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BbpE9rFQbF8aU6iXN1U6.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the image above there&#39;s an element that takes up half of the viewport in one
frame. Then, in the next frame, the element shifts down by 25% of the viewport
height. The red, dotted rectangle indicates the union of the element&#39;s visible
area in both frames, which, in this case, is 75% of the total viewport, so its
&lt;em&gt;impact fraction&lt;/em&gt; is &lt;code&gt;0.75&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;distance-fraction&quot;&gt;Distance fraction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#distance-fraction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The other part of the layout shift score equation measures the distance that
unstable elements have moved, relative to the viewport. The &lt;em&gt;distance fraction&lt;/em&gt;
is the greatest distance any &lt;em&gt;unstable element&lt;/em&gt; has moved in the frame (either
horizontally or vertically) divided by the viewport&#39;s largest dimension (width
or height, whichever is greater).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&quot;&gt;&lt;img alt=&quot;Distance fraction example with one _unstable element_&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASnfpVs2n9winu6mmzdk.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the example above, the largest viewport dimension is the height, and the
unstable element has moved by 25% of the viewport height, which makes the
&lt;em&gt;distance fraction&lt;/em&gt; 0.25.&lt;/p&gt;
&lt;p&gt;So, in this example the &lt;em&gt;impact fraction&lt;/em&gt; is &lt;code&gt;0.75&lt;/code&gt; and the &lt;em&gt;distance fraction&lt;/em&gt;
is &lt;code&gt;0.25&lt;/code&gt;, so the &lt;em&gt;layout shift score&lt;/em&gt; is &lt;code&gt;0.75 * 0.25 = 0.1875&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Initially, the layout shift score was calculated based only on &lt;em&gt;impact
fraction&lt;/em&gt;. The &lt;em&gt;distance fraction&lt;/em&gt; was introduced to avoid overly penalizing
cases where large elements shift by a small amount.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The next example illustrates how adding content to an existing element affects
the layout shift score:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&quot;&gt;&lt;img alt=&quot;Layout shift example with stable and _unstable elements_ and viewport clipping&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xhN81DazXCs8ZawoCj0T.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &amp;quot;Click Me!&amp;quot; button is appended to the bottom of the gray box with black
text, which pushes the green box with white text down (and partially out of the
viewport).&lt;/p&gt;
&lt;p&gt;In this example, the gray box changes size, but its start position does not
change so it&#39;s not an &lt;em&gt;unstable element&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &amp;quot;Click Me!&amp;quot; button was not previously in the DOM, so its start position
doesn&#39;t change either.&lt;/p&gt;
&lt;p&gt;The start position of the green box, however, does change, but since it&#39;s been
moved partially out of the viewport, the invisible area is not considered when
calculating the &lt;em&gt;impact fraction&lt;/em&gt;. The union of the visible areas for the green
box in both frames (illustrated by the red, dotted rectangle) is the same as the
area of the green box in the first frame—50% of the viewport. The &lt;em&gt;impact
fraction&lt;/em&gt; is &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;distance fraction&lt;/em&gt; is illustrated with the purple arrow. The green box has
moved down by about 14% of the viewport so the &lt;em&gt;distance fraction&lt;/em&gt; is &lt;code&gt;0.14&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The layout shift score is &lt;code&gt;0.5 x 0.14 = 0.07&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This last example illustrates multiple &lt;em&gt;unstable elements&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&quot;&gt;&lt;img alt=&quot;Layout shift example with multiple stable and _unstable elements_&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FdCETo2dLwGmzw0V5lNT.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the first frame above there are four results of an API request for animals,
sorted in alphabetical order. In the second frame, more results are added to the
sorted list.&lt;/p&gt;
&lt;p&gt;The first item in the list (&amp;quot;Cat&amp;quot;) does not change its start position between
frames, so it&#39;s stable. Similarly, the new items added to the list were not
previously in the DOM, so their start positions don&#39;t change either. But the
items labelled &amp;quot;Dog&amp;quot;, &amp;quot;Horse&amp;quot;, and &amp;quot;Zebra&amp;quot; all shift their start positions,
making them &lt;em&gt;unstable elements&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Again, the red, dotted rectangles represent the union of these three &lt;em&gt;unstable
elements&lt;/em&gt;&#39; before and after areas, which in this case is around 38% of the
viewport&#39;s area (&lt;em&gt;impact fraction&lt;/em&gt; of &lt;code&gt;0.38&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The arrows represent the distances that &lt;em&gt;unstable elements&lt;/em&gt; have moved from
their starting positions. The &amp;quot;Zebra&amp;quot; element, represented by the blue arrow,
has moved the most, by about 30% of the viewport height. That makes the
&lt;em&gt;distance fraction&lt;/em&gt; in this example &lt;code&gt;0.3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The layout shift score is &lt;code&gt;0.38 x 0.3 = 0.1172&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;expected-vs.-unexpected-layout-shifts&quot;&gt;Expected vs. unexpected layout shifts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#expected-vs.-unexpected-layout-shifts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not all layout shifts are bad. In fact, many dynamic web applications frequently
change the start position of elements on the page.&lt;/p&gt;
&lt;h4 id=&quot;user-initiated-layout-shifts&quot;&gt;User-initiated layout shifts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#user-initiated-layout-shifts&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A layout shift is only bad if the user isn&#39;t expecting it. On the other hand,
layout shifts that occur in response to user interactions (clicking a link,
pressing a button, typing in a search box and similar) are generally fine, as
long as the shift occurs close enough to the interaction that the relationship
is clear to the user.&lt;/p&gt;
&lt;p&gt;For example, if a user interaction triggers a network request that may take a
while to complete, it&#39;s best to create some space right away and show a loading
indicator to avoid an unpleasant layout shift when the request completes. If the
user doesn&#39;t realize something is loading, or doesn&#39;t have a sense of when the
resource will be ready, they may try to click something else while
waiting—something that could move out from under them.&lt;/p&gt;
&lt;p&gt;Layout shifts that occur within 500 milliseconds of user input will have the
&lt;a href=&quot;https://wicg.github.io/layout-instability/#dom-layoutshift-hadrecentinput&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;hadRecentInput&lt;/code&gt;&lt;/a&gt;
flag set, so they can be excluded from calculations.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
The &lt;code&gt;hadRecentInput&lt;/code&gt; flag will only be true for discrete input events like tap,
click, or keypress. Continuous interactions such as scrolls, drags, or pinch
and zoom gestures are not considered &amp;quot;recent input&amp;quot;. See the
&lt;a href=&quot;https://github.com/WICG/layout-instability#recent-input-exclusion&quot; rel=&quot;noopener&quot;&gt;Layout Instability Spec&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;animations-and-transitions&quot;&gt;Animations and transitions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#animations-and-transitions&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Animations and transitions, when done well, are a great way to update content on
the page without surprising the user. Content that shifts abruptly and
unexpectedly on the page almost always creates a bad user experience. But
content that moves gradually and naturally from one position to the next can
often help the user better understand what&#39;s going on, and guide them between
state changes.&lt;/p&gt;
&lt;p&gt;Be sure to respect &lt;a href=&quot;https://web.dev/prefers-reduced-motion/&quot;&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt; browser settings, as some site visitors
can experience ill effects or attention issues from animation.&lt;/p&gt;
&lt;p&gt;CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;
property allows you to animate elements without triggering layout shifts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of changing the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties, use &lt;code&gt;transform: scale()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To move elements around, avoid changing the &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, or
&lt;code&gt;left&lt;/code&gt; properties and use &lt;code&gt;transform: translate()&lt;/code&gt; instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-to-measure-cls&quot;&gt;How to measure CLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#how-to-measure-cls&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CLS can be measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;in the lab&lt;/a&gt;
or &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the field&lt;/a&gt;, and it&#39;s
available in the following tools:&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Lab tools typically load pages in a synthetic environment and are thus only
able to measure layout shifts that occur during page load. As a result, CLS
values reported by lab tools for a given page may be less than what real users
experience in the field.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;field-tools&quot;&gt;Field tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#field-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Search Console (Core Web Vitals
report)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lab-tools&quot;&gt;Lab tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#lab-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;measure-cls-in-javascript&quot;&gt;Measure CLS in JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#measure-cls-in-javascript&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To measure CLS in JavaScript, you can use the &lt;a href=&quot;https://github.com/WICG/layout-instability&quot; rel=&quot;noopener&quot;&gt;Layout Instability
API&lt;/a&gt;. The following example shows
how to create a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;
that listens for unexpected &lt;code&gt;layout-shift&lt;/code&gt; entries, groups them into sessions,
and logs the maximum session value any time it changes.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; clsValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; clsEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sessionValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sessionEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Only count layout shifts without recent user input.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hadRecentInput&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstSessionEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sessionEntries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lastSessionEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sessionEntries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;sessionEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// If the entry occurred less than 1 second after the previous entry and&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// less than 5 seconds after the first entry in the session, include the&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// entry in the current session. Otherwise, start a new session.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sessionValue &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;          entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; lastSessionEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;          entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; firstSessionEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        sessionValue &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        sessionEntries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        sessionValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        sessionEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// If the current session value is larger than the current CLS value,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// update CLS and the entries contributing to it.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sessionValue &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; clsValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        clsValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sessionValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        clsEntries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sessionEntries&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Log the updated value (and its entries) to the console.&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; clsValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; clsEntries&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;layout-shift&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;This code shows the basic way to calculate and log CLS. However, accurately
measuring CLS in a way that matches what is measured in the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User
Experience
Report&lt;/a&gt;
(CrUX) is more complicated. See below for details:&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In most cases, the current CLS value at the time the page is being unloaded is
the final CLS value for that page, but there are a few important exceptions:&lt;/p&gt;
&lt;p&gt;The following section lists the differences between what the API reports and how
the metric is calculated.&lt;/p&gt;
&lt;h4 id=&quot;differences-between-the-metric-and-the-api&quot;&gt;Differences between the metric and the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#differences-between-the-metric-and-the-api&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If a page is loaded in the background, or if it&#39;s backgrounded prior to the
browser painting any content, then it should not report any CLS value.&lt;/li&gt;
&lt;li&gt;If a page is restored from the &lt;a href=&quot;https://web.dev/bfcache/#impact-on-core-web-vitals&quot;&gt;back/forward
cache&lt;/a&gt;, its CLS value should be reset to
zero since users experience this as a distinct page visit.&lt;/li&gt;
&lt;li&gt;The API does not report &lt;code&gt;layout-shift&lt;/code&gt; entries for shifts that occur within
iframes, but to properly measure CLS you should consider them. Sub-frames can
use the API to report their &lt;code&gt;layout-shift&lt;/code&gt; entries to the parent frame for
&lt;a href=&quot;https://github.com/WICG/layout-instability#cumulative-scores&quot; rel=&quot;noopener&quot;&gt;aggregation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to these exceptions, CLS has some added complexity due to the fact
that it measures the entire lifespan of a page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users might keep a tab open for a &lt;em&gt;very&lt;/em&gt; long time—days, weeks, months.
In fact, a user might never close a tab.&lt;/li&gt;
&lt;li&gt;On mobile operating systems, browsers typically do not run page unload
callbacks for background tabs, making it difficult to report the &amp;quot;final&amp;quot;
value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To handle such cases, CLS should be reported any time a page is
background—in addition to any time it&#39;s unloaded (the &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api#event-visibilitychange&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;visibilitychange&lt;/code&gt;
event&lt;/a&gt;
covers both of these scenarios). And analytics systems receiving this data will
then need to calculate the final CLS value on the backend.&lt;/p&gt;
&lt;p&gt;Rather than memorizing and grappling with all of these cases yourself, developers can use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt; to
measure CLS, which accounts for everything mentioned above:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getCLS&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Measure and log CLS in all situations&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// where it needs to be reported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getCLS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can refer to &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/blob/master/src/getCLS.ts&quot; rel=&quot;noopener&quot;&gt;the source code for
&lt;code&gt;getCLS)&lt;/code&gt;&lt;/a&gt;
for a complete example of how to measure CLS in JavaScript.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In some cases (such as cross-origin iframes) it&#39;s not possible to measure CLS
in JavaScript. See the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#limitations&quot; rel=&quot;noopener&quot;&gt;limitations&lt;/a&gt; section
of the &lt;code&gt;web-vitals&lt;/code&gt; library for details.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-to-improve-cls&quot;&gt;How to improve CLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#how-to-improve-cls&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For most websites, you can avoid all unexpected layout shifts by sticking to a
few guiding principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Always include size attributes on your images and video elements, or
otherwise reserve the required space with something like &lt;a href=&quot;https://css-tricks.com/aspect-ratio-boxes/&quot; rel=&quot;noopener&quot;&gt;CSS aspect ratio
boxes&lt;/a&gt;.&lt;/strong&gt; This approach ensures
that the browser can allocate the correct amount of space in the document
while the image is loading. Note that you can also use the &lt;a href=&quot;https://github.com/w3c/webappsec-feature-policy/blob/master/policies/unsized-media.md&quot; rel=&quot;noopener&quot;&gt;unsized-media
feature
policy&lt;/a&gt;
to force this behavior in browsers that support feature policies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Never insert content above existing content, except in response to a user
interaction.&lt;/strong&gt; This ensures any layout shifts that occur are expected.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefer transform animations to animations of properties that trigger layout
changes.&lt;/strong&gt; Animate transitions in a way that provides context and continuity
from state to state.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a deep dive on how to improve CLS, see &lt;a href=&quot;https://web.dev/optimize-cls/&quot;&gt;Optimize
CLS&lt;/a&gt; and &lt;a href=&quot;https://web.dev/debug-layout-shifts&quot;&gt;Debug layout shifts
&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#additional-resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Google Publisher Tag&#39;s guidance on
&lt;a href=&quot;https://developers.google.com/doubleclick-gpt/guides/minimize-layout-shift&quot; rel=&quot;noopener&quot;&gt;minimizing layout shift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/zIJuY-JCjqw&quot; rel=&quot;noopener&quot;&gt;Understanding Cumulative Layout Shift&lt;/a&gt; by
&lt;a href=&quot;https://anniesullie.com/&quot; rel=&quot;noopener&quot;&gt;Annie Sullivan&lt;/a&gt; and &lt;a href=&quot;https://kobes.ca/&quot; rel=&quot;noopener&quot;&gt;Steve
Kobes&lt;/a&gt; at &lt;a href=&quot;https://perfmattersconf.com/&quot; rel=&quot;noopener&quot;&gt;#PerfMatters&lt;/a&gt;
(2020)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;changelog&quot;&gt;CHANGELOG &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/cls/#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Occasionally, bugs are discovered in the APIs used to measure metrics, and
sometimes in the definitions of the metrics themselves. As a result, changes
must sometimes be made, and these changes can show up as improvements or
regressions in your internal reports and dashboards.&lt;/p&gt;
&lt;p&gt;To help you manage this, all changes to either the implementation or definition
of these metrics will be surfaced in this
&lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author><author>
      <name>Milica Mihajlija</name>
    </author>
  </entry>
  
  <entry>
    <title>Measure and debug performance with Google Analytics 4 and BigQuery</title>
    <link href="https://web.dev/vitals-ga4/"/>
    <updated>2021-05-18T00:00:00Z</updated>
    <id>https://web.dev/vitals-ga4/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Google provides a number of tools—&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Search
Console&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed
Insights&lt;/a&gt; (PSI), and
the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;
(CrUX)—that let developers see how their sites perform against the &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;Core Web
Vitals&lt;/a&gt; metrics for their real users &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the
field&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These tools are great in that they give you a high-level view of your site&#39;s
real-user performance, and they require absolutely no setup to start using.&lt;/p&gt;
&lt;p&gt;However, there are a few critical reasons why you don&#39;t want to rely on these
tools alone to measure your site&#39;s performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CrUX-based tools report data by either monthly or previous 28-day periods.
This means you&#39;ll have to wait a long time after making any changes before you
can see the results.&lt;/li&gt;
&lt;li&gt;CrUX-based tools can only be segment by a limited number of dimensions, such as
country, connection type, and device category (desktop or mobile). You can&#39;t
slice the data by dimensions specific to your business (for example: engaged
users, users in a particular experiment group, etc.).&lt;/li&gt;
&lt;li&gt;CrUX-based tools can tell you &lt;em&gt;what&lt;/em&gt; your performance is, but they can&#39;t tell
you &lt;em&gt;why&lt;/em&gt;. With analytics tools you can send additional data to help you track
down and debug issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For these reasons, we recommend all site owners monitor Core Web Vitals metrics
using their existing analytics tool. This post explains how you can use free
tools offered by Google to do just that.&lt;/p&gt;
&lt;p&gt;Once you have everything set up, you&#39;ll be able to create dashboards like these:&lt;/p&gt;
&lt;img alt=&quot;Web Vitals Connector report screenshot&quot; decoding=&quot;async&quot; height=&quot;452&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/Qxzm5QpwjaVAsqi28g5J.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;img alt=&quot;Web Vitals Connector report screenshot&quot; decoding=&quot;async&quot; height=&quot;474&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/eJcnoFjJhPVeZCkS1gsG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;And If you want a visual overview of all the steps outlined here, check out &lt;a href=&quot;https://www.youtube.com/watch?v=xg47r3Y6K8I&quot; rel=&quot;noopener&quot;&gt;our talk from Google I/O &#39;21&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;xg47r3Y6K8I&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;measure&quot;&gt;Measure &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#measure&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Measuring performance has always been possible with Google Analytics using
&lt;a href=&quot;https://support.google.com/analytics/answer/2709829&quot; rel=&quot;noopener&quot;&gt;custom metrics&lt;/a&gt;, but there
are a few new features in &lt;a href=&quot;https://support.google.com/analytics/answer/10089681&quot; rel=&quot;noopener&quot;&gt;Google Analytics
4&lt;/a&gt; (GA4) that developers
in particular should be excited about.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zero-config, &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/ga4/events#custom_events&quot; rel=&quot;noopener&quot;&gt;custom
event&lt;/a&gt;
parameters&lt;/li&gt;
&lt;li&gt;Free &lt;a href=&quot;https://support.google.com/analytics/answer/9358801&quot; rel=&quot;noopener&quot;&gt;BigQuery export&lt;/a&gt;,
so you can query your data using SQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While the Google Analytics web interface does have powerful analysis tools, it&#39;s
hard to beat the power and flexibility of raw event data access using a query
language you likely already know.&lt;/p&gt;
&lt;p&gt;To get started measuring Core Web Vitals using Google Analytics 4 and BigQuery,
you need to do three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/10089681#start&quot; rel=&quot;noopener&quot;&gt;Create a Google Analytics 4
property&lt;/a&gt; and a
&lt;a href=&quot;https://cloud.google.com/bigquery&quot; rel=&quot;noopener&quot;&gt;BigQuery project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Enable &lt;a href=&quot;https://support.google.com/analytics/answer/9358801&quot; rel=&quot;noopener&quot;&gt;BigQuery export&lt;/a&gt;
in your Google Analytics property config, so all data you receive will be
automatically populated in your BigQuery project tables.&lt;/li&gt;
&lt;li&gt;Add the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; JavaScript
library to your site, so you can measure the Core Web Vitals metrics and
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#using-gtagjs-google-analytics-4&quot; rel=&quot;noopener&quot;&gt;send the data to Google Analytics
4&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;analyze&quot;&gt;Analyze &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#analyze&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you&#39;re all set up, you should see event data populating in the BigQuery
interface, and you should be able to query the data like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;my_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s a preview of the results from that query:&lt;/p&gt;
&lt;img alt=&quot;Web Vitals event data in BigQuery&quot; decoding=&quot;async&quot; height=&quot;418&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CfzjCEhryDJbVgrWSKV6.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h3 id=&quot;query-web-vitals-data&quot;&gt;Query Web Vitals data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#query-web-vitals-data&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before you start querying your Web Vitals event data, it&#39;s important to
understand how the data is aggregated.&lt;/p&gt;
&lt;p&gt;The most important thing to understand is that, in some cases, &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#:~:text=In%20other%20cases%2C%20a%20metric%20callback%20may%20be%20called%20more%20than%20once%3A&quot; rel=&quot;noopener&quot;&gt;multiple events
may be
received&lt;/a&gt;
for the same metric, on the same page. This can happen if the metric value
changes and an updated value is reported (a common occurrence with CLS).&lt;/p&gt;
&lt;p&gt;For Web Vitals events, the last value sent is always the most accurate one, so
before performing any analysis, it&#39;s important to filter for just those values.
The code snippet provided by the web-vitals JavaScript library to send data to
Google Analytics 4 includes sending a unique ID per metric, so you can use the
following query to limit your results to just the last-received value for each
metric ID:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Note that all other queries referenced in this post will start with this
subquery.&lt;/p&gt;
&lt;p&gt;The next few sections show a few examples of common Web Vitals queries you might
want to run.&lt;/p&gt;
&lt;h3 id=&quot;example-queries&quot;&gt;Example queries &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#example-queries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;lcp-fid-and-cls-at-the-75percent-percentile-(p75)-across-the-whole-site&quot;&gt;LCP, FID, and CLS at the 75% percentile (p75) across the whole site &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#lcp-fid-and-cls-at-the-75percent-percentile-(p75)-across-the-whole-site&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  APPROX_QUANTILES&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;OFFSET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; p75&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; count&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;    metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;metric_value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;all-individual-lcp-values-from-highest-to-lowest&quot;&gt;All individual LCP values from highest to lowest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#all-individual-lcp-values-from-highest-to-lowest&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;metric_value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; metric_value &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;lcp-scores-(p75)-of-the-10-most-popular-pages&quot;&gt;LCP scores (p75) of the 10 most popular pages &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#lcp-scores-(p75)-of-the-10-most-popular-pages&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  APPROX_QUANTILES&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;OFFSET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; LCP&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; count&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;    REGEXP_SUBSTR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;page_location&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; r&lt;span class=&quot;token string&quot;&gt;&#39;\.com(\/[^?]*)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;metric_value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; count &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;top-10-pages-with-the-worst-cls-(p75)&quot;&gt;Top 10 pages with the worst CLS (p75) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#top-10-pages-with-the-worst-cls-(p75)&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  APPROX_QUANTILES&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;OFFSET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; CLS&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; count&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;    REGEXP_SUBSTR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;page_location&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; r&lt;span class=&quot;token string&quot;&gt;&#39;\.com(\/[^?]*)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;metric_value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;HAVING&lt;/span&gt; count &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# Limit to relatively popular pages&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; CLS &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;debug&quot;&gt;Debug &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#debug&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The above queries show how to query the Web Vitals metric data, which is helpful
for understanding your current performance and how it&#39;s trending over time. But
what can you do if your performance is worse than expected but you&#39;re not sure
why?&lt;/p&gt;
&lt;p&gt;Knowing &lt;em&gt;what&lt;/em&gt; your scores are is not helpful if you&#39;re not able to take action
and fix the problems.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot;&gt;Debug Web Vitals in the field&lt;/a&gt; explains how
you can send additional debug information with your analytics data. If you
follow the instructions detailed in that post, you should see that debug
information appear in BigQuery as well.&lt;/p&gt;
&lt;p&gt;The following queries show how to use the &lt;code&gt;debug_target&lt;/code&gt; event parameter to help
identify the root cause of performance issues.&lt;/p&gt;
&lt;h3 id=&quot;example-queries-2&quot;&gt;Example queries &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#example-queries-2&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;top-elements-contributing-to-cls&quot;&gt;Top elements contributing to CLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#top-elements-contributing-to-cls&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;debug_target&lt;/code&gt; is a CSS selector string that corresponds to the element on
the page that is most relevant to the metric value.&lt;/p&gt;
&lt;p&gt;With CLS, the &lt;code&gt;debug_target&lt;/code&gt; represents the largest element from the largest
layout shift that contributed to the CLS value. If no elements shifted then the
&lt;code&gt;debug_target&lt;/code&gt; value will be &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following query will list pages from worst to best by their CLS at the 75th
percentile, grouped by &lt;code&gt;debug_target&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  debug_target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  APPROX_QUANTILES&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;OFFSET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; CLS&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; count&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;    REGEXP_SUBSTR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;page_location&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; r&lt;span class=&quot;token string&quot;&gt;&#39;\.com(\/[^?]*)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;debug_target&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; debug_target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;metric_value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;HAVING&lt;/span&gt; count &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# Limit to relatively popular pages&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; CLS &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;img alt=&quot;Query result for top elements contributing to CLS&quot; decoding=&quot;async&quot; height=&quot;445&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/0rgPwLXOplwT706jvmuy.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Knowing what elements on the page are shifting should make it much easier to
identify and fix the root cause of the problem.&lt;/p&gt;
&lt;p&gt;Keep in mind that the elements reported here might not be the same elements that
you see shifting when you&#39;re debugging your pages locally, which is why it&#39;s so
important to capture this data in the first place. It&#39;s very hard to fix things
that you don&#39;t realize are problems!&lt;/p&gt;
&lt;h4 id=&quot;debug-other-metrics&quot;&gt;Debug other metrics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#debug-other-metrics&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The above query shows the results for the CLS metric, but the exact same
technique can be used to report on the debug targets for LCP and FID. Just
replace the where clause with the relevant metric to debug:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;ins class=&quot;highlight-line highlight-line-add&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;/ins&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Again, you can refer to &lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot;&gt;Debug Web Vitals in the
field&lt;/a&gt; for instructions on how to collect and
send debug information for each of the Core Web Vitals metrics.&lt;/p&gt;
&lt;h2 id=&quot;visualize&quot;&gt;Visualize &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#visualize&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It can be challenging to get insights just by looking at the query results
alone. For example, the following query lists daily 75th percentile values for
LCP in the dataset.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Subquery all Web Vitals events from the last 28 days&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; web_vitals_events &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; event_name &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; is_last_received_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ROW_NUMBER&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; is_last_received_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; event_name &lt;span class=&quot;token operator&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt;&lt;br /&gt;      _TABLE_SUFFIX &lt;span class=&quot;token operator&quot;&gt;BETWEEN&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; FORMAT_DATE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; is_last_received_value&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Main query logic&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  event_date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  APPROX_QUANTILES&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;OFFSET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; p75&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;      event_date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; web_vitals_events&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt;&lt;br /&gt;      metric_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; event_date&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;From these query results, it&#39;s difficult to identify trends or outliers just by
looking at the data.&lt;/p&gt;
&lt;img alt=&quot;Daily metric value query results&quot; decoding=&quot;async&quot; height=&quot;386&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/uDQWTwIEelkSTu1ExyRB.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
&lt;p&gt;In such cases, visualizing the data can help you derive insights more quickly.&lt;/p&gt;
&lt;h3 id=&quot;visualize-query-results-in-data-studio&quot;&gt;Visualize query results in Data Studio &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#visualize-query-results-in-data-studio&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BigQuery provides a quick way to visualize any query results through Data
Studio. &lt;a href=&quot;https://datastudio.google.com/&quot; rel=&quot;noopener&quot;&gt;Data Studio&lt;/a&gt; is a data visualization
and dashboarding tool that is free to use. To visualize your query results,
after running your query in the BigQuery UI, click the &lt;em&gt;Explore Data button&lt;/em&gt; and
select &lt;em&gt;Explore with Data Studio&lt;/em&gt;.&lt;/p&gt;
&lt;img alt=&quot;Explore with Data Studio option in BigQuery&quot; decoding=&quot;async&quot; height=&quot;191&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/CFQ8JK7UlZsxUbWZXCO0.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;This will create a direct link from BigQuery into Data Studio in the explore
view. In this view, you can select the fields you want to visualize, choose
chart types, setup filters, and create ad hoc charts for quick visual analysis.
From the above query results, you can create this line chart to see the trend of
LCP values over time:&lt;/p&gt;
&lt;img alt=&quot;Line chart of daily LCP values in Data Studio&quot; decoding=&quot;async&quot; height=&quot;413&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/mhTsDWbzpveguHadWhS0.PNG?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;With this direct link between BigQuery and Data Studio, you can create quick
charts from any of your queries and do visual analysis. However, if you want to
do additional analysis, you might want to look at several charts in an
interactive dashboard to get a more holistic view or to be able to drill down
into the data. Having a handy dashboard means you don&#39;t have to write queries
and generate charts manually every time you want to analyze your metrics.&lt;/p&gt;
&lt;p&gt;You can create a dashboard in Data Studio using the &lt;a href=&quot;https://support.google.com/datastudio/answer/6370296&quot; rel=&quot;noopener&quot;&gt;native BigQuery
connector&lt;/a&gt;. To do so,
navigate to &lt;a href=&quot;https://datastudio.google.com/&quot; rel=&quot;noopener&quot;&gt;datastudio.google.com&lt;/a&gt;, create a new
data source, select the BigQuery connector, and choose the dataset you want to
work with:&lt;/p&gt;
&lt;img alt=&quot;Using the BigQuery native connector in Data Studio&quot; decoding=&quot;async&quot; height=&quot;302&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/dTS0rVPXlWfkJ67VZYPxGwaAj7j1/NoLpS3R5OnX52QEu6rnN.PNG?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h3 id=&quot;materialize-web-vitals-data&quot;&gt;Materialize Web Vitals data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#materialize-web-vitals-data&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When creating dashboards of the Web Vitals event data as described above, it&#39;s
not efficient to use the Google Analytics 4 export dataset directly. Due to the
structure of the GA4 data and the preprocessing required for the Web Vitals
metrics, parts of your query will end up running multiple times. This creates
two problems: dashboard performance and BigQuery costs.&lt;/p&gt;
&lt;p&gt;You can use the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/sandbox&quot; rel=&quot;noopener&quot;&gt;BigQuery sandbox
mode&lt;/a&gt; for free. With BigQuery&#39;s
&lt;a href=&quot;https://cloud.google.com/bigquery/pricing#free-tier&quot; rel=&quot;noopener&quot;&gt;free usage tier&lt;/a&gt;, the
first 1 TB of query data processed per month is free. For the analysis methods
discussed in this post, unless you are using a significantly large dataset or
are heavily querying the dataset regularly, you should be able to stay within
this free limit every month. But if you have a high traffic website and want to
regularly monitor different metrics using a fast interactive dashboard, we
suggest preprocessing and materializing your web vitals data while making use of
BigQuery efficiency features like partitioning, clustering, and caching.&lt;/p&gt;
&lt;p&gt;The following script will preprocess your BigQuery data (source table) and
create a materialized table (target table). When using this query for your own
dataset, you might also want to define a date range for the source table to
lower the amount of data processed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Materialize Web Vitals metrics from GA4 event export data&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Replace target table name&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLE&lt;/span&gt; bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ga4_demo_dev&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web_vitals_summary&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_timestamp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  CLUSTER &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; metric_name&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;  ga_session_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;EXISTS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;events&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; e &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;event_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;first_visit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;New user&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;Returning user&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; user_type&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session_engaged&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;events&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Engaged&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Not engaged&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; session_engagement&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXCEPT&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session_engaged&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  event_name &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  FORMAT_TIMESTAMP&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;%Y%m%d&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event_timestamp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; event_date&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;      ga_session_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      ARRAY_AGG&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;custom_event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; events&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;          ga_session_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;          STRUCT&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;            country&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            device_category&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            device_os&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            traffic_medium&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            traffic_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            traffic_source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            debug_target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            event_timestamp&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            metric_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; metric_value &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            user_pseudo_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            session_engaged&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            session_revenue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; custom_event&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ga_session_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; ga_session_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; device_category&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operating_system&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; device_os&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;traffic_source&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;medium&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; traffic_medium&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;traffic_source&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; traffic_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;traffic_source&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; traffic_source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                REGEXP_SUBSTR&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;page_location&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;                  r&lt;span class=&quot;token string&quot;&gt;&#39;^[^?]+&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; page_path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;debug_target&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; debug_target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user_pseudo_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; user_pseudo_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;geo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; country&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              ANY_VALUE&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; event_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token function&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ecommerce&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;purchase_revenue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; session_revenue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token function&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;&lt;br /&gt;                    &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                      &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CAST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;string_value &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;NUMERIC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;session_engaged&#39;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; session_engaged&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              TIMESTAMP_MICROS&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_timestamp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; event_timestamp&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token function&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;COALESCE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;double_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;int_value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event_params&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;                  &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;metric_value&#39;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; metric_value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token comment&quot;&gt;# Replace source table name&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;bigquery_project_id&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;analytics_XXXXX&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;events_&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt;&lt;br /&gt;              event_name &lt;span class=&quot;token operator&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;first_visit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;purchase&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt;&lt;br /&gt;      ga_session_id &lt;span class=&quot;token operator&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;NULL&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; ga_session_id&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; UNNEST&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;events&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; evt&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;event_name &lt;span class=&quot;token operator&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;first_visit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;purchase&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This materialized dataset has several advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The data structure is flattened and easier to query.&lt;/li&gt;
&lt;li&gt;It retains only the Web Vitals events from the original GA4 dataset.&lt;/li&gt;
&lt;li&gt;Session ID, user type (new vs returning), and session engagement information
is directly available in columns.&lt;/li&gt;
&lt;li&gt;The table is
&lt;a href=&quot;https://cloud.google.com/bigquery/docs/partitioned-tables&quot; rel=&quot;noopener&quot;&gt;partitioned&lt;/a&gt; by
date and &lt;a href=&quot;https://cloud.google.com/bigquery/docs/clustered-tables&quot; rel=&quot;noopener&quot;&gt;clustered&lt;/a&gt;
by metric name. This usually reduces the amount of data processed for each
query.&lt;/li&gt;
&lt;li&gt;Since you don&#39;t need to use wildcards to query this table, query results can
get cached for upto 24 hours. This reduces costs from repeating the same
query.&lt;/li&gt;
&lt;li&gt;If you use the BigQuery BI engine, you can run &lt;a href=&quot;https://cloud.google.com/bi-engine/docs/optimized-sql&quot; rel=&quot;noopener&quot;&gt;optimized SQL functions and
operators&lt;/a&gt; on this
table.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can directly query this materialized table from within BigQuery UI or use it
in Data Studio using the BigQuery connector.&lt;/p&gt;
&lt;h3 id=&quot;using-the-web-vitals-connector&quot;&gt;Using the Web Vitals Connector &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#using-the-web-vitals-connector&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since making a dashboard from scratch is time consuming, we developed a packaged
solution that will create a template dashboard for you. First make sure that you
have materialized your Web Vitals table using the above query. Then access the
Web Vitals connector for Data Studio using this link:
&lt;a href=&quot;https://goo.gle/web-vitals-connector&quot; rel=&quot;noopener&quot;&gt;goo.gle/web-vitals-connector&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After providing a one time authorization, you should see the following
configuration screen:&lt;/p&gt;
&lt;img alt=&quot;Web Vitals Connector authorization screen&quot; decoding=&quot;async&quot; height=&quot;502&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/SHtnSZLE4iRz5r1Pf3K8.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Provide the materialized BigQuery table ID (i.e. the target table) and your
BigQuery billing project ID. After clicking connect, Data Studio will create a
new templated dashboard and associate your data with it.  You can edit, modify,
and share the dashboard as you like. If you create a dashboard once, you don&#39;t
have to visit the connector link again, unless you want to create multiple
dashboards from different datasets.&lt;/p&gt;
&lt;h3 id=&quot;navigate-the-dashboard&quot;&gt;Navigate the dashboard &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#navigate-the-dashboard&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As you navigate the dashboard, you can see the daily trends of the Web Vitals
metrics and some usage information for your website like users and sessions, in
the &lt;em&gt;Summary&lt;/em&gt; tab.&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;User Analysis&lt;/em&gt; tab, you can select a metric and then get a breakdown of
the metrics percentile as well as user count by different usage and business
metrics.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Page Path Analysis&lt;/em&gt; tab will help you to identify problem areas on your
website. Here, You can pick a metric to see the overview. But you also see the
scatter-map of all the page paths with the percentile value on y axis and record
count on x axis. The scatter map can help to identify pages which have lower
than expected metric values. Once you select the pages either via the scatter
chart of the &lt;em&gt;Page path&lt;/em&gt; table, you can further drill down the problem area by
viewing the &lt;em&gt;Debug Target&lt;/em&gt; table.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Revenue Analysis&lt;/em&gt; tab is an example of how you can monitor your business
and performance metrics in the same place. This section plots all sessions where
the user made a purchase. You can compare the revenue earned vs user experience
during a specific session .&lt;/p&gt;
&lt;h3 id=&quot;advanced-usage&quot;&gt;Advanced usage &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#advanced-usage&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As you become more familiar with the dataset, you can edit the dashboard and add
your own charts for richer and targeted analysis. To make the dashboard more
useful, you can take the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup scheduled query in BigQuery to get updated data. The materialization
query we ran above only takes a snapshot of your data at that moment. If you
want to keep your dashboard updated with new data, you can run a scheduled
query that will run every day and append your materialized table with the new
data.&lt;/li&gt;
&lt;li&gt;Join first party data (e.g. CRM) for business insights. In the materialized
table, you can add &lt;code&gt;user_id&lt;/code&gt; as a separate column. This will let you join your
first party data. If your first party data is not already in BigQuery, you can
either &lt;a href=&quot;https://cloud.google.com/bigquery/docs/loading-data&quot; rel=&quot;noopener&quot;&gt;load the data&lt;/a&gt; or
use a &lt;a href=&quot;https://cloud.google.com/bigquery/external-data-sources&quot; rel=&quot;noopener&quot;&gt;federated data
source&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Report your site or app version as a parameter in the data you send to Google
Analytics and add it as a column in the materialized table. Then you can add
that version data as a dimension in your charts to make it easier to see
version changes affect performance.&lt;/li&gt;
&lt;li&gt;If you are expecting significantly heavy usage of the dataset through direct
query or the dashboard, you can try using the paid version of &lt;a href=&quot;https://cloud.google.com/bi-engine/docs/introduction&quot; rel=&quot;noopener&quot;&gt;BigQuery BI
Engine&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-ga4/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This post covered the basics of how to use Google Analytics 4 and BigQuery to
measure and debug performance with real-user data collected in the field. It
also explained how to build automated reports and dashboards using Data Studio
and the &lt;a href=&quot;https://goo.gle/web-vitals-connector&quot; rel=&quot;noopener&quot;&gt;Web Vitals Connector&lt;/a&gt; to make
visualizing the data as easy as possible.&lt;/p&gt;
&lt;p&gt;Some key takeaways from this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Measuring performance with real user data is critical for understanding,
debugging, and optimizing your site.&lt;/li&gt;
&lt;li&gt;You can get deeper insights when your performance metrics and your business
metrics are in the same system. Google Analytics and BigQuery make this
possible.&lt;/li&gt;
&lt;li&gt;BigQuery export of raw Google Analytics data gives you unlimited potential for
in-depth, custom analysis using a query language you likely already know.&lt;/li&gt;
&lt;li&gt;Google has a number of APIs and visualization tools like Data Studio that give
you the freedom to build your reports exactly the way you want them to be
built.&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author><author>
      <name>Minhaz Kazi</name>
    </author>
  </entry>
  
  <entry>
    <title>Debug Web Vitals in the field</title>
    <link href="https://web.dev/debug-web-vitals-in-the-field/"/>
    <updated>2021-04-01T00:00:00Z</updated>
    <id>https://web.dev/debug-web-vitals-in-the-field/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Google currently provides two categories of tools to measure and debug Web Vitals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lab tools:&lt;/strong&gt; Tools such as Lighthouse, where your page is loaded in a
simulated environment that can mimic various conditions (for example, a slow
network and a low-end mobile device).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Field tools:&lt;/strong&gt; Tools such as &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;
(CrUX), which is based on aggregate, real-user data from Chrome. (Note that the
field data reported by tools such as &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed
Insights&lt;/a&gt; and &lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Search
Console&lt;/a&gt; is sourced from
CrUX data.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While field tools offer more accurate data—data which actually represents what
real users experience—lab tools are often better at helping you identify and fix
issues.&lt;/p&gt;
&lt;p&gt;CrUX data is more representative of your page&#39;s real performance, but knowing
your CrUX scores is unlikely to help you figure out &lt;em&gt;how&lt;/em&gt; to improve your
performance.&lt;/p&gt;
&lt;p&gt;Lighthouse, on the other hand, will identify issues and make specific
suggestions for how to improve. However, Lighthouse will only make suggestions
for performance issues it discovers at page load time. It does not detect issues
that only manifest as a result of user interaction such as scrolling or clicking
buttons on the page.&lt;/p&gt;
&lt;p&gt;This raises an important question: &lt;strong&gt;how can you capture debug information for
the Web Vitals metric data from real users in the field?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This post will explain in detail what APIs you can use to collect additional
debugging information for each of the current Core Web Vitals metrics and give
you ideas for how to capture this data in your existing analytics tool.&lt;/p&gt;
&lt;h2 id=&quot;apis-for-attribution-and-debugging&quot;&gt;APIs for attribution and debugging &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#apis-for-attribution-and-debugging&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;cls&quot;&gt;CLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#cls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Of all the Core Web Vitals metrics, &lt;a href=&quot;https://web.dev/cls/&quot;&gt;CLS&lt;/a&gt; is perhaps the one for which
collecting debug information in the field is the most important. CLS is measured
throughout the entire lifespan of the page, so the way a user interacts with the
page—how far they scroll, what they click on, and so on—can have a significant
impact on whether there are layout shifts and which elements are shifting.&lt;/p&gt;
&lt;p&gt;Consider the following report from PageSpeed Insights for the URL:
&lt;a href=&quot;https://web.dev/measure/&quot;&gt;web.dev/measure&lt;/a&gt;&lt;/p&gt;
&lt;img alt=&quot;A PageSpeed Insights Report with different CLS values&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;587&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/nZjd6rXrOgW5VUsm5fyx.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;The value reported for CLS from the lab (Lighthouse) compared to the CLS from
the field (CrUX data) are quite different, and this makes sense if you consider
that the &lt;a href=&quot;https://web.dev/measure/&quot;&gt;web.dev/measure&lt;/a&gt; page has a lot of interactive content that
is not being used when tested in Lighthouse.&lt;/p&gt;
&lt;p&gt;But even if you understand that user interaction affects field data, you still
need to know what elements on the page are shifting to result in a score of 0.45
at the 75th percentile.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/debug-layout-shifts/#layoutshiftattribution&quot;&gt;LayoutShiftAttribution&lt;/a&gt;
interface makes that possible.&lt;/p&gt;
&lt;h4 id=&quot;get-layout-shift-attribution&quot;&gt;Get layout shift attribution &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#get-layout-shift-attribution&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/debug-layout-shifts/#layoutshiftattribution&quot;&gt;LayoutShiftAttribution&lt;/a&gt;
interface is exposed on each &lt;code&gt;layout-shift&lt;/code&gt; entry that &lt;a href=&quot;https://wicg.github.io/layout-instability&quot; rel=&quot;noopener&quot;&gt;Layout Instability
API&lt;/a&gt; emmits.&lt;/p&gt;
&lt;p&gt;For a detailed explanation of both of these interfaces, see &lt;a href=&quot;https://web.dev/debug-layout-shifts/#layoutshiftattribution&quot;&gt;Debug layout
shifts&lt;/a&gt;. For the purposes of
this post, the main thing you need to know is that, as a developer, you are able
to observe every layout shift that happens on the page as well as what elements
are shifting.&lt;/p&gt;
&lt;p&gt;Here&#39;s some example code that logs each layout shift as well as the elements
that shifted:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sources&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Log the shift amount and other entry info.&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Layout shift:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; startTime&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; curRect&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prevRect&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; sources&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Log the elements that shifted.&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;  Shift source:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;curRect&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prevRect&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;layout-shift&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It&#39;s probably not practical to measure and send data to your analytics tool for
every single layout shift that occurs; however, by monitoring all shifts, you
can keep track of the worst shifts and just report information about those.&lt;/p&gt;
&lt;p&gt;The goal isn&#39;t to identify and fix every single layout shift that occurs for
every user, the goal is to identify the shifts that affect the largest number of
users and thus contribute the most to your page&#39;s CLS at the 75th percentile.&lt;/p&gt;
&lt;p&gt;Also, you don&#39;t need to compute the largest source element every time there&#39;s a
shift, you only need to do so when you&#39;re ready to send the CLS value to your
analytics tool.&lt;/p&gt;
&lt;p&gt;The following code takes a list of &lt;code&gt;layout-shift&lt;/code&gt; entries that have contributed
to CLS and returns the largest source element from the largest shift:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getCLSDebugTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; largestEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestEntry &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; largestSource &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;          b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; largestSource&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Once you&#39;ve identified the largest element contributing to the largest shift,
you can report that to your analytics tool.&lt;/p&gt;
&lt;p&gt;The element contributing the most to CLS for a given page will likely vary from
user to user, but if you aggregate those elements across all users, you&#39;ll be
able to generate a list of shifting elements affecting the most number of users.&lt;/p&gt;
&lt;p&gt;Once you&#39;ve identified and fixed the root cause of the shifts for those
elements, your analytics code will start reporting smaller shifts as the &amp;quot;worst&amp;quot;
shifts for your pages. Eventually, all reported shifts will be small enough that
your pages are well within &lt;a href=&quot;https://web.dev/cls/#what-is-a-good-cls-score&quot;&gt;the &amp;quot;good&amp;quot; threshold of
0.1&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Some other metadata that may be useful to capture along with the largest shift
source element is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The time of the largest shift&lt;/li&gt;
&lt;li&gt;The URL path at the time of the largest shift (for sites that dynamically
update the URL, such as Single Page Applications).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lcp&quot;&gt;LCP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#lcp&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To debug LCP in the field, the primary information you need is which particular
element was the largest element (the LCP candidate element) for that particular
page load.&lt;/p&gt;
&lt;p&gt;Note that it&#39;s entirely possible—in fact, it&#39;s quite common—that the LCP
candidate element will be different from user to user, even for the exact same
page.&lt;/p&gt;
&lt;p&gt;This can happen for several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User devices have different screen resolutions, which results in different
page layouts and thus different elements being visible within the viewport.&lt;/li&gt;
&lt;li&gt;Users don&#39;t always load pages scrolled to the very top. Oftentimes links will
contain &lt;a href=&quot;https://web.dev/text-fragments/#fragment-identifiers&quot;&gt;fragment identifiers&lt;/a&gt; or even
&lt;a href=&quot;https://web.dev/text-fragments/#text-fragments&quot;&gt;text fragments&lt;/a&gt;, which means it&#39;s possible
for your pages to be loaded and displayed at any scroll position on the page.&lt;/li&gt;
&lt;li&gt;Content may be personalized for the current user, so the LCP candidate element
could vary wildly from user to user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means you cannot make assumptions about which element or set of elements
will be the most common LCP candidate element for a particular page. You have to
measure it based on real-user behavior.&lt;/p&gt;
&lt;h4 id=&quot;identify-the-lcp-candidate-element&quot;&gt;Identify the LCP candidate element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#identify-the-lcp-candidate-element&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To determine the LCP candidate element in JavaScript you can use the &lt;a href=&quot;https://wicg.github.io/largest-contentful-paint/&quot; rel=&quot;noopener&quot;&gt;Largest
Contentful Paint API&lt;/a&gt;, the
same API you use to determine the LCP time value.&lt;/p&gt;
&lt;p&gt;Given a list of &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries, you can determine the
current LCP candidate element by looking at the last entry:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getLCPDebugTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lastEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; lastEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;element&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
As explained in the &lt;a href=&quot;https://web.dev/lcp/&quot;&gt;LCP metric documentation&lt;/a&gt;, the LCP candidate
element can change through the page load, so more work is required to identify
the &amp;quot;final&amp;quot; LCP candidate element. The easiest way to identify and measure the
&amp;quot;final&amp;quot; LCP candidate element is to use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; JavaScript library,
as shown in the &lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/#usage-with-the-web-vitals-javascript-library&quot;&gt;example
below&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Once you know the LCP candidate element, you can send it to your analytics tool
along with the metric value. As with CLS, this will help you identify which
elements are most important to optimize first.&lt;/p&gt;
&lt;p&gt;Some other metadata that may be useful to capture along with the LCP candidate
element:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The image source URL (if the LCP candidate element is an image).&lt;/li&gt;
&lt;li&gt;The text font family (if the LCP candidate element is text and the page uses
web fonts).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fid&quot;&gt;FID &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#fid&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To debug FID in the field, it&#39;s important to remember that FID measures &lt;a href=&quot;https://web.dev/fid/#fid-in-detail&quot;&gt;only
the delay portion&lt;/a&gt; of the overall first input event
latency. That means that what the user interacted with is not really as
important as what else was happening on the main thread at the time they
interacted.&lt;/p&gt;
&lt;p&gt;For example, many JavaScript applications that support server-side rendering
(SSR) will deliver static HTML that can be rendered to the screen before it&#39;s
interactive to user input—that is, before the JavaScript required to make the
content interactive has finished loading.&lt;/p&gt;
&lt;p&gt;For these types of applications, it can be very important to know whether the
first input occurred before or after
&lt;a href=&quot;https://en.wikipedia.org/wiki/Hydration_(web_development)&quot; rel=&quot;noopener&quot;&gt;hydration&lt;/a&gt;. If it
turns out that many people are attempting to interact with the page before
hydration completes, consider rendering your pages in a disabled or loading
state rather than in a state that looks interactive.&lt;/p&gt;
&lt;p&gt;If your application framework exposes the hydration timestamp, you can easily
compare that with the timestamp of the &lt;code&gt;first-input&lt;/code&gt; entry to determine whether
the first input happened before or after hydration. If your framework doesn&#39;t
expose that timestamp, or doesn&#39;t use hydration at all, another useful signal
may be whether input occurred before or after JavaScript finished loading.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;DOMContentLoaded&lt;/code&gt; event fires after the page&#39;s HTML has completely loaded
and parsed, which includes waiting for any synchronous, deferred, or module
scripts (including all statically imported modules) to load. So you can use the
timing of that event and compare it to when FID occurred.&lt;/p&gt;
&lt;p&gt;The following code takes a &lt;code&gt;first-input&lt;/code&gt; entry and returns true if the first
input occurred prior to the end of the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wasFIDBeforeDCL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;fidEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; navEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntriesByType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;navigation&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; navEntry &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fidEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; navEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;domContentLoadedEventStart&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If your page uses &lt;code&gt;async&lt;/code&gt; scripts or dynamic &lt;code&gt;import()&lt;/code&gt; to load JavaScript,
the &lt;code&gt;DOMContentLoaded&lt;/code&gt; event may not be a useful signal. Instead, you can
consider using the &lt;code&gt;load&lt;/code&gt; event or—if there&#39;s a particular script you know
takes a while to execute—you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API&quot; rel=&quot;noopener&quot;&gt;Resource
Timing&lt;/a&gt;
entry for that script.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;identify-the-fid-target-element&quot;&gt;Identify the FID target element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#identify-the-fid-target-element&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Another potentially useful debug signal is the element that was interacted with.
While the interaction with the element itself does not contribute to FID
(remember FID is just the delay portion of the total event latency), knowing
which elements your users are interacting with may be useful in determining how
best to improve FID.&lt;/p&gt;
&lt;p&gt;For example, if the vast majority of your user&#39;s first interactions are with a
particular element, it consider inlining the JavaScript code needed for that
element in the HTML, and lazy loading the rest.&lt;/p&gt;
&lt;p&gt;To get the element associated with the first input event, you can reference the
&lt;code&gt;first-input&lt;/code&gt; entry&#39;s &lt;code&gt;target&lt;/code&gt; property:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getFIDDebugTarget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Some other metadata that may be useful to capture along with the FID target
element:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The type of event (such as &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;pointerdown&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Any relevant &lt;a href=&quot;https://w3c.github.io/longtasks/#taskattributiontiming&quot; rel=&quot;noopener&quot;&gt;long task attribution
&lt;/a&gt;data for the long
task that occurred at the same time as the first input (useful if the page
loads third-party scripts).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;usage-with-the-web-vitals-javascript-library&quot;&gt;Usage with the web-vitals JavaScript library &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#usage-with-the-web-vitals-javascript-library&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The sections above offer some suggestions for additional debug info to include
in the data you send to your analytics tool. Each of the examples includes some
code that uses one or more performance entries associated with a particular Web
Vitals metric and returns a DOM element that can be used to help debug issues
affecting that metric.&lt;/p&gt;
&lt;p&gt;These examples are designed to work well with the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; JavaScript library,
which exposes the list of performance entries on the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#api&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Metric&lt;/code&gt;&lt;/a&gt; object passed to each
callback function.&lt;/p&gt;
&lt;p&gt;If you combine the examples listed above with the &lt;code&gt;web-vitals&lt;/code&gt; metric functions,
the end result will look something like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getLCP&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getFID&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getCLS&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getSelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maxLen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodeType &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; part &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;#&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodeName&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;className &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;className&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&#39;.&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; part&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; maxLen &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sel &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; part&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      sel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sel &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; part &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; sel &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; part&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      node &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Do nothing...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sel&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getLargestLayoutShiftEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getLargestLayoutShiftSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sources&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;        b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wasFIDBeforeDCL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;fidEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; navEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntriesByType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;navigation&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; navEntry &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fidEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; navEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;domContentLoadedEventStart&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDebugInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// In some cases there won&#39;t be any entries (e.g. if CLS is 0,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// or for LCP after a bfcache restore), so we have to check first.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LCP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lastEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        debug_target&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getSelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;element&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        event_time&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; lastEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FID&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        debug_target&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getSelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;firstEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        debug_event&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; firstEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        debug_timing&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wasFIDBeforeDCL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;firstEntry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;pre_dcl&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;post_dcl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        event_time&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; firstEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CLS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; largestEntry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getLargestLayoutShiftEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestEntry &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; largestSource &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getLargestLayoutShiftSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            debug_target&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getSelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;largestSource&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            event_time&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; largestEntry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Return default/empty params in case there are no entries.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    debug_target&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;(not set)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendToAnalytics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendBeacon&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDebugInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getLCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getCLS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The specific format required to send the data will vary by analytics tool, but
the above code should be sufficient to get the data needed, regardless of the
format requirements.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The code above also includes a &lt;code&gt;getSelector()&lt;/code&gt; function (not mentioned in
previous sections), which takes a DOM node and returns a CSS selector
representing that node and its place in the DOM. It also takes an optional
maximum length parameter (defaulting to 100 characters) in the event that your
analytics provider has length restrictions on the data you send it.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;report-and-visualize-the-data&quot;&gt;Report and visualize the data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#report-and-visualize-the-data&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve started collecting debug information along with your Web Vitals
metrics, the next step is aggregating the data across all your users to start
looking for patterns and trends.&lt;/p&gt;
&lt;p&gt;As mentioned above, you don&#39;t necessarily need to address every single issue
your users are encountering, you want to address—especially at first—the issues
that are affecting the largest number of users, which should also be the issues
that have the largest negative impact on your Core Web Vitals scores.&lt;/p&gt;
&lt;h3 id=&quot;the-web-vitals-report-tool&quot;&gt;The Web Vitals Report tool &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#the-web-vitals-report-tool&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you&#39;re using the &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; rel=&quot;noopener&quot;&gt;Web Vitals
Report&lt;/a&gt; tool, it&#39;s been
recently updated to support &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report#debug-dimension&quot; rel=&quot;noopener&quot;&gt;reporting on a single debug
dimension&lt;/a&gt;
for each of the Core Web Vitals metrics.&lt;/p&gt;
&lt;p&gt;Here&#39;s a screenshot from the Web Vitals Report debug info section, showing data
for the Web Vitals Report tool website itself:&lt;/p&gt;
&lt;img alt=&quot;Web Vitals Report showing debug information&quot; decoding=&quot;async&quot; height=&quot;535&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/Y49u3cmRD6RfAaZGCSmx.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Using the data above, you can see that whatever is causing the &lt;code&gt;section.Intro&lt;/code&gt;
element to shift is contributing the most to CLS on this page, so identifying
and fixing the cause of that shift will yield the greatest improvement to the
score.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/debug-web-vitals-in-the-field/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hopefully this post has helped outline the specific ways you can use the
existing performance APIs to get debug information for each of the Core Web
Vitals metrics based on real-user interactions in the field. While it&#39;s focused
on the Core Web Vitals, the concepts also apply to debugging any performance
metric that&#39;s measurable in JavaScript.&lt;/p&gt;
&lt;p&gt;If you&#39;re just getting started measuring performance, and you&#39;re already a
Google Analytics user, the Web Vitals Report tool may be a good place to start
because it already supports reporting debug information for each of the Core Web
Vitals metrics.&lt;/p&gt;
&lt;p&gt;If you&#39;re an analytics vendor and you&#39;re looking to improve your products and
provide more debugging information to your users, consider some of the
techniques described here but don&#39;t limit yourself to &lt;em&gt;just&lt;/em&gt; the ideas presented
here. This post is intended to be generally applicable to all analytics tools;
however, individual analytics tools likely can (and should) capture and report
even more debug information.&lt;/p&gt;
&lt;p&gt;Lastly, if you feel there are gaps in your ability to debug these metrics due to
missing features or information in the APIs themselves send your feedback to
&lt;a href=&quot;mailto:web-vitals-feedback@googlegroups.com&quot; rel=&quot;noopener&quot;&gt;web-vitals-feedback@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>First Contentful Paint (FCP)</title>
    <link href="https://web.dev/fcp/"/>
    <updated>2019-11-07T00:00:00Z</updated>
    <id>https://web.dev/fcp/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;First Contentful Paint (FCP) is an important, user-centric metric for
measuring &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;perceived load
speed&lt;/a&gt; because it marks
the first point in the page load timeline where the user can see anything on
the screen—a fast FCP helps reassure the user that something is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;happening&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-fcp&quot;&gt;What is FCP? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#what-is-fcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The First Contentful Paint (FCP) metric measures the time from when the page
starts loading to when any part of the page&#39;s content is rendered on the screen.
For this metric, &amp;quot;content&amp;quot; refers to text, images (including background images),
&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements, or non-white &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&quot;&gt;&lt;img alt=&quot;FCP timeline from google.com&quot; decoding=&quot;async&quot; height=&quot;311&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/3UhlOxRc0j8Vc4DGd4dt.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the above load timeline, FCP happens in the second
frame, as that&#39;s when the first text and image elements are rendered to the
screen.&lt;/p&gt;
&lt;p&gt;You&#39;ll notice that though some of the content has rendered, not all of it has
rendered. This is an important distinction to make between &lt;em&gt;First&lt;/em&gt; Contentful
Paint (FCP) and &lt;em&gt;&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint (LCP)&lt;/a&gt;&lt;/em&gt;
—which aims to measure when the page&#39;s main contents have finished
loading.&lt;/p&gt;
&lt;picture&gt;
  &lt;source srcset=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/V1mtKJenViYAhn05WxqR.svg&quot; media=&quot;(min-width: 640px)&quot; width=&quot;400&quot; ,=&quot;&quot; height=&quot;100&quot; /&gt;
  &lt;img alt=&quot;Good FCP values are 1.8 seconds or less, poor values are greater than 3.0 seconds and anything in between needs improvement&quot; class=&quot;w-screenshot w-screenshot--filled width-full&quot; decoding=&quot;async&quot; height=&quot;300&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/vQKpz0S2SGnnoXHMDidj.svg&quot; width=&quot;400&quot; /&gt;
&lt;/picture&gt;
&lt;h3 id=&quot;what-is-a-good-fcp-score&quot;&gt;What is a good FCP score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#what-is-a-good-fcp-score&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have a First
Contentful Paint of &lt;strong&gt;1.8 seconds&lt;/strong&gt; or less. To ensure you&#39;re hitting this
target for most of your users, a good threshold to measure is the &lt;strong&gt;75th
percentile&lt;/strong&gt; of page loads, segmented across mobile and desktop devices.&lt;/p&gt;
&lt;h2 id=&quot;how-to-measure-fcp&quot;&gt;How to measure FCP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#how-to-measure-fcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;FCP can be measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;in the lab&lt;/a&gt;
or &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the field&lt;/a&gt;, and it&#39;s
available in the following tools:&lt;/p&gt;
&lt;h3 id=&quot;field-tools&quot;&gt;Field tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#field-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2019/11/search-console-speed-report.html&quot; rel=&quot;noopener&quot;&gt;Search Console (Speed
Report)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lab-tools&quot;&gt;Lab tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#lab-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;measure-fcp-in-javascript&quot;&gt;Measure FCP in JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#measure-fcp-in-javascript&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To measure FCP in JavaScript, you can use the &lt;a href=&quot;https://w3c.github.io/paint-timing/&quot; rel=&quot;noopener&quot;&gt;Paint Timing
API&lt;/a&gt;. The following example shows how to
create a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;
that listens for a &lt;code&gt;paint&lt;/code&gt; entry with the name &lt;code&gt;first-contentful-paint&lt;/code&gt; and logs
it to the console.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntriesByName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;first-contentful-paint&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;FCP candidate:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;paint&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;This code shows how to log the &lt;code&gt;first-contentful-paint&lt;/code&gt; entry to the console,
but measuring FCP in JavaScript is more complicated. See below for details:&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the above example, the logged &lt;code&gt;first-contentful-paint&lt;/code&gt; entry will tell you
when the first contentful element was painted. However, in some cases this entry
is not valid for measuring FCP.&lt;/p&gt;
&lt;p&gt;The following section lists the differences between what the API reports and how
the metric is calculated.&lt;/p&gt;
&lt;h4 id=&quot;differences-between-the-metric-and-the-api&quot;&gt;Differences between the metric and the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#differences-between-the-metric-and-the-api&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The API will dispatch a &lt;code&gt;first-contentful-paint&lt;/code&gt; entry for pages loaded in a
background tab, but those pages should be ignored when calculating FCP (first
paint timings should only be considered if the page was in the foreground the
entire time).&lt;/li&gt;
&lt;li&gt;The API does not report &lt;code&gt;first-contentful-paint&lt;/code&gt; entries when the page is
restored from the &lt;a href=&quot;https://web.dev/bfcache/#impact-on-core-web-vitals&quot;&gt;back/forward cache&lt;/a&gt;,
but FCP should be measured in these cases since users experience them as
distinct page visits.&lt;/li&gt;
&lt;li&gt;The API &lt;a href=&quot;https://w3c.github.io/paint-timing/#:~:text=cross-origin%20iframes&quot; rel=&quot;noopener&quot;&gt;may not report paint timings from cross-origin
iframes&lt;/a&gt;,
but to properly measure FCP you should consider all frames. Sub-frames can use
the API to report their paint timings to the parent frame for aggregation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than memorizing all these subtle differences, developers can use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt; to
measure FCP, which handles these differences for you (where possible):&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getFCP&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Measure and log FCP as soon as it&#39;s available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can refer to &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/blob/master/src/getFCP.ts&quot; rel=&quot;noopener&quot;&gt;the source code for
&lt;code&gt;getFCP()&lt;/code&gt;&lt;/a&gt;
for a complete example of how to measure FCP in JavaScript.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In some cases (such as cross-origin iframes) it&#39;s not possible to measure FCP
in JavaScript. See the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#limitations&quot; rel=&quot;noopener&quot;&gt;limitations&lt;/a&gt; section
of the &lt;code&gt;web-vitals&lt;/code&gt; library for details.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-to-improve-fcp&quot;&gt;How to improve FCP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#how-to-improve-fcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To learn how to improve FCP for a specific site, you can run a Lighthouse
performance audit and pay attention to any specific
&lt;a href=&quot;https://web.dev/lighthouse-performance/#opportunities&quot;&gt;opportunities&lt;/a&gt; or
&lt;a href=&quot;https://web.dev/lighthouse-performance/#diagnostics&quot;&gt;diagnostics&lt;/a&gt; the audit suggests.&lt;/p&gt;
&lt;p&gt;To learn how to improve FCP in general (for any site), refer to the following
performance guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;Eliminate render-blocking resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/unminified-css/&quot;&gt;Minify CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/unused-css-rules/&quot;&gt;Remove unused CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-rel-preconnect/&quot;&gt;Preconnect to required origins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/time-to-first-byte/&quot;&gt;Reduce server response times (TTFB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/redirects/&quot;&gt;Avoid multiple page redirects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-rel-preload/&quot;&gt;Preload key requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/total-byte-weight/&quot;&gt;Avoid enormous network payloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-long-cache-ttl/&quot;&gt;Serve static assets with an efficient cache policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/dom-size/&quot;&gt;Avoid an excessive DOM size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/critical-request-chains/&quot;&gt;Minimize critical request depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/font-display/&quot;&gt;Ensure text remains visible during webfont load&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/resource-summary/&quot;&gt;Keep request counts low and transfer sizes small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;changelog&quot;&gt;CHANGELOG &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fcp/#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Occasionally, bugs are discovered in the APIs used to measure metrics, and
sometimes in the definitions of the metrics themselves. As a result, changes
must sometimes be made, and these changes can show up as improvements or
regressions in your internal reports and dashboards.&lt;/p&gt;
&lt;p&gt;To help you manage this, all changes to either the implementation or definition
of these metrics will be surfaced in this
&lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Back/forward cache</title>
    <link href="https://web.dev/bfcache/"/>
    <updated>2020-11-10T00:00:00Z</updated>
    <id>https://web.dev/bfcache/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Back/forward cache (or bfcache) is a browser optimization that enables instant
back and forward navigation. It significantly improves the browsing experience
for users—especially those with slower networks or devices.&lt;/p&gt;
&lt;p&gt;As web developers, it&#39;s critical to understand how to &lt;a href=&quot;https://web.dev/bfcache/#optimize-your-pages-for-bfcache&quot;&gt;optimize your pages for
bfcache&lt;/a&gt; across all browsers, so your users
can reap the benefits.&lt;/p&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;bfcache has been supported in both
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/1.5/Using_Firefox_1.5_caching&quot; rel=&quot;noopener&quot;&gt;Firefox&lt;/a&gt;
and &lt;a href=&quot;https://webkit.org/blog/427/webkit-page-cache-i-the-basics/&quot; rel=&quot;noopener&quot;&gt;Safari&lt;/a&gt; for
many years, across desktop and mobile.&lt;/p&gt;
&lt;p&gt;Starting in version 86, Chrome has enabled bfcache for
&lt;a href=&quot;https://web.dev/same-site-same-origin/&quot;&gt;cross-site&lt;/a&gt; navigations on Android for a small
percentage of users. In Chrome 87, bfcache support will be rolled out to all
Android users for cross-site navigation, with the intent to support
&lt;a href=&quot;https://web.dev/same-site-same-origin/&quot;&gt;same-site&lt;/a&gt; navigation as well in the near future.&lt;/p&gt;
&lt;h2 id=&quot;bfcache-basics&quot;&gt;bfcache basics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#bfcache-basics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;bfcache is an in-memory cache that stores a complete snapshot of a page
(including the JavaScript heap) as the user is navigating away. With the entire
page in memory, the browser can quickly and easily restore it if the user
decides to return.&lt;/p&gt;
&lt;p&gt;How many times have you visited a website and clicked a link to go to another
page, only to realize it&#39;s not what you wanted and click the back button? In
that moment, bfcache can make a big difference in how fast the previous page
loads:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper w-table--top-align&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td width=&quot;30%&quot;&gt;&lt;strong&gt;&lt;em&gt;Without&lt;/em&gt; bfcache enabled&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;
        A new request is initiated to load the previous page, and, depending
        on how well that page has been &lt;a href=&quot;https://web.dev/reliable/#the-options-in-your-caching-toolbox&quot;&gt;
        optimized&lt;/a&gt; for repeat visits, the browser might have to re-download,
        re-parse, and re-execute some (or all) of resources it just downloaded.
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;With&lt;/em&gt; bfcache enabled&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;
        Loading the previous page is &lt;em&gt;essentially instant&lt;/em&gt;, because the
        entire page can be restored from memory, without having to go to the
        network at all
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Check out this video of bfcache in action to understand the speed up it can
bring to navigations:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;cuPsdRckkF0&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;In the video above, the example with bfcache is quite a bit faster than the
example without it.&lt;/p&gt;
&lt;p&gt;bfcache not only speeds up navigation, it also reduces data usage, since
resources do not have to be downloaded again.&lt;/p&gt;
&lt;p&gt;Chrome usage data shows that 1 in 10 navigations on desktop and 1 in 5 on mobile
are either back or forward. With bfcache enabled, browsers could eliminate the
data transfer and time spent loading for billions of web pages every single day!&lt;/p&gt;
&lt;h3 id=&quot;how-the-&amp;quot;cache&amp;quot;-works&quot;&gt;How the &amp;quot;cache&amp;quot; works &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#how-the-%22cache%22-works&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &amp;quot;cache&amp;quot; used by bfcache is different from the &lt;a href=&quot;https://web.dev/http-cache/&quot;&gt;HTTP cache&lt;/a&gt;
(which is also useful in speeding up repeat navigations). The bfcache is a
snapshot of the entire page in memory (including the JavaScript heap), whereas
the HTTP cache contains only the responses for previously made requests. Since
it&#39;s quite rare that all requests required to load a page can be fulfilled from
the HTTP cache, repeat visits using bfcache restores are always faster than even
the most well-optimized non-bfcache navigations.&lt;/p&gt;
&lt;p&gt;Creating a snapshot of a page in memory, however, involves some complexity in
terms of how best to preserve in-progress code. For example, how do you handle
&lt;code&gt;setTimeout()&lt;/code&gt; calls where the timeout is reached while the page is in the
bfcache?&lt;/p&gt;
&lt;p&gt;The answer is that browsers pause running any pending timers or unresolved
promises—essentially all pending tasks in the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/webappapis.html#task-queue&quot; rel=&quot;noopener&quot;&gt;JavaScript task
queues&lt;/a&gt;—and
resume processing tasks when (or if) the page is restored from the bfcache.&lt;/p&gt;
&lt;p&gt;In some cases this is fairly low-risk (for example, timeouts or promises), but
in other cases it might lead to very confusing or unexpected behavior. For
example, if the browser pauses a task that&#39;s required as part of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction&quot; rel=&quot;noopener&quot;&gt;IndexedDB
transaction&lt;/a&gt;,
it can affect other open tabs in the same origin (since the same IndexedDB
databases can be accessed by multiple tabs simultaneously). As a result,
browsers will generally not attempt to cache pages in the middle of an IndexedDB
transaction or using APIs that might affect other pages.&lt;/p&gt;
&lt;p&gt;For more details on how various API usage affects a page&#39;s bfcache eligibility,
see &lt;a href=&quot;https://web.dev/bfcache/#optimize-your-pages-for-bfcache&quot;&gt;Optimize your pages for bfcache&lt;/a&gt; below.&lt;/p&gt;
&lt;h3 id=&quot;apis-to-observe-bfcache&quot;&gt;APIs to observe bfcache &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#apis-to-observe-bfcache&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While bfcache is an optimization that browsers do automatically, it&#39;s still
important for developers to know when it&#39;s happening so they can &lt;a href=&quot;https://web.dev/bfcache/#optimize-your-pages-for-bfcache&quot;&gt;optimize their
pages for it&lt;/a&gt; and &lt;a href=&quot;https://web.dev/bfcache/#implications-for-analytics-and-performance-measurement&quot;&gt;adjust any metrics or
performance
measurement&lt;/a&gt;
accordingly.&lt;/p&gt;
&lt;p&gt;The primary events used to observe bfcache are the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PageTransitionEvent&quot; rel=&quot;noopener&quot;&gt;page transition
events&lt;/a&gt;—&lt;code&gt;pageshow&lt;/code&gt;
and &lt;code&gt;pagehide&lt;/code&gt;—which have been around as long as bfcache has and are supported
in pretty much &lt;a href=&quot;https://caniuse.com/page-transition-events&quot; rel=&quot;noopener&quot;&gt;all browsers in use
today&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The newer &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&quot; rel=&quot;noopener&quot;&gt;Page
Lifecycle&lt;/a&gt;
events—&lt;code&gt;freeze&lt;/code&gt; and &lt;code&gt;resume&lt;/code&gt;—are also dispatched when pages go in or out of the
bfcache, as well as in some other situations. For example when a background tab
gets frozen to minimize CPU usage. Note, the Page Lifecycle events are currently
only supported in Chromium-based browsers.&lt;/p&gt;
&lt;h4 id=&quot;observe-when-a-page-is-restored-from-bfcache&quot;&gt;Observe when a page is restored from bfcache &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#observe-when-a-page-is-restored-from-bfcache&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;pageshow&lt;/code&gt; event fires right after the &lt;code&gt;load&lt;/code&gt; event when the page is
initially loading and any time the page is restored from bfcache. The &lt;code&gt;pageshow&lt;/code&gt;
event has a
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PageTransitionEvent/persisted&quot; rel=&quot;noopener&quot;&gt;persisted&lt;/a&gt;&lt;/code&gt;
property which will be &lt;code&gt;true&lt;/code&gt; if the page was restored from bfcache
(and &lt;code&gt;false&lt;/code&gt; if not). You can use the &lt;code&gt;persisted&lt;/code&gt; property
to distinguish regular page loads from bfcache restores. For example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pageshow&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;persisted&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;This page was restored from the bfcache.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;This page was loaded normally.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In browsers that support the Page Lifecycle API, the &lt;code&gt;resume&lt;/code&gt; event will also
fire when pages are restored from bfcache (immediately before the &lt;code&gt;pageshow&lt;/code&gt;
event), though it will also fire when a user revisits a frozen background tab.
If you want to restore a page&#39;s state after it&#39;s frozen (which includes pages in
the bfcache), you can use the &lt;code&gt;resume&lt;/code&gt; event, but if you want to measure your
site&#39;s bfcache hit rate, you&#39;d need to use the &lt;code&gt;pageshow&lt;/code&gt; event. In some cases,
you might need to use both.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/bfcache/#how-bfcache-affects-analytics-and-performance-measurement&quot;&gt;Implications for performance and
analytics&lt;/a&gt; for
more details on bfcache measurement best practices.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;observe-when-a-page-is-entering-bfcache&quot;&gt;Observe when a page is entering bfcache &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#observe-when-a-page-is-entering-bfcache&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;pagehide&lt;/code&gt; event is the counterpart to the &lt;code&gt;pageshow&lt;/code&gt; event. The &lt;code&gt;pageshow&lt;/code&gt;
event fires when a page is either loaded normally or restored from the bfcache.
The &lt;code&gt;pagehide&lt;/code&gt; event fires when the page is either unloaded normally or when the
browser attempts to put it into the bfcache.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;pagehide&lt;/code&gt; event also has a &lt;code&gt;persisted&lt;/code&gt; property, and if it&#39;s &lt;code&gt;false&lt;/code&gt; then
you can be confident a page is not about to enter the bfcache. However, if the
&lt;code&gt;persisted&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, it doesn&#39;t guarantee that a page will be cached.
It means that the browser &lt;em&gt;intends&lt;/em&gt; to cache the page, but there may be factors
that make it impossible to cache.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pagehide&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;persisted &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;   console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;This page *might* be entering the bfcache.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;This page will unload normally and be discarded.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Similarly, the &lt;code&gt;freeze&lt;/code&gt; event will fire immediately after the &lt;code&gt;pagehide&lt;/code&gt; event
(if the event&#39;s &lt;code&gt;persisted&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;), but again that only means the
browser &lt;em&gt;intends&lt;/em&gt; to cache the page. It may still have to discard it for a
number of reasons explained below.&lt;/p&gt;
&lt;h2 id=&quot;optimize-your-pages-for-bfcache&quot;&gt;Optimize your pages for bfcache &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#optimize-your-pages-for-bfcache&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not all pages get stored in bfcache, and even when a page does get stored there,
it won&#39;t stay there indefinitely. It&#39;s critical that developers understand what
makes pages eligible (and ineligible) for bfcache to maximize their cache-hit
rates.&lt;/p&gt;
&lt;p&gt;The following sections outline the best practices to make it as likely as
possible that the browser can cache your pages.&lt;/p&gt;
&lt;h3 id=&quot;never-use-the-unload-event&quot;&gt;Never use the &lt;code&gt;unload&lt;/code&gt; event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#never-use-the-unload-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most important way to optimize for bfcache in all browsers is to never use
the &lt;code&gt;unload&lt;/code&gt; event. Ever!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unload&lt;/code&gt; event is problematic for browsers because it predates bfcache and
many pages on the internet operate under the (reasonable) assumption that a page
will not continue to exist after the &lt;code&gt;unload&lt;/code&gt; event has fired. This presents a
challenge because many of those pages were &lt;em&gt;also&lt;/em&gt; built with the assumption that
the &lt;code&gt;unload&lt;/code&gt; event would fire any time a user is navigating away, which is no
longer true (and &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api#the-unload-event&quot; rel=&quot;noopener&quot;&gt;hasn&#39;t been true for a long
time&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So browsers are faced with a dilemma, they have to choose between something that
can improve the user experience—but might also risk breaking the page.&lt;/p&gt;
&lt;p&gt;Firefox has chosen to make pages ineligible for bfcache if they add an &lt;code&gt;unload&lt;/code&gt;
listener, which is less risky but also disqualifies &lt;em&gt;a lot&lt;/em&gt; of pages. Safari
will attempt to cache some pages with an &lt;code&gt;unload&lt;/code&gt; event listener, but to reduce
potential breakage it will not run the &lt;code&gt;unload&lt;/code&gt; event when a user is navigating
away.&lt;/p&gt;
&lt;p&gt;Since &lt;a href=&quot;https://www.chromestatus.com/metrics/feature/popularity#DocumentUnloadRegistered&quot; rel=&quot;noopener&quot;&gt;65% of
pages&lt;/a&gt;
in Chrome register an &lt;code&gt;unload&lt;/code&gt; event listener, to be able to cache as many pages
as possible, Chrome chose to align implementation with Safari.&lt;/p&gt;
&lt;p&gt;Instead of using the &lt;code&gt;unload&lt;/code&gt; event, use the &lt;code&gt;pagehide&lt;/code&gt; event. The &lt;code&gt;pagehide&lt;/code&gt;
event fires in all cases where the &lt;code&gt;unload&lt;/code&gt; event currently fires, and it
&lt;em&gt;also&lt;/em&gt; fires when a page is put in the bfcache.&lt;/p&gt;
&lt;p&gt;In fact, &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v6.2.0&quot; rel=&quot;noopener&quot;&gt;Lighthouse
v6.2.0&lt;/a&gt; has
added a &lt;code&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/pull/11085&quot; rel=&quot;noopener&quot;&gt;no-unload-listeners
audit&lt;/a&gt;&lt;/code&gt;, which will
warn developers if any JavaScript on their pages (including that from
third-party libraries) adds an &lt;code&gt;unload&lt;/code&gt; event listener.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Never add an &lt;code&gt;unload&lt;/code&gt; event listener! Use the &lt;code&gt;pagehide&lt;/code&gt; event instead.
Adding an &lt;code&gt;unload&lt;/code&gt; event listener will make your site slower in Firefox, and
the code won&#39;t even run most of the time in Chrome and Safari.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;only-add-beforeunload-listeners-conditionally&quot;&gt;Only add &lt;code&gt;beforeunload&lt;/code&gt; listeners conditionally &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#only-add-beforeunload-listeners-conditionally&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;beforeunload&lt;/code&gt; event will not make your pages ineligible for bfcache in
Chrome or Safari, but it will make them ineligible in Firefox, so avoid using it
unless absolutely necessary.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;code&gt;unload&lt;/code&gt; event, however, there are legitimate uses for
&lt;code&gt;beforeunload&lt;/code&gt;. For example, when you want to warn the user that they have
unsaved changes they&#39;ll lose if they leave the page. In this case, it&#39;s
recommended that you only add &lt;code&gt;beforeunload&lt;/code&gt; listeners when a user has unsaved
changes and then remove them immediately after the unsaved changes are saved.&lt;/p&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;beforeunload&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pageHasUnsavedChanges&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Are you sure you want to exit?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;The code above adds a &lt;code&gt;beforeunload&lt;/code&gt; listener unconditionally.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;beforeUnloadListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Are you sure you want to exit?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// A function that invokes a callback when the page has unsaved changes.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;onPageHasUnsavedChanges&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;beforeunload&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beforeUnloadListener&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// A function that invokes a callback when the page&#39;s unsaved changes are resolved.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;onAllChangesSaved&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;beforeunload&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beforeUnloadListener&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;The code above only adds the &lt;code&gt;beforeunload&lt;/code&gt; listener when it&#39;s needed (and removes it
when it&#39;s not).&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;avoid-window.opener-references&quot;&gt;Avoid window.opener references &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#avoid-window.opener-references&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In some browsers (including Chromium-based browsers) if a page was opened using
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open&quot; rel=&quot;noopener&quot;&gt;window.open()&lt;/a&gt;&lt;/code&gt;
or (in &lt;a href=&quot;https://crbug.com/898942&quot; rel=&quot;noopener&quot;&gt;Chromium-based browsers prior to version 88&lt;/a&gt;) from a link with
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target&quot; rel=&quot;noopener&quot;&gt;target=_blank&lt;/a&gt;&lt;/code&gt;—without
specifying
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/noopener&quot; rel=&quot;noopener&quot;&gt;rel=&amp;quot;noopener&amp;quot;&lt;/a&gt;&lt;/code&gt;—then
the opening page will have a reference to the window object of the opened page.&lt;/p&gt;
&lt;p&gt;In addition to &lt;a href=&quot;https://mathiasbynens.github.io/rel-noopener/&quot; rel=&quot;noopener&quot;&gt;being a security
risk&lt;/a&gt;, a page with a non-null
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot; rel=&quot;noopener&quot;&gt;window.opener&lt;/a&gt;&lt;/code&gt;
reference cannot safely be put into the bfcache because that could break any
pages attempting to access it.&lt;/p&gt;
&lt;p&gt;As a result, it&#39;s best to avoid creating &lt;code&gt;window.opener&lt;/code&gt; references by using
&lt;code&gt;rel=&amp;quot;noopener&amp;quot;&lt;/code&gt; whenever possible. If your site requires opening a window and
controlling it through
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot; rel=&quot;noopener&quot;&gt;window.postMessage()&lt;/a&gt;&lt;/code&gt;
or directly referencing the window object, neither the opened window nor the
opener will be eligible for bfcache.&lt;/p&gt;
&lt;h3 id=&quot;always-close-open-connections-before-the-user-navigates-away&quot;&gt;Always close open connections before the user navigates away &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#always-close-open-connections-before-the-user-navigates-away&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As mentioned above, when a page is put into the bfcache all scheduled JavaScript
tasks are paused and then resumed when the page is taken out of the cache.&lt;/p&gt;
&lt;p&gt;If these scheduled JavaScript tasks are only accessing DOM APIs—or other APIs
isolated to just the current page—then pausing these tasks while the page is not
visible to the user is not going to cause any problems.&lt;/p&gt;
&lt;p&gt;However, if these tasks are connected to APIs that are also accessible from
other pages in the same origin (for example: IndexedDB, Web Locks, WebSockets,
etc.) this can be problematic because pausing these tasks may prevent code in
other tabs from running.&lt;/p&gt;
&lt;p&gt;As a result, most browsers will not attempt to put a page in bfcache in the
following scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pages with an unfinished &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction&quot; rel=&quot;noopener&quot;&gt;IndexedDB
transaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pages with in-progress
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot; rel=&quot;noopener&quot;&gt;fetch()&lt;/a&gt; or
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot; rel=&quot;noopener&quot;&gt;XMLHttpRequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pages with an open
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot; rel=&quot;noopener&quot;&gt;WebSocket&lt;/a&gt; or
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API&quot; rel=&quot;noopener&quot;&gt;WebRTC&lt;/a&gt;
connection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your page is using any of these APIs, it&#39;s best to always close connections
and remove or disconnect observers during the &lt;code&gt;pagehide&lt;/code&gt; or &lt;code&gt;freeze&lt;/code&gt; event. That
will allow the browser to safely cache the page without the risk of it affecting
other open tabs.&lt;/p&gt;
&lt;p&gt;Then, if the page is restored from the bfcache, you can re-open or re-connect to
those APIs (in the &lt;code&gt;pageshow&lt;/code&gt; or &lt;code&gt;resume&lt;/code&gt; event).&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Using the APIs listed above does not disqualify a page from being stored in
bfcache, as long as they are not actively in use before the user navigates
away. However, there are APIs (Embedded Plugins, Workers,
Broadcast Channel, and &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:content/browser/frame_host/back_forward_cache_impl.cc;l=124;drc=e790fb2272990696f1d16a465832692f25506925?originalUrl=https:%2F%2Fcs.chromium.org%2F&quot; rel=&quot;noopener&quot;&gt;several
others&lt;/a&gt;)
where usage currently does disqualify a page from being cached. While Chrome
is intentionally being conservative in its initial release of bfcache, the
long-term goal is to make bfcache work with as many APIs as possible.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;test-to-ensure-your-pages-are-cacheable&quot;&gt;Test to ensure your pages are cacheable &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#test-to-ensure-your-pages-are-cacheable&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While there&#39;s no way to determine whether a page was put into the cache as it&#39;s
unloading, it is possible to assert that a back or forward navigation did
restore a page from the cache.&lt;/p&gt;
&lt;p&gt;Currently, in Chrome, a page can remain in the bfcache for up to three minutes,
which should be enough time to run a test (using a tool like
&lt;a href=&quot;https://github.com/puppeteer/puppeteer&quot; rel=&quot;noopener&quot;&gt;Puppeteer&lt;/a&gt; or
&lt;a href=&quot;https://www.w3.org/TR/webdriver/&quot; rel=&quot;noopener&quot;&gt;WebDriver&lt;/a&gt;) to ensure that the &lt;code&gt;persisted&lt;/code&gt;
property of a &lt;code&gt;pageshow&lt;/code&gt; event is &lt;code&gt;true&lt;/code&gt; after navigating away from a page and
then clicking the back button.&lt;/p&gt;
&lt;p&gt;Note that, while under normal conditions a page should remain in the cache for
long enough to run a test, it &lt;em&gt;can&lt;/em&gt; be evicted silently at any time (for
example, if the system is under memory pressure). A failing test doesn&#39;t
necessarily mean your pages are not cacheable, so you need to configure your
test or build failure criteria accordingly.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;In Chrome, bfcache is currently only enabled on mobile. To test bfcache on
desktop you need to &lt;a href=&quot;https://www.chromium.org/developers/how-tos/run-chromium-with-flags&quot; rel=&quot;noopener&quot;&gt;enable the &lt;code&gt;#back-forward-cache&lt;/code&gt;
flag&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;ways-to-opt-out-of-bfcache&quot;&gt;Ways to opt out of bfcache &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#ways-to-opt-out-of-bfcache&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you do not want a page to be stored in the bfcache you can ensure it&#39;s not
cached by setting the &lt;code&gt;Cache-Control&lt;/code&gt; header on the top-level page response to
&lt;code&gt;no-store&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-http&quot;&gt;&lt;code class=&quot;language-http&quot;&gt;&lt;span class=&quot;token header-name keyword&quot;&gt;Cache-Control:&lt;/span&gt; no-store&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;All other caching directives (including &lt;code&gt;no-cache&lt;/code&gt; or even &lt;code&gt;no-store&lt;/code&gt; on a
subframe) will not affect a page&#39;s eligibility for bfcache.&lt;/p&gt;
&lt;p&gt;While this method is effective and works across browsers, it has other caching
and performance implications that may be undesirable. To address that, there&#39;s a
proposal to &lt;a href=&quot;https://github.com/whatwg/html/issues/5744&quot; rel=&quot;noopener&quot;&gt;add a more explicit opt-out
mechanism&lt;/a&gt;, including a mechanism to
clear the bfcache if needed (for example, when a user logs out of a website on a
shared device).&lt;/p&gt;
&lt;p&gt;Also, in Chrome, user-level opt-out is currently possible via &lt;a href=&quot;https://www.chromium.org/developers/how-tos/run-chromium-with-flags&quot; rel=&quot;noopener&quot;&gt;the
&lt;code&gt;#back-forward-cache&lt;/code&gt;
flag&lt;/a&gt;, as
well an &lt;a href=&quot;https://cloud.google.com/docs/chrome-enterprise/policies&quot; rel=&quot;noopener&quot;&gt;enterprise policy-based
opt-out&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Given the significantly better user experience that bfcache delivers, it is
not recommended to opt-out unless absolutely necessary for privacy reasons,
for example if a user logs out of a website on a shared device.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-bfcache-affects-analytics-and-performance-measurement&quot;&gt;How bfcache affects analytics and performance measurement &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#how-bfcache-affects-analytics-and-performance-measurement&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you track visits to your site with an analytics tool, you will likely notice
a decrease in the total number of pageviews reported as Chrome continues to
enable bfcache for more users.&lt;/p&gt;
&lt;p&gt;In fact, you&#39;re likely &lt;em&gt;already&lt;/em&gt; underreporting pageviews from other browsers
that implement bfcache since most of the popular analytics libraries do not
track bfcache restores as new pageviews.&lt;/p&gt;
&lt;p&gt;If you don&#39;t want your pageview counts to go down due to Chrome enabling
bfcache, you can report bfcache restores as pageviews (recommended) by listening
to the &lt;code&gt;pageshow&lt;/code&gt; event and checking the &lt;code&gt;persisted&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;The following example shows how to do this with Google Analytics; the logic
should be similar for other analytics tools:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Send a pageview when the page is first loaded.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;gtag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;event&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;page_view&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pageshow&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;persisted &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Send another pageview if the page is restored from bfcache.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;gtag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;event&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;page_view&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;performance-measurement&quot;&gt;Performance measurement &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#performance-measurement&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;bfcache can also negatively affect performance metrics collected &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the
field&lt;/a&gt;, specifically metrics
that measure page load times.&lt;/p&gt;
&lt;p&gt;Since bfcache navigations restore an existing page rather than initiate a new
page load, the total number of page loads collected will decrease when bfcache
is enabled. What&#39;s critical, though, is that the page loads being replaced by
bfcache restores would likely have been some of the fastest page loads in your
dataset. This is because back and forward navigations, by definition, are repeat
visits, and repeat page loads are generally faster than page loads from first
time visitors (due to &lt;a href=&quot;https://web.dev/http-cache/&quot;&gt;HTTP caching&lt;/a&gt;, as mentioned earlier).&lt;/p&gt;
&lt;p&gt;The result is fewer fast page loads in your dataset, which will likely skew the
distribution slower—despite the fact that the performance experienced by the
user has probably improved!&lt;/p&gt;
&lt;p&gt;There are a few ways to deal with this issue. One is to annotate all page load
metrics with their respective &lt;a href=&quot;https://www.w3.org/TR/navigation-timing-2/#sec-performance-navigation-types&quot; rel=&quot;noopener&quot;&gt;navigation
type&lt;/a&gt;:
&lt;code&gt;navigate&lt;/code&gt;, &lt;code&gt;reload&lt;/code&gt;, &lt;code&gt;back_forward&lt;/code&gt;, or &lt;code&gt;prerender&lt;/code&gt;. This will allow you to
continue to monitor your performance within these navigation types—even if the
overall distribution skews negative. This approach is recommended for
non-user-centric page load metrics like &lt;a href=&quot;https://web.dev/time-to-first-byte/&quot;&gt;Time to First Byte
(TTFB)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For user-centric metrics like the &lt;a href=&quot;https://web.dev/vitals/&quot;&gt;Core Web Vitals&lt;/a&gt;, a better option
is to report a value that more accurately represents what the user experiences.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
The &lt;code&gt;back_forward&lt;/code&gt; navigation type in the &lt;a href=&quot;https://www.w3.org/TR/navigation-timing-2/#sec-performance-navigation-types&quot; rel=&quot;noopener&quot;&gt;Navigation Timing
API&lt;/a&gt;
is not to be confused with bfcache restores. The Navigation Timing API only
annotates page loads, whereas bfcache restores are re-using a page loaded from
a previous navigation.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;impact-on-core-web-vitals&quot;&gt;Impact on Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#impact-on-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/vitals/&quot;&gt;Core Web Vitals&lt;/a&gt; measure the user&#39;s experience of a web page across a
variety of dimensions (loading speed, interactivity, visual stability), and
since users experience bfcache restores as faster navigations than traditional
page loads, it&#39;s important that the Core Web Vitals metrics reflect this. After
all, a user doesn&#39;t care whether or not bfcache was enabled, they just care that
the navigation was fast!&lt;/p&gt;
&lt;p&gt;Tools like the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;,
that collect and report on the Core Web Vitals metrics treat bfcache restores as
separate page visits in their dataset.&lt;/p&gt;
&lt;p&gt;And while there aren&#39;t (yet) dedicated web performance APIs for measuring these
metrics after bfcache restores, their values can be approximated using existing
web APIs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint (LCP)&lt;/a&gt;, you can use the delta between
the &lt;code&gt;pageshow&lt;/code&gt; event&#39;s timestamp and the timestamp of the next painted frame
(since all elements in the frame will be painted at the same time). Note
that in the case of a bfcache restore, LCP and FCP will be the same.&lt;/li&gt;
&lt;li&gt;For &lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt;, you can re-add the event listeners
(the same ones used by the &lt;a href=&quot;https://github.com/GoogleChromeLabs/first-input-delay&quot; rel=&quot;noopener&quot;&gt;FID
polyfill&lt;/a&gt;) in the
&lt;code&gt;pageshow&lt;/code&gt; event, and report FID as the delay of the first input after the
bfcache restore.&lt;/li&gt;
&lt;li&gt;For &lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift (CLS)&lt;/a&gt;, you can continue to keep using
your existing Performance Observer; all you have to do is reset the current
CLS value to 0.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details on how bfcache affects each metric, refer to the individual
Core Web Vitals &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;metric guides pages&lt;/a&gt;. And for a
specific example of how to implement bfcache versions of these metrics in code,
refer to the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/pull/87&quot; rel=&quot;noopener&quot;&gt;PR adding them to the web-vitals JS
library&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;As of &lt;code&gt;v1&lt;/code&gt;, the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt;
JavaScript library &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/pull/87&quot; rel=&quot;noopener&quot;&gt;supports bfcache
restores&lt;/a&gt; in the metrics
it reports. Developers using &lt;code&gt;v1&lt;/code&gt; or greater should not need to update their
code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bfcache/#additional-resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/1.5/Using_Firefox_1.5_caching&quot; rel=&quot;noopener&quot;&gt;Firefox
Caching&lt;/a&gt;
&lt;em&gt;(bfcache in Firefox)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/427/webkit-page-cache-i-the-basics/&quot; rel=&quot;noopener&quot;&gt;Page Cache&lt;/a&gt;
&lt;em&gt;(bfcache in Safari)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1JtDCN9A_1UBlDuwkjn1HWxdhQ1H2un9K4kyPLgBqJUc/edit?usp=sharing&quot; rel=&quot;noopener&quot;&gt;Back/forward cache: web exposed
behavior&lt;/a&gt;
&lt;em&gt;(bfcache differences across browsers)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://back-forward-cache-tester.glitch.me/?persistent_logs=1&quot; rel=&quot;noopener&quot;&gt;bfcache
tester&lt;/a&gt;
&lt;em&gt;(test how different APIs and events affect bfcache in browsers)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Web Vitals</title>
    <link href="https://web.dev/vitals/"/>
    <updated>2020-04-30T00:00:00Z</updated>
    <id>https://web.dev/vitals/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Optimizing for quality of user experience is key to the long-term success of any
site on the web. Whether you&#39;re a business owner, marketer, or developer, Web
Vitals can help you quantify the experience of your site and identify
opportunities to improve.&lt;/p&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web Vitals is an initiative by Google to provide unified guidance for quality
signals that are essential to delivering a great user experience on the web.&lt;/p&gt;
&lt;p&gt;Google has provided a number of tools over the years to measure and report on
performance. Some developers are experts at using these tools, while others have
found the abundance of both tools and metrics challenging to keep up with.&lt;/p&gt;
&lt;p&gt;Site owners should not have to be performance gurus in order to understand the
quality of experience they are delivering to their users. The Web Vitals
initiative aims to simplify the landscape, and help sites focus on the metrics
that matter most, the &lt;strong&gt;Core Web Vitals&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;core-web-vitals&quot;&gt;Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Core Web Vitals are the subset of Web Vitals that apply to all web pages, should
be measured by all site owners, and will be surfaced across all Google tools.
Each of the Core Web Vitals represents a distinct facet of the user experience,
is measurable &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;in the
field&lt;/a&gt;,
and reflects the real-world experience of a critical
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;user-centric&lt;/a&gt;
outcome.&lt;/p&gt;
&lt;p&gt;The metrics that make up Core Web Vitals will &lt;a href=&quot;https://web.dev/vitals/#evolving-web-vitals&quot;&gt;evolve&lt;/a&gt;
over time. The current set for 2020 focuses on three aspects of the user
experience—&lt;em&gt;loading&lt;/em&gt;, &lt;em&gt;interactivity&lt;/em&gt;, and &lt;em&gt;visual stability&lt;/em&gt;—and includes the
following metrics (and their respective thresholds):&lt;/p&gt;
&lt;div class=&quot;w-stack w-stack--center w-stack--md&quot;&gt;
  &lt;img alt=&quot;Largest Contentful Paint threshold recommendations&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZZU8Z7TMKXmzZT2mCjJU.svg&quot; width=&quot;400&quot; /&gt;
  &lt;img alt=&quot;First Input Delay threshold recommendations&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/iHYrrXKe4QRcb2uu8eV8.svg&quot; width=&quot;400&quot; /&gt;
  &lt;img alt=&quot;Cumulative Layout Shift threshold recommendations&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dgpDFckbHwwOKdIGDa3N.svg&quot; width=&quot;400&quot; /&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint (LCP)&lt;/a&gt;&lt;/strong&gt;: measures &lt;em&gt;loading&lt;/em&gt; performance.
To provide a good user experience, LCP should occur within &lt;strong&gt;2.5 seconds&lt;/strong&gt; of
when the page first starts loading.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt;&lt;/strong&gt;: measures &lt;em&gt;interactivity&lt;/em&gt;. To provide a
good user experience, pages should have a FID of &lt;strong&gt;100 milliseconds&lt;/strong&gt; or less.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift (CLS)&lt;/a&gt;&lt;/strong&gt;: measures &lt;em&gt;visual stability&lt;/em&gt;. To
provide a good user experience, pages should maintain a CLS of &lt;strong&gt;0.1.&lt;/strong&gt; or
less.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each of the above metrics, to ensure you&#39;re hitting the recommended target
for most of your users, a good threshold to measure is the &lt;strong&gt;75th percentile&lt;/strong&gt;
of page loads, segmented across mobile and desktop devices.&lt;/p&gt;
&lt;p&gt;Tools that assess Core Web Vitals compliance should consider a page passing if
it meets the recommended targets at the 75th percentile for all of the above
three metrics.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To learn more about the research and methodology behind these recommendations,
see: &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/&quot;&gt;Defining the Core Web Vitals metrics
thresholds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;tools-to-measure-and-report-core-web-vitals&quot;&gt;Tools to measure and report Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#tools-to-measure-and-report-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Google believes that the Core Web Vitals are critical to all web experiences. As
a result, it is committed to surfacing these metrics &lt;a href=&quot;https://web.dev/vitals-tools/&quot;&gt;in all of its popular
tools&lt;/a&gt;. The following sections details which tools support the
Core Web Vitals.&lt;/p&gt;
&lt;h4 id=&quot;field-tools-to-measure-core-web-vitals&quot;&gt;Field tools to measure Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#field-tools-to-measure-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;
collects anonymized, real user measurement data for each Core Web Vital. This
data enables site owners to quickly assess their performance without requiring
them to manually instrument analytics on their pages, and powers tools like
&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;,
and Search Console&#39;s &lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Core Web Vitals
report&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
      &lt;td&gt;LCP&lt;/td&gt;
      &lt;td&gt;FID&lt;/td&gt;
      &lt;td&gt;CLS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot;&gt;
        Chrome User Experience Report&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;
        PageSpeed Insights&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot;&gt;
        Search Console (Core Web Vitals report)&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For guidance on how to use these tools, and which tool is right for your use
case, see: &lt;a href=&quot;https://web.dev/vitals-measurement-getting-started/&quot;&gt;Getting started with measuring Web
Vitals&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The data provided by Chrome User Experience Report offers a quick way to assess
the performance of sites, but it does not provide the detailed, per-pageview
telemetry that is often necessary to accurately diagnose, monitor, and quickly
react to regressions. As a result, we strongly recommend that sites set up their
own real-user monitoring.&lt;/p&gt;
&lt;h4 id=&quot;measure-core-web-vitals-in-javascript&quot;&gt;Measure Core Web Vitals in JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#measure-core-web-vitals-in-javascript&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Each of the Core Web Vitals can be measured in JavaScript using standard web
APIs.&lt;/p&gt;
&lt;p&gt;The easiest way to measure all the Core Web Vitals is to use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; JavaScript library, a
small, production-ready wrapper around the underlying web APIs that measures
each metric in a way that accurately matches how they&#39;re reported by all the
Google tools listed above.&lt;/p&gt;
&lt;p&gt;With the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; library,
measuring each metric is as simple as calling a single function (see the
documentation for complete
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#usage&quot; rel=&quot;noopener&quot;&gt;usage&lt;/a&gt; and
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#api&quot; rel=&quot;noopener&quot;&gt;API&lt;/a&gt; details):&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getCLS&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getFID&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getLCP&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendToAnalytics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Use `navigator.sendBeacon()` if available, falling back to `fetch()`.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sendBeacon &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendBeacon&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; method&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; keepalive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getCLS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getLCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Once you&#39;ve configured your site to use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; library to measure and
send your Core Web Vitals data to an analytics endpoint, the next step is to
aggregate and report on that data to see if your pages are meeting the
recommended thresholds for at least 75% of page visits.&lt;/p&gt;
&lt;p&gt;While some analytics providers have built-in support for Core Web Vitals
metrics, even those that don&#39;t should include basic custom metric features that
allow you to measure Core Web Vitals in their tool.&lt;/p&gt;
&lt;p&gt;One example of this is the &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; rel=&quot;noopener&quot;&gt;Web Vitals
Report&lt;/a&gt;, which allows
site owners to measure their Core Web Vitals using Google Analytics. For
guidance on measuring Core Web Vitals using other analytics tools, see &lt;a href=&quot;https://web.dev/vitals-field-measurement-best-practices/&quot;&gt;Best
practices for measuring Web Vitals in the
field&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also report on each of the Core Web Vitals without writing any code
using the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals-extension&quot; rel=&quot;noopener&quot;&gt;Web Vitals Chrome
Extension&lt;/a&gt;. This extension
uses the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; library to
measure each of these metrics and display them to users as they browse the web.&lt;/p&gt;
&lt;p&gt;This extension can be helpful in understanding the performance of your own
sites, your competitor&#39;s sites, and the web at large.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;&amp;nbsp;&lt;/th&gt;
        &lt;th&gt;LCP&lt;/th&gt;
        &lt;th&gt;FID&lt;/th&gt;
        &lt;th&gt;CLS&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot;&gt;web-vitals&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals-extension&quot;&gt;
          Web Vitals Extension&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Alternatively, developers who prefer to measure these metrics directly via the
underlying web APIs can refer to these metric guides for implementation details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/lcp/#measure-lcp-in-javascript&quot;&gt;Measure LCP in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fid/#measure-fid-in-javascript&quot;&gt;Measure FID in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/cls/#measure-cls-in-javascript&quot;&gt;Measure CLS in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For additional guidance on how to measure these metrics using popular
analytics services (or your own in-house analytics tools), see: &lt;a href=&quot;https://web.dev/vitals-field-measurement-best-practices/&quot;&gt;Best
practices for measuring Web Vitals in the
field&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;lab-tools-to-measure-core-web-vitals&quot;&gt;Lab tools to measure Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#lab-tools-to-measure-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;While all of the Core Web Vitals are, first and foremost, field metrics, many of
them are also measurable in the lab.&lt;/p&gt;
&lt;p&gt;Lab measurement is the best way to test the performance of features during
development—before they&#39;ve been released to users. It&#39;s also the best way to
catch performance regressions before they happen.&lt;/p&gt;
&lt;p&gt;The following tools can be used to measure the Core Web Vitals in a lab
environment:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;&amp;nbsp;&lt;/th&gt;
        &lt;th&gt;LCP&lt;/th&gt;
        &lt;th&gt;FID&lt;/th&gt;
        &lt;th&gt;CLS&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot;&gt;
          Chrome DevTools&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✘ (use &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;TBT&lt;/a&gt; instead)&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot;&gt;
          Lighthouse&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✘ (use &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;TBT&lt;/a&gt; instead)&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Tools like Lighthouse that load pages in a simulated environment without a
user cannot measure FID (there is no user input). However, the Total Blocking
Time (TBT) metric is lab-measurable and is an excellent proxy for FID.
Performance optimizations that improve TBT in the lab should improve FID in
the field (see performance recommendations below).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While lab measurement is an essential part of delivering great experiences, it
is not a substitute for field measurement.&lt;/p&gt;
&lt;p&gt;The performance of a site can vary dramatically based on a user&#39;s device
capabilities, their network conditions, what other processes may be running on
the device, and how they&#39;re interacting with the page. In fact, each of the Core
Web Vitals metrics can have its score affected by user interaction. Only field
measurement can accurately capture the complete picture.&lt;/p&gt;
&lt;h3 id=&quot;recommendations-for-improving-your-scores&quot;&gt;Recommendations for improving your scores &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#recommendations-for-improving-your-scores&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once you&#39;ve measured the Core Web Vitals and identified areas for improvement,
the next step is to optimize. The following guides offer specific
recommendations for how to optimize your pages for each of the Core Web Vitals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-lcp/&quot;&gt;Optimize LCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-fid/&quot;&gt;Optimize FID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-cls/&quot;&gt;Optimize CLS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;other-web-vitals&quot;&gt;Other Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#other-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While the Core Web Vitals are the critical metrics for understanding and
delivering a great user experience, there are other vital metrics as well.&lt;/p&gt;
&lt;p&gt;These other Web Vitals often serve as proxy or supplemental metrics for the Core
Web Vitals, to help capture a larger part of the experience or to aid in
diagnosing a specific issue.&lt;/p&gt;
&lt;p&gt;For example, the metrics &lt;a href=&quot;https://web.dev/time-to-first-byte/&quot;&gt;Time to First Byte (TTFB)&lt;/a&gt; and
&lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint (FCP)&lt;/a&gt; are both vital aspects of the &lt;em&gt;loading&lt;/em&gt;
experience, and are both useful in diagnosing issues with LCP (slow &lt;a href=&quot;https://web.dev/overloaded-server/&quot;&gt;server
response times&lt;/a&gt; or &lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;render-blocking
resources&lt;/a&gt;, respectively).&lt;/p&gt;
&lt;p&gt;Similarly, metrics like &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;Total Blocking Time (TBT)&lt;/a&gt; and &lt;a href=&quot;https://web.dev/tti/&quot;&gt;Time to
Interactive (TTI)&lt;/a&gt; are lab metrics that are vital in catching and
diagnosing potential &lt;em&gt;interactivity&lt;/em&gt; issues that will impact FID. However, they
are not part of the Core Web Vitals set because they are not field-measurable,
nor do they reflect a
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;user-centric&lt;/a&gt;
outcome.&lt;/p&gt;
&lt;h2 id=&quot;evolving-web-vitals&quot;&gt;Evolving Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals/#evolving-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web Vitals and Core Web Vitals represent the best available signals developers
have today to measure quality of experience across the web, but these signals
are not perfect and future improvements or additions should be expected.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Core Web Vitals&lt;/strong&gt; are relevant to all web pages and featured across
relevant Google tools. Changes to these metrics will have wide-reaching impact;
as such, developers should expect the definitions and thresholds of the Core Web
Vitals to be stable, and updates to have prior notice and a predictable, annual
cadence.&lt;/p&gt;
&lt;p&gt;The other Web Vitals are often context or tool specific, and may be more
experimental than the Core Web Vitals. As such, their definitions and thresholds
may change with greater frequency.&lt;/p&gt;
&lt;p&gt;For all Web Vitals, changes will be clearly documented in this public
&lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Web Vitals</title>
    <link href="https://web.dev/i18n/es/vitals/"/>
    <updated>2020-04-30T00:00:00Z</updated>
    <id>https://web.dev/i18n/es/vitals/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Asegurar una calidad de experiencia de usuario óptima es clave para el éxito a largo plazo de cualquier sitio web. Tanto para un propietario de un negocio, especialista de marketing o desarrollador, Web Vitals pueden ayudarle a cuantificar la experiencia de su sitio e identificar oportunidades para mejorar.&lt;/p&gt;
&lt;h2 id=&quot;informacion-general&quot;&gt;Información general &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#informacion-general&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web Vitals es una iniciativa de Google para proporcionar una guía unificada de indicadores de calidad que son esenciales para brindar una excelente experiencia de usuario en la web.&lt;/p&gt;
&lt;p&gt;Google ha proporcionado una serie de herramientas a lo largo de los años para medir y generar informes de rendimiento. Algunos desarrolladores son expertos en el uso de estas herramientas, mientras que a otros les resulta difícil mantenerse al día con la enorme cantidad de herramientas y métricas disponibles.&lt;/p&gt;
&lt;p&gt;Los propietarios de sitios no deberían tener que ser gurús del rendimiento para comprender la calidad de la experiencia que brindan a sus usuarios. La iniciativa Web Vitals tiene como objetivo simplificar el panorama y ayudar a los sitios a centrarse en las métricas que más importan, los llamados &lt;strong&gt;Core Web Vitals&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;core-web-vitals&quot;&gt;Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Los Core Web Vitals son el subconjunto de Web Vitals que se aplica a todas las páginas web, todos los propietarios de sitios deben medirlos y aparecerán en todas las herramientas de Google. Cada uno de los Core Web Vitals representa una faceta distinta de la experiencia del usuario, se puede medir &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;en el campo&lt;/a&gt; y refleja la experiencia en el mundo real de un resultado indispensable &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;centrado en el usuario&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las métricas que componen los Core Web Vitals &lt;a href=&quot;https://web.dev/i18n/es/vitals/#evolving-web-vitals&quot;&gt;evolucionarán&lt;/a&gt; con el tiempo. El conjunto actual en el 2020 se centra en tres aspectos de la experiencia del usuario: &lt;em&gt;carga&lt;/em&gt; , &lt;em&gt;interactividad&lt;/em&gt; y &lt;em&gt;estabilidad visual&lt;/em&gt;, e incluye las siguientes métricas (y sus respectivos umbrales):&lt;/p&gt;
&lt;div class=&quot;w-stack w-stack--center w-stack--md&quot;&gt;
  &lt;img alt=&quot;Recomendaciones de umbral para LCP&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZZU8Z7TMKXmzZT2mCjJU.svg&quot; width=&quot;400&quot; /&gt;
  &lt;img alt=&quot;Recomendaciones de umbral para FID&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/iHYrrXKe4QRcb2uu8eV8.svg&quot; width=&quot;400&quot; /&gt;
  &lt;img alt=&quot;Recomendaciones de umbral para CLS&quot; decoding=&quot;async&quot; height=&quot;350&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dgpDFckbHwwOKdIGDa3N.svg&quot; width=&quot;400&quot; /&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint (LCP)&lt;/a&gt;&lt;/strong&gt; : se refiere al tiempo para el despliegue del contenido más extenso, LCP por sus siglas en inglés, mide el rendimiento de &lt;em&gt;carga.&lt;/em&gt; Para proporcionar una buena experiencia de usuario, el LCP debe producirse dentro de los &lt;strong&gt;2,5 segundos desde&lt;/strong&gt; que la página comienza a cargarse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt;&lt;/strong&gt;: se refiere a la demora para la primera entrada, FID por sus siglas en inglés, mide la &lt;em&gt;interactividad&lt;/em&gt;. Para proporcionar una buena experiencia de usuario, las páginas deben tener un FID de menos de &lt;strong&gt;100 milisegundos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift (CLS)&lt;/a&gt;&lt;/strong&gt;: se refiere a el cambio acumulativo en el diseño CLS por sus siglás en inglés, mide &lt;em&gt;la estabilidad visual&lt;/em&gt;. Para proporcionar una buena experiencia de usuario, las páginas deben mantener un CLS de menos de &lt;strong&gt;0,1.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Con cada una de las métricas anteriores, para asegurarse de que está alcanzando el objetivo recomendado para la mayoría de sus usuarios, un buen umbral para medir es el &lt;strong&gt;percentil 75&lt;/strong&gt; de cargas de página, segmentado en dispositivos móviles y de escritorio.&lt;/p&gt;
&lt;p&gt;Las herramientas que evalúan el cumplimiento de los Core Web Vitals deben considerar la aprobación de una página si cumple con los objetivos recomendados en el percentil 75 para las tres métricas anteriores.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Para obtener más información sobre la investigación y la metodología en que se basan estas recomendaciones, consulte: &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/&quot;&gt;Definición de los umbrales de métricas de Core Web Vitals&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;herramientas-para-medir-y-generar-informes-de-core-web-vitals&quot;&gt;Herramientas para medir y generar informes de Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#herramientas-para-medir-y-generar-informes-de-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Google cree que los Core Web Vitals son fundamentales para todas las experiencias web. Como resultado, se compromete a hacer aflorar estas métricas &lt;a href=&quot;https://web.dev/vitals-tools/&quot;&gt;en todas sus herramientas populares&lt;/a&gt;. Las siguientes secciones detallan qué herramientas son compatibles con los Core Web Vitals.&lt;/p&gt;
&lt;h4 id=&quot;herramientas-en-el-campo-para-medir-los-core-web-vitals&quot;&gt;Herramientas en el campo para medir los Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#herramientas-en-el-campo-para-medir-los-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;El &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience Report (Informe de experiencia del usuario de Chrome)&lt;/a&gt; recopila datos de medición de usuarios reales y anónimos para cada Core Web Vital. Estos datos permiten a los propietarios de sitios evaluar rápidamente su rendimiento sin tener que instrumentar manualmente los análisis en sus páginas, y potencian herramientas como &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt; y el &lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;informe de Core Web Vitals&lt;/a&gt; de la Search Console.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;LCP&lt;/td&gt;
      &lt;td&gt;FID&lt;/td&gt;
      &lt;td&gt;CLS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; class=&quot;&quot;&gt;Chrome User Experience Report&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; class=&quot;&quot;&gt;Search Console (Core Web Vitals Report)&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
      &lt;td&gt;✔&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Para obtener información sobre cómo utilizar estas herramientas y qué herramienta es la adecuada para su caso de uso, consulte: &lt;a href=&quot;https://web.dev/vitals-measurement-getting-started/&quot;&gt;Getting started with measuring Web Vitals (Introducción a la medición de Web Vitals)&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Los datos proporcionados por el Chrome User Experience Report ofrecen una forma rápida de evaluar el rendimiento de los sitios, pero no proporcionan la telemetría detallada por página vista que a menudo es necesaria para diagnosticar, monitorizar y reaccionar rápidamente a las regresiones con precisión. Como resultado, recomendamos encarecidamente que los sitios configuren su propia monitorización de usuarios reales.&lt;/p&gt;
&lt;h4 id=&quot;medir-los-core-web-vitals-en-javascript&quot;&gt;Medir los Core Web Vitals en JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#medir-los-core-web-vitals-en-javascript&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Cada uno de los Core Web Vitals se puede medir en JavaScript utilizando APIs estándares del web.&lt;/p&gt;
&lt;p&gt;La forma más sencilla de medir todos los Core Web Vitals es utilizar la biblioteca de JavaScript de &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt;, una pequeña envoltura alrededor de las API web subyacentes lista para la producción que mide cada métrica de una manera que coincide con la forma en que son informadas por todas las herramientas de Google enumeradas anteriormente.&lt;/p&gt;
&lt;p&gt;Con la &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;biblioteca web-vitals&lt;/a&gt;, medir cada métrica es tan simple como llamar a una sola función (consulte la documentación para conocer el &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#usage&quot; rel=&quot;noopener&quot;&gt;uso&lt;/a&gt; completo y los detalles de la &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#api&quot; rel=&quot;noopener&quot;&gt;API):&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getCLS&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getFID&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getLCP&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendToAnalytics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metric&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Usa `navigator.sendBeacon()` si esta disponible, sino va a usar `fetch()` en su lugar.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sendBeacon &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendBeacon&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; method&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; keepalive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getCLS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getLCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Una vez que haya configurado su sitio para usar la biblioteca &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; para medir y enviar sus datos de Core Web Vitals a un punto final de análisis, el siguiente paso es agregar y hacer un reporte sobre esos datos para ver si sus páginas cumplen con los umbrales recomendados para al menos el 75% de las visitas a la página.&lt;/p&gt;
&lt;p&gt;Algunos proveedores de análisis tienen soporte integrado para métricas de Core Web Vitals, incluso aquellos que no lo tienen, deberían incluir funciones de métricas personalizadas básicas que le permitan medir Core Web Vitals en su herramienta.&lt;/p&gt;
&lt;p&gt;Un ejemplo de esto es el &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; rel=&quot;noopener&quot;&gt;Web Vitals Report&lt;/a&gt;, que permite a los propietarios de sitios medir sus Core Web Vitals utilizando Google Analytics. Para obtener una guía sobre cómo medir los valores fundamentales de la Web mediante otras herramientas de análisis, consulte el artículo sobre &lt;a href=&quot;https://web.dev/vitals-field-measurement-best-practices/&quot;&gt;prácticas recomendadas para medir Core Web Vitals en el campo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;También se puede reportar sobre cada uno de los Core Web Vitals sin escribir código utilizando la &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals-extension&quot; rel=&quot;noopener&quot;&gt;Extensión para Chrome de Web Vitals&lt;/a&gt;. Esta extensión utiliza la biblioteca de &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; para medir cada una de estas métricas y mostrarlas a los usuarios mientras navegan por la web.&lt;/p&gt;
&lt;p&gt;Esta extensión puede resultar útil para comprender el rendimiento de sus propios sitios, los de la competencia y la web en general.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt; &lt;/th&gt;
        &lt;th&gt;LCP&lt;/th&gt;
        &lt;th&gt;FID&lt;/th&gt;
        &lt;th&gt;CLS&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot;&gt;web-vitals&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals-extension&quot;&gt;Extensión Web Vitals&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Como alternativa, los desarrolladores que prefieren medir estas métricas directamente a través de las API web subyacentes pueden consultar estas guías de métricas para obtener detalles de implementación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/lcp/#measure-lcp-in-javascript&quot;&gt;Medir LCP en JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fid/#measure-fid-in-javascript&quot;&gt;Medir FID en JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/cls/#measure-cls-in-javascript&quot;&gt;Medir CLS en JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Para obtener información adicional sobre cómo medir estas métricas mediante servicios de análisis populares (o sus propias herramientas de análisis internas), consulte: &lt;a href=&quot;https://web.dev/vitals-field-measurement-best-practices/&quot;&gt;Prácticas recomendadas para medir Web Vitals en el campo&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4 id=&quot;herramientas-de-laboratorio-para-medir-core-web-vitals&quot;&gt;Herramientas de laboratorio para medir Core Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#herramientas-de-laboratorio-para-medir-core-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Si bien todos los Core Web Vitals son, ante todo, métricas en el campo, muchas de ellas también se pueden medir en el laboratorio.&lt;/p&gt;
&lt;p&gt;La medición en el laboratorio es la mejor manera de probar el rendimiento de las funciones durante el desarrollo, antes de que se publiquen a los usuarios. También es la mejor forma de detectar las regresiones de rendimiento antes de que sucedan.&lt;/p&gt;
&lt;p&gt;Las siguientes herramientas se pueden utilizar para medir los Core Web Vitals en un entorno de laboratorio:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt; &lt;/th&gt;
        &lt;th&gt;LCP&lt;/th&gt;
        &lt;th&gt;FID&lt;/th&gt;
        &lt;th&gt;CLS&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot;&gt;DevTools de Chrome&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✘ (use &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;TBT&lt;/a&gt; en su lugar)&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; class=&quot;_active_edit_href&quot;&gt; Lighthouse&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
        &lt;td&gt;✘ (use &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;TBT&lt;/a&gt; en su lugar)&lt;/td&gt;
        &lt;td&gt;✔&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Las herramientas como Lighthouse que cargan páginas en un entorno simulado sin un usuario no pueden medir FID (no hay entrada de usuario). Sin embargo, la métrica Total Blocking Time (TBT) se puede medir en laboratorio y es un excelente proxy para FID. Las optimizaciones de rendimiento que mejoran el TBT en el laboratorio deberían mejorar la FID en el campo (consulte las recomendaciones de rendimiento a continuación). &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Si bien la medición de laboratorio es una parte esencial para brindar excelentes experiencias, no sustituye a la medición en el campo.&lt;/p&gt;
&lt;p&gt;El rendimiento de un sitio puede variar drásticamente según las capacidades del dispositivo de un usuario, las condiciones de su red, qué otros procesos pueden estar ejecutándose en el dispositivo y cómo interactúan con la página. De hecho, la puntuación de cada una de las métricas de Core Web Vitals puede verse afectada por la interacción del usuario. Solo la medición en el campo puede capturar con precisión la imagen completa.&lt;/p&gt;
&lt;h3 id=&quot;recomendaciones-para-mejorar-sus-puntuaciones&quot;&gt;Recomendaciones para mejorar sus puntuaciones &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#recomendaciones-para-mejorar-sus-puntuaciones&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Una vez que haya medido los Core Web Vitals e identificado las áreas de mejora, el siguiente paso es optimizar. Las siguientes guías ofrecen recomendaciones específicas sobre cómo optimizar sus páginas para cada uno de los Core Web Vitals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-lcp/&quot;&gt;Optimizar LCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-fid/&quot;&gt;Optimizar FID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/optimize-cls/&quot;&gt;Optimizar CLS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;otros-web-vitals&quot;&gt;Otros Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#otros-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Si bien los Core Web Vitals son las métricas críticas para comprender y brindar una excelente experiencia de usuario, también existen otras métricas vitales.&lt;/p&gt;
&lt;p&gt;Estos otros Web Vitals a menudo sirven como métricas proxy o suplementarias para los Core Web Vitals, para ayudar a capturar una mayor parte de la experiencia o para ayudar a diagnosticar un problema específico.&lt;/p&gt;
&lt;p&gt;Por ejemplo, las métricas &lt;a href=&quot;https://web.dev/time-to-first-byte/&quot;&gt;Time to First Byte (TTFB)&lt;/a&gt; y &lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint (FCP)&lt;/a&gt; son aspectos vitales de la &lt;em&gt;experiencia de carga&lt;/em&gt; y son útiles para diagnosticar problemas con LCP (&lt;a href=&quot;https://web.dev/overloaded-server/&quot;&gt;tiempos de respuesta del servidor&lt;/a&gt; lentos o &lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;recursos de bloqueo de renderizado&lt;/a&gt;, respectivamente).&lt;/p&gt;
&lt;p&gt;De manera similar, métricas como &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;Total Blocking Time (TBT)&lt;/a&gt; y &lt;a href=&quot;https://web.dev/tti/&quot;&gt;Time to Interactive (TTI)&lt;/a&gt; son métricas de laboratorio que son vitales para detectar y diagnosticar posibles &lt;em&gt;problemas de interactividad&lt;/em&gt; que afectarán a la FID. Sin embargo, no forman parte del conjunto Core Web Vitals porque no se pueden medir en el campo ni reflejan un resultado &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;centrado en el usuario.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;evolucion-de-los-web-vitals&quot;&gt;Evolución de los Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/i18n/es/vitals/#evolucion-de-los-web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Los Web Vitals y los Core Web Vitals son los mejores indicadores disponibles que los desarrolladores tienen en la actualidad para medir la calidad de la experiencia en la web, pero estos indicadores no son perfectos y se deben esperar mejoras o adiciones futuras.&lt;/p&gt;
&lt;p&gt;Los &lt;strong&gt;Core Web Vitals&lt;/strong&gt; son relevantes para todas las páginas web y aparecen en las herramientas relevantes de Google. Los cambios en estas métricas tendrán un impacto de gran alcance; por ello, los desarrolladores deben esperar que las definiciones y los umbrales de Core Web Vitals sean estables y que las actualizaciones ocurran con un previo aviso y una cadencia anual predecible.&lt;/p&gt;
&lt;p&gt;Los otros Web Vitals suelen ser específicos del contexto o de la herramienta, y pueden ser más experimentales que los Core Web Vitals. Sus definiciones y umbrales pueden cambiar con mayor frecuencia.&lt;/p&gt;
&lt;p&gt;Para todos los Web Vitals, los cambios se documentarán de manera clara en este &lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;REGISTRO DE CAMBIOS&lt;/a&gt; público.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Best practices for measuring Web Vitals in the field</title>
    <link href="https://web.dev/vitals-field-measurement-best-practices/"/>
    <updated>2020-05-27T00:00:00Z</updated>
    <id>https://web.dev/vitals-field-measurement-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Having the ability to measure and report on the real-world performance of your
pages is critical for diagnosing and improving performance over time. Without
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;field
data&lt;/a&gt;,
it&#39;s impossible to know for sure whether the changes you&#39;re making to your site
are actually achieving their desired results.&lt;/p&gt;
&lt;p&gt;Many popular &lt;a href=&quot;https://en.wikipedia.org/wiki/Real_user_monitoring&quot; rel=&quot;noopener&quot;&gt;Real User Monitoring
(RUM)&lt;/a&gt; analytics providers
already support the &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;Core Web Vitals&lt;/a&gt; metrics in their
tools (as well as many &lt;a href=&quot;https://web.dev/vitals/#other-web-vitals&quot;&gt;other Web Vitals&lt;/a&gt;). If you&#39;re
currently using one of these RUM analytics tools, you&#39;re in great shape to
assess how well the pages on your site meet the &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;recommended Core Web Vitals
thresholds&lt;/a&gt; and prevent regressions
in the future.&lt;/p&gt;
&lt;p&gt;While we do recommend using an analytics tool that supports the Core Web Vitals
metrics, if the analytics tool you&#39;re currently using does not support them, you
don&#39;t necessarily need to switch. Almost all analytics tools offer a way to
define and measure &lt;a href=&quot;https://support.google.com/analytics/answer/2709828&quot; rel=&quot;noopener&quot;&gt;custom
metrics&lt;/a&gt; or
&lt;a href=&quot;https://support.google.com/analytics/answer/1033068&quot; rel=&quot;noopener&quot;&gt;events&lt;/a&gt;, which means you
can likely use your current analytics provider to measure the Core Web Vitals
metrics and add them to your existing analytics reports and dashboards.&lt;/p&gt;
&lt;p&gt;This guide discusses best practices for measuring Core Web Vitals metrics (or any custom metrics) with a third-party or in-house analytics tool. It can also serve as a guide for analytics vendors wishing to add Core Web Vitals support to their service.&lt;/p&gt;
&lt;h2 id=&quot;use-custom-metrics-or-events&quot;&gt;Use custom metrics or events &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#use-custom-metrics-or-events&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As mentioned above, most analytics tools let you measure custom data. If your
analytics tool supports this, you should be able to measure each of the Core Web
Vitals metrics using this mechanism.&lt;/p&gt;
&lt;p&gt;Measuring custom metrics or events in an analytics tool is generally a
three-step process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/2709829?hl=en&amp;amp;ref_topic=2709827&quot; rel=&quot;noopener&quot;&gt;Define or
register&lt;/a&gt;
the custom metric in your tool&#39;s admin (if required). &lt;em&gt;(Note: not all
analytics providers require custom metrics to be defined ahead of time.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Compute the value of the metric in your frontend JavaScript code.&lt;/li&gt;
&lt;li&gt;Send the metric value to your analytics backend, ensuring the name or ID
matches what was defined in step 1 &lt;em&gt;(again, if required)&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For steps 1 and 3, you can refer to your analytics tool&#39;s documentation for
instructions. For step 2 you can use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt; JavaScript library to
compute the value of each of the Core Web Vitals metrics.&lt;/p&gt;
&lt;p&gt;The following code sample shows how easy it can be to track these metrics in
code and send them to an analytics service.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getCLS&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getFID&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getLCP&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendToAnalytics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Use `navigator.sendBeacon()` if available, falling back to `fetch()`.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sendBeacon &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendBeacon&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/analytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; method&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; keepalive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getCLS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getLCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sendToAnalytics&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;ensure-you-can-report-a-distribution&quot;&gt;Ensure you can report a distribution &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#ensure-you-can-report-a-distribution&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve computed the values for each of the Core Web Vitals metrics and sent
them to your analytics service using a custom metric or event, the next step is
to build a report or dashboard displaying the values that have been collected.&lt;/p&gt;
&lt;p&gt;To ensure you&#39;re meeting the &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;recommended Core Web Vitals
thresholds&lt;/a&gt;, you&#39;ll need your report
to display the value of each metric at the 75th percentile.&lt;/p&gt;
&lt;p&gt;If your analytics tool does not offer quantile reporting as a built-in feature,
you can probably still get this data manually by generating a report that lists
every metric value sorted in ascending order. Once this report is generated, the
result that is 75% of the way through the full, sorted list of all values in
that report will be the 75th percentile for that metric—and this will be the
case no matter how you segment your data (by device type, connection type,
country, etc.).&lt;/p&gt;
&lt;p&gt;If your analytic tool does not give you metric-level reporting granularity by
default, you can probably achieve the same result if your analytics tool
supports &lt;a href=&quot;https://support.google.com/analytics/answer/2709828&quot; rel=&quot;noopener&quot;&gt;custom
dimensions&lt;/a&gt;. By setting a
unique, custom dimension value for each individual metric instance you track,
you should be able to generate a report, broken down by individual metric
instances, if you include the custom dimension in the report configuration.
Since each instance will have a unique dimension value, no grouping will occur.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; rel=&quot;noopener&quot;&gt;Web Vitals Report&lt;/a&gt;
is an example of this technique that uses Google Analytics. The code for the
report is &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; rel=&quot;noopener&quot;&gt;open source&lt;/a&gt;,
so developers can reference it as an example of the techniques outlined in this
section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/326742/101584324-3f9a0900-3992-11eb-8f2d-182f302fb67b.png&quot; alt=&quot;Screenshots of the Web VitalsReport&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Tip: The &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt;&lt;/a&gt;
JavaScript library provides an ID for each metric instance reported making
it possible to build distributions in most analytics tools. See the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#metric&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Metric&lt;/code&gt;&lt;/a&gt; interface
documentation for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;send-your-data-at-the-right-time&quot;&gt;Send your data at the right time &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#send-your-data-at-the-right-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some performance metrics can be calculated once the page has finished loading,
while others (like CLS) consider the entire lifespan of the page—and are only
final once the page has started unloading.&lt;/p&gt;
&lt;p&gt;This can be problematic, however, since both the &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt;
events are not reliable (especially on mobile) and their use is &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api#legacy-lifecycle-apis-to-avoid&quot; rel=&quot;noopener&quot;&gt;not
recommended&lt;/a&gt;
(since they can prevent a page from being eligible for the &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api#page-navigation-cache&quot; rel=&quot;noopener&quot;&gt;Back-Forward
Cache&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For metrics that track the entire lifespan of a page, it&#39;s best to send whatever
the metric&#39;s current value is during the &lt;code&gt;visibilitychange&lt;/code&gt; event, whenever the
page&#39;s visibility state changes to &lt;code&gt;hidden&lt;/code&gt;. This is because—once the page&#39;s
visibility state changes to &lt;code&gt;hidden&lt;/code&gt;—there&#39;s no guarantee that any script on
that page will be able to run again. This is especially true on mobile operating
systems where the browser app itself can be closed without any page callbacks
being fired.&lt;/p&gt;
&lt;p&gt;Note that mobile operating systems do generally fire the &lt;code&gt;visibilitychange&lt;/code&gt;
event when switching tabs, switching apps, or closing the browser app itself.
They also fire the &lt;code&gt;visibilitychange&lt;/code&gt; event when closing a tab or navigating to
a new page. This makes the &lt;code&gt;visibilitychange&lt;/code&gt; event far more reliable than the
&lt;code&gt;unload&lt;/code&gt; or &lt;code&gt;beforeunload&lt;/code&gt; events.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;Due to &lt;a href=&quot;https://github.com/w3c/page-visibility/issues/59#issue-554880545&quot; rel=&quot;noopener&quot;&gt;some browser
bugs&lt;/a&gt;, there
are a few cases where the &lt;code&gt;visibilitychange&lt;/code&gt; event does not fire. If you&#39;re
building your own analytics library, it&#39;s important to be aware of these bugs.
Note that the &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;web-vitals&lt;/a&gt;
JavaScript library does account for all of these bugs.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;monitor-performance-over-time&quot;&gt;Monitor performance over time &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#monitor-performance-over-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve updated your analytics implementation to both track and report on
the Core Web Vitals metrics, the next step is to track how changes to your site
affect performance over time.&lt;/p&gt;
&lt;h3 id=&quot;version-your-changes&quot;&gt;Version your changes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#version-your-changes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A naive (and ultimately unreliable) approach to tracking changes is to deploy
changes to production and then assume that all metrics received after the
deployment date correspond to the new site and all metrics received before the
deployment date correspond to the old site. However, any number of factors
(including caching at the HTTP, service worker, or CDN layer) can prevent this
from working.&lt;/p&gt;
&lt;p&gt;A much better approach is to create a unique version for each deployed change
and then track that version in your analytics tool. Most analytics tools support
setting a version. If yours does not, you can create a custom dimension and set
that dimension to your deployed version.&lt;/p&gt;
&lt;h3 id=&quot;run-experiments&quot;&gt;Run experiments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#run-experiments&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can take versioning one step further by tracking multiple versions (or
experiments) at the same time.&lt;/p&gt;
&lt;p&gt;If your analytics tool lets you define experiment groups, use that feature.
Otherwise, you can use custom dimensions to ensure each of your metric values
can be associated with a particular experiment group in your reports.&lt;/p&gt;
&lt;p&gt;With experimentation in place in your analytics, you can roll out an
experimental change to a subset of your users and compare the performance of
that change to the performance of users in the control group. Once you have
confidence that a change does indeed improve performance, you can roll it out to
all users.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Experiment groups should always be set on the server. Avoid using any
experimentation or A/B testing tool that runs on the client. These tools will
typically block rendering until a user&#39;s experiment group is determined, which
can be detrimental to your LCP times.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;ensure-measurement-doesn&#39;t-affect-performance&quot;&gt;Ensure measurement doesn&#39;t affect performance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#ensure-measurement-doesn&#39;t-affect-performance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When measuring performance on real users, it&#39;s absolutely critical that any
performance measurement code you&#39;re running does not negatively impact the
performance of your page. If it does, then any conclusions you attempt to draw
on how your performance affects your business will be unreliable, as you&#39;ll
never know if the presence of the analytics code itself is having the largest
negative impact.&lt;/p&gt;
&lt;p&gt;Always follow these principles when deploying RUM analytics code on your
production site:&lt;/p&gt;
&lt;h3 id=&quot;defer-your-analytics&quot;&gt;Defer your analytics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#defer-your-analytics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Analytics code should always be loaded in an asynchronous, non-blocking way, and
generally it should be loaded last. If you load your analytics code in a
blocking way, it can negatively affect LCP.&lt;/p&gt;
&lt;p&gt;All of the APIs used to measure the Core Web Vitals metrics were specifically
designed to support asynchronous and deferred script loading (via the
&lt;a href=&quot;https://www.chromestatus.com/feature/5118272741572608&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;buffered&lt;/code&gt;&lt;/a&gt; flag), so
there&#39;s no need to rush to get your scripts loaded early.&lt;/p&gt;
&lt;p&gt;In the event that you&#39;re measuring a metric that cannot be computed later in the
page load timeline, you should inline &lt;em&gt;only&lt;/em&gt; the code that needs to run early
into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your document (so it&#39;s not a &lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;render-blocking
request&lt;/a&gt;) and defer the rest. Do not load all your
analytics early just because a single metric requires it.&lt;/p&gt;
&lt;h3 id=&quot;do-not-create-long-tasks&quot;&gt;Do not create long tasks &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#do-not-create-long-tasks&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Analytics code often runs in response to user input, but if your analytics code
is conducting a lot of DOM measurements or using other processor-intensive APIs
the analytics code itself can cause poor input responsiveness. In addition, if
the JavaScript file containing your analytics code is large, executing that file
can block the main thread and negatively affect FID.&lt;/p&gt;
&lt;h3 id=&quot;use-non-blocking-apis&quot;&gt;Use non-blocking APIs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#use-non-blocking-apis&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;APIs like
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Navigator/sendBeacon&quot; rel=&quot;noopener&quot;&gt;sendBeacon()&lt;/a&gt;&lt;/code&gt;
and
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Window/requestIdleCallback&quot; rel=&quot;noopener&quot;&gt;requestIdleCallback()&lt;/a&gt;&lt;/code&gt;
are specifically designed for running non-critical tasks in a way that doesn&#39;t
block user-critical tasks.&lt;/p&gt;
&lt;p&gt;These APIs are great tools to use in a RUM analytics library.&lt;/p&gt;
&lt;p&gt;In general, all analytics beacons should be sent using the &lt;code&gt;sendBeacon()&lt;/code&gt; API
(if available), and all passive analytics measurement code should be run during
idle periods.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For guidance on how to maximize the use of idle time, while still
ensuring code can be run urgently when needed (like when a user is unloading
the page), refer to the
&lt;a href=&quot;https://philipwalton.com/articles/idle-until-urgent/&quot; rel=&quot;noopener&quot;&gt;idle-until-urgent&lt;/a&gt;
pattern.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;don&#39;t-track-more-than-what-you-need&quot;&gt;Don&#39;t track more than what you need &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vitals-field-measurement-best-practices/#don&#39;t-track-more-than-what-you-need&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The browser exposes a lot of performance data, but just because the data is
available does not necessarily mean you should record it and send it to your
analytics servers.&lt;/p&gt;
&lt;p&gt;For example, the &lt;a href=&quot;https://w3c.github.io/resource-timing/&quot; rel=&quot;noopener&quot;&gt;Resource Timing API&lt;/a&gt;
provides detailed timing data for every single resource loaded on your page.
However, it&#39;s unlikely that all of that data will be necessarily or useful in
improving resource load performance.&lt;/p&gt;
&lt;p&gt;In short, don&#39;t just track data because it&#39;s there, ensure the data will be used
before consuming resources tracking it.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>First Input Delay (FID)</title>
    <link href="https://web.dev/fid/"/>
    <updated>2019-11-07T00:00:00Z</updated>
    <id>https://web.dev/fid/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;First Input Delay (FID) is an important, user-centric metric for measuring
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;load responsiveness&lt;/a&gt;
because it quantifies the experience users feel when trying to interact with
unresponsive pages—a low FID helps ensure that the page is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;usable&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We all know how important it is to make a good first impression. It&#39;s important
when meeting new people, and it&#39;s also important when building experiences on
the web.&lt;/p&gt;
&lt;p&gt;On the web, a good first impression can make the difference between someone
becoming a loyal user or them leaving and never coming back. The question is,
what makes for a good impression, and how do you measure what kind of impression
you&#39;re likely making on your users?&lt;/p&gt;
&lt;p&gt;On the web, first impressions can take a lot of different forms—we have
first impressions of a site&#39;s design and visual appeal as well as first
impressions of its speed and responsiveness.&lt;/p&gt;
&lt;p&gt;While it is hard to measure how much users like a site&#39;s design with web APIs,
measuring its speed and responsiveness is not!&lt;/p&gt;
&lt;p&gt;The first impression users have of how fast your site loads can be measured with
&lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint (FCP)&lt;/a&gt;. But how fast your site can paint pixels
to the screen is just part of the story. Equally important is how responsive
your site is when users try to interact with those pixels!&lt;/p&gt;
&lt;p&gt;The First Input Delay (FID) metric helps measure your user&#39;s first impression of
your site&#39;s interactivity and responsiveness.&lt;/p&gt;
&lt;h2 id=&quot;what-is-fid&quot;&gt;What is FID? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#what-is-fid&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;FID measures the time from when a user first interacts with a page (i.e. when
they click a link, tap on a button, or use a custom, JavaScript-powered control)
to the time when the browser is actually able to begin processing event handlers
in response to that interaction.&lt;/p&gt;
&lt;picture&gt;
  &lt;source srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eXyvkqRHQZ5iG38Axh1Z.svg&quot; media=&quot;(min-width: 640px)&quot; width=&quot;400&quot; ,=&quot;&quot; height=&quot;100&quot; /&gt;
  &lt;img alt=&quot;Good fid values are 2.5 seconds, poor values are greater than 4.0 seconds and anything in between needs improvement&quot; class=&quot;w-screenshot w-screenshot--filled width-full&quot; decoding=&quot;async&quot; height=&quot;300&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Se4TiXIdp8jtLJVScWed.svg&quot; width=&quot;400&quot; /&gt;
&lt;/picture&gt;
&lt;h3 id=&quot;what-is-a-good-fid-score&quot;&gt;What is a good FID score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#what-is-a-good-fid-score&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have a First Input
Delay of &lt;strong&gt;100 milliseconds&lt;/strong&gt; or less. To ensure you&#39;re hitting this target for
most of your users, a good threshold to measure is the &lt;strong&gt;75th percentile&lt;/strong&gt; of
page loads, segmented across mobile and desktop devices.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To learn more about the research and methodology behind this recommendation,
see: &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/&quot;&gt;Defining the Core Web Vitals metrics
thresholds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;fid-in-detail&quot;&gt;FID in detail &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#fid-in-detail&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As developers who write code that responds to events, we often assume our code
is going to be run immediately—as soon as the event happens. But as users,
we&#39;ve all frequently experienced the opposite—we&#39;ve loaded a web page on
our phone, tried to interact with it, and then been frustrated when nothing
happened.&lt;/p&gt;
&lt;p&gt;In general, input delay (a.k.a. input latency) happens because the browser&#39;s
main thread is busy doing something else, so it can&#39;t (yet) respond to the user.
One common reason this might happen is the browser is busy parsing and executing
a large JavaScript file loaded by your app. While it&#39;s doing that, it can&#39;t run
any event listeners because the JavaScript it&#39;s loading might tell it to do
something else.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;FID only measures the &amp;quot;delay&amp;quot; in event processing. It does
not measure the event processing time itself nor the time it takes the browser
to update the UI after running event handlers. While this time does affect the
user experience, including it as part of FID would incentivize developers to
respond to events asynchronously—which would improve the metric but
likely make the experience worse. See &lt;a href=&quot;https://web.dev/fid/#why-only-consider-the-input-delay&quot;&gt;why only consider the input
delay&lt;/a&gt; below for more details. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Consider the following timeline of a typical web page load:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/9tm3f6pwlHMqNKuFvaP0.svg&quot;&gt;&lt;img alt=&quot;Example page load trace&quot; decoding=&quot;async&quot; height=&quot;260&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/admin/9tm3f6pwlHMqNKuFvaP0.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The above visualization shows a page that&#39;s making a couple of network requests
for resources (most likely CSS and JS files), and—after those resources
are finished downloading—they&#39;re processed on the main thread.&lt;/p&gt;
&lt;p&gt;This results in periods where the main thread is momentarily busy, which is
indicated by the beige-colored
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/webappapis.html#concept-task&quot; rel=&quot;noopener&quot;&gt;task&lt;/a&gt;
blocks.&lt;/p&gt;
&lt;p&gt;Long first input delays typically occur between &lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint
(FCP)&lt;/a&gt; and &lt;a href=&quot;https://web.dev/tti/&quot;&gt;Time to Interactive (TTI)&lt;/a&gt; because the page has
rendered some of its content but isn&#39;t yet reliably interactive. To illustrate
how this can happen, FCP and TTI have been added to the timeline:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/24Y3T5sWNuZD9fKhkuER.svg&quot;&gt;&lt;img alt=&quot;Example page load trace with FCP and TTI&quot; decoding=&quot;async&quot; height=&quot;340&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/admin/24Y3T5sWNuZD9fKhkuER.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may have noticed that there&#39;s a fair amount of time (including three &lt;a href=&quot;https://web.dev/custom-metrics/#long-tasks-api&quot;&gt;long
tasks&lt;/a&gt;) between FCP and TTI, if a user tries to
interact with the page during that time (e.g. click on a link), there will be a
delay between when the click is received and when the main thread is able to
respond.&lt;/p&gt;
&lt;p&gt;Consider what would happen if a user tried to interact with the page near the
beginning of the longest task:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/krOoeuQ4TWCbt9t6v5Wf.svg&quot;&gt;&lt;img alt=&quot;Example page load trace with FCP, TTI, and FID&quot; decoding=&quot;async&quot; height=&quot;380&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/admin/krOoeuQ4TWCbt9t6v5Wf.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Because the input occurs while the browser is in the middle of running a task,
it has to wait until the task completes before it can respond to the input. The
time it must wait is the FID value for this user on this page.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In this example the user just happened to interact with the
page at the beginning of the main thread&#39;s most busy period. If the user had
interacted with the page just a moment earlier (during the idle period) the
browser could have responded right away. This variance in input delay
underscores the importance of looking at the distribution of FID values when
reporting on the metric. You can read more about this in the section below on
analyzing and reporting on FID data.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;what-if-an-interaction-doesn&#39;t-have-an-event-listener&quot;&gt;What if an interaction doesn&#39;t have an event listener? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#what-if-an-interaction-doesn&#39;t-have-an-event-listener&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;FID measures the delta between when an input event is received and when the main
thread is next idle. This means FID is measured &lt;strong&gt;even in cases where an event
listener has not been registered.&lt;/strong&gt; The reason is because many user interactions
do not require an event listener but &lt;em&gt;do&lt;/em&gt; require the main thread to be idle in
order to run.&lt;/p&gt;
&lt;p&gt;For example, all of the following HTML elements need to wait for
in-progress tasks on the main thread to complete prior to responding to user
interactions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text fields, checkboxes, and radio buttons (&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Select dropdowns (&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;links (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;why-only-consider-the-first-input&quot;&gt;Why only consider the first input? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#why-only-consider-the-first-input&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While a delay from any input can lead to a bad user experience, we primarily
recommend measuring the first input delay for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first input delay will be the user&#39;s first impression of your site&#39;s
responsiveness, and first impressions are critical in shaping our overall
impression of a site&#39;s quality and reliability.&lt;/li&gt;
&lt;li&gt;The biggest interactivity issues we see on the web today occur during page
load. Therefore, we believe initially focusing on improving site&#39;s first user
interaction will have the greatest impact on improving the overall
interactivity of the web.&lt;/li&gt;
&lt;li&gt;The recommended solutions for how sites should fix high first input delays
(code splitting, loading less JavaScript upfront, etc.) are not necessarily
the same solutions for fixing slow input delays after page load. By separating
out these metrics we&#39;ll be able to provide more specific performance
guidelines to web developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;what-counts-as-a-first-input&quot;&gt;What counts as a first input? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#what-counts-as-a-first-input&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;FID is a metric that measures a page&#39;s responsiveness during load. As such, it
only focuses on input events from discrete actions like clicks, taps, and key
presses.&lt;/p&gt;
&lt;p&gt;Other interactions, like scrolling and zooming, are continuous actions and have
completely different performance constraints (also, browsers are often able to
hide their latency by running them on a separate thread).&lt;/p&gt;
&lt;p&gt;To put this another way, FID focuses on the R (responsiveness) in the &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rail&quot; rel=&quot;noopener&quot;&gt;RAIL
performance
model&lt;/a&gt;, whereas
scrolling and zooming are more related to A (animation), and their performance
qualities should be evaluated separately.&lt;/p&gt;
&lt;h3 id=&quot;what-if-a-user-never-interacts-with-your-site&quot;&gt;What if a user never interacts with your site? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#what-if-a-user-never-interacts-with-your-site&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not all users will interact with your site every time they visit. And not all
interactions are relevant to FID (as mentioned in the previous section). In
addition, some user&#39;s first interactions will be at bad times (when the main
thread is busy for an extended period of time), and some user&#39;s first
interactions will be at good times (when the main thread is completely idle).&lt;/p&gt;
&lt;p&gt;This means some users will have no FID values, some users will have low FID
values, and some users will probably have high FID values.&lt;/p&gt;
&lt;p&gt;How you track, report on, and analyze FID will probably be quite a bit different
from other metrics you may be used to. The next section explains how best to do
this.&lt;/p&gt;
&lt;h3 id=&quot;why-only-consider-the-input-delay&quot;&gt;Why only consider the input delay? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#why-only-consider-the-input-delay&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As mentioned above, FID only measures the &amp;quot;delay&amp;quot; in event processing. It does
not measure the event processing time itself nor the time it takes the browser
to update the UI after running event handlers.&lt;/p&gt;
&lt;p&gt;Even though this time is important to the user and &lt;em&gt;does&lt;/em&gt; affect the experience,
it&#39;s not included in this metric because doing so could incentivize developers
to add workarounds that actually make the experience worse—that is, they
could wrap their event handler logic in an asynchronous callback (via
&lt;code&gt;setTimeout()&lt;/code&gt; or &lt;code&gt;requestAnimationFrame()&lt;/code&gt;) in order to separate it from the
task associated with the event. The result would be an improvement in the metric
score but a slower response as perceived by the user.&lt;/p&gt;
&lt;p&gt;However, while FID only measure the &amp;quot;delay&amp;quot; portion of event latency, developers
who want to track more of the event lifecycle can do so using the &lt;a href=&quot;https://wicg.github.io/event-timing/&quot; rel=&quot;noopener&quot;&gt;Event Timing
API&lt;/a&gt;. See the guide on &lt;a href=&quot;https://web.dev/custom-metrics/#event-timing-api&quot;&gt;custom
metrics&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2 id=&quot;how-to-measure-fid&quot;&gt;How to measure FID &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#how-to-measure-fid&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;FID is a metric that can only be measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the
field&lt;/a&gt;, as it requires a real
user to interact with your page. You can measure FID with the following tools.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;FID requires a real user and thus cannot be measured in the lab. However, the
&lt;a href=&quot;https://web.dev/tbt/&quot;&gt;Total Blocking Time (TBT)&lt;/a&gt; metric is lab-measurable, correlates well
with FID in the field, and also captures issues that affect interactivity.
Optimizations that improve TBT in the lab should also improve FID for your
users.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;field-tools&quot;&gt;Field tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#field-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Search Console (Core Web Vitals
report)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;measure-fid-in-javascript&quot;&gt;Measure FID in JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#measure-fid-in-javascript&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To measure FID in JavaScript, you can use the &lt;a href=&quot;https://wicg.github.io/event-timing&quot; rel=&quot;noopener&quot;&gt;Event Timing
API&lt;/a&gt;. The following example shows how to
create a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;
that listens for
&lt;a href=&quot;https://wicg.github.io/event-timing/#sec-performance-event-timing&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;first-input&lt;/code&gt;&lt;/a&gt;
entries and logs them to the console:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; delay &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;processingStart &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;FID candidate:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; delay&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;first-input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
This code shows how to log &lt;code&gt;first-input&lt;/code&gt; entries to the console and calculate
their delay. However, measuring FID in JavaScript is more complicated. See
below for details:&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the above example, the &lt;code&gt;first-input&lt;/code&gt; entry&#39;s delay value is measured by
taking the delta between the entry&#39;s &lt;code&gt;startTime&lt;/code&gt; and &lt;code&gt;processingStart&lt;/code&gt;
timestamps. In most cases this will be the FID value; however, not all
&lt;code&gt;first-input&lt;/code&gt; entries are valid for measuring FID.&lt;/p&gt;
&lt;p&gt;The following section lists the differences between what the API reports and how
the metric is calculated.&lt;/p&gt;
&lt;h4 id=&quot;differences-between-the-metric-and-the-api&quot;&gt;Differences between the metric and the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#differences-between-the-metric-and-the-api&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The API will dispatch &lt;code&gt;first-input&lt;/code&gt; entries for pages loaded
in a background tab but those pages should be ignored when calculating FID.&lt;/li&gt;
&lt;li&gt;The API will also dispatch &lt;code&gt;first-input&lt;/code&gt; entries if the page was backgrounded
prior to the first input occurring, but those pages should also be ignored
when calculating FID (inputs are only considered if the page was in the
foreground the entire time).&lt;/li&gt;
&lt;li&gt;The API does not report &lt;code&gt;first-input&lt;/code&gt; entries when the page is restored from
the &lt;a href=&quot;https://web.dev/bfcache/#impact-on-core-web-vitals&quot;&gt;back/forward cache&lt;/a&gt;, but FID should
be measured in these cases since users experience them as distinct page
visits.&lt;/li&gt;
&lt;li&gt;The API does not report inputs that occur within iframes, but to properly
measure FID you should consider them. Sub-frames can use the API to report
their &lt;code&gt;first-input&lt;/code&gt; entries to the parent frame for aggregation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than memorizing all these subtle differences, developers can use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt; to
measure FID, which handles these differences for you (where possible):&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getFID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Measure and log FID as soon as it&#39;s available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getFID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can refer to &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/blob/master/src/getFID.ts&quot; rel=&quot;noopener&quot;&gt;the source code for
&lt;code&gt;getFID)&lt;/code&gt;&lt;/a&gt;
for a complete example of how to measure FID in JavaScript.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In some cases (such as cross-origin iframes) it&#39;s not possible to measure FID
in JavaScript. See the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#limitations&quot; rel=&quot;noopener&quot;&gt;limitations&lt;/a&gt; section
of the &lt;code&gt;web-vitals&lt;/code&gt; library for details.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;analyzing-and-reporting-on-fid-data&quot;&gt;Analyzing and reporting on FID data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#analyzing-and-reporting-on-fid-data&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Due to the expected variance in FID values, it&#39;s critical that when reporting on
FID you look at the distribution of values and focus on the higher percentiles.&lt;/p&gt;
&lt;p&gt;While &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/#choice-of-percentile&quot;&gt;choice of
percentile&lt;/a&gt; for all
Core Web Vitals thresholds is the 75th, for FID in particular we still strongly
recommend looking at the 95th–99th percentiles, as those will correspond to the
particularly bad first experiences users are having with your site. And it will
show you the areas that need the most improvement.&lt;/p&gt;
&lt;p&gt;This is true even if you segment your reports by device category or type. For
example, if you run separate reports for desktop and mobile, the FID value you
care most about on desktop should be the 95th–99th percentile of desktop users,
and the FID value you care about most on mobile should be the 95th–99th
percentile of mobile users.&lt;/p&gt;
&lt;h2 id=&quot;how-to-improve-fid&quot;&gt;How to improve FID &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#how-to-improve-fid&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To learn how to improve FID for a specific site, you can run a Lighthouse
performance audit and pay attention to any specific
&lt;a href=&quot;https://web.dev/lighthouse-performance/#opportunities&quot;&gt;opportunities&lt;/a&gt; the audit suggests.&lt;/p&gt;
&lt;p&gt;While FID is a field metric (and Lighthouse is a lab metric tool), the guidance
for improving FID is the same as that for improving the lab metric &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;Total
Blocking Time (TBT)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a deep dive on how to improve FID, see &lt;a href=&quot;https://web.dev/optimize-fid/&quot;&gt;Optimize FID&lt;/a&gt;. For
additional guidance on individual performance techniques that can also improve
FID, see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/third-party-summary/&quot;&gt;Reduce the impact of third-party code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/bootup-time/&quot;&gt;Reduce JavaScript execution time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/mainthread-work-breakdown/&quot;&gt;Minimize main thread work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/resource-summary/&quot;&gt;Keep request counts low and transfer sizes small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;changelog&quot;&gt;CHANGELOG &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fid/#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Occasionally, bugs are discovered in the APIs used to measure metrics, and
sometimes in the definitions of the metrics themselves. As a result, changes
must sometimes be made, and these changes can show up as improvements or
regressions in your internal reports and dashboards.&lt;/p&gt;
&lt;p&gt;To help you manage this, all changes to either the implementation or definition
of these metrics will be surfaced in this
&lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Largest Contentful Paint (LCP)</title>
    <link href="https://web.dev/lcp/"/>
    <updated>2019-08-08T00:00:00Z</updated>
    <id>https://web.dev/lcp/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Largest Contentful Paint (LCP) is an important, user-centric metric for
measuring &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;perceived load
speed&lt;/a&gt; because it marks
the point in the page load timeline when the page&#39;s main content has likely
loaded—a fast LCP helps reassure the user that the page is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;useful&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Historically, it&#39;s been a challenge for web developers to measure how quickly
the main content of a web page loads and is visible to users.&lt;/p&gt;
&lt;p&gt;Older metrics like
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot; rel=&quot;noopener&quot;&gt;load&lt;/a&gt; or
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot; rel=&quot;noopener&quot;&gt;DOMContentLoaded&lt;/a&gt;
are not good because they don&#39;t necessarily correspond to what the user sees on
their screen. And newer, user-centric performance metrics like &lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful
Paint (FCP)&lt;/a&gt; only capture the very beginning of the loading experience.
If a page shows a splash screen or displays a loading indicator, this moment is
not very relevant to the user.&lt;/p&gt;
&lt;p&gt;In the past we&#39;ve recommended performance metrics like &lt;a href=&quot;https://web.dev/first-meaningful-paint/&quot;&gt;First Meaningful Paint
(FMP)&lt;/a&gt; and &lt;a href=&quot;https://web.dev/speed-index/&quot;&gt;Speed Index (SI)&lt;/a&gt; (both
available in Lighthouse) to help capture more of the loading experience after
the initial paint, but these metrics are complex, hard to explain, and often
wrong—meaning they still do not identify when the main content of the page
has loaded.&lt;/p&gt;
&lt;p&gt;Sometimes simpler is better. Based on discussions in the &lt;a href=&quot;https://www.w3.org/webperf/&quot; rel=&quot;noopener&quot;&gt;W3C Web
Performance Working Group&lt;/a&gt; and research done at
Google, we&#39;ve found that a more accurate way to measure when the main content
of a page is loaded is to look at when the largest element was rendered.&lt;/p&gt;
&lt;h2 id=&quot;what-is-lcp&quot;&gt;What is LCP? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#what-is-lcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Largest Contentful Paint (LCP) metric reports the render time of the largest
&lt;a href=&quot;https://web.dev/lcp/#what-elements-are-considered&quot;&gt;image or text block&lt;/a&gt; visible within the
viewport, relative to when the page &lt;a href=&quot;https://w3c.github.io/hr-time/#timeorigin-attribute&quot; rel=&quot;noopener&quot;&gt;first started
loading&lt;/a&gt;.&lt;/p&gt;
&lt;picture&gt;
  &lt;source srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/elqsdYqQEefWJbUM2qMO.svg&quot; media=&quot;(min-width: 640px)&quot; width=&quot;400&quot; ,=&quot;&quot; height=&quot;100&quot; /&gt;
  &lt;img alt=&quot;Good LCP values are 2.5 seconds, poor values are greater than 4.0 seconds and anything in between needs improvement&quot; class=&quot;w-screenshot w-screenshot--filled width-full&quot; decoding=&quot;async&quot; height=&quot;300&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/eqprBhZUGfb8WYnumQ9ljAxRrA72/8ZW8LQsagLih1ZZoOmMR.svg&quot; width=&quot;400&quot; /&gt;
&lt;/picture&gt;
&lt;h3 id=&quot;what-is-a-good-lcp-score&quot;&gt;What is a good LCP score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#what-is-a-good-lcp-score&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have Largest
Contentful Paint of &lt;strong&gt;2.5 seconds&lt;/strong&gt; or less. To ensure you&#39;re hitting this
target for most of your users, a good threshold to measure is the &lt;strong&gt;75th
percentile&lt;/strong&gt; of page loads, segmented across mobile and desktop devices.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To learn more about the research and methodology behind this recommendation,
see: &lt;a href=&quot;https://web.dev/defining-core-web-vitals-thresholds/&quot;&gt;Defining the Core Web Vitals metrics
thresholds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;what-elements-are-considered&quot;&gt;What elements are considered? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#what-elements-are-considered&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As currently specified in the &lt;a href=&quot;https://wicg.github.io/largest-contentful-paint/&quot; rel=&quot;noopener&quot;&gt;Largest Contentful Paint
API&lt;/a&gt;, the types of elements
considered for Largest Contentful Paint are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; elements inside an &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; elements (the poster image is used)&lt;/li&gt;
&lt;li&gt;An element with a background image loaded via the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/url()&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;url()&lt;/code&gt;&lt;/a&gt; function
(as opposed to a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Using_CSS_gradients&quot; rel=&quot;noopener&quot;&gt;CSS gradient&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements&quot; rel=&quot;noopener&quot;&gt;Block-level&lt;/a&gt;
elements containing text nodes or other inline-level text elements children.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note, restricting the elements to this limited set was intentional in order to
keep things simple in the beginning. Additional elements (e.g. &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;,
&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;) may be added in the future as more research is conducted.&lt;/p&gt;
&lt;h3 id=&quot;how-is-an-element&#39;s-size-determined&quot;&gt;How is an element&#39;s size determined? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#how-is-an-element&#39;s-size-determined&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The size of the element reported for Largest Contentful Paint is typically the
size that&#39;s visible to the user within the viewport. If the element extends
outside of the viewport, or if any of the element is clipped or has non-visible
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/overflow&quot; rel=&quot;noopener&quot;&gt;overflow&lt;/a&gt;, those
portions do not count toward the element&#39;s size.&lt;/p&gt;
&lt;p&gt;For image elements that have been resized from their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Intrinsic_Size&quot; rel=&quot;noopener&quot;&gt;intrinsic
size&lt;/a&gt;, the
size that gets reported is either the visible size or the intrinsic size,
whichever is smaller. For example, images that are shrunk down to a much
smaller than their intrinsic size will only report the size they&#39;re displayed
at, whereas images that are stretched or expanded to a larger size will only
report their intrinsic sizes.&lt;/p&gt;
&lt;p&gt;For text elements, only the size of their text nodes is considered (the smallest
rectangle that encompasses all text nodes).&lt;/p&gt;
&lt;p&gt;For all elements, any margin, padding, or border applied via CSS is not
considered.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Determining which text nodes belong to which elements can sometimes
be tricky, especially for elements whose children includes inline elements and
plain text nodes but also block-level elements. The key point is that every
text node belongs to (and only to) its closest block-level ancestor element.
In &lt;a href=&quot;https://wicg.github.io/element-timing/#set-of-owned-text-nodes&quot; rel=&quot;noopener&quot;&gt;spec
terms&lt;/a&gt;:
each text node belongs to the element that generates its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block&quot; rel=&quot;noopener&quot;&gt;containing
block&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;when-is-largest-contentful-paint-reported&quot;&gt;When is largest contentful paint reported? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#when-is-largest-contentful-paint-reported&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Web pages often load in stages, and as a result, it&#39;s possible that the largest
element on the page might change.&lt;/p&gt;
&lt;p&gt;To handle this potential for change, the browser dispatches a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt;
of type &lt;code&gt;largest-contentful-paint&lt;/code&gt; identifying the largest contentful element
as soon as the browser has painted the first frame. But then, after rendering
subsequent frames, it will dispatch another
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt;
any time the largest contentful element changes.&lt;/p&gt;
&lt;p&gt;For example, on a page with text and a hero image the browser may initially just
render the text—at which point the browser would dispatch a
&lt;code&gt;largest-contentful-paint&lt;/code&gt; entry whose &lt;code&gt;element&lt;/code&gt; property would likely reference
a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;. Later, once the hero image finishes loading, a second
&lt;code&gt;largest-contentful-paint&lt;/code&gt; entry would be dispatched and its &lt;code&gt;element&lt;/code&gt; property
would reference the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It&#39;s important to note that an element can only be considered the largest
contentful element once it has rendered and is visible to the user. Images that
have not yet loaded are not considered &amp;quot;rendered&amp;quot;. Neither are text nodes using
web fonts during the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display#The_font_display_timeline&quot; rel=&quot;noopener&quot;&gt;font block
period&lt;/a&gt;.
In such cases a smaller element may be reported as the largest contentful
element, but as soon as the larger element finishes rendering, it&#39;ll be
reported via another  &lt;code&gt;PerformanceEntry&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;In addition to late-loading images and fonts, a page may add new elements to
the DOM as new content becomes available. If any of these new elements is
larger than the previous largest contentful element, a new &lt;code&gt;PerformanceEntry&lt;/code&gt;
will also be reported.&lt;/p&gt;
&lt;p&gt;If an element that is currently the largest contentful element is removed from
the viewport (or even removed from the DOM), it will remain the largest
contentful element unless a larger element is rendered.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Prior to Chrome 88, removed elements were not considered as largest contentful
elements, and removing the current candidate would trigger a new
&lt;code&gt;largest-contentful-paint&lt;/code&gt; entry to be dispatched. However, due to popular UI
patterns such as image carousels that often removed DOM elements, the metric
was updated to more accurately reflect what users experience. See the
&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/speed/metrics_changelog/2020_11_lcp.md&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The browser will stop reporting new entries as soon as the user interacts with
the page (via a tap, scroll, or keypress), as user interaction often changes
what&#39;s visible to the user (which is especially true with scrolling).&lt;/p&gt;
&lt;p&gt;For analysis purposes, you should only report the most recently dispatched
&lt;code&gt;PerformanceEntry&lt;/code&gt; to your analytics service.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Since users can open pages in a background tab, it&#39;s possible that the largest
contentful paint will not happen until the user focuses the tab, which can be
much later than when they first loaded it.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;load-time-vs.-render-time&quot;&gt;Load time vs. render time &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#load-time-vs.-render-time&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For security reasons, the render timestamp of images is not exposed for
cross-origin images that lack the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt;
header. Instead, only their load time is exposed (since this is already exposed
via many other web APIs).&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/lcp/#measure-lcp-in-javascript&quot;&gt;usage example&lt;/a&gt;
below shows how to handle elements whose render time is not available. But,
when possible, it&#39;s always recommended to set the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt;
header, so your metrics will be more accurate.&lt;/p&gt;
&lt;h3 id=&quot;how-are-element-layout-and-size-changes-handled&quot;&gt;How are element layout and size changes handled? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#how-are-element-layout-and-size-changes-handled&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To keep the performance overhead of calculating and dispatching new performance
entries low, changes to an element&#39;s size or position do not generate new LCP
candidates. Only the element&#39;s initial size and position in the viewport is
considered.&lt;/p&gt;
&lt;p&gt;This means images that are initially rendered off-screen and then transition
on-screen may not be reported. It also means elements initially rendered in the
viewport that then get pushed down, out of view will still report their
initial, in-viewport size.&lt;/p&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#examples&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here are some examples of when the Largest Contentful Paint occurs on a few
popular websites:&lt;/p&gt;
&lt;img alt=&quot;Largest Contentful Paint timeline from cnn.com&quot; decoding=&quot;async&quot; height=&quot;311&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/bsBm8poY1uQbq7mNvVJm.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;img alt=&quot;Largest Contentful Paint timeline from techcrunch.com&quot; decoding=&quot;async&quot; height=&quot;311&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/xAvLL1u2KFRaqoZZiI71.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;In both of the timelines above, the largest element changes as content loads.
In the first example, new content is added to the DOM and that changes what
element is the largest. In the second example, the layout changes and content
that was previously the largest is removed from the viewport.&lt;/p&gt;
&lt;p&gt;While it&#39;s often the case that late-loading content is larger than content
already on the page, that&#39;s not necessarily the case. The next two examples
show the Largest Contentful Paint occurring before the page fully loads.&lt;/p&gt;
&lt;img alt=&quot;Largest Contentful Paint timeline from instagram.com&quot; decoding=&quot;async&quot; height=&quot;311&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/uJAGswhXK3bE6Vs4I5bP.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;img alt=&quot;Largest Contentful Paint timeline from google.com&quot; decoding=&quot;async&quot; height=&quot;311&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/e0O2woQjZJ92aYlPOJzT.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;In the first example, the Instagram logo is loaded relatively early and it
remains the largest element even as other content is progressively shown. In
the Google search results page example, the largest element is a paragraph of
text that is displayed before any of the images or logo finish loading. Since
all the individual images are smaller than this paragraph, it remains the
largest element throughout the load process.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In the first frame of the Instagram timeline, you may notice the camera logo
does not have a green box around it. That&#39;s because it&#39;s an &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element,
and &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements are not currently considered LCP candidates. The first
LCP candidate is the text in the second frame.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-to-measure-lcp&quot;&gt;How to measure LCP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#how-to-measure-lcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;LCP can be measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;in the lab&lt;/a&gt;
or &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;in the field&lt;/a&gt;, and it&#39;s
available in the following tools:&lt;/p&gt;
&lt;h3 id=&quot;field-tools&quot;&gt;Field tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#field-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot; rel=&quot;noopener&quot;&gt;Chrome User Experience
Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9205520&quot; rel=&quot;noopener&quot;&gt;Search Console (Core Web Vitals
report)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lab-tools&quot;&gt;Lab tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#lab-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;measure-lcp-in-javascript&quot;&gt;Measure LCP in JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#measure-lcp-in-javascript&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To measure LCP in JavaScript, you can use the &lt;a href=&quot;https://wicg.github.io/largest-contentful-paint/&quot; rel=&quot;noopener&quot;&gt;Largest Contentful Paint
API&lt;/a&gt;. The following example
shows how to create a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;
that listens for &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries and logs them to the
console.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;LCP candidate:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;largest-contentful-paint&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;This code shows how to log &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries to the console,
but measuring LCP in JavaScript is more complicated. See below for details:&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the above example, each logged &lt;code&gt;largest-contentful-paint&lt;/code&gt; entry represents
the current LCP candidate. In general, the &lt;code&gt;startTime&lt;/code&gt; value of the last entry
emitted is the LCP value—however, that is not always the case. Not all
&lt;code&gt;largest-contentful-paint&lt;/code&gt; entries are valid for measuring LCP.&lt;/p&gt;
&lt;p&gt;The following section lists the differences between what the API reports and how
the metric is calculated.&lt;/p&gt;
&lt;h4 id=&quot;differences-between-the-metric-and-the-api&quot;&gt;Differences between the metric and the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#differences-between-the-metric-and-the-api&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The API will dispatch &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries for pages loaded in a
background tab, but those pages should be ignored when calculating LCP.&lt;/li&gt;
&lt;li&gt;The API will continue to dispatch &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries after a
page has been backgrounded, but those entries should be ignored when
calculating LCP (elements may only be considered if the page was in the
foreground the entire time).&lt;/li&gt;
&lt;li&gt;The API does not report &lt;code&gt;largest-contentful-paint&lt;/code&gt; entries when the page is
restored from the &lt;a href=&quot;https://web.dev/bfcache/#impact-on-core-web-vitals&quot;&gt;back/forward cache&lt;/a&gt;,
but LCP should be measured in these cases since users experience them as
distinct page visits.&lt;/li&gt;
&lt;li&gt;The API does not consider elements within iframes, but to properly measure LCP
you should consider them. Sub-frames can use the API to report their
&lt;code&gt;largest-contentful-paint&lt;/code&gt; entries to the parent frame for aggregation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than memorizing all these subtle differences, developers can use the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;web-vitals&lt;/code&gt; JavaScript library&lt;/a&gt; to
measure LCP, which handles these differences for you (where possible):&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;getLCP&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web-vitals&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Measure and log LCP as soon as it&#39;s available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;getLCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can refer to &lt;a href=&quot;https://github.com/GoogleChrome/web-vitals/blob/master/src/getLCP.ts&quot; rel=&quot;noopener&quot;&gt;the source code for
&lt;code&gt;getLCP()&lt;/code&gt;&lt;/a&gt;
for a complete example of how to measure LCP in JavaScript.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In some cases (such as cross-origin iframes) it&#39;s not possible to measure LCP
in JavaScript. See the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals#limitations&quot; rel=&quot;noopener&quot;&gt;limitations&lt;/a&gt; section
of the &lt;code&gt;web-vitals&lt;/code&gt; library for details.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;what-if-the-largest-element-isn&#39;t-the-most-important&quot;&gt;What if the largest element isn&#39;t the most important? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#what-if-the-largest-element-isn&#39;t-the-most-important&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In some cases the most important element (or elements) on the page is not the
same as the largest element, and developers may be more interested in measuring
the render times of these other elements instead. This is possible using the
&lt;a href=&quot;https://wicg.github.io/element-timing/&quot; rel=&quot;noopener&quot;&gt;Element Timing API&lt;/a&gt;, as described in
the article on &lt;a href=&quot;https://web.dev/custom-metrics/#element-timing-api&quot;&gt;custom metrics&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;how-to-improve-lcp&quot;&gt;How to improve LCP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#how-to-improve-lcp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;LCP is primarily affected by four factors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slow server response times&lt;/li&gt;
&lt;li&gt;Render-blocking JavaScript and CSS&lt;/li&gt;
&lt;li&gt;Resource load times&lt;/li&gt;
&lt;li&gt;Client-side rendering&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a deep dive on how to improve LCP, see &lt;a href=&quot;https://web.dev/optimize-lcp/&quot;&gt;Optimize
LCP&lt;/a&gt;. For additional guidance on individual
performance techniques that can also improve LCP, see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/apply-instant-loading-with-prpl&quot;&gt;Apply instant loading with the PRPL
pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/&quot; rel=&quot;noopener&quot;&gt;Optimizing the Critical Rendering
Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast#optimize-your-css&quot;&gt;Optimize your CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast#optimize-your-images&quot;&gt;Optimize your Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast#optimize-web-fonts&quot;&gt;Optimize web Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast#optimize-your-javascript&quot;&gt;Optimize your JavaScript&lt;/a&gt; (for
client-rendered sites)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#additional-resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/ctavZT87syI&quot; rel=&quot;noopener&quot;&gt;Lessons learned from performance monitoring in
Chrome&lt;/a&gt; by &lt;a href=&quot;https://anniesullie.com/&quot; rel=&quot;noopener&quot;&gt;Annie
Sullivan&lt;/a&gt; at
&lt;a href=&quot;https://perfnow.nl/&quot; rel=&quot;noopener&quot;&gt;performance.now()&lt;/a&gt; (2019)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;changelog&quot;&gt;CHANGELOG &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/lcp/#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Occasionally, bugs are discovered in the APIs used to measure metrics, and
sometimes in the definitions of the metrics themselves. As a result, changes
must sometimes be made, and these changes can show up as improvements or
regressions in your internal reports and dashboards.&lt;/p&gt;
&lt;p&gt;To help you manage this, all changes to either the implementation or definition
of these metrics will be surfaced in this
&lt;a href=&quot;http://bit.ly/chrome-speed-metrics-changelog&quot; rel=&quot;noopener&quot;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Total Blocking Time (TBT)</title>
    <link href="https://web.dev/tbt/"/>
    <updated>2019-11-07T00:00:00Z</updated>
    <id>https://web.dev/tbt/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Total Blocking Time (TBT) is an important &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab
metric&lt;/a&gt; for measuring &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;load
responsiveness&lt;/a&gt; because
it helps quantify the severity of how non-interactive a page is prior to it
becoming reliably interactive—a low TBT helps ensure that the page is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;usable&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-tbt&quot;&gt;What is TBT? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#what-is-tbt&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Total Blocking Time (TBT) metric measures the total amount of time between
&lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint (FCP)&lt;/a&gt; and &lt;a href=&quot;https://web.dev/tti/&quot;&gt;Time to Interactive (TTI)&lt;/a&gt;
where the main thread was blocked for long enough to prevent input
responsiveness.&lt;/p&gt;
&lt;p&gt;The main thread is considered &amp;quot;blocked&amp;quot; any time there&#39;s a &lt;a href=&quot;https://web.dev/custom-metrics/#long-tasks-api&quot;&gt;Long
Task&lt;/a&gt;—a task that runs on the main
thread for more than 50 milliseconds (ms). We say the main thread is &amp;quot;blocked&amp;quot;
because the browser cannot interrupt a task that&#39;s in progress. So in the event
that a user &lt;em&gt;does&lt;/em&gt; interact with the page in the middle of a long task, the
browser must wait for the task to finish before it can respond.&lt;/p&gt;
&lt;p&gt;If the task is long enough (e.g. anything above 50 ms), it&#39;s likely that the
user will notice the delay and perceive the page as sluggish or janky.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;blocking time&lt;/em&gt; of a given long task is its duration in excess of 50 ms. And
the &lt;em&gt;total blocking time&lt;/em&gt; for a page is the sum of the &lt;em&gt;blocking time&lt;/em&gt; for each
long task that occurs between FCP and TTI.&lt;/p&gt;
&lt;p&gt;For example, consider the following diagram of the browser&#39;s main thread during
page load:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/clHG8Yv239lXsGWD6Iu6.svg&quot;&gt;&lt;img alt=&quot;A tasks timeline on the main thread&quot; decoding=&quot;async&quot; height=&quot;156&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/admin/clHG8Yv239lXsGWD6Iu6.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The above timeline has five tasks, three of which are Long Tasks because their
duration exceeds 50 ms. The next diagram shows the blocking time for each of the
long tasks:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xKxwKagiz8RliuOI2Xtc.svg&quot;&gt;&lt;img alt=&quot;A tasks timeline on the main thread showing blocking time&quot; decoding=&quot;async&quot; height=&quot;156&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xKxwKagiz8RliuOI2Xtc.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So while the total time spent running tasks on the main thread is 560 ms, only
345 ms of that time is considered blocking time.&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Task duration&lt;/th&gt;
    &lt;th&gt;Task blocking time&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Task one&lt;/td&gt;
    &lt;td&gt;250 ms&lt;/td&gt;
    &lt;td&gt;200 ms&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Task two&lt;/td&gt;
    &lt;td&gt;90 ms&lt;/td&gt;
    &lt;td&gt;40 ms&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Task three&lt;/td&gt;
    &lt;td&gt;35 ms&lt;/td&gt;
    &lt;td&gt;0 ms&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Task four&lt;/td&gt;
    &lt;td&gt;30 ms&lt;/td&gt;
    &lt;td&gt;0 ms&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Task five&lt;/td&gt;
    &lt;td&gt;155 ms&lt;/td&gt;
    &lt;td&gt;105 ms&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td colspan=&quot;2&quot;&gt;&lt;strong&gt;Total Blocking Time&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;&lt;strong&gt;345 ms&lt;/strong&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;h3 id=&quot;how-does-tbt-relate-to-tti&quot;&gt;How does TBT relate to TTI? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#how-does-tbt-relate-to-tti&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;TBT is a great companion metric for TTI because it helps quantify the severity
of how non-interactive a page is prior it to becoming reliably interactive.&lt;/p&gt;
&lt;p&gt;TTI considers a page &amp;quot;reliably interactive&amp;quot; if the main thread has been free of
long tasks for at least five seconds. This means that three, 51 ms tasks spread
out over 10 seconds can push back TTI just as far as a single 10-second long
task—but those two scenarios would feel very different to a user trying to
interact with the page.&lt;/p&gt;
&lt;p&gt;In the first case, three, 51 ms tasks would have a TBT of &lt;strong&gt;3 ms&lt;/strong&gt;. Whereas a
single, 10-second long tasks would have a TBT of &lt;strong&gt;9950 ms&lt;/strong&gt;. The larger TBT
value in the second case quantifies the worse experience.&lt;/p&gt;
&lt;h2 id=&quot;how-to-measure-tbt&quot;&gt;How to measure TBT &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#how-to-measure-tbt&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TBT is a metric that should be measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;in the
lab&lt;/a&gt;. The best way to measure TBT is to run a
Lighthouse performance audit on your site. See the &lt;a href=&quot;https://web.dev/lighthouse-total-blocking-time&quot;&gt;Lighthouse documentation on
TBT&lt;/a&gt; for usage details.&lt;/p&gt;
&lt;h3 id=&quot;lab-tools&quot;&gt;Lab tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#lab-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While it is possible to measure TBT in the field, it&#39;s not recommended as user
interaction can affect your page&#39;s TBT in ways that lead to lots of variance
in your reports. To understand a page&#39;s interactivity in the field, you should
measure &lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-a-good-tbt-score&quot;&gt;What is a good TBT score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#what-is-a-good-tbt-score&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have a Total Blocking
Time of less than &lt;strong&gt;300 milliseconds&lt;/strong&gt; when tested on &lt;strong&gt;average mobile
hardware&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For details on how your page&#39;s TBT affects your Lighthouse performance score,
see &lt;a href=&quot;https://web.dev/lighthouse-total-blocking-time/#how-lighthouse-determines-your-tbt-score&quot;&gt;How Lighthouse determines your TBT
score&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-to-improve-tbt&quot;&gt;How to improve TBT &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tbt/#how-to-improve-tbt&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To learn how to improve TBT for a specific site, you can run a Lighthouse
performance audit and pay attention to any specific
&lt;a href=&quot;https://web.dev/lighthouse-performance/#opportunities&quot;&gt;opportunities&lt;/a&gt; the audit suggests.&lt;/p&gt;
&lt;p&gt;To learn how to improve TBT in general (for any site), refer to the following
performance guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/third-party-summary/&quot;&gt;Reduce the impact of third-party code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/bootup-time/&quot;&gt;Reduce JavaScript execution time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/mainthread-work-breakdown/&quot;&gt;Minimize main thread work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/resource-summary/&quot;&gt;Keep request counts low and transfer sizes small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Time to Interactive (TTI)</title>
    <link href="https://web.dev/tti/"/>
    <updated>2019-11-07T00:00:00Z</updated>
    <id>https://web.dev/tti/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Time to Interactive (TTI) is an important &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab
metric&lt;/a&gt; for measuring &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;load
responsiveness&lt;/a&gt;. It helps
identify cases where a page &lt;em&gt;looks&lt;/em&gt; interactive but actually isn&#39;t. A fast TTI
helps ensure that the page is
&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#questions&quot;&gt;usable&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-tti&quot;&gt;What is TTI? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tti/#what-is-tti&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The TTI metric measures the time from when the page starts
loading to when its main sub-resources have loaded and it is capable of reliably
responding to user input quickly.&lt;/p&gt;
&lt;p&gt;To calculate TTI based on a &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference&quot; rel=&quot;noopener&quot;&gt;performance
trace&lt;/a&gt;
of a web page, follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start at &lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First Contentful Paint (FCP)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Search forward in time for a quiet window of at least five seconds, where
&lt;em&gt;quiet window&lt;/em&gt; is defined as: no &lt;a href=&quot;https://web.dev/custom-metrics/#long-tasks-api&quot;&gt;long
tasks&lt;/a&gt; and no more than two in-flight
network GET requests.&lt;/li&gt;
&lt;li&gt;Search backwards for the last long task before the quiet window, stopping at
FCP if no long tasks are found.&lt;/li&gt;
&lt;li&gt;TTI is the end time of the last long task before the quiet window (or the
same value as FCP if no long tasks are found).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following diagram should help visualize the steps above:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://web-dev.imgix.net/image/admin/WZM0n4aXah67lEyZugOT.svg&quot;&gt;&lt;img alt=&quot;A page load timeline showing how to compute TTI&quot; decoding=&quot;async&quot; height=&quot;473&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/admin/WZM0n4aXah67lEyZugOT.svg&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Historically, developers have optimized pages for fast render times,
sometimes at the expense of TTI.&lt;/p&gt;
&lt;p&gt;Techniques like server-side rendering (SSR) can lead to scenarios where a page
&lt;em&gt;looks&lt;/em&gt; interactive (that is, links and buttons are visible on the screen), but it&#39;s not
&lt;em&gt;actually&lt;/em&gt; interactive because the main thread is blocked or
because the JavaScript code controlling those elements hasn&#39;t loaded.&lt;/p&gt;
&lt;p&gt;When users try to interact with a page that looks interactive but actually
isn&#39;t, they&#39;ll likely respond in one of two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the best-case scenario, they&#39;ll be annoyed that the page is slow to respond.&lt;/li&gt;
&lt;li&gt;In the worst-case scenario, they&#39;ll assume the page is broken and likely
leave. They may even lose confidence or trust in the value of your brand.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To avoid this problem, make every effort to minimize the difference
between FCP and TTI. And in cases were a noticeable difference does exist,
make it clear through visual indicators that the components on your page are not yet
interactive.&lt;/p&gt;
&lt;h2 id=&quot;how-to-measure-tti&quot;&gt;How to measure TTI &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tti/#how-to-measure-tti&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TTI is a metric that&#39;s best measured &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;in the
lab&lt;/a&gt;. The best way to measure TTI is to run a
Lighthouse performance audit on your site. See the &lt;a href=&quot;https://web.dev/interactive/&quot;&gt;Lighthouse documentation on
TTI&lt;/a&gt; for usage details.&lt;/p&gt;
&lt;h3 id=&quot;lab-tools&quot;&gt;Lab tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tti/#lab-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While it&#39;s possible to measure TTI in the field, it&#39;s not recommended, as user
interaction can affect your page&#39;s TTI in ways that lead to lots of variance
in your reports. To understand a page&#39;s interactivity in the field, you should
measure &lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-a-good-tti-score&quot;&gt;What is a good TTI score? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tti/#what-is-a-good-tti-score&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To provide a good user experience, sites should strive to have a Time to
Interactive of less than &lt;strong&gt;5 seconds&lt;/strong&gt; when tested on &lt;strong&gt;average mobile
hardware&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For details on how your page&#39;s TTI affects your Lighthouse performance score,
see &lt;a href=&quot;https://web.dev/interactive/#how-lighthouse-determines-your-tti-score&quot;&gt;How Lighthouse determines your TTI
score&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;how-to-improve-tti&quot;&gt;How to improve TTI &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tti/#how-to-improve-tti&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To learn how to improve TTI for a specific site, you can run a Lighthouse
performance audit and pay attention to any specific
&lt;a href=&quot;https://web.dev/lighthouse-performance/#opportunities&quot;&gt;opportunities&lt;/a&gt; the audit suggests.&lt;/p&gt;
&lt;p&gt;To learn how to improve TTI in general (for any site), refer to the following
performance guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/unminified-javascript/&quot;&gt;Minify JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-rel-preconnect/&quot;&gt;Preconnect to required origins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-rel-preload/&quot;&gt;Preload key requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/third-party-summary/&quot;&gt;Reduce the impact of third-party code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/critical-request-chains/&quot;&gt;Minimize critical request depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/bootup-time/&quot;&gt;Reduce JavaScript execution time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/mainthread-work-breakdown/&quot;&gt;Minimize main thread work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/resource-summary/&quot;&gt;Keep request counts low and transfer sizes small&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>Custom metrics</title>
    <link href="https://web.dev/custom-metrics/"/>
    <updated>2019-11-08T00:00:00Z</updated>
    <id>https://web.dev/custom-metrics/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;There&#39;s a lot of value in having &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/&quot;&gt;user-centric metrics&lt;/a&gt;
that you can measure, universally, on any given website. These metrics allow you
to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand how real users experience the web as a whole&lt;/li&gt;
&lt;li&gt;Easily compare your site to a competitor&#39;s&lt;/li&gt;
&lt;li&gt;Track useful and actionable data in your analytics tools without needing to
write custom code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Universal metrics offer a good baseline, but in many cases you need to measure
&lt;em&gt;more&lt;/em&gt; than just these metrics in order to capture the full experience for your
particular site.&lt;/p&gt;
&lt;p&gt;Custom metrics allow you to measure aspects of your site&#39;s experience that may
only apply to your site, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How long it takes for a single page app (SPA) to transition from one &amp;quot;page&amp;quot; to
another&lt;/li&gt;
&lt;li&gt;How long it takes for a page to display data fetched from a database for
logged-in users&lt;/li&gt;
&lt;li&gt;How long it takes for a server-side-rendered (SSR) app to
&lt;a href=&quot;https://addyosmani.com/blog/rehydration/&quot; rel=&quot;noopener&quot;&gt;hydrate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The cache hit rate for resources loaded by returning visitors&lt;/li&gt;
&lt;li&gt;The event latency of click or keyboard events in a game&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;apis-to-measure-custom-metrics&quot;&gt;APIs to measure custom metrics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#apis-to-measure-custom-metrics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Historically web developers haven&#39;t had many low-level APIs to measure
performance, and as a result they&#39;ve had to resort to hacks in order to measure
whether a site was performing well.&lt;/p&gt;
&lt;p&gt;For example, it&#39;s possible to determine whether the main thread is blocked due
to long-running JavaScript tasks by running a &lt;code&gt;requestAnimationFrame&lt;/code&gt; loop and
calculating the delta between each frame. If the delta is significantly longer
than the display&#39;s framerate, you can report that as a long task. Such hacks are
not recommended, though, because they actually affect performance themselves
(by draining battery, for example).&lt;/p&gt;
&lt;p&gt;The first rule of effective performance measurement is to make sure your
performance measurement techniques aren&#39;t causing performance issues themselves.
So for any custom metrics you measure on your site, it&#39;s best to use one of the
following APIs if possible.&lt;/p&gt;
&lt;h3 id=&quot;performance-observer&quot;&gt;Performance Observer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#performance-observer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Understanding the PerformanceObserver API is critical to creating custom
performance metrics because it&#39;s the mechanism by which you get data from all
other performance APIs discussed in this article.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;PerformanceObserver&lt;/code&gt; you can subscribe passively to performance-related
events, which means these APIs generally will not interfere with the performance
of the page, as their callbacks are generally fired during &lt;a href=&quot;https://w3c.github.io/requestidlecallback/#idle-periods&quot; rel=&quot;noopener&quot;&gt;idle
periods&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You create a &lt;code&gt;PerformanceObserver&lt;/code&gt; by passing it a callback to be run whenever
new performance entries are dispatched. Then you tell the observer what types of
entries to listen for via the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver/observe&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt;
method:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Log the entry and all associated details.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;some-entry-type&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The sections below list all the various entry types available for observing, but
in newer browsers you can inspect what entry types are available via the static
&lt;a href=&quot;https://w3c.github.io/performance-timeline/#supportedentrytypes-attribute&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;PerformanceObserver.supportedEntryTypes&lt;/code&gt;&lt;/a&gt;
property.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The object passed to the &lt;code&gt;observe()&lt;/code&gt; method can also specify an &lt;code&gt;entryTypes&lt;/code&gt;
array (in order to observe more than one entry type via the same observer).
While specifying &lt;code&gt;entryTypes&lt;/code&gt; is an older option with wider browser support,
using &lt;code&gt;type&lt;/code&gt; is now preferred, as it allows for specifying additional
entry-specific observation configuration (such as the &lt;code&gt;buffered&lt;/code&gt; flag, discussed
next).&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;observing-entries-that-already-happened&quot;&gt;Observing entries that already happened &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#observing-entries-that-already-happened&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;By default, &lt;code&gt;PerformanceObserver&lt;/code&gt; objects can only observe entries as they
occur. This can be problematic if you want to load your performance analytics
code lazily (to not block higher-priority resources).&lt;/p&gt;
&lt;p&gt;To get historical entries (after they&#39;ve occurred), set the &lt;code&gt;buffered&lt;/code&gt; flag to
&lt;code&gt;true&lt;/code&gt; when you call &lt;code&gt;observe()&lt;/code&gt;. The browser will include historical entries
from its &lt;a href=&quot;https://w3c.github.io/performance-timeline/#dfn-performance-entry-buffer&quot; rel=&quot;noopener&quot;&gt;performance entry
buffer&lt;/a&gt;
the first time that your &lt;code&gt;PerformanceObserver&lt;/code&gt; callback is called.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;some-entry-type&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To avoid memory issues, the performance entry buffer is not unlimited. For
most typical page loads it&#39;s unlikely that the buffer will fill up and entries
will be missed.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;legacy-performance-apis-to-avoid&quot;&gt;Legacy performance APIs to avoid &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#legacy-performance-apis-to-avoid&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Prior to the Performance Observer API, developers could access performance
entries using the following three methods defined on the
&lt;a href=&quot;https://w3c.github.io/performance-timeline/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;performance&lt;/code&gt;&lt;/a&gt; object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntries&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByName&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getEntriesByName()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getEntriesByType()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While these APIs are still supported, their usage is not recommended because
they don&#39;t allow you to listen for when new entries are emitted. In addition,
many new APIs (such as Long Tasks) are not exposed via the &lt;code&gt;performance&lt;/code&gt; object,
they&#39;re only exposed via &lt;code&gt;PerformanceObserver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unless you specifically need Internet Explorer compatibility, it&#39;s best to avoid
these methods in your code and use &lt;code&gt;PerformanceObserver&lt;/code&gt; going forward.&lt;/p&gt;
&lt;h3 id=&quot;user-timing-api&quot;&gt;User Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#user-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/user-timing/&quot; rel=&quot;noopener&quot;&gt;User Timing API&lt;/a&gt; is your general
purpose measurement API for time-based metrics. It allows you to arbitrarily
mark points in time and then later measure the duration between those marks.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Record the time immediately before running a task.&lt;/span&gt;&lt;br /&gt;performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;mark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;myTask:start&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doMyTask&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Record the time immediately after running a task.&lt;/span&gt;&lt;br /&gt;performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;mark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;myTask:end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Measure the delta between the start and end of the task&lt;/span&gt;&lt;br /&gt;performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;myTask&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;myTask:start&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;myTask:end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;While APIs like &lt;code&gt;Date.now()&lt;/code&gt; or &lt;code&gt;performance.now()&lt;/code&gt; give you similar abilities,
the benefit of using the User Timing API is it integrates well with performance
tooling. For example, Chrome DevTools visualizes &lt;a href=&quot;https://developers.google.com/web/updates/2018/04/devtools#tabs&quot; rel=&quot;noopener&quot;&gt;User Timing measurements in the
Performance panel&lt;/a&gt;, and many analytics providers will also automatically track
any measurements you make and send the duration data to their analytics back
end.&lt;/p&gt;
&lt;p&gt;To report User Timing measurements, you can use
&lt;a href=&quot;https://web.dev/custom-metrics/#performance-observer&quot;&gt;PerformanceObserver&lt;/a&gt; and register to observe entries of
type &lt;code&gt;measure&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Log the entry and all associated details.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `measure` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;measure&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;long-tasks-api&quot;&gt;Long Tasks API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#long-tasks-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/longtasks/&quot; rel=&quot;noopener&quot;&gt;Long Tasks API&lt;/a&gt; is useful for knowing
when the browser&#39;s main thread is blocked for long enough to affect frame rate
or input latency. Currently the API will report any tasks that execute for
longer than 50 milliseconds (ms).&lt;/p&gt;
&lt;p&gt;Anytime you need to run expensive code (or load and execute large scripts) it&#39;s
useful to track whether or not that code blocked the main thread. In fact, many
higher-level metrics are built on top of the Long Tasks API themselves (such as
&lt;a href=&quot;https://web.dev/interactive/&quot;&gt;Time to Interactive (TTI)&lt;/a&gt; and &lt;a href=&quot;https://web.dev/lighthouse-total-blocking-time/&quot;&gt;Total Blocking Time
(TBT)&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To determine when long tasks happen, you can use
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver&quot; rel=&quot;noopener&quot;&gt;PerformanceObserver&lt;/a&gt;
and register to observe entries of type &lt;code&gt;longtask&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Log the entry and all associated details.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `longtask` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;longtask&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;element-timing-api&quot;&gt;Element Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#element-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint (LCP)&lt;/a&gt; metric is
useful for knowing when the largest image or text block was painted to the
screen, but in some cases you want to measure the render time of a different
element.&lt;/p&gt;
&lt;p&gt;For these cases, you can use the &lt;a href=&quot;https://wicg.github.io/element-timing/&quot; rel=&quot;noopener&quot;&gt;Element Timing
API&lt;/a&gt;. In fact, the Largest Contentful
Paint API is actually built on top of the Element Timing API and adds automatic
reporting of the largest contentful element, but you can report on additional
elements by explicitly adding the &lt;code&gt;elementtiming&lt;/code&gt; attribute to them, and
registering a PerformanceObserver to observe the element entry type.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;elementtiming&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hero-image&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;elementtiming&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;important-paragraph&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;This is text I care about.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;...&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Log the entry and all associated details.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `element` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;element&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;The types of elements considered for Largest Contentful Paint are
the same as those observable via the Element Timing API. If you add the
&lt;code&gt;elementtiming&lt;/code&gt; attribute to an element that isn&#39;t one of those types, the
attribute will be ignored.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;event-timing-api&quot;&gt;Event Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#event-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay (FID)&lt;/a&gt; metric measures the time from when a user
first interacts with a page to the time when the browser is actually able to
begin processing event handlers in response to that interaction. However, in
some cases it may also be useful to measure the event processing time itself as
well as the time until the next frame can be rendered.&lt;/p&gt;
&lt;p&gt;This is possible with the &lt;a href=&quot;https://wicg.github.io/event-timing/&quot; rel=&quot;noopener&quot;&gt;Event Timing
API&lt;/a&gt; (which is used to measure FID) as it
exposes a number of timestamps in the event lifecycle, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/performance-timeline/#dom-performanceentry-starttime&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;startTime&lt;/code&gt;&lt;/a&gt;:
the time when the browser receives the event.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/event-timing/#dom-performanceeventtiming-processingstart&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;processingStart&lt;/code&gt;&lt;/a&gt;:
the time when the browser is able to begin processing event handlers for
the event.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/event-timing/#dom-performanceeventtiming-processingend&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;processingEnd&lt;/code&gt;&lt;/a&gt;:
time when the browser finishes executing all synchronous code initiated from
event handlers for this event.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/event-timing/#dom-performanceeventtiming-processingstart&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;duration&lt;/code&gt;&lt;/a&gt;:
the time (rounded to 8ms for security reasons) between when the browser
receives the event until it&#39;s able to paint the next frame after finishing
executing all synchronous code initiated from the event handlers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example shows how to use these these values to create custom
measurements:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entryList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstInput &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entryList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Measure First Input Delay (FID).&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstInputDelay &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; firstInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;processingStart &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; firstInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Measure the time it takes to run all event handlers&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Note: this does not include work scheduled asynchronously using&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// methods like `requestAnimationFrame()` or `setTimeout()`.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstInputProcessingTime &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; firstInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;processingEnd &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; firstInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;processingStart&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Measure the entire duration of the event, from when input is received by&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// the browser until the next frame can be painted after processing all&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// event handlers.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Note: similar to above, this value does not include work scheduled&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// asynchronously using `requestAnimationFrame()` or `setTimeout()`.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// And for security reasons, this value is rounded to the nearest 8ms.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstInputDuration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; firstInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;duration&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Log these values the console.&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      firstInputDelay&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      firstInputProcessingTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      firstInputDuration&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;first-input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;resource-timing-api&quot;&gt;Resource Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#resource-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/resource-timing/&quot; rel=&quot;noopener&quot;&gt;Resource Timing API&lt;/a&gt; gives
developers detailed insight into how resources for a particular page were
loaded. Despite the name of the API, the information it provides is not just
limited to timing data (though there&#39;s &lt;a href=&quot;https://w3c.github.io/resource-timing/#processing-model&quot; rel=&quot;noopener&quot;&gt;plenty of
that&lt;/a&gt;). Other data you
can access includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/resource-timing/#dom-performanceresourcetiming-initiatortype&quot; rel=&quot;noopener&quot;&gt;initiatorType&lt;/a&gt;:
how the resource was fetched: such as from a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag, or
from &lt;code&gt;fetch()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/resource-timing/#dom-performanceresourcetiming-nexthopprotocol&quot; rel=&quot;noopener&quot;&gt;nextHopProtocol&lt;/a&gt;:
the protocol used to fetch the resource, such as &lt;code&gt;h2&lt;/code&gt; or &lt;code&gt;quic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/resource-timing/#dom-performanceresourcetiming-encodedbodysize&quot; rel=&quot;noopener&quot;&gt;encodedBodySize&lt;/a&gt;/&lt;a href=&quot;https://w3c.github.io/resource-timing/#dom-performanceresourcetiming-decodedbodysize&quot; rel=&quot;noopener&quot;&gt;decodedBodySize&lt;/a&gt;]:
the size of the resource in its encoded or decoded form (respectively)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/resource-timing/#dom-performanceresourcetiming-transfersize&quot; rel=&quot;noopener&quot;&gt;transferSize&lt;/a&gt;:
the size of the resource that was actually transferred over the network. When
resources are fulfilled via the cache, this value can be much smaller than the
&lt;code&gt;encodedBodySize&lt;/code&gt;, and in some cases it can be zero (if no cache revalidation
is required).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note, you can use the &lt;code&gt;transferSize&lt;/code&gt; property of resource timing entries to
measure a &lt;em&gt;cache hit rate&lt;/em&gt; metric or perhaps even a &lt;em&gt;total cached resource size&lt;/em&gt;
metric, which may be useful in understanding how your resource caching strategy
affects performance for repeat visitors.&lt;/p&gt;
&lt;p&gt;The following example logs all resources requested by the page and indicates
whether or not each resource was fulfilled via the cache.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// If transferSize is 0, the resource was fulfilled via the cache.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transferSize &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `resource` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;resource&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;navigation-timing-api&quot;&gt;Navigation Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#navigation-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/navigation-timing/&quot; rel=&quot;noopener&quot;&gt;Navigation Timing API&lt;/a&gt; is similar
to the Resource Timing API, but it reports only &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests&quot; rel=&quot;noopener&quot;&gt;navigation
requests&lt;/a&gt;.
The &lt;code&gt;navigation&lt;/code&gt; entry type is also similar to the &lt;code&gt;resource&lt;/code&gt; entry type, but it
contains some &lt;a href=&quot;https://w3c.github.io/navigation-timing/#sec-PerformanceNavigationTiming&quot; rel=&quot;noopener&quot;&gt;additional
information&lt;/a&gt;
specific to only navigation requests (such as when the &lt;code&gt;DOMContentLoaded&lt;/code&gt; and
&lt;code&gt;load&lt;/code&gt; events fire).&lt;/p&gt;
&lt;p&gt;One metric many developers track to understand server response time (&lt;a href=&quot;https://en.wikipedia.org/wiki/Time_to_first_byte&quot; rel=&quot;noopener&quot;&gt;Time to
First Byte&lt;/a&gt;) is available via
the Navigation Timing API—specifically it&#39;s entry&#39;s &lt;code&gt;responseStart&lt;/code&gt; timestamp.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// If transferSize is 0, the resource was fulfilled via the cache.&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Time to first byte&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;responseStart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `navigation` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;navigation&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Another metric developers who use service worker may care about is the service
worker startup time for navigation requests. This is the amount of time it takes
the browser to start the service worker thread before it can start intercepting
fetch events.&lt;/p&gt;
&lt;p&gt;The service worker startup time for a particular navigation request can be
determined from the delta between &lt;code&gt;entry.responseStart&lt;/code&gt; and &lt;code&gt;entry.workerStart&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Service Worker startup time:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;          entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;responseStart &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;workerStart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `navigation` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;navigation&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;server-timing-api&quot;&gt;Server Timing API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/custom-metrics/#server-timing-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/server-timing/&quot; rel=&quot;noopener&quot;&gt;Server Timing API&lt;/a&gt; allows you to pass
request-specific timing data from your server to the browser via response
headers. For example, you can indicate how long it took to lookup data in a
database for a particular request—which can be useful in debugging performance
issues caused by slowness on the server.&lt;/p&gt;
&lt;p&gt;For developers who use third-party analytics providers, the Server Timing API is
the only way to correlate server performance data with other business metrics
that these analytics tools may be measuring.&lt;/p&gt;
&lt;p&gt;To specify server timing data in your responses, you can use the &lt;code&gt;Server-Timing&lt;/code&gt;
response header. Here&#39;s an example.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-http&quot;&gt;&lt;code class=&quot;language-http&quot;&gt;&lt;span class=&quot;token response-status&quot;&gt;&lt;span class=&quot;token http-version property&quot;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&quot;token status-code number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;token reason-phrase string&quot;&gt;OK&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header-name keyword&quot;&gt;Server-Timing:&lt;/span&gt; miss, db;dur=53, app;dur=47.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Then, from your pages, you can read this data on both &lt;code&gt;resource&lt;/code&gt; or &lt;code&gt;navigation&lt;/code&gt;
entries from the Resource Timing and Navigation Timing APIs.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Catch errors since some browsers throw when using the new `type` option.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://bugs.webkit.org/show_bug.cgi?id=209216&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create the performance observer.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; po &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Logs all server timing data for this response&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Server Timing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serverTiming&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Start listening for `navigation` entries to be dispatched.&lt;/span&gt;&lt;br /&gt;  po&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;navigation&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do nothing if the browser doesn&#39;t support this API.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
  
  <entry>
    <title>User-centric performance metrics</title>
    <link href="https://web.dev/user-centric-performance-metrics/"/>
    <updated>2019-11-08T00:00:00Z</updated>
    <id>https://web.dev/user-centric-performance-metrics/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;We&#39;ve all heard how important performance is. But when we talk about
performance—and about making websites &amp;quot;fast&amp;quot;—what specifically do we
mean?&lt;/p&gt;
&lt;p&gt;The truth is performance is relative:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A site might be fast for one user (on a fast network with a powerful device)
but slow for another user (on a slow network with a low-end device).&lt;/li&gt;
&lt;li&gt;Two sites may finish loading in the exact same amount of time, yet one may
&lt;em&gt;seem&lt;/em&gt; to load faster (if it loads content progressively rather than waiting
until the end to display anything).&lt;/li&gt;
&lt;li&gt;A site might &lt;em&gt;appear&lt;/em&gt; to load quickly but then respond slowly (or not at all)
to user interaction.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So when talking about performance, it&#39;s important to be precise and to refer to
performance in terms of objective criteria that can be quantitatively measured.
These criteria are known as &lt;em&gt;metrics&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;But just because a metric is based on objective criteria and can be
quantitatively measured, it doesn&#39;t necessarily mean those measurements are
useful.&lt;/p&gt;
&lt;h2 id=&quot;defining-metrics&quot;&gt;Defining metrics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#defining-metrics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Historically, web performance has been measured with the
&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event&quot; rel=&quot;noopener&quot;&gt;load&lt;/a&gt;&lt;/code&gt;
event. However, even though &lt;code&gt;load&lt;/code&gt; is a well-defined moment in a
page&#39;s lifecycle, that moment doesn&#39;t necessarily correspond with anything the
user cares about.&lt;/p&gt;
&lt;p&gt;For example, a server could respond with a minimal page that &amp;quot;loads&amp;quot; immediately
but then defers fetching content and displaying anything on the page until
several seconds after the &lt;code&gt;load&lt;/code&gt; event fires. While such a page might
technically have a fast load time, that time would not correspond to how a user
actually experiences the page loading.&lt;/p&gt;
&lt;p&gt;Over the past few years, members of the Chrome team—in collaboration with
the &lt;a href=&quot;https://www.w3.org/webperf/&quot; rel=&quot;noopener&quot;&gt;W3C Web Performance Working Group&lt;/a&gt;—have
been working to standardize a set of new APIs and metrics that more accurately
measure how users experience the performance of a web page.&lt;/p&gt;
&lt;p&gt;To help ensure the metrics are relevant to users, we frame them around a few key
questions:&lt;/p&gt;
&lt;table id=&quot;questions&quot;&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Is it happening?&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Did the navigation start successfully? Has the server responded?&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Is it useful?&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Has enough content rendered that users can engage with it?&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Is it usable?&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Can users interact with the page, or is it busy?&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;strong&gt;Is it delightful?&lt;/strong&gt;&lt;/td&gt;
    &lt;td&gt;Are the interactions smooth and natural, free of lag and jank?&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id=&quot;how-metrics-are-measured&quot;&gt;How metrics are measured &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#how-metrics-are-measured&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Performance metrics are generally measured in one of two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;In the lab:&lt;/strong&gt; using tools to simulate a page load in a consistent,
controlled environment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In the field&lt;/strong&gt;: on real users actually loading and interacting with the page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neither of these options is necessarily better or worse than the other—in
fact you generally want to use both to ensure good performance.&lt;/p&gt;
&lt;h3 id=&quot;in-the-lab&quot;&gt;In the lab &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Testing performance in the lab is essential when developing new features. Before
features are released in production, it&#39;s impossible to measure their
performance characteristics on real users, so testing them in the lab before the
feature is released is the best way to prevent performance regressions.&lt;/p&gt;
&lt;h3 id=&quot;in-the-field&quot;&gt;In the field &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On the other hand, while testing in the lab is a reasonable proxy for
performance, it isn&#39;t necessarily reflective of how all users experience your
site in the wild.&lt;/p&gt;
&lt;p&gt;The performance of a site can vary dramatically based on a user&#39;s device
capabilities and their network conditions. It can also vary based on whether (or
how) a user is interacting with the page.&lt;/p&gt;
&lt;p&gt;Moreover, page loads may not be deterministic. For example, sites that load
personalized content or ads may experience vastly different performance
characteristics from user to user. A lab test will not capture those
differences.&lt;/p&gt;
&lt;p&gt;The only way to truly know how your site performs for your users is to actually
measure its performance as those users are loading and interacting with it. This
type of measurement is commonly referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Real_user_monitoring&quot; rel=&quot;noopener&quot;&gt;Real User
Monitoring&lt;/a&gt;—or RUM for
short.&lt;/p&gt;
&lt;h2 id=&quot;types-of-metrics&quot;&gt;Types of metrics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#types-of-metrics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are several other types of metrics that are relevant to how users perceive
performance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Perceived load speed:&lt;/strong&gt; how quickly a page can load and render all of its
visual elements to the screen.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Load responsiveness:&lt;/strong&gt; how quickly a page can load and execute any required
JavaScript code in order for components to respond quickly to user interaction&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runtime responsiveness:&lt;/strong&gt; after page load, how quickly can the page respond
to user interaction.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual stability:&lt;/strong&gt; do elements on the page shift in ways that users don&#39;t
expect and potentially interfere with their interactions?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smoothness:&lt;/strong&gt; do transitions and animations render at a consistent frame
rate and flow fluidly from one state to the next?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given all the above types of performance metrics, it&#39;s hopefully clear that no
single metric is sufficient to capture all the performance characteristics of a
page.&lt;/p&gt;
&lt;h2 id=&quot;important-metrics-to-measure&quot;&gt;Important metrics to measure &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#important-metrics-to-measure&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/fcp/&quot;&gt;First contentful paint (FCP)&lt;/a&gt;:&lt;/strong&gt; measures the time from when the
page starts loading to when any part of the page&#39;s content is rendered on the
screen. &lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab&lt;/a&gt;, &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;field&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest contentful paint (LCP)&lt;/a&gt;:&lt;/strong&gt; measures the time from when the
page starts loading to when the largest text block or image element is
rendered on the screen. &lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab&lt;/a&gt;, &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;field&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/fid/&quot;&gt;First input delay (FID)&lt;/a&gt;:&lt;/strong&gt; measures the time from when a user first
interacts with your site (i.e. when they click a link, tap a button, or use a
custom, JavaScript-powered control) to the time when the browser is actually
able to respond to that interaction. &lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;field&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/tti/&quot;&gt;Time to Interactive (TTI)&lt;/a&gt;:&lt;/strong&gt; measures the time from when the page
starts loading to when it&#39;s visually rendered, its initial scripts (if any)
have loaded, and it&#39;s capable of reliably responding to user input quickly.
&lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/tbt/&quot;&gt;Total blocking time (TBT)&lt;/a&gt;:&lt;/strong&gt; measures the total amount of time
between FCP and TTI where the main thread was blocked for long enough to
prevent input responsiveness. &lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative layout shift (CLS)&lt;/a&gt;:&lt;/strong&gt; measures the cumulative score of
all unexpected layout shifts that occur between when the page starts loading
and when its &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&quot; rel=&quot;noopener&quot;&gt;lifecycle
state&lt;/a&gt;
changes to hidden. &lt;em&gt;(&lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-lab&quot;&gt;lab&lt;/a&gt;, &lt;a href=&quot;https://web.dev/user-centric-performance-metrics/#in-the-field&quot;&gt;field&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While this list includes metrics measuring many of the various aspects of
performance relevant to users, it does not include everything (e.g. runtime
responsiveness and smoothness are not currently covered).&lt;/p&gt;
&lt;p&gt;In some cases, new metrics will be introduced to cover missing areas, but in
other cases the best metrics are ones specifically tailored to your site.&lt;/p&gt;
&lt;h2 id=&quot;custom-metrics&quot;&gt;Custom metrics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-centric-performance-metrics/#custom-metrics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The performance metrics listed above are good for getting a general
understanding of the performance characteristics of most sites on the web.
They&#39;re also good for having a common set of metrics for sites to compare their
performance against their competitors.&lt;/p&gt;
&lt;p&gt;However, there may be times when a specific site is unique in some way that
requires additional metrics to capture the full performance picture. For
example, the LCP metric is intended to measure when a page&#39;s main content has
finished loading, but there could be cases where the largest element is not part
of the page&#39;s main content and thus LCP may not be relevant.&lt;/p&gt;
&lt;p&gt;To address such cases, the Web Performance Working Group has also standardized
lower-level APIs that can be useful for implementing your own custom metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/user-timing/&quot; rel=&quot;noopener&quot;&gt;User Timing API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/longtasks/&quot; rel=&quot;noopener&quot;&gt;Long Tasks API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/element-timing/&quot; rel=&quot;noopener&quot;&gt;Element Timing API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/navigation-timing/&quot; rel=&quot;noopener&quot;&gt;Navigation Timing API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/resource-timing/&quot; rel=&quot;noopener&quot;&gt;Resource Timing API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/server-timing/&quot; rel=&quot;noopener&quot;&gt;Server timing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to the guide on &lt;a href=&quot;https://web.dev/custom-metrics/&quot;&gt;Custom Metrics&lt;/a&gt; to learn how to use
these APIs to measure performance characteristics specific to your site.&lt;/p&gt;
</content>
    <author>
      <name>Philip Walton</name>
    </author>
  </entry>
</feed>
