<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Joe Medley on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Joe Medley</name>
  </author>
  <link href="https://web.dev/authors/joemedley/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <icon>https://web-dev.imgix.net/image/admin/ynJFmvKEbD9diZZsTdkD.jpg?auto=format</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>If an API&amp;#39;s not documented it doesn&amp;#39;t exist</subtitle>
  
  
  <entry>
    <title>Integrate with the OS sharing UI with the Web Share API</title>
    <link href="https://web.dev/web-share/"/>
    <updated>2019-11-08T00:00:00Z</updated>
    <id>https://web.dev/web-share/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;With the Web Share API, web apps are able to use the same system-provided share
capabilities as platform-specific apps. The Web Share API makes it possible for web apps to
share links, text, and files to other apps installed on the device in the same
way as platform-specific apps.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Sharing is only half of the magic. Web apps can also be share
targets, meaning they can receive data, links, text, and files from
platform-specific or web apps. See the &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Receive shared data&lt;/a&gt;
post for details on how to register your app as a share target.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;concepts-and-usage&quot;&gt;Concepts and usage &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#concepts-and-usage&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;System-level share target picker with an installed PWA as an option.&quot; decoding=&quot;async&quot; height=&quot;349&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 370px) 370px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/cCXNoHbXAfkAQzTTuS0Z.png?auto=format&amp;w=740 740w&quot; width=&quot;370&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    System-level share target picker with an installed PWA as an option.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;capabilities-and-limitations&quot;&gt;Capabilities and limitations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#capabilities-and-limitations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Web share has the following capabilities and limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It can only be used on a site that is &lt;a href=&quot;https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features&quot; rel=&quot;noopener&quot;&gt;accessed via HTTPS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It must be invoked in response to a user action such as a click. Invoking it
through the &lt;code&gt;onload&lt;/code&gt; handler is impossible.&lt;/li&gt;
&lt;li&gt;It can share, URLs, text, or files.&lt;/li&gt;
&lt;li&gt;As of January 2021, it is available on Safari, Android in Chromium forks,
Chrome OS, and Chrome on Windows. Chrome on MacOS is still in development. See
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;MDN&lt;/a&gt;
for details.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h3 id=&quot;sharing-links-and-text&quot;&gt;Sharing links and text &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#sharing-links-and-text&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To share links and text, use the &lt;code&gt;share()&lt;/code&gt; method, which is a promise-based
method with a required properties object.
To keep the browser from throwing a &lt;code&gt;TypeError&lt;/code&gt;,
the object must contain at least one
of the following properties: &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;files&lt;/code&gt;. You
can, for example, share text without a URL or vice versa. Allowing all three
members expands the flexibility of use cases. Imagine if after running the code
below, the user chose an email application as the target. The &lt;code&gt;title&lt;/code&gt; parameter
might become the email subject, the &lt;code&gt;text&lt;/code&gt;, the message body, and the files, the
attachments.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;share&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;web.dev&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Check out web.dev.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    url&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://web.dev/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Successful share&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Error sharing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If your site has multiple URLs for the same content, share the page&#39;s
canonical URL instead of the current URL. Instead of sharing
&lt;code&gt;document.location.href&lt;/code&gt;, you would check for a canonical URL &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag in
the page&#39;s &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; and share that. This will provide a better experience to the
user. Not only does it avoid redirects, but it also ensures that a shared URL serves
the correct user experience for a particular client. For example, if a friend
shares a mobile URL and you look at it on a desktop computer,
you should see a desktop version:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; canonicalElement &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;link[rel=canonical]&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;canonicalElement &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canonicalElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;sharing-files&quot;&gt;Sharing files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#sharing-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To share files, first test for and call &lt;code&gt;navigator.canShare()&lt;/code&gt;. Then include an
array of files in the call to &lt;code&gt;navigator.share()&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;canShare &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;canShare&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; files&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; filesArray &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    files&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; filesArray&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Vacation Pictures&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Photos from September 27 to October 14.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Share was successful.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Sharing failed&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Your system doesn&#39;t support sharing files.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Notice that the sample handles feature detection by testing for
&lt;code&gt;navigator.canShare()&lt;/code&gt; rather than for &lt;code&gt;navigator.share()&lt;/code&gt;.
The data object passed to &lt;code&gt;canShare()&lt;/code&gt; only supports the &lt;code&gt;files&lt;/code&gt; property.
Image, video, audio, and text files can be shared. (See
&lt;a href=&quot;https://docs.google.com/document/d/1tKPkHA5nnJtmh2TgqWmGSREUzXgMUFDL6yMdVZHqUsg/edit?usp=sharing&quot; rel=&quot;noopener&quot;&gt;Permitted File Extensions in Chromium&lt;/a&gt;.)
More file types may be added in the future.&lt;/p&gt;
&lt;h2 id=&quot;santa-tracker-case-study&quot;&gt;Santa Tracker case study &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#santa-tracker-case-study&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;The Santa Tracker app showing a share button.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 343px) 343px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/2I5iOXaOpzEJlEbM694n.png?auto=format&amp;w=686 686w&quot; width=&quot;343&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Santa Tracker share button.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://santatracker.google.com/&quot; rel=&quot;noopener&quot;&gt;Santa Tracker&lt;/a&gt;, an open-source project, is a
holiday tradition at Google. Every December, you can celebrate the season
with games and educational experiences.&lt;/p&gt;
&lt;p&gt;In 2016, the Santa Tracker team used the Web Share API on Android.
This API was a perfect fit for mobile.
In previous years, the team removed share buttons on mobile because space is
at a premium, and they couldn&#39;t justify having several share targets.&lt;/p&gt;
&lt;p&gt;But with the Web Share API, they were able to present one button,
saving precious pixels.
They also found that users shared with Web Share around 20% more than
users without the API enabled. Head to
&lt;a href=&quot;https://santatracker.google.com/&quot; rel=&quot;noopener&quot;&gt;Santa Tracker&lt;/a&gt; to see Web Share in action.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Browser support for the Web Share API is nuanced, and it&#39;s recommended that you use feature
detection (as described in the earlier code samples) instead of assuming that a particular method is
supported.&lt;/p&gt;
&lt;p&gt;As of early 2021, using the API to share title, text, and URL is supported by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Safari 12 or later on macOS and iOS.&lt;/li&gt;
&lt;li&gt;Chrome 75 or later on Android, and 89 or later on Chrome OS and Windows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using the API to share files is supported by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Safari 15 or later on macOS and iOS.&lt;/li&gt;
&lt;li&gt;Chrome 75 or later on Android, and 89 or later on Chrome OS and Windows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Most Chromium-based browsers, like Edge, have the same support for this feature as the
corresponding version of Chrome.)&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Web Share API? Your public support helps the Chromium team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebShare&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebShare&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful-links&quot;&gt;Helpful Links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share/#helpful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/web-share/demos/share-files.html&quot; rel=&quot;noopener&quot;&gt;Web Share Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/web-share/README.md#web-share-demo&quot; rel=&quot;noopener&quot;&gt;Scrapbook PWA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Receiving shared data with the Web Share Target API</title>
    <link href="https://web.dev/web-share-target/"/>
    <updated>2019-11-08T00:00:00Z</updated>
    <id>https://web.dev/web-share-target/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;On a mobile or desktop device, sharing should be as straightforward as clicking the &lt;strong&gt;Share&lt;/strong&gt; button,
choosing an app, and choosing who to share with. For example, you may want to
share an interesting article, either by emailing it to friends or tweeting it to
the world.&lt;/p&gt;
&lt;p&gt;In the past, only platform-specific apps could register with the operating system to
receive shares from other installed apps. But with the Web Share Target API,
installed web apps can register with the underlying operating system
as a share target to receive shared content.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Web Share Target API is only half of the magic. Web apps can share data,
files, links, or text using the Web Share API. See
&lt;a href=&quot;https://web.dev/web-share/&quot;&gt;Web Share API&lt;/a&gt; for details.&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;Android phone with the &amp;#x27;Share via&amp;#x27; drawer open.&quot; decoding=&quot;async&quot; height=&quot;377&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Q4nuOQMpsQrTilpXA3fL.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    System-level share target picker with an installed PWA as an option.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;see-web-share-target-in-action&quot;&gt;See Web Share Target in action &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#see-web-share-target-in-action&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Using either Chrome 76 or later for Android, or Chrome 89 or later on
desktop, open the &lt;a href=&quot;https://web-share.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Web Share Target demo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;When prompted, click &lt;strong&gt;Install&lt;/strong&gt; to add the app to your home screen, or
use the Chrome menu to add it to your home screen.&lt;/li&gt;
&lt;li&gt;Open any app that supports sharing, or use the Share button
in the demo app.&lt;/li&gt;
&lt;li&gt;From the target picker, choose &lt;strong&gt;Web Share Test&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After sharing, you should see all of the shared information in
the web share target web app.&lt;/p&gt;
&lt;h2 id=&quot;register-your-app-as-a-share-target&quot;&gt;Register your app as a share target &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#register-your-app-as-a-share-target&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To register your app as a share target, it needs to meet &lt;a href=&quot;https://developers.google.com/web/fundamentals/app-install-banners/#criteria&quot; rel=&quot;noopener&quot;&gt;Chrome&#39;s
installability criteria&lt;/a&gt;. In addition, before a user can share
to your app, they must add it to their home screen. This prevents sites from
randomly adding themselves to the user&#39;s share intent chooser and ensures that
sharing is something that users want to do with your app.&lt;/p&gt;
&lt;h2 id=&quot;update-your-web-app-manifest&quot;&gt;Update your web app manifest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#update-your-web-app-manifest&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To register your app as a share target, add a &lt;code&gt;share_target&lt;/code&gt; entry to its &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;web
app manifest&lt;/a&gt;. This tells the operating system to include your app as
an option in the intent chooser. What you add to the manifest controls the data
that your app will accept. There are three common scenarios for the &lt;code&gt;share_target&lt;/code&gt;
entry:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accepting basic information&lt;/li&gt;
&lt;li&gt;Accepting application changes&lt;/li&gt;
&lt;li&gt;Accepting files&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can only have one &lt;code&gt;share_target&lt;/code&gt; per manifest, if you want to share to
different places within your app, provide that as an option within the share
target landing page.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;accepting-basic-information&quot;&gt;Accepting basic information &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#accepting-basic-information&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your target app is merely accepting basic information such as data, links,
and text, add the following to the &lt;code&gt;manifest.json&lt;/code&gt; file:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;share_target&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/share-target/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If your application already has a share URL scheme, you can replace the &lt;code&gt;param&lt;/code&gt;
values with your existing query parameters. For example, if your share URL
scheme uses &lt;code&gt;body&lt;/code&gt; instead of &lt;code&gt;text&lt;/code&gt;, you could replace &lt;code&gt;&amp;quot;text&amp;quot;: &amp;quot;text&amp;quot;&lt;/code&gt; with &lt;code&gt;&amp;quot;text&amp;quot;: &amp;quot;body&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;method&lt;/code&gt; value defaults to &lt;code&gt;&amp;quot;GET&amp;quot;&lt;/code&gt; if not provided. The &lt;code&gt;enctype&lt;/code&gt; field, not
shown in this example, indicates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype&quot; rel=&quot;noopener&quot;&gt;type of encoding&lt;/a&gt; for the data.
For the &lt;code&gt;&amp;quot;GET&amp;quot;&lt;/code&gt; method, &lt;code&gt;enctype&lt;/code&gt; defaults to &lt;code&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/code&gt; and
is ignored if it&#39;s set to anything else.&lt;/p&gt;
&lt;h3 id=&quot;accepting-application-changes&quot;&gt;Accepting application changes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#accepting-application-changes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If the shared data changes the target app in some way—for example, saving a
bookmark in the target application—set the &lt;code&gt;method&lt;/code&gt; value to &lt;code&gt;&amp;quot;POST&amp;quot;&lt;/code&gt; and include
the &lt;code&gt;enctype&lt;/code&gt; field. The example below creates a bookmark in the target app,
so it uses &lt;code&gt;&amp;quot;POST&amp;quot;&lt;/code&gt; for the &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;&amp;quot;multipart/form-data&amp;quot;&lt;/code&gt; for the
&lt;code&gt;enctype&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Bookmark&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;share_target&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/bookmark&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;enctype&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;accepting-files&quot;&gt;Accepting files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#accepting-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As with application changes, accepting files requires that &lt;code&gt;method&lt;/code&gt; be &lt;code&gt;&amp;quot;POST&amp;quot;&lt;/code&gt;
and that &lt;code&gt;enctype&lt;/code&gt; be present. Additionally, &lt;code&gt;enctype&lt;/code&gt; must be
&lt;code&gt;&amp;quot;multipart/form-data&amp;quot;&lt;/code&gt;, and a &lt;code&gt;files&lt;/code&gt; entry must be added.&lt;/p&gt;
&lt;p&gt;You must also add a &lt;code&gt;files&lt;/code&gt; array defining the types of files your app accepts. The
array elements are entries with two members: a &lt;code&gt;name&lt;/code&gt; field and an &lt;code&gt;accept&lt;/code&gt;
field. The &lt;code&gt;accept&lt;/code&gt; field takes a MIME type, a file extension, or an array
containing both. It&#39;s best to provide an array that includes both a
MIME type and a file extension since operating systems differ in which
they prefer.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Aggregator&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;share_target&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/cgi-bin/aggregate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;enctype&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;files&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;          &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;records&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;          &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;text/csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;          &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;graphs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;          &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/svg+xml&quot;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;handle-the-incoming-content&quot;&gt;Handle the incoming content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#handle-the-incoming-content&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;How you deal with the incoming shared data is up to you and depends on your
app. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An email client could draft a new email using &lt;code&gt;title&lt;/code&gt; as the subject of an
email, with &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; concatenated together as the body.&lt;/li&gt;
&lt;li&gt;A social networking app could draft a new post ignoring &lt;code&gt;title&lt;/code&gt;, using
&lt;code&gt;text&lt;/code&gt; as the body of the message, and adding &lt;code&gt;url&lt;/code&gt; as a link. If &lt;code&gt;text&lt;/code&gt; is
missing, the app might use &lt;code&gt;url&lt;/code&gt; in the body as well. If &lt;code&gt;url&lt;/code&gt; is missing,
the app might scan &lt;code&gt;text&lt;/code&gt; looking for a URL and add that as a link.&lt;/li&gt;
&lt;li&gt;A photo sharing app could create a new slideshow using &lt;code&gt;title&lt;/code&gt; as the
slideshow title, &lt;code&gt;text&lt;/code&gt; as a description, and &lt;code&gt;files&lt;/code&gt; as the slideshow images.&lt;/li&gt;
&lt;li&gt;A text messaging app could draft a new message using &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt;
concatenated together and dropping &lt;code&gt;title&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;processing-get-shares&quot;&gt;Processing GET shares &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#processing-get-shares&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If the user selects your application, and your &lt;code&gt;method&lt;/code&gt; is &lt;code&gt;&amp;quot;GET&amp;quot;&lt;/code&gt; (the
default), the browser opens a new window at the &lt;code&gt;action&lt;/code&gt; URL. The browser then
generates a query string using the URL-encoded values supplied in the manifest.
For example, if the sharing app provides &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt;, the query string is
&lt;code&gt;?title=hello&amp;amp;text=world&lt;/code&gt;. To process this, use a &lt;code&gt;DOMContentLoaded&lt;/code&gt; event
listener in your foreground page and parse the query string:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; parsedUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// searchParams.get() will properly handle decoding the values.&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Title shared: &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; parsedUrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;searchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Text shared: &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; parsedUrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;searchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;URL shared: &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; parsedUrl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;searchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Be sure to use a service worker to &lt;a href=&quot;https://developers.google.com/web/ilt/pwa/caching-files-with-service-worker&quot; rel=&quot;noopener&quot;&gt;precache&lt;/a&gt; the &lt;code&gt;action&lt;/code&gt;
page so that it will load quickly and work reliably, even if the user is offline.
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/&quot; rel=&quot;noopener&quot;&gt;Workbox&lt;/a&gt; is a tool that can help you
&lt;a href=&quot;https://web.dev/precache-with-workbox/&quot;&gt;implement precaching&lt;/a&gt; in your service worker.&lt;/p&gt;
&lt;h3 id=&quot;processing-post-shares&quot;&gt;Processing POST shares &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#processing-post-shares&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your &lt;code&gt;method&lt;/code&gt; is &lt;code&gt;&amp;quot;POST&amp;quot;&lt;/code&gt;, as it would be if your target app accepts a saved
bookmark or shared files, then the body of the incoming &lt;code&gt;POST&lt;/code&gt; request contains
the data passed by the sharing application, encoded using the &lt;code&gt;enctype&lt;/code&gt; value
provided in the manifest.&lt;/p&gt;
&lt;p&gt;The foreground page cannot process this data directly. Since the page sees the data as
a request, the page passes it to the service worker, where you can intercept it with a
&lt;code&gt;fetch&lt;/code&gt; event listener. From here, you can pass the data back to the foreground
page using &lt;code&gt;postMessage()&lt;/code&gt; or pass it on to the server:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fetch&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// If this is an incoming POST request for the&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// registered &quot;action&quot; URL, respond to it.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;method &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;      url&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pathname &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/bookmark&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; formData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; link &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; formData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;link&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; responseUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;saveBookmark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;link&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;responseUrl&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;verifying-shared-content&quot;&gt;Verifying shared content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#verifying-shared-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;An Android phone displaying the demo app with shared content.&quot; decoding=&quot;async&quot; height=&quot;280&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/hSwbgPk8IFgPC81oJbxZ.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    The sample sharing target app.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Be sure to verify incoming data. Unfortunately, there is no guarantee that other
apps will share the appropriate content in the right parameter.&lt;/p&gt;
&lt;p&gt;For example, on Android, the &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=789379&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;url&lt;/code&gt; field will be
empty&lt;/a&gt; because
it&#39;s not supported in Android&#39;s share system. Instead, URLs will often appear in
the &lt;code&gt;text&lt;/code&gt; field, or occasionally in the &lt;code&gt;title&lt;/code&gt; field.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As of early 2021, the Web Share Target API is supported by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chrome and Edge 76 or later on Android.&lt;/li&gt;
&lt;li&gt;Chrome 89 or later on Chrome OS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On all platforms, your web app has to be &lt;a href=&quot;https://developers.google.com/web/fundamentals/app-install-banners/#criteria&quot; rel=&quot;noopener&quot;&gt;installed&lt;/a&gt; before it will show up as a
potential target for receiving shared data.&lt;/p&gt;
&lt;h2 id=&quot;sample-applications&quot;&gt;Sample applications &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#sample-applications&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh&quot; rel=&quot;noopener&quot;&gt;Squoosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/web-share/README.md#web-share-demo&quot; rel=&quot;noopener&quot;&gt;Scrapbook PWA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-share-target/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Web Share Target API? Your public support helps the Chromium team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebShareTarget&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebShareTarget&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
</content>
    <author>
      <name>Pete LePage</name>
    </author><author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Human interface devices on the web: a few quick examples</title>
    <link href="https://web.dev/hid-examples/"/>
    <updated>2020-07-22T00:00:00Z</updated>
    <id>https://web.dev/hid-examples/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID API&lt;/a&gt;, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;,
launched in Chrome 89.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the WebHID API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a long tail of human interface devices (HIDs) that are too new, too
old, or too uncommon to be accessible by systems&#39; device drivers. The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID
API&lt;/a&gt; solves this by providing a way to implement device-specific logic in
JavaScript.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the WebHID API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An HID takes input from or provides output to humans. Examples of devices
include keyboards, pointing devices (mice, touchscreens, etc.), and gamepads.
The &lt;a href=&quot;https://www.usb.org/hid&quot; rel=&quot;noopener&quot;&gt;HID protocol&lt;/a&gt; makes it possible to access these
devices on desktop computers using operating system drivers. The web platform
supports HIDs by relying on these drivers.&lt;/p&gt;
&lt;p&gt;The inability to access uncommon HID devices is particularly painful when it
comes to gamepad support. Gamepads designed for PC often use HID for gamepad
inputs (buttons, joysticks, triggers) and outputs (LEDs, rumble). However,
gamepad inputs and outputs are not well standardized and web browsers often
require custom logic for specific devices. This is unsustainable and results in
poor support for the long tail of older and uncommon devices. It also causes the
browser to depend on quirks present in the behavior of specific devices.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos, demos, demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re curious about how any of these samples work, the source code for all
of them is available on GitHub. &lt;a href=&quot;https://github.com/WICG/webhid/blob/master/EXPLAINER.md#example&quot; rel=&quot;noopener&quot;&gt;There&#39;s a barebones code example&lt;/a&gt; in
the explainer.&lt;/p&gt;
&lt;h3 id=&quot;macbook-pro-keyboard-backlight&quot;&gt;MacBook Pro keyboard backlight &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#macbook-pro-keyboard-backlight&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The biggest barrier to trying out any of these demos is lack of access to the
device. Fortunately, if you have a MacBook Pro with a TouchBar, you don&#39;t need
to buy anything. This demo lets you use the API right from your laptop. It also
shows how WebHID can be used to unlock functionality of built-in devices, not
just peripherals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; FWeinb&lt;br /&gt;
&lt;strong&gt;Demo/Source:&lt;/strong&gt; &lt;a href=&quot;https://codesandbox.io/s/webhid-demo-keyboard-backlight-qlq95&quot; rel=&quot;noopener&quot;&gt;Keyboard Backlight&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;game-controllers&quot;&gt;Game controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#game-controllers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;playstation-4-wireless-controller&quot;&gt;PlayStation 4 Wireless controller &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#playstation-4-wireless-controller&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next up is something fewer of you are likely to have. Sony&#39;s DualShock 4 is a
wireless controller for PlayStation 4 game consoles.&lt;/p&gt;
&lt;p&gt;The DualShock 4 Demo uses WebHID to receive the raw input reports from the
DualShock 4 and provides a high-level API to access the controller&#39;s gyroscope,
accelerometer, touchpad, button, and thumbstick inputs. It also supports rumble
and setting the color of an RGB LED housed within the controller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; TheBITLINK&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://thebitlink.github.io/WebHID-DS4/&quot; rel=&quot;noopener&quot;&gt;DualShock 4 Demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/TheBITLINK/WebHID-DS4&quot; rel=&quot;noopener&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;nintendo-switch-joy-con-controllers&quot;&gt;Nintendo Switch Joy-Con controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#nintendo-switch-joy-con-controllers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Play the Chrome dino 🦖 offline game by actually jumping with a Nintendo Switch Joy-Con
controller in your pants pockets. This demo is powered by
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;Joy-Con WebHID&lt;/a&gt;, a WebHID driver for the
Nintendo Switch Joy-Con controllers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; &lt;a href=&quot;https://web.dev/authors/thomassteiner/&quot;&gt;Thomas Steiner&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://tomayac.github.io/chrome-dino-webhid/&quot; rel=&quot;noopener&quot;&gt;Chrome Dino WebHID&lt;/a&gt;
(&lt;a href=&quot;https://github.com/tomayac/chrome-dino-webhid&quot; rel=&quot;noopener&quot;&gt;demo source&lt;/a&gt;,
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;driver source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;the-blinkstick-strip&quot;&gt;The BlinkStick Strip &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#the-blinkstick-strip&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BlinkStick Strip is a HID-compliant light strip with 8 RGB LEDs. The demo allows
the user to select from several blink patterns including chase, blink, and
Larson scanner (aka Cylon).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Robat Williams&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://robatwilliams.github.io/webhid-demos/blinkstick-strip/&quot; rel=&quot;noopener&quot;&gt;blinkstick-strip&lt;/a&gt; (&lt;a href=&quot;https://github.com/robatwilliams/webhid-demos&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;blink-blink-blink&quot;&gt;Blink, blink, blink &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#blink-blink-blink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What does this demo do? (Wait for it.) It blinks. Actually it&#39;s three demos that
use the blink(1) USB notification light.&lt;/p&gt;
&lt;p&gt;blink(1) is simple and well-documented, which makes it a great option for
getting started with HID.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Tod E. Kurt&lt;br /&gt;
&lt;strong&gt;Demos:&lt;/strong&gt; &lt;a href=&quot;https://blink1.thingm.com/&quot; rel=&quot;noopener&quot;&gt;blink(1)&lt;/a&gt; (&lt;a href=&quot;https://github.com/todbot/blink1-webhid&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you to &lt;a href=&quot;https://web.dev/authors/petelepage/&quot;&gt;Pete LePage&lt;/a&gt; and &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce
Basques&lt;/a&gt; for reviews of this article.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ugur?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Ugur
Akdemir&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/game-controllers?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author><author>
      <name>Matt Reynolds</name>
    </author>
  </entry>
  
  <entry>
    <title>Media application basics</title>
    <link href="https://web.dev/media-application-basics/"/>
    <updated>2017-06-09T00:00:00Z</updated>
    <id>https://web.dev/media-application-basics/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Much media work requires changing characteristics of media files, such as
bitrate or resolution. Finding a straightforward way to get started can be
bewildering and intimidating. On this page, I provide an onramp into that
world.&lt;/p&gt;
&lt;p&gt;You&#39;ll notice in what follows that the word &#39;resolution&#39; doesn&#39;t appear. What
the two applications output are just the dimensions, the numbers themselves.
That&#39;s because resolution is just an informal shorthand for the dimensions of a
video. In every case that follows, I talk about specific numbers.&lt;/p&gt;
&lt;p&gt;This page describes the basic usage for two common command-line media utilities: &lt;a href=&quot;https://github.com/google/shaka-packager&quot; rel=&quot;noopener&quot;&gt;Shaka
Packager&lt;/a&gt; and
&lt;a href=&quot;https://ffmpeg.org/download.html&quot; rel=&quot;noopener&quot;&gt;FFmpeg&lt;/a&gt;. Why cover two applications? While
both are powerful and useful by themselves, neither does everything needed to
prepare media for the web. I&#39;ve also created a &lt;a href=&quot;https://web.dev/media-cheat-sheet&quot;&gt;cheat sheet&lt;/a&gt; showing
common operations with those applications.&lt;/p&gt;
&lt;p&gt;These aren&#39;t the only options available for many file manipulation tasks. But
they are two of the most common and powerful. Other options include the GUI
applications &lt;a href=&quot;http://www.mirovideoconverter.com/&quot; rel=&quot;noopener&quot;&gt;Miro&lt;/a&gt;,
&lt;a href=&quot;https://handbrake.fr/&quot; rel=&quot;noopener&quot;&gt;HandBrake&lt;/a&gt;, and &lt;a href=&quot;https://www.videolan.org/&quot; rel=&quot;noopener&quot;&gt;VLC&lt;/a&gt;. There are also
online encoding/transcoding services such as
&lt;a href=&quot;https://en.wikipedia.org/wiki/Zencoder&quot; rel=&quot;noopener&quot;&gt;Zencoder&lt;/a&gt; and &lt;a href=&quot;https://aws.amazon.com/elastictranscoder&quot; rel=&quot;noopener&quot;&gt;Amazon Elastic
Encoder&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;shaka-packager&quot;&gt;Shaka Packager &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-application-basics/#shaka-packager&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/google/shaka-packager&quot; rel=&quot;noopener&quot;&gt;Shaka Packager&lt;/a&gt; is a free media
packaging SDK. If you were using a media player on your site, Shaka Packager is
what you would use to prepare the files. It supports conversion for the two most
common video streaming protocols: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/DASH_Adaptive_Streaming_for_HTML_5_Video&quot; rel=&quot;noopener&quot;&gt;Dynamic Adaptive Streaming over HTTP
(DASH)&lt;/a&gt;
or &lt;a href=&quot;https://developer.apple.com/documentation/http_live_streaming&quot; rel=&quot;noopener&quot;&gt;HTTP Live Streaming
(HLS)&lt;/a&gt;. Shaka
Packager supports key security features: common encryption and Widevine digital
rights management (DRM). It can also handle live video, and
video-on-demand. Those concepts are beyond the scope of this article.&lt;/p&gt;
&lt;p&gt;Despite what it says on the package, this utility is for more than C++
developers. You can use it as both a library for building media software and as
a command-line utility for preparing media files for playback. It&#39;s the latter
capacity that&#39;s useful for us here. In fact, for web media creators, Shaka Packager
is the only way to do some tasks without spending money on expensive commercial
applications.&lt;/p&gt;
&lt;p&gt;Here&#39;s the basic pattern for a Shaka Packager command:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager stream_descriptor &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;stream_descriptor-2 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;stream_descriptor-n&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;flags&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This isn&#39;t quite what you get if you type &lt;code&gt;packager -help&lt;/code&gt;. This is how I think
of it, and this reflects the examples in the &lt;a href=&quot;https://google.github.io/shaka-packager/html/&quot; rel=&quot;noopener&quot;&gt;Shaka Packager
documentation&lt;/a&gt;. Note that there are multiple
&lt;code&gt;stream_descriptor&lt;/code&gt; items in the pattern. Though I don&#39;t show it, you could
manipulate the video and audio streams of a file directly.&lt;/p&gt;
&lt;p&gt;Compare this basic pattern with a simple use that displays file characteristics.
In the example, I&#39;ve lined up equivalent parts.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager stream_descriptor &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;stream_descriptor-n&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;flags&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;packager &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glocken.mp4                       --dump_stream_info&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The command outputs this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;0416/140029:INFO:demuxer.cc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;88&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Demuxer::Run&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; on &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;glocken.mp4&#39;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;0416/140029:INFO:demuxer.cc&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Initialize Demuxer &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;glocken.mp4&#39;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;File &lt;span class=&quot;token string&quot;&gt;&quot;glocken.mp4&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt;&lt;br /&gt;Found &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; stream&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.&lt;br /&gt;Stream &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; type: Video&lt;br /&gt; codec_string: avc1.640028&lt;br /&gt; time_scale: &lt;span class=&quot;token number&quot;&gt;30000&lt;/span&gt;&lt;br /&gt; duration: &lt;span class=&quot;token number&quot;&gt;300300&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10.0&lt;/span&gt; seconds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt; is_encrypted: &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;br /&gt; codec: H264&lt;br /&gt; width: &lt;span class=&quot;token number&quot;&gt;1920&lt;/span&gt;&lt;br /&gt; height: &lt;span class=&quot;token number&quot;&gt;1080&lt;/span&gt;&lt;br /&gt; pixel_aspect_ratio: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:1&lt;br /&gt; trick_play_factor: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br /&gt; nalu_length_size: &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Stream &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; type: Audio&lt;br /&gt; codec_string: mp4a.40.2&lt;br /&gt; time_scale: &lt;span class=&quot;token number&quot;&gt;48000&lt;/span&gt;&lt;br /&gt; duration: &lt;span class=&quot;token number&quot;&gt;481280&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10.0&lt;/span&gt; seconds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt; is_encrypted: &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;br /&gt; codec: AAC&lt;br /&gt; sample_bits: &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;br /&gt; num_channels: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br /&gt; sampling_frequency: &lt;span class=&quot;token number&quot;&gt;48000&lt;/span&gt;&lt;br /&gt; language: eng&lt;br /&gt; seek_preroll_ns: &lt;span class=&quot;token number&quot;&gt;20833&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Packaging completed successfully.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Look for the characteristics discussed in &lt;a href=&quot;https://web.dev/media-file-basics&quot;&gt;Media file basics&lt;/a&gt; and
notice a few things. The height and width are correct for full HD, and the audio
and video codecs are among the preferred codecs for their container types, AAC
for audio and H264 for video. Notice also that streams are identified with
numbers. These are useful for operations that manipulate the audio and video
separately.&lt;/p&gt;
&lt;p&gt;Notice that the output above doesn&#39;t show the bitrate. Despite what&#39;s missing,
this output is easier to read, so I use it whenever I can. When I need
information that Shaka Packager can&#39;t get, such as the bitrate, I use FFmpeg.&lt;/p&gt;
&lt;h2 id=&quot;ffmpeg&quot;&gt;FFmpeg &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-application-basics/#ffmpeg&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ffmpeg.org/download.html&quot; rel=&quot;noopener&quot;&gt;FFmpeg&lt;/a&gt; is also a free application for
recording, converting, and streaming media files. Its capabilities aren&#39;t better
or worse than Shaka Packager&#39;s. They&#39;re just different.&lt;/p&gt;
&lt;p&gt;The basic pattern for an FFmpeg command looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;GeneralOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;InputFileOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; -i input &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;OutputFileOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; output&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Like Shaka Packager this application can handle multiple streams. Some of its
options are used in multiple locations and have different effects on file output
depending on where they are in the command. Be aware of this as you look at
&lt;a href=&quot;https://stackoverflow.com/questions/tagged/ffmpeg&quot; rel=&quot;noopener&quot;&gt;FFmpeg questions on Stack Overflow&lt;/a&gt;
and similar sites.&lt;/p&gt;
&lt;p&gt;I&#39;ll again compare the basic pattern to the example for displaying file characteristics.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;    ffmpeg &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;GeneralOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;InputFileOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; -i input        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;OutputFileOptions&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; output&lt;br /&gt;&lt;br /&gt;    ffmpeg                                     -i glocken.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In addition to the information I requested, this also prints an error message as
shown in the example below. That&#39;s because this is technically an incorrect
usage of FFmpeg. I use it because it displays information I care about.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Input &lt;span class=&quot;token comment&quot;&gt;#0, mov,mp4,m4a,3gp,3g2,mj2, from &#39;glocken.mp4&#39;:&lt;/span&gt;&lt;br /&gt;  Metadata:&lt;br /&gt;    major_brand     &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; isom&lt;br /&gt;    minor_version   &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt;&lt;br /&gt;    compatible_brands: isomiso2avc1mp41&lt;br /&gt;    encoder         &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; Lavf58.17.100&lt;br /&gt;  Duration: 00:01:47.53, start: &lt;span class=&quot;token number&quot;&gt;0.000000&lt;/span&gt;, bitrate: &lt;span class=&quot;token number&quot;&gt;10715&lt;/span&gt; kb/s&lt;br /&gt;    Stream &lt;span class=&quot;token comment&quot;&gt;#0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuvj420p(pc), 1920x1080, 10579 kb/s, 29.97 fps, 29.97 tbr, 30k tbn, 59.94 tbc (default)&lt;/span&gt;&lt;br /&gt;    Metadata:&lt;br /&gt;      handler_name    &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; VideoHandler&lt;br /&gt;    Stream &lt;span class=&quot;token comment&quot;&gt;#0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 128 kb/s (default)&lt;/span&gt;&lt;br /&gt;    Metadata:&lt;br /&gt;      handler_name    &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; SoundHandler&lt;br /&gt;At least one output &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; must be specified&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now that you&#39;ve tried your hand at using Shaka and FFmpeg, it&#39;s time to &lt;a href=&quot;https://web.dev/prepare-media&quot;&gt;Prepare media files for the web&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Containers and codecs</title>
    <link href="https://web.dev/containers-and-codecs/"/>
    <updated>2017-06-30T00:00:00Z</updated>
    <id>https://web.dev/containers-and-codecs/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;To support multiple browsers, you&#39;ll need to use FFmpeg to convert your mov file
to two different containers: an MP4 container and a WebM container. In actual
practice, you would likely specify a codec at the same time. For now, I&#39;m
letting FFmpeg use its defaults.&lt;/p&gt;
&lt;p&gt;To create the MP4:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mov glocken.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To create the WebM:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mov glocken.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;To create this article, I used FFmpeg version 4.2.2-tessus. If the command
lines don&#39;t work for your version of FFmpeg, consult the FFmpeg documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Webm takes longer to create than MP4. This isn&#39;t surprising when you look at the
results. While MP4 compresses to about two-thirds of the original file&#39;s size,
WebM is down to a mere fraction of the original&#39;s size. Though, your results may
vary. You can see this for yourself using the &lt;a href=&quot;https://www.tecmint.com/15-basic-ls-command-examples-in-linux/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ls -a&lt;/code&gt; bash
command&lt;/a&gt; in the
folder where your media files are located. For example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;-rw-r--r-- &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; jmedley  eng  &lt;span class=&quot;token number&quot;&gt;12080306&lt;/span&gt; Apr &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;:13 glocken.mov&lt;br /&gt;-rw-r--r-- &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; jmedley  eng  &lt;span class=&quot;token number&quot;&gt;10146121&lt;/span&gt; Apr &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;:25 glocken.mp4&lt;br /&gt;-rw-r--r-- &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; jmedley  eng    &lt;span class=&quot;token number&quot;&gt;491743&lt;/span&gt; Apr &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;:30 glocken.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;check-your-work&quot;&gt;Check your work &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/containers-and-codecs/#check-your-work&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To verify your results, use FFmpeg and Shaka Packager as already shown in
&lt;a href=&quot;https://web.dev/media-application-basics&quot;&gt;Media Application basics&lt;/a&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glocken.mp4 --dump_stream_info&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;codecs&quot;&gt;Codecs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/containers-and-codecs/#codecs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next the codec. As stated in &lt;a href=&quot;https://web.dev/media-file-basics&quot;&gt;Media file basics&lt;/a&gt;, a codec is &lt;em&gt;not&lt;/em&gt; the
same thing as a container (file type). Two files of the same container type
could hold data compressed using different codecs. The WebM format for example
allows audio to be encoded using either
&lt;a href=&quot;https://en.wikipedia.org/wiki/Vorbis&quot; rel=&quot;noopener&quot;&gt;vorbis&lt;/a&gt; or
&lt;a href=&quot;https://en.wikipedia.org/wiki/Opus_(audio_format)&quot; rel=&quot;noopener&quot;&gt;opus&lt;/a&gt;. To change the codec I
use FFmpeg. For example, this command outputs an mkv file with a vorbis audio
codec and an av1 video codec.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mov -c:a vorbis -c:v av1 glocken.mkv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In this example, the &lt;code&gt;-c:a&lt;/code&gt; flag and the &lt;code&gt;-c:v&lt;/code&gt; are for specifying the audio and
video codecs respectively.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/media-cheat-sheet#codec&quot;&gt;cheat sheet&lt;/a&gt; lists commands needed to convert codecs.
The tables below summarize the libraries used in FFmpeg to perform the codec
conversions for WebM and MP4 files. These are the formats recommended for DASH
and HLS respectively.&lt;/p&gt;
&lt;h2 id=&quot;video&quot;&gt;Video &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/containers-and-codecs/#video&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Codec&lt;/th&gt;
&lt;th&gt;Extension&lt;/th&gt;
&lt;th&gt;Library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;av1&lt;/td&gt;
&lt;td&gt;WebM&lt;br /&gt;mkv&lt;/td&gt;
&lt;td&gt;libaom-av1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h264&lt;/td&gt;
&lt;td&gt;MP4&lt;/td&gt;
&lt;td&gt;libx264&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vp9&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libvpx-vp9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;h2 id=&quot;audio&quot;&gt;Audio &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/containers-and-codecs/#audio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Codec&lt;/th&gt;
&lt;th&gt;Extension&lt;/th&gt;
&lt;th&gt;Library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;aac&lt;/td&gt;
&lt;td&gt;MP4&lt;/td&gt;
&lt;td&gt;aac&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opus&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libopus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vorbis&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libvorbis&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;Next, I&#39;ll show you how to change the file&#39;s &lt;a href=&quot;https://web.dev/bitrate&quot;&gt;bitrate&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Media manipulation cheat sheet</title>
    <link href="https://web.dev/media-cheat-sheet/"/>
    <updated>2018-09-20T00:00:00Z</updated>
    <id>https://web.dev/media-cheat-sheet/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This page offers these resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commands for manipulating specific characteristics of media files.&lt;/li&gt;
&lt;li&gt;The sequence of commands needed to get from a raw mov file to encrypted media assets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conversion is done with these applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/shaka-packager&quot; rel=&quot;noopener&quot;&gt;Shaka Packager&lt;/a&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/tagged/shaka&quot; rel=&quot;noopener&quot;&gt;on Stack Overflow&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ffmpeg.org/download.html&quot; rel=&quot;noopener&quot;&gt;FFmpeg&lt;/a&gt;, version 4.2.2-tessus (&lt;a href=&quot;https://stackoverflow.com/questions/tagged/ffmpeg&quot; rel=&quot;noopener&quot;&gt;on Stack Overflow&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.openssl.org/&quot; rel=&quot;noopener&quot;&gt;OpenSSL&lt;/a&gt;  (&lt;a href=&quot;https://stackoverflow.com/questions/tagged/openssl&quot; rel=&quot;noopener&quot;&gt;on Stack Overflow&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although I&#39;ve tried to show equivalent operations for all procedures, not all
operations are possible in both applications.&lt;/p&gt;
&lt;p&gt;In many cases, the commands I&#39;m showing may be combined in a single command line
operation, and in actual use would be. For example, there&#39;s nothing preventing
you from setting an output file&#39;s bitrate in the same operation as a file
conversion. For this cheat sheet, I often show these operations as separate
commands for the sake of clarity.&lt;/p&gt;
&lt;p&gt;Please let me know of useful additions or corrections.
&lt;a href=&quot;https://web.dev/media-cheat-sheet&quot;&gt;Pull requests are welcome&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This page contains a few more commands than are covered in this section. Not
only are there plans to cover these topics (we have drafts already), we also
hope this page will be a resource for multiple levels of expertise.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;display-characteristics&quot;&gt;Display characteristics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#display-characteristics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4 --dump_stream_info&lt;br /&gt;&lt;br /&gt;ffmpeg -i myvideo.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Technically, FFmpeg always requires an output file format. Calling FFmpeg this
way will give you an error message explaining that; however, it lists
information not available using Shaka Packager.&lt;/p&gt;
&lt;h2 id=&quot;demux-(split)-audio-and-video&quot;&gt;Demux (split) audio and video &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#demux-(split)-audio-and-video&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Shaka Packager requires demuxing when converting files. This is also required
for using media frameworks.&lt;/p&gt;
&lt;h3 id=&quot;shaka-packager&quot;&gt;Shaka Packager &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#shaka-packager&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;MP4&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_video.mp4&lt;br /&gt;packager &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_audio.m4a&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Or:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_video.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_audio.m4a&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WebM&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.webm,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_video.webm &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.webm,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_audio.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;ffmpeg&quot;&gt;FFmpeg &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#ffmpeg&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;MP4&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mp4 -vcodec copy -an myvideo_video.mp4&lt;br /&gt;ffmpeg -i myvideo.mp4 -acodec copy -vn myvideo_audio.m4a&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WebM&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.webm -vcodec copy -an myvideo_video.webm&lt;br /&gt;ffmpeg -i myvideo.webm -acodec copy -vn myvideo_audio.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;change-characteristics&quot;&gt;Change characteristics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#change-characteristics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;bitrate&quot;&gt;Bitrate &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#bitrate&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For FFmpeg, I can do this while I&#39;m converting to mp4 or WebM.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mov -b:v 350K myvideo.mp4&lt;br /&gt;ffmpeg -i myvideo.mov -vf &lt;span class=&quot;token assign-left variable&quot;&gt;setsar&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:1 -b:v 350K myvideo.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;dimensions-(resolution)&quot;&gt;Dimensions (resolution) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#dimensions-(resolution)&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.webm -s 1920x1080 myvideo_1920x1080.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;file-type&quot;&gt;File type &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#file-type&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Shaka Packager cannot process mov files and hence cannot be used to convert
files from that format.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;mov to MP4&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mov myvideo.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;mov to WebM&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mov myvideo.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;synchronize-audio-and-video&quot;&gt;Synchronize audio and video &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#synchronize-audio-and-video&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To ensure that audio and video synchronize during playback, insert keyframes.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mp4 -keyint_min &lt;span class=&quot;token number&quot;&gt;150&lt;/span&gt; -g &lt;span class=&quot;token number&quot;&gt;150&lt;/span&gt; -f webm -vf &lt;span class=&quot;token assign-left variable&quot;&gt;setsar&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:1 out.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;codec&quot;&gt;Codec &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#codec&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The tables below list common containers and codecs for both audio and video, as
well as the FFmpeg library needed for conversion. A conversion library must be
specified when converting files using FFmpeg.&lt;/p&gt;
&lt;h4 id=&quot;video&quot;&gt;Video &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#video&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Codec&lt;/th&gt;
&lt;th&gt;Container&lt;/th&gt;
&lt;th&gt;Library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;av1&lt;/td&gt;
&lt;td&gt;mkv&lt;/td&gt;
&lt;td&gt;libaom-av1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libaom-av1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h264&lt;/td&gt;
&lt;td&gt;MP4&lt;/td&gt;
&lt;td&gt;libx264&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vp9&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libvpx-vp9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;h4 id=&quot;audio&quot;&gt;Audio &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#audio&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Codec&lt;/th&gt;
&lt;th&gt;Container&lt;/th&gt;
&lt;th&gt;Library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;aac&lt;/td&gt;
&lt;td&gt;MP4&lt;/td&gt;
&lt;td&gt;aac&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;opus&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libopus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vorbis&lt;/td&gt;
&lt;td&gt;WebM&lt;/td&gt;
&lt;td&gt;libvorbis&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;MP4/H.264&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mp4 -c:v libx264 -c:a copy myvideo.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Audio for an MP4&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mp4 -c:v copy -c:a aac myvideo.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WebM/VP9&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.webm -v:c libvpx-vp9 -v:a copy myvideo.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Audio for a WebM&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.webm -v:c copy -v:a libvorbis myvideo.webm&lt;br /&gt;ffmpeg -i myvideo.webm -v:c copy -v:a libopus myvideo.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;packager&quot;&gt;Packager &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#packager&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;dashmpd&quot;&gt;DASH/MPD &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#dashmpd&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dynamic Adaptive Streaming over HTTP is a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/DASH_Adaptive_Streaming_for_HTML_5_Video&quot; rel=&quot;noopener&quot;&gt;web-standards-based&lt;/a&gt;
method of presenting video-on-demand for the web.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_audio.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_video.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --mpd_output myvideo_vod.mpd&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;hls&quot;&gt;HLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#hls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HTTP Live Streaming (HLS) is
&lt;a href=&quot;https://developer.apple.com/streaming/&quot; rel=&quot;noopener&quot;&gt;Apple&#39;s standard&lt;/a&gt;
for live streaming and video on demand for the web.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mp4 -c:a copy -b:v 8M -c:v copy -f hls -hls_time &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;        -hls_list_size &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; myvideo.m3u8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;clear-key-encryption&quot;&gt;Clear Key Encryption &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#clear-key-encryption&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;create-a-key&quot;&gt;Create a key &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#create-a-key&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can use the same method to create a key for both DASH and HLS. Do this using
&lt;a href=&quot;https://www.openssl.org/&quot; rel=&quot;noopener&quot;&gt;openssl&lt;/a&gt;. The following will create a key made of 16
hex values.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;openssl rand -out media.key &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This command creates a file with white space and new line characters, which are
not allowed by Shaka Packager. You&#39;ll need to open the key file and manually
remove all whitespace including the final carriage return.&lt;/p&gt;
&lt;h3 id=&quot;encrypt&quot;&gt;Encrypt &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#encrypt&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For the &lt;code&gt;-key&lt;/code&gt; flag use the key created earlier and stored in the media.key
file. However, when entering it on the command line, be sure you&#39;ve removed its
whitespace. For the &lt;code&gt;-key_id&lt;/code&gt; flag repeat the key value.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glocka.m4a &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glockv.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --enable_fixed_key_encryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  -key INSERT_KEY_HERE -key_id INSERT_KEY_ID_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;create-a-key-information-file&quot;&gt;Create a key information file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#create-a-key-information-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To encrypt for HLS you need a key information file in addition to a key file. A
key information file is a text file with the format below. It should have the extension &lt;code&gt;.keyinfo&lt;/code&gt;. For example: &lt;code&gt;encrypt.keyinfo&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;key URI&lt;br /&gt;key &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; path&lt;br /&gt;private key&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The key URI is where the &lt;code&gt;media.key&lt;/code&gt; (&lt;a href=&quot;https://web.dev/media-cheat-sheet/#create-a-key&quot;&gt;created above&lt;/a&gt; will be located on your server. The key file path is it&#39;s location relative to the key information file. Finally, the private key is the contents of the &lt;code&gt;media.key&lt;/code&gt; file itself. For example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;https://example.com/media.key&lt;br /&gt;/path/to/media.key&lt;br /&gt;8b4c39c498949536&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;encrypt-for-hls&quot;&gt;Encrypt for HLS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#encrypt-for-hls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;input=input.mp4,stream=video,segment_template=output$Number$.ts,playlist_name=video_playlist.m3u8&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;input=input.mp4,stream=audio,segment_template=output_audio$Number$.ts,playlist_name=audio_playlist.m3u8,hls_group_id=audio,hls_name=ENGLISH&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --hls_master_playlist_output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;master_playlist.m3u8&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --hls_base_url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http://localhost:1000/&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This command will accept a key with either 16 or 32 characters.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i myvideo.mov -c:v libx264 -c:a aac -hls_key_info_file key_info myvideo.m3u8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;widevine-encryption&quot;&gt;Widevine Encryption &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#widevine-encryption&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glocken.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;enc_video.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;glocken.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;enc_audio.m4a &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --enable_widevine_encryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --key_server_url &lt;span class=&quot;token string&quot;&gt;&quot;https://license.uat.widevine.com/cenc/getcontentkey/widevine_test&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --content_id &lt;span class=&quot;token string&quot;&gt;&quot;Hex_converted_unique_ID&quot;&lt;/span&gt; --signer &lt;span class=&quot;token string&quot;&gt;&quot;widevine_test&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --aes_signing_key &lt;span class=&quot;token string&quot;&gt;&quot;1ae8ccd0e7985cc0b6203a55855a1034afc252980e970ca90e5202689f947ab9&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --aes_signing_iv &lt;span class=&quot;token string&quot;&gt;&quot;d58ce954203b7c9a9a9d467f59839249&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;media-conversion-sequence&quot;&gt;Media conversion sequence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#media-conversion-sequence&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section shows in order commands needed to get from a raw mov file to
encrypted assets packaged for DASH or HLS. For the sake of having a goal to
illustrate, I&#39;m converting my source file to a bitrate of 8Mbs at a resolution
of 1080p (1920 x 1080). Adjust these values as your needs dictate.&lt;/p&gt;
&lt;h3 id=&quot;dashwebm-with-shaka-packager&quot;&gt;DASH/WebM with Shaka Packager &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#dashwebm-with-shaka-packager&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not all steps are possible with Shaka Packager, so I&#39;ll use ffmpeg when I need to.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Convert the file type and codec.&lt;/p&gt;
&lt;p&gt;For this command you can use either &lt;code&gt;liborbis&lt;/code&gt; or &lt;code&gt;libopus&lt;/code&gt; for the audio codec.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mov -c:v libvpx-vp9 -c:a libvorbis -b:v 8M -vf &lt;span class=&quot;token assign-left variable&quot;&gt;setsar&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;:1 -f webm glocken.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Clear Key encryption key.&lt;/p&gt;
&lt;p&gt;You&#39;ll need to open the key file and manually remove all whitespace
including the final carriage return.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;openssl rand -out media.key &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Demux (separate) the audio and video, encrypt the new files, and output a
media presentation description (MPD) file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;-key&lt;/code&gt; and &lt;code&gt;-key_id&lt;/code&gt; flags are copied from the &lt;code&gt;media.key&lt;/code&gt; file.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.webm,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_video.webm &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.webm,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo_audio.webm &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --enable_fixed_key_encryption --enable_fixed_key_decryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  -key INSERT_KEY_HERE -key_id INSERT_KEY_ID_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --mpd_output myvideo_vod.mpd&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remux (recombine) the audio and video streams. If you&#39;re using a video
framework, you may not need to do this.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i mymovie.mp4 -i myaudio.m4a -c copy finalmovie.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;dashmp4-with-shaka-packager&quot;&gt;DASH/MP4 with Shaka Packager &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#dashmp4-with-shaka-packager&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not all steps are possible with Shaka Packager, so I&#39;ll use ffmpeg when I need to.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Convert the file type, video codec and bitrate.&lt;/p&gt;
&lt;p&gt;The default pixel format, yuv420p is used because one isn&#39;t supplied in the
command line. The app will give you an error message that it is deprecated.
I&#39;ve chosen not to override the default because, though deprecated yuv420p
is the most widely supported.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i mymovie.mov -c:v libx264 -c:a aac -b:v 8M -strict -2 mymovie.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Clear Key encryption key.&lt;/p&gt;
&lt;p&gt;You&#39;ll need to open the key file and manually remove all whitespace
including the final carriage return.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;openssl rand -out media.key &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Demux (separate) the audio and video, encrypt the new files, and output a
media presentation description (MPD) file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;-key&lt;/code&gt; and &lt;code&gt;-key_id&lt;/code&gt; flags are copied from the &lt;code&gt;media.key&lt;/code&gt; file.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mymovie.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myaudio.m4a &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mymovie.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --enable_fixed_key_encryption --enable_fixed_key_decryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  -key INSERT_KEY_HERE -key_id INSERT_KEY_ID_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --mpd_output myvideo_vod.mpd&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remux (recombine) the audio and video streams. If you&#39;re using a video
framework, you may not need to do this.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i mymovie.mp4 -i myaudio.m4a -c copy finalmovie.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;widevine&quot;&gt;Widevine &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#widevine&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The two previous examples used Clear Key encryption. For widevine the final two
steps are replaced with this.&lt;/p&gt;
&lt;p&gt;Everything in this command except the name of your files and the &lt;code&gt;--content-id&lt;/code&gt;
flag should be copied exactly from the example. The &lt;code&gt;--content-id&lt;/code&gt; is 16 or 32
random hex digits. Use the keys provided here instead of your own.  (This is how
Widevine works.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Demux (separate) the audio and video, encrypt the new files, and output a
media presentation description (MPD) file.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mymovie.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;audio,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myaudio.m4a &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token assign-left variable&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mymovie.mp4,stream&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;video,output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;myvideo.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --enable_widevine_encryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --key_server_url &lt;span class=&quot;token string&quot;&gt;&quot;https://license.uat.widevine.com/cenc/getcontentkey/widevine_test&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --content_id &lt;span class=&quot;token string&quot;&gt;&quot;fd385d9f9a14bb09&quot;&lt;/span&gt; --signer &lt;span class=&quot;token string&quot;&gt;&quot;widevine_test&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --aes_signing_key &lt;span class=&quot;token string&quot;&gt;&quot;1ae8ccd0e7985cc0b6203a55855a1034afc252980e970ca90e5202689f947ab9&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  --aes_signing_iv &lt;span class=&quot;token string&quot;&gt;&quot;d58ce954203b7c9a9a9d467f59839249&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remux (recombine) the audio and video streams. If you&#39;re using a video
framework, you may not need to do this.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i mymovie.mp4 -i myaudio.m4a -c copy finalmovie.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;hlsmp4&quot;&gt;HLS/MP4 &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-cheat-sheet/#hlsmp4&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HLS only supports MP4, so first you&#39;ll need to convert to the MP4 container and
supported codecs. Not all steps are possible with Shaka Packager, so I&#39;ll use
FFmpeg when I need to.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Convert the file type, video codec, and bitrate.&lt;/p&gt;
&lt;p&gt;The default pixel format, yuv420p, is used because one isn&#39;t supplied in the
command line. The app will give you an error message that it is deprecated.
I&#39;ve chosen not to override the default because, though deprecated yuv420p
is the most widely supported.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i mymovie.mov -c:v libx264 -c:a aac -b:v 8M -strict -2 mymovie.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Clear Key encryption key.&lt;/p&gt;
&lt;p&gt;You&#39;ll need to open the key file and manually remove all whitespace
including the final carriage return.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;openssl rand -out media.key &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a key information file&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;packager &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;input=input.mp4,stream=video,segment_template=output$Number$.ts, \&lt;br /&gt;    playlist_name=video_playlist.m3u8&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;input=input.mp4,stream=audio,segment_template=output_audio$Number$.ts, \&lt;br /&gt;    playlist_name=audio_playlist.m3u8,hls_group_id=audio,hls_name=ENGLISH&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;      --hls_master_playlist_output&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;master_playlist.m3u8&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;      --hls_base_url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http://localhost:1000/&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;      --enable_fixed_key_encryption --enable_fixed_key_decryption &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;      -key INSERT_KEY_HERE -key_id INSERT_KEY_ID_HERE &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Introducing &lt;model-viewer&gt; 1.1</title>
    <link href="https://web.dev/introducing-model-viewer/"/>
    <updated>2020-09-03T00:00:00Z</updated>
    <id>https://web.dev/introducing-model-viewer/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;3D models are more relevant than ever. Retailers bring in-store shopping
experiences to customers&#39; homes. Museums are making 3D models of their artifacts
available to everyone on the web. Unfortunately, it can be difficult to add a 3D
model to a website in a way that provides a great user experience without a deep
knowledge of 3D technologies or resorting to hosting 3D content on a third-party
site. The &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; web component, &lt;a href=&quot;https://web.dev/model-viewer&quot;&gt;introduced in early
2019&lt;/a&gt;, seeks to make putting 3D models on the web as easy as
writing a few lines of HTML. Since then, the team has been working to address
feedback and requests from the community. The culmination of that work was
&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; version 1.0, released earlier this year. We&#39;re now announcing
the release of &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; 1.1. You can &lt;a href=&quot;https://github.com/google/model-viewer/releases/tag/v1.1.0&quot; rel=&quot;noopener&quot;&gt;read the release
notes&lt;/a&gt; in GitHub.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-new-since-last-year&quot;&gt;What&#39;s new since last year? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#what&#39;s-new-since-last-year&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Version 1.1 includes built-in support for augmented reality (AR) on the web,
improvements to speed and fidelity, and other frequently-requested features.&lt;/p&gt;
&lt;h3 id=&quot;augmented-reality&quot;&gt;Augmented reality &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#augmented-reality&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Viewing a 3D model on a blank canvas is great, but being able to view it in your
space is even better. For an entirely-within-the-browser 3D and AR Chrome
Android supports &lt;a href=&quot;https://modelviewer.dev/examples/augmented-reality.html&quot; rel=&quot;noopener&quot;&gt;augmented
reality&lt;/a&gt; using WebXR .&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;video controls=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/introducing-model-viewer/modelviewer1-0.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/introducing-model-viewer/modelviewer1-0.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A demonstration of the &lt;code&gt;&amp;lt;model-viewer&gt;&lt;/code&gt; AR capability.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;When it&#39;s ready, you&#39;ll be able to use it by add an &lt;code&gt;ar&lt;/code&gt; attribute to the
&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; tag. Other attributes allow you to customize the WebXR AR
experience, as shown in &lt;a href=&quot;https://modelviewer.dev/examples/webxr.html&quot; rel=&quot;noopener&quot;&gt;the WebXR sample on
modelviewer.dev&lt;/a&gt;. The code sample
below shows what this might look like.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Chair.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ar-scale&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;auto&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A 3D model of an office chair.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;!-- Hide until model-viewer&#39;s iframe bug is fixed --&gt;
&lt;!-- &lt;iframe style=&quot;width:100%; height: 100%;position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%);&quot; src=&quot;https://modelviewer.dev/examples/webxr.html&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;p&gt;It looks something like the embedded video shown under this heading.&lt;/p&gt;
&lt;h3 id=&quot;camera-controls&quot;&gt;Camera controls &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#camera-controls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; now gives full control over the view&#39;s virtual camera (the
perspective of the viewer). This includes the camera target, orbit (position
relative to the model), and field of view. You can also enable auto-rotation and
set limits on user interaction (e.g. maximum and minimum fields of view).&lt;/p&gt;
&lt;h3 id=&quot;annotations&quot;&gt;Annotations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#annotations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also annotate your models using HTML and CSS. This capability is often
used to &amp;quot;attach&amp;quot; labels to parts of the model in a way that moves with the model
as it&#39;s manipulated. The annotations are customizable, including their
appearance and the extent to which they&#39;re hidden by
the model. Annotations also work in AR.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 6px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 6px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3px solid blue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; blue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; border-box&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#annotation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #dddddd&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10px&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://modelviewer.dev/assets/ShopifyModels/ToyTrain.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A 3D model of a Toy Train&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hotspot-hand&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-position&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;-0.023 0.0594 0.0714&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-normal&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;-0.3792 0.0004 0.9253&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Whistle&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;!-- Hide until model-viewer&#39;s iframe bug is fixed --&gt;
&lt;!-- &lt;iframe style=&quot;width:100%; height: 100%;position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%);&quot; src=&quot;https://modelviewer.dev/webdotdev/annotations.html&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;A space suit with an annotation.&quot; decoding=&quot;async&quot; height=&quot;839&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/CG1JQXZP9Gncr7qLz5JZ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A space suit with an annotation.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;See the &lt;a href=&quot;https://modelviewer.dev/examples/annotations.html&quot; rel=&quot;noopener&quot;&gt;annotations documentation
page&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3 id=&quot;editor&quot;&gt;Editor &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#editor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Version 1.1 introduces and hosts a &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; &lt;a href=&quot;https://modelviewer.dev/editor/&quot; rel=&quot;noopener&quot;&gt;&amp;quot;editing&amp;quot;
tool&lt;/a&gt;, which enables you to
quickly preview your model, try out different &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; configurations
(e.g. exposure and shadow softness), generate a poster image, and interactively
get coordinates for annotations.&lt;/p&gt;
&lt;h3 id=&quot;rendering-and-performance-improvements&quot;&gt;Rendering and performance improvements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#rendering-and-performance-improvements&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rendering fidelity is greatly improved, especially for high dynamic range (HDR)
environments. &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; now also uses a direct render path when only one
&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; element is in the viewport, which increases performance
(especially on Firefox). Lastly, dynamically scaling the render resolution
improved frame rate dramatically. The example below shows off some of these
recent improvements.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token attr-name&quot;&gt;skybox-image&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;spruit_sunrise_1k_HDR.hdr&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A 3D model of a well-worn  helmet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;DamagedHelmet.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;!-- Hide until model-viewer&#39;s iframe bug is fixed --&gt;
&lt;!-- &lt;iframe style=&quot;width:100%; height: 100%;position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%);&quot; src=&quot;https://modelviewer.dev/webdotdev/rendering.html&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;A 3D model of a well-worn  helmet.&quot; decoding=&quot;async&quot; height=&quot;809&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ZAID4J5TsJTcJs3qPNTp.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A 3D model of a well-worn  helmet.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;stability&quot;&gt;Stability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#stability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; reaching its first major version, API stability is a
priority, so breaking changes will be avoided until version 2.0 is released.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-next&quot;&gt;What&#39;s next? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-model-viewer/#what&#39;s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; version 1.0 includes the most-requested capabilities, but the
team is not done yet. More features will be added, as will improvements in
performance, stability, documentation, and tooling. If you have suggestions,
file an &lt;a href=&quot;https://github.com/google/model-viewer/issues&quot; rel=&quot;noopener&quot;&gt;issue in Github&lt;/a&gt;; also,
PRs are always welcome. You can stay connected by following &lt;a href=&quot;https://twitter.com/modelviewer&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; on
Twitter&lt;/a&gt; and checking out the &lt;a href=&quot;https://spectrum.chat/model-viewer?tab=posts&quot; rel=&quot;noopener&quot;&gt;community chat
on Spectrum&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Rob Kochman</name>
    </author><author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>The &lt;video&gt; and &lt;source&gt; tags</title>
    <link href="https://web.dev/video-and-source-tags/"/>
    <updated>2015-02-15T00:00:00Z</updated>
    <id>https://web.dev/video-and-source-tags/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;You&#39;ve properly &lt;a href=&quot;https://web.dev/prepare-media/&quot;&gt;prepared a video file&lt;/a&gt; for the web. You&#39;ve
given it correct dimensions and the correct resolution. You&#39;ve even created
separate WebM and MP4 files for different browsers.&lt;/p&gt;
&lt;p&gt;For anyone to see it, you still need to add it to a web page. Doing so properly
requires two HTML elements: the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;
element and the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt;.
In addition to basics about these tags, this section also explains attributes
you should add to those tags to craft a good user experience.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You always have the option of uploading your file to
&lt;a href=&quot;https://www.youtube.com/&quot; rel=&quot;noopener&quot;&gt;YouTube&lt;/a&gt; or &lt;a href=&quot;https://vimeo.com/&quot; rel=&quot;noopener&quot;&gt;Vimeo&lt;/a&gt;. In many
cases, this is preferable to the procedure described here. Those services handle
formatting and filetype conversion for you, as well as provide the means to
embed a video in your web page. If you need to manage this yourself, read on.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;specify-a-single-file&quot;&gt;Specify a single file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#specify-a-single-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Although it&#39;s not recommended, you can use the video element by itself. Always
use the &lt;code&gt;type&lt;/code&gt; attribute as shown below. The browser uses this to determine if
it can play the provided video file. If it can&#39;t, the enclosed text displays.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chrome.webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Your browser cannot play the provided video file.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;specify-multiple-file-formats&quot;&gt;Specify multiple file formats &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#specify-multiple-file-formats&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Recall from &lt;a href=&quot;https://web.dev/media-file-basics&quot;&gt;Media file basics&lt;/a&gt; that not all browsers support the same
video formats. The &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element lets you specify multiple formats as a
fallback in case the user&#39;s browser doesn&#39;t support one of them.&lt;/p&gt;
&lt;p&gt;The example below produces the embedded video that immediately follows.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/web-dev-assets/video-and-source-tags/chrome.webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/web-dev-assets/video-and-source-tags/chrome.mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Your browser cannot play the provided video file.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://track-demonstration.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Try it&lt;/a&gt; (&lt;a href=&quot;https://glitch.com/edit/#!/track-demonstration&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;You should always add a &lt;code&gt;type&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; tags event though it
is optional. This ensures that the browser only downloads the file that it is
capable of playing.&lt;/p&gt;
&lt;p&gt;This approach has several advantages over serving different HTML or server-side
scripting, especially on mobile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can list formats in order of preference.&lt;/li&gt;
&lt;li&gt;Client-side switching reduces latency; only one request is made to
get content.&lt;/li&gt;
&lt;li&gt;Letting the browser choose a format is simpler, quicker, and potentially
more reliable than using a server-side support database with user-agent detection.&lt;/li&gt;
&lt;li&gt;Specifying each file source&#39;s type improves network performance; the browser can select a
video source without having to download part of the video to &amp;quot;sniff&amp;quot; the format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These issues are especially important in mobile contexts, where bandwidth and
latency are at a premium and the user&#39;s patience is likely limited. Omitting the
&lt;code&gt;type&lt;/code&gt; attribute can affect performance when there are multiple sources with
unsupported types.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;There are a few ways you can dig into the details. Check out &lt;a href=&quot;https://www.xiph.org/video/vid1.shtml&quot; rel=&quot;noopener&quot;&gt;A
Digital Media Primer for Geeks&lt;/a&gt; to find out
more about how video and audio work on the web. You can also use &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/remote-debugging&quot; rel=&quot;noopener&quot;&gt;remote
debugging&lt;/a&gt;
in DevTools to compare network activity &lt;a href=&quot;https://googlesamples.github.io/web-fundamentals/fundamentals/media/video-main.html&quot; rel=&quot;noopener&quot;&gt;with type
attributes&lt;/a&gt;
and &lt;a href=&quot;https://googlesamples.github.io/web-fundamentals/fundamentals/design-and-ux/responsive/notype.html&quot; rel=&quot;noopener&quot;&gt;without type
attributes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also check the response headers in your browser developer tools to
&lt;a href=&quot;https://developer.mozilla.org/en/docs/Properly_Configuring_Server_MIME_Types&quot; rel=&quot;noopener&quot;&gt;ensure your server reports the right MIME type&lt;/a&gt;;
otherwise video source type checks won&#39;t work.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;specify-start-and-end-times&quot;&gt;Specify start and end times &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#specify-start-and-end-times&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Save bandwidth and make your site feel more responsive: use media fragments to
add start and end times to the video element.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/video-and-source-tags/chrome.webm#t=5,10&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/video-and-source-tags/chrome.mp4#t=5,10&quot; type=&quot;video/mp4&quot; /&gt;
    &lt;p&gt;This browser does not support the video element.&lt;/p&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;To use a media fragment, add &lt;code&gt;#t=[start_time][,end_time]&lt;/code&gt; to the media URL. For
example, to play the video from seconds 5 to 10, specify:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/chrome.webm#t=5,10&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also specify the times in &lt;code&gt;&amp;lt;hours&amp;gt;:&amp;lt;minutes&amp;gt;:&amp;lt;seconds&amp;gt;&lt;/code&gt;. For example,
&lt;code&gt;#t=00:01:05&lt;/code&gt; starts the video at one minute, five seconds. To play only the
first minute of video, specify &lt;code&gt;#t=,00:01:00&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can use this feature to deliver multiple views on the same video–like
cue points in a DVD–without having to encode and serve multiple files.&lt;/p&gt;
&lt;p&gt;For this feature to work, your server must support range requests and that
capability must be enabled. Most servers enable range requests by default.
Because some hosting services turn them off, you should confirm that range
requests are available for using fragments on your site.&lt;/p&gt;
&lt;p&gt;Fortunately, you can do this in your browser developer tools. In Chrome, for
instance, it&#39;s in the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/?utm_source=devtools#network&quot; rel=&quot;noopener&quot;&gt;Network
panel&lt;/a&gt;.
Look for the &lt;code&gt;Accept-Ranges&lt;/code&gt; header is and verify that it says &lt;code&gt;bytes&lt;/code&gt;. In a the
image, I&#39;ve drawn a red box  around this header. If you do not see &lt;code&gt;bytes&lt;/code&gt; as
the value, you&#39;ll need to contact your hosting provider.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome DevTools screenshot: Accept-Ranges: bytes.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;480&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/20DlLyicG5PAo6TXBKh3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Chrome DevTools screenshot: Accept-Ranges: bytes.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;include-a-poster-image&quot;&gt;Include a poster image &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#include-a-poster-image&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add a poster attribute to the &lt;code&gt;video&lt;/code&gt; element so that viewers have an idea of
the content as soon as the element loads, without needing to download the video
or start playback.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;poster.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;A poster can also be a fallback if the video &lt;code&gt;src&lt;/code&gt; is broken or if none of the
supplied video formats are supported. The only downside to a poster images is an
additional file request, which consumes some bandwidth and requires rendering.
For more information see &lt;a href=&quot;https://web.dev/uses-optimized-images/&quot;&gt;Efficiently encode images&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; w-figure--inline-left=&quot;&quot;&gt;
  &lt;img alt=&quot;Without a fallback poster, the video just looks broken.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/R8VNeplKwajJhOuVkPDT.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
&lt;/figure&gt;
&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;Without a fallback poster, the video just looks broken.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; w-figure--inline-right=&quot;&quot;&gt;
  &lt;img alt=&quot;A fallback poster makes it seem as if the first frame has been captured.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rNhydHVGeL2P0sQ0je5k.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
&lt;/figure&gt;
&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;A fallback poster makes it seem as if the first frame has been captured.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;ensure-videos-don&#39;t-overflow-containers&quot;&gt;Ensure videos don&#39;t overflow containers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#ensure-videos-don&#39;t-overflow-containers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When video elements are too big for the viewport, they may overflow their
container, making it impossible for the user to see the content or use the
controls.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
  &lt;figure class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;Android Chrome screenshot, portrait: unstyled video element overflows viewport.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 338px) 338px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/cDl2OfCE3hQivhaNvMUh.png?auto=format&amp;w=676 676w&quot; width=&quot;338&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;Android Chrome screenshot, portrait: unstyled video element overflows
    viewport.&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;Android Chrome screenshot, landscape: unstyled video element overflows viewport.&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bCiZsNkZNsAhWbOBsLCs.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;Android Chrome screenshot, landscape: unstyled video element overflows
    viewport.&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;You can control video dimensions using CSS. If CSS does not meet all of your
needs, JavaScript libraries and plugins such as &lt;a href=&quot;http://fitvidsjs.com/&quot; rel=&quot;noopener&quot;&gt;FitVids&lt;/a&gt;
(outside the scope of this article) can help, even for videos from YouTube and
other sources. Unfortunately, these resources can increase your &lt;a href=&quot;https://web.dev/total-byte-weight/&quot;&gt;network payload
sizes&lt;/a&gt; with negative consequences for your
revenues and your users&#39; wallets.&lt;/p&gt;
&lt;p&gt;For simple uses like the ones I&#39;m describing here, use &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/responsive/#css-media-queries&quot; rel=&quot;noopener&quot;&gt;CSS media
queries&lt;/a&gt; to
specify the size of elements depending on the viewport dimensions; &lt;code&gt;max-width: 100%&lt;/code&gt; is your friend.&lt;/p&gt;
&lt;p&gt;For media content in iframes (such as YouTube videos), try a responsive approach
(like the one &lt;a href=&quot;http://avexdesigns.com/responsive-youtube-embed/&quot; rel=&quot;noopener&quot;&gt;proposed by John
Surdakowski&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Don&#39;t force element sizing that results in an &lt;a href=&quot;https://www.google.com/search?q=aspect+ratio&amp;amp;oq=aspect+ratio&amp;amp;aqs=chrome..69i57j35i39j0l6.1896j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot; rel=&quot;noopener&quot;&gt;aspect
ratio&lt;/a&gt;
different from the original video. Squashed or stretched videos looks bad.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CSS:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.video-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 56.25%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.video-container iframe,&lt;br /&gt;.video-container object,&lt;br /&gt;.video-container embed&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;HTML:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;//www.youtube.com/embed/l-BA9Ee2XuM&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token attr-name&quot;&gt;frameborder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;560&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;315&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://googlesamples.github.io/web-fundamentals/fundamentals/media/responsive_embed.html&quot; rel=&quot;noopener&quot;&gt;Try it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Compare the &lt;a href=&quot;https://googlesamples.github.io/web-fundamentals/fundamentals/media/responsive_embed.html&quot; rel=&quot;noopener&quot;&gt;responsive sample&lt;/a&gt;
to the &lt;a href=&quot;https://googlesamples.github.io/web-fundamentals/fundamentals/design-and-ux/responsive/unyt.html&quot; rel=&quot;noopener&quot;&gt;unresponsive version&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;device-orientation&quot;&gt;Device orientation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#device-orientation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Device orientation isn&#39;t an issue for desktop monitors or laptops, but it&#39;s
hugely important when considering web page design for mobile devices and
tablets.&lt;/p&gt;
&lt;p&gt;Safari on iPhone does a good job of switching between portrait and landscape
orientation:&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of video playing in Safari on iPhone, portrait.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 338px) 338px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/AmHneDShMOioWZwYG2kF.png?auto=format&amp;w=676 676w&quot; width=&quot;338&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screenshot of video playing in Safari on iPhone, portrait.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of video playing in Safari on iPhone, landscape.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;338&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 600px) 600px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MZwkLJaXVk4g8lruhiKZ.png?auto=format&amp;w=1200 1200w&quot; width=&quot;600&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screenshot of video playing in Safari on iPhone, landscape.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Device orientation on an iPad and Chrome on Android can be problematic.
For example, without any customization a video playing on an iPad in landscape
orientation looks like this:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of video playing in Safari on iPad, landscape.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 600px) 600px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/9FsExgY6cJFfMkxOPNkl.png?auto=format&amp;w=1200 1200w&quot; width=&quot;600&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screenshot of video playing in Safari on iPad, landscape.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Setting the video &lt;code&gt;width: 100%&lt;/code&gt; or &lt;code&gt;max-width: 100%&lt;/code&gt; with CSS can resolve
many device orientation layout problems.&lt;/p&gt;
&lt;h3 id=&quot;autoplay&quot;&gt;Autoplay &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#autoplay&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;autoplay&lt;/code&gt; attribute controls whether the browser downloads and plays a
video immediately. The precise way it works depends on the platform and browser.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chrome: Depends on multiple factors including but not limited to whether the
viewing is on desktop and whether the a mobile user has added your site or app
to their homescreen. For  details, see &lt;a href=&quot;https://developers.google.com/web/updates/2017/09/autoplay-policy-changes&quot; rel=&quot;noopener&quot;&gt;Autoplay Policy
Changes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Firefox: Blocks all video and sound, but gives user the ability to relax these
restrictions for either all sites or particular sites. For details, see &lt;a href=&quot;https://web.dev/video-and-source-tags/&quot;&gt;Allow
or block media autoplay in Firefox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Safari: Has historically required a user gesture, but has been relaxing that
requirement in recent versions. For details, see &lt;a href=&quot;https://webkit.org/blog/6784/new-video-policies-for-ios/&quot; rel=&quot;noopener&quot;&gt;New &amp;lt;video&amp;gt; Policies for
iOS&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even on platforms where autoplay is possible, you need to consider whether
it&#39;s a good idea to enable it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data usage can be expensive.&lt;/li&gt;
&lt;li&gt;Playing media before the user wants it can hog bandwidth and CPU, and thereby
delay page rendering.&lt;/li&gt;
&lt;li&gt;Users may be in a context where playing video or audio is intrusive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;preload&quot;&gt;Preload &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/video-and-source-tags/#preload&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;preload&lt;/code&gt; attribute provides a hint to the browser as to how much
information or content to preload.&lt;/p&gt;
&lt;table class=&quot;responsive&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Value&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td data-th=&quot;Value&quot;&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt;
      &lt;td data-th=&quot;Description&quot;&gt;The user might chose not to watch the video, so don&#39;t
      preload anything.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td data-th=&quot;Value&quot;&gt;&lt;code&gt;metadata&lt;/code&gt;&lt;/td&gt;
      &lt;td data-th=&quot;Description&quot;&gt;Metadata (duration, dimensions, text tracks) should be
      preloaded, but with minimal video.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td data-th=&quot;Value&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt;
      &lt;td data-th=&quot;Description&quot;&gt;Downloading the entire video right away is considered
      desirable. An empty string produces the same result.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;preload&lt;/code&gt; attribute has different effects on different platforms.
For example, Chrome buffers 25 seconds of video on desktop but none on iOS or
Android. This means that on mobile, there may be playback startup delays
that don&#39;t happen on desktop. See &lt;a href=&quot;https://www.stevesouders.com/blog/2013/04/12/html5-video-preload/&quot; rel=&quot;noopener&quot;&gt;Steve Souders&#39;
blog&lt;/a&gt; for
full details.&lt;/p&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author><author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Bitrate</title>
    <link href="https://web.dev/bitrate/"/>
    <updated>2017-06-30T00:00:00Z</updated>
    <id>https://web.dev/bitrate/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In the &lt;a href=&quot;https://web.dev/containers-and-codecs&quot;&gt;previous section&lt;/a&gt;, I showed you how to change
a media file&#39;s container and codec. In this section, I show how to change
bitrate before explaining &lt;a href=&quot;https://web.dev/resolution&quot;&gt;resolution&lt;/a&gt; and, finally, &lt;a href=&quot;https://web.dev/add-media&quot;&gt;how to
embed your file in a page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bitrate and resolution correlate to the amount of data in a media file. It
probably goes without saying, but I&#39;m going to say it anyway. You can always
lower bitrate and resolution, but increasing them is a problem. Without special
software and algorithms, quality is going to take a hit.&lt;/p&gt;
&lt;p&gt;So always start your conversion process with the highest quality source file you
can get your hands on. Before doing anything, even before changing the codec or
container, &lt;a href=&quot;https://web.dev/media-cheat-sheet/#display-characteristics&quot;&gt;check the file
characteristics&lt;/a&gt; and verify that your
source file has a higher bitrate or resolution than your desired result.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitrate&lt;/em&gt; is the maximum number of bits used to encode one second of a media stream.
The more bits used to encode a second of stream, the higher the fidelity.&lt;/p&gt;
&lt;p&gt;Unsurprisingly, bitrates the web can handle are low. The table below shows you
what bitrate you should target for common network conditions. For the sake of
comparison, I&#39;ve thrown in values for Blu-rays and DVDs.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The web numbers are approximations. This chart should not be a substitute for
doing your own testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Delivery method&lt;/th&gt;
&lt;th&gt;Bitrate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Blu-ray&lt;/td&gt;
&lt;td&gt;20Mbs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DVD&lt;/td&gt;
&lt;td&gt;6 Mbs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Desktop web&lt;/td&gt;
&lt;td&gt;2 Mbs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4G mobile&lt;/td&gt;
&lt;td&gt;0.7 Mbs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3G mobile&lt;/td&gt;
&lt;td&gt;0.35 Mbs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2G mobile&lt;/td&gt;
&lt;td&gt;Depends on network type.&lt;ul&gt;&lt;li&gt;EDGE: 0.4 Mbs&lt;/li&gt;&lt;li&gt;GPRS: 0.04Mbs&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;Which value should I use for video on my web pages? The short answer is at
least: desktop, 4G, and 3G. If you&#39;re serving video in one of the markets
referred to as &amp;quot;the next billion users&amp;quot;, say India, for example, you&#39;ll want to
include 2G as well. For demonstration purposes, I&#39;m going to target 3G.&lt;/p&gt;
&lt;p&gt;In FFmpeg you set the bitrate with the (surprise!) bitrate (&lt;code&gt;-b&lt;/code&gt;) flag.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.mov -b:v 350k -b:a 64k glocken.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Notice that there are two bitrate flags, &lt;code&gt;-b:a&lt;/code&gt; and &lt;code&gt;-b:v&lt;/code&gt;. One is for audio and the
other is for video.&lt;/p&gt;
&lt;p&gt;Now that your files are prepared, it&#39;s time to &lt;a href=&quot;https://web.dev/resolution&quot;&gt;adjust their resolutions&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>What is a media experience?</title>
    <link href="https://web.dev/media-experience/"/>
    <updated>2017-06-30T00:00:00Z</updated>
    <id>https://web.dev/media-experience/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Users like media, especially videos; they can be fun and informative. On mobile
devices, videos can be an easier way to consume information than text. For a
good user experience, videos should not need more than the available bandwidth.
Users should be able to use them no matter what device they&#39;re viewing them
with. Users should never need to wait for download. Who likes it when they press
play and nothing happens?&lt;/p&gt;
&lt;p&gt;You&#39;ve no doubt consumed video on your own device. Which means that nothing in
that last paragraph surprises you. Now you need to learn how to put a video or
other media file on your own website. The technical requirements of that work
should be in service to the user experience. Those technical requirements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Versions of a media file in common web-friendly formats containing both audio
and video streams.&lt;/li&gt;
&lt;li&gt;A resolution appropriate for your users&#39; devices.&lt;/li&gt;
&lt;li&gt;A bitrate that doesn&#39;t overload your users&#39; network bandwidth.&lt;/li&gt;
&lt;li&gt;(Optional) Encryption.&lt;/li&gt;
&lt;li&gt;Viewable on all major browsers using appropriate technologies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our &lt;a href=&quot;https://web.dev/media&quot;&gt;media&lt;/a&gt; collection will help you achieve these technical
requirements. Don&#39;t worry if you don&#39;t know what these technical requirements
mean. I&#39;ll explain them.&lt;/p&gt;
&lt;p&gt;There are four approaches you can take displaying video on a site.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Upload your content to a hosting site such as
&lt;a href=&quot;https://www.youtube.com/&quot; rel=&quot;noopener&quot;&gt;YouTube&lt;/a&gt; or &lt;a href=&quot;https://vimeo.com/&quot; rel=&quot;noopener&quot;&gt;Vimeo&lt;/a&gt;. These
options do not preclude displaying from within your website.&lt;/li&gt;
&lt;li&gt;Basic embedding using the HTML &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; elements.&lt;/li&gt;
&lt;li&gt;More full-featured embedding using a video library such as &lt;a href=&quot;https://github.com/google/shaka-player&quot; rel=&quot;noopener&quot;&gt;Google&#39;s Shaka
Player&lt;/a&gt;, &lt;a href=&quot;https://developer.jwplayer.com/&quot; rel=&quot;noopener&quot;&gt;JW
Player&lt;/a&gt;, or &lt;a href=&quot;http://videojs.com/&quot; rel=&quot;noopener&quot;&gt;Video.js&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Building your own media streaming application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This site only covers the second option, at least for now. The last item,
building a media streaming application is beyond the scope of this site.
Frankly, it requires a team of expert programmers and thousands of human-hours
of work. Unless your goal is to enter that market as a competitor, you&#39;re better
off using one of the other methods.&lt;/p&gt;
&lt;p&gt;This site has three parts. In the first, I&#39;ll provide information prerequisite
to adding media to your site. This includes explaining how media files are put
together and basics about the applications you&#39;ll need to prepare your files for
the web. The second section explains how to prepare your files. In the last, I
show how to embed a media file in a web page and make it accessible.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Prepare media files for the web</title>
    <link href="https://web.dev/prepare-media/"/>
    <updated>2017-06-30T00:00:00Z</updated>
    <id>https://web.dev/prepare-media/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Now that I&#39;ve introduced you to &lt;a href=&quot;https://web.dev/media-application-basics&quot;&gt;applications used for manipulating media
files&lt;/a&gt;, over the next few pages, I&#39;m going to take a raw
video file off a camera and transform it into a resource that you can
embed in a web page. I&#39;m specifically going to show you how to format your video
for mobile playback, and how to create multiple files to cover a range of
browsers. Specifically, I&#39;ll create a WebM file for use on Chrome and an MP4
file for use on other browsers.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This section provides explanations of file manipulation concepts,
with command lines only to illustrate the concepts. There is a companion &lt;a href=&quot;https://web.dev/media-cheat-sheet&quot;&gt;cheat
sheet&lt;/a&gt; that shows more commands and is designed as a quick reference
for someone who knows the concepts.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The result of this procedure will be media resources with the following
characteristics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Versions of a media file in common web-friendly formats containing both audio
and video streams.&lt;/li&gt;
&lt;li&gt;A resolution appropriate for your users&#39; devices.&lt;/li&gt;
&lt;li&gt;A bitrate that doesn&#39;t overload your users&#39; network bandwidth.&lt;/li&gt;
&lt;li&gt;Viewable on all major browsers using appropriate technologies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By &amp;quot;appropriate technologies&amp;quot; I mean &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/DASH_Adaptive_Streaming_for_HTML_5_Video&quot; rel=&quot;noopener&quot;&gt;Dynamic Adaptive Streaming over HTTP
(DASH)&lt;/a&gt;
or &lt;a href=&quot;https://developer.apple.com/documentation/http_live_streaming&quot; rel=&quot;noopener&quot;&gt;HTTP Live Streaming
(HLS)&lt;/a&gt;, which are
the two primary means of providing video in HTML on the major browsers. What
those terms mean and how to use them is a whole topic itself. I won&#39;t be getting
into those, and you don&#39;t really need to know much about them,
but by the end of this article, you&#39;ll be able to create media files
that are ready for use in DASH and HLS.&lt;/p&gt;
&lt;p&gt;One final note: my selection of the file formats, bitrate, and resolution are
not arbitrary. I&#39;ve selected these values for speedy playback on the mobile web.&lt;/p&gt;
&lt;p&gt;If you want to play along at home, you&#39;ll need a raw video file off a camera,
preferably one that contains both audio and video. If you don&#39;t have one handy,
then here&#39;s &lt;a href=&quot;https://storage.googleapis.com/web-dev-assets/prepare-media/glocken.mov&quot; rel=&quot;noopener&quot;&gt;ten seconds of an &lt;code&gt;.mov&lt;/code&gt;
file&lt;/a&gt;
that I took of the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Rathaus-Glockenspiel&quot; rel=&quot;noopener&quot;&gt;Rathaus-Glockenspiel&lt;/a&gt;
in Munich&#39;s MarienPlatz.&lt;/p&gt;
&lt;p&gt;Now, let&#39;s create a media file using the correct &lt;a href=&quot;https://web.dev/containers-and-codecs&quot;&gt;containers and
codecs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This section covers four tasks. You will need to do all of them to prepare an
&lt;code&gt;.mov&lt;/code&gt; file for display on the web.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In &lt;a href=&quot;https://web.dev/containers-and-codecs&quot;&gt;Containers and codecs&lt;/a&gt; I show you how to
convert an &lt;code&gt;.mov&lt;/code&gt; file to the formats required for web playback.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;a href=&quot;https://web.dev/bitrate&quot;&gt;Bitrate&lt;/a&gt; and &lt;a href=&quot;https://web.dev/resolution&quot;&gt;Resolution&lt;/a&gt; you&#39;ll learn to make
your files smaller and hence friendlier for low-bandwidth and mobile
download.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After your files are prepared, you&#39;ll &lt;a href=&quot;https://web.dev/add-media&quot;&gt;add them to a web page&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Resolution</title>
    <link href="https://web.dev/resolution/"/>
    <updated>2017-06-30T00:00:00Z</updated>
    <id>https://web.dev/resolution/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In previous sections I showed you how to change a media file&#39;s &lt;a href=&quot;https://web.dev/containers-and-codecs&quot;&gt;codec,
containers&lt;/a&gt;, and &lt;a href=&quot;https://web.dev/bitrate&quot;&gt;bitrate&lt;/a&gt;. This page
covers resolution. Then I&#39;ll move on to &lt;a href=&quot;https://web.dev/add-media&quot;&gt;adding them to a web
page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Resolution&lt;/em&gt; is the amount of information in a single frame of video, given as
the number of logical pixels in each dimension. For example, a resolution of
1920 by 1080 works out to 1080 stacked horizontal lines, each of which is one
logical pixel high and 1920 logical pixels wide. This resolution is frequently
abbreviated 1080p because technically the width can vary. The dimensions 1080 by
1920 produce an &lt;a href=&quot;https://en.wikipedia.org/wiki/Aspect_ratio_(image)&quot; rel=&quot;noopener&quot;&gt;aspect
ratio&lt;/a&gt; of 16:9, which is the
ratio of movie screens and modern television sets. By the way this is the
resolution defined as &lt;a href=&quot;https://www.google.com/search?q=what+is+hd+resolution&amp;amp;oq=what+is+hd+resolution&amp;amp;aqs=chrome.0.0l6.3183j0j8&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8#q=full+hd+resolution&quot; rel=&quot;noopener&quot;&gt;full
HD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.google.com/youtube/answer/6375112&quot; rel=&quot;noopener&quot;&gt;YouTube recommends&lt;/a&gt; the
following resolutions for video uploads, all in the 16:9 aspect ratio. There&#39;s
nothing specific to YouTube about this list. It&#39;s just a list of common 16:9
video resolutions.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Abbreviation&lt;/th&gt;
&lt;th&gt;Dimensions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2160p&lt;/td&gt;
&lt;td&gt;3840 x 2160&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1440p&lt;/td&gt;
&lt;td&gt;2560 x 1440&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1080p&lt;/td&gt;
&lt;td&gt;1920 x 1080&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;720p&lt;/td&gt;
&lt;td&gt;1280 x 720&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;480p&lt;/td&gt;
&lt;td&gt;854 x 480&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;360p&lt;/td&gt;
&lt;td&gt;640 x 360&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;240p&lt;/td&gt;
&lt;td&gt;426 x 240&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;Which one should you use? That depends on your application. For simple embedding
you may chose a single resolution. If you&#39;re preparing files for DASH or HLS,
you may chose one, several, or all. Fortunately, this is one of the simplest
transformations you&#39;ll make with FFmpeg.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ffmpeg -i glocken.webm -s 640x360 glocken_640x360.webm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It&#39;s worth reiterating that you should start from the highest resolution and
bitrate file you have available. If you&#39;re upgrading an older site, you&#39;ll want
to find your original camera or other high resolution sources and convert from
that rather than from your older web site files (for example, flv or f4v files).&lt;/p&gt;
&lt;p&gt;Now that your files are prepared, it&#39;s time to &lt;a href=&quot;https://web.dev/add-media&quot;&gt;add them to a web
page&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Add media to a web page</title>
    <link href="https://web.dev/add-media/"/>
    <updated>2020-06-19T00:00:00Z</updated>
    <id>https://web.dev/add-media/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this section you&#39;ll learn how to embed a media file in a web page using the
&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; tags, and how to add captions to a video for the
hearing-impaired.&lt;/p&gt;
&lt;p&gt;This section assumes you have an audio or video file that is ready for embedding
in a web page. An mov file straight off a camera will not work. If an mov file
is all you have, see &lt;a href=&quot;https://web.dev/prepare-media&quot;&gt;Prepare media files for the web&lt;/a&gt; then come back.&lt;/p&gt;
&lt;p&gt;This section covers two topics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;a href=&quot;https://web.dev/video-and-source-tags&quot;&gt;The &amp;lt;video&amp;gt; and &amp;lt;source&amp;gt; tags&lt;/a&gt; you&#39;ll
learn specifically how to embed a media file in a web page.&lt;/li&gt;
&lt;li&gt;In &lt;a href=&quot;https://web.dev/media-accessibility&quot;&gt;Accessibility with the &amp;lt;track&amp;gt; tag&lt;/a&gt; you&#39;ll
learn to add captions to a media file for hearing impaired.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Be sure not to skip the accessibility section. The technical aspects of
supporting accessibility are not that difficult. They are also a regulatory or
legal requirement in many places.&lt;/p&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Media file basics</title>
    <link href="https://web.dev/media-file-basics/"/>
    <updated>2020-06-19T00:00:00Z</updated>
    <id>https://web.dev/media-file-basics/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;You might think that you can take a video camera and upload it to the web as is.
Indeed, video streaming sites such as &lt;a href=&quot;https://www.youtube.com/&quot; rel=&quot;noopener&quot;&gt;YouTube&lt;/a&gt; or
&lt;a href=&quot;https://vimeo.com/&quot; rel=&quot;noopener&quot;&gt;Vimeo&lt;/a&gt; let you do this. These sites simplify video
processing and uploading for the sake of customer service. Preparing a video for
serving from your own site is a bit more complicated.&lt;/p&gt;
&lt;p&gt;Video files come in a variety of formats. The format that comes off your camera,
typically a &lt;code&gt;.mov&lt;/code&gt; file, is good for recording and for editing and other early
post-production processes. Its size means it&#39;s not good for streaming over the
web. Because browsers support different file formats, you&#39;ll need to create
multiple files. Before converting files you need to understand a few basics
about them and about their characteristics.&lt;/p&gt;
&lt;p&gt;The file that you see in your operating system shell is a &lt;em&gt;container&lt;/em&gt;,
identified by a file extension (&lt;code&gt;.mp4&lt;/code&gt;, &lt;code&gt;.webm&lt;/code&gt;, etc.). The container houses one or
more &lt;em&gt;streams&lt;/em&gt;. A media file can have any number of streams, of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats&quot; rel=&quot;noopener&quot;&gt;more
types&lt;/a&gt; than I will
go into here.&lt;/p&gt;
&lt;p&gt;The sample files used later in this section contain at most two streams: an
audio stream and a video stream. Among the other types you might encounter are
captions and data, both of which are beyond the scope of this article. There are
instances where audio and video streams are dealt with separately. Most files
you&#39;ll encounter will only contain a single audio stream and a single video
stream.&lt;/p&gt;
&lt;p&gt;Within the audio and video streams, the actual data is compressed using a codec.
A &lt;em&gt;codec&lt;/em&gt;, or coder/decoder, is a compression format for video or audio data. The
distinction between a container and a codec is important because files with the
same container can have their contents encoded with different codecs.&lt;/p&gt;
&lt;p&gt;The image below illustrates this structure. On the left is the basic structure.
On the right are the specifics of that structure for a single WebM file.&lt;/p&gt;
&lt;figure class=&quot;w-figure  w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;Comparing media file structure with a hypothetical media file.&quot; decoding=&quot;async&quot; height=&quot;250&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 560px) 560px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QwNEBBa8LEMpedJh5imG.png?auto=format&amp;w=1120 1120w&quot; width=&quot;560&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Parts of a media file.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Not all browsers support up-to-date containers and codecs. For example, WebM is
high-quality and open source. Files in WebM packages can be orders of magnitude
smaller than other formats, making them a good choice for mobile download.
Although WebM was created specifically for the web, its support is not yet
universal. Safari in particular does not, as of this writing,
&lt;a href=&quot;https://caniuse.com/#feat=webm&quot; rel=&quot;noopener&quot;&gt;support&lt;/a&gt; WebM for embedded video.&lt;/p&gt;
&lt;p&gt;All modern browsers support MP4 files, making them a good general choice for a
media container and the best choice as the backup container for WebM.&lt;/p&gt;
&lt;p&gt;Many file formats support multiple codecs for the same container type. A
complete list of available &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs&quot; rel=&quot;noopener&quot;&gt;video
codecs&lt;/a&gt;
and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs&quot; rel=&quot;noopener&quot;&gt;audio
codecs&lt;/a&gt;
would be a whole website itself. The links just provided are for MDN&#39;s practical
lists of what&#39;s usable on the web. Listed below are the currently preferred file
types and the codecs they may use. Follow the links for browser support lists.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File type&lt;/th&gt;
&lt;th&gt;Video Codec&lt;/th&gt;
&lt;th&gt;Audio Codec&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://caniuse.com/#search=mp4&quot; rel=&quot;noopener&quot;&gt;MP4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#AV1&quot; rel=&quot;noopener&quot;&gt;AV1&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#AVC_H.264&quot; rel=&quot;noopener&quot;&gt;AVC (H.264)&lt;/a&gt;*, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#VP9&quot; rel=&quot;noopener&quot;&gt;VP9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs#AAC&quot; rel=&quot;noopener&quot;&gt;aac&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://caniuse.com/#feat=webm&quot; rel=&quot;noopener&quot;&gt;WebM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#AV1&quot; rel=&quot;noopener&quot;&gt;AV1&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#VP9&quot; rel=&quot;noopener&quot;&gt;VP9&lt;/a&gt;*&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs#Vorbis&quot; rel=&quot;noopener&quot;&gt;vorbis&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs#Opus&quot; rel=&quot;noopener&quot;&gt;opus&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;* Indicates the preferred video codec.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bitrate&lt;/em&gt; is the maximum number of bits used to encode one second of a stream.
The more bits used to encode a second of stream, the higher the potential
detail and fidelity.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Resolution&lt;/em&gt; is the amount of information in a single frame of video, given as
the number of logical pixels in each dimension. I provide more information about this
concept in &lt;a href=&quot;https://web.dev/resolution&quot;&gt;Resolution&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://web.dev/media-application-basics/&quot;&gt;Media application basics&lt;/a&gt;, I&#39;ll show you how to examine
these characteristics using two command line tools: Shaka Packager and FFmpeg.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Media accessibility</title>
    <link href="https://web.dev/media-accessibility/"/>
    <updated>2020-08-20T00:00:00Z</updated>
    <id>https://web.dev/media-accessibility/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Accessibility isn&#39;t like icing on a cake. It&#39;s never anything you put on a
backlog with the hope of introducing it later. Captions and screen reader
descriptions are the only way many users can experience your videos, and in some
jurisdictions, they&#39;re even required by law or regulation.&lt;/p&gt;
&lt;p&gt;To add captions or screen reader descriptions to a web video, add a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt; tag
to a &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag. In addition to captions and screen reader descriptions, tags
may also be used for subtitles and chapter titles. The can also help search
engines understand what&#39;s in a video. Those capabilities are outside the scope
of this article.&lt;/p&gt;
&lt;figure class=&quot;w-figure  w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;Screenshot showing captions displayed using the track element in Chrome on Android&quot; decoding=&quot;async&quot; height=&quot;480&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screenshot showing captions displayed using the
track element in Chrome on Android&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;An example &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag with two &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tags is shown below. There&#39;s also a
sample you can &lt;a href=&quot;https://track-demonstration.glitch.me/&quot; rel=&quot;noopener&quot;&gt;view on Glitch&lt;/a&gt;
(&lt;a href=&quot;https://glitch.com/edit/#!/track-demonstration&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To add captions to your video add a track element as a child of the video
element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/webfundamentals-assets/videos/chrome.webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/webfundamentals-assets/videos/chrome.mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;track&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chrome-subtitles-en.vtt&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;English captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token attr-name&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;srclang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;track&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chrome-subtitles-zh.vtt&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;中文字幕&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token attr-name&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;srclang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;zh&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;This browser does not support the video element.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag is similar to the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element in that both have a &lt;code&gt;src&lt;/code&gt;
attribute that points to referenced content. For a &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag, it points to a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API&quot; rel=&quot;noopener&quot;&gt;WebVTT file&lt;/a&gt;.  The
&lt;code&gt;label&lt;/code&gt; attribute specifies the how a particular track will be identified in the
interface. To provide tracks for multiple languages add a separate &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag
for each WebVTT file you&#39;re providing and indicate the language using the
&lt;code&gt;srclang&lt;/code&gt; attribute. The &lt;code&gt;default&lt;/code&gt; attribute indicates which language track is
the default.&lt;/p&gt;
&lt;h2 id=&quot;define-captions-in-track-file&quot;&gt;Define captions in track file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-accessibility/#define-captions-in-track-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Below is a hypothetical WebVTT file for the demo linked to above. The file is a text file containing a series of &lt;em&gt;cues&lt;/em&gt;. Each cue is a block of text to display on screen and the time range during which it will be displayed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;WEBVTT&lt;br /&gt;&lt;br /&gt;00:00.000 --&gt; 00:04.999&lt;br /&gt;Man sitting on a tree branch, using a laptop.&lt;br /&gt;&lt;br /&gt;00:05.000 --&gt; 00:08.000&lt;br /&gt;The branch breaks, and he starts to fall.&lt;br /&gt;&lt;br /&gt;...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each item in a track file is called a cue. Each cue has a start time and end
time separated by an arrow, with cue text in the line below. Cues can optionally
also have IDs: &lt;code&gt;railroad&lt;/code&gt; and &lt;code&gt;manuscript&lt;/code&gt; in the example below. Cues are
separated by an empty line.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;WEBVTT&lt;br /&gt;&lt;br /&gt;railroad&lt;br /&gt;00:00:10.000 --&gt; 00:00:12.500&lt;br /&gt;Left uninspired by the crust of railroad earth&lt;br /&gt;&lt;br /&gt;manuscript&lt;br /&gt;00:00:13.200 --&gt; 00:00:16.900&lt;br /&gt;that touched the lead to the pages of your manuscript.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Cue times are in hours:minutes:seconds:milliseconds format. Parsing is strict.
Numbers must be zero padded if necessary: hours, minutes, and seconds must have
two digits (00 for a zero value) and milliseconds must have three digits (000
for zero). There is an excellent WebVTT validator at &lt;a href=&quot;https://quuz.org/webvtt/&quot; rel=&quot;noopener&quot;&gt;Live WebVTT
Validator&lt;/a&gt;, which checks for errors in time
formatting, and problems such as non-sequential times.&lt;/p&gt;
&lt;p&gt;You can create a VTT file by hand, thought there are &lt;a href=&quot;https://www.google.com/search?q=webvtt+services&quot; rel=&quot;noopener&quot;&gt;services that will create
them for you&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>The &lt;model-viewer&gt; web component</title>
    <link href="https://web.dev/model-viewer/"/>
    <updated>2019-02-06T00:00:00Z</updated>
    <id>https://web.dev/model-viewer/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Adding 3D models to a website is tricky. 3D models ideally will be shown in
a viewer that can work responsively on all browsers including smartphones,
desktop, or even new head-mounted displays. The viewer should support
progressive enhancement for performance and rendering quality. It should support
use cases on all devices ranging from older, lower-powered smartphones to newer
devices that support augmented reality. It should stay up to date with current
technologies. It should be performant and accessible. However, building such a
viewer requires specialty 3D programming skills, and can be a challenge for web
developers that want to host their own models instead of using a third-party
hosting service.&lt;/p&gt;
&lt;p&gt;To help with that, the &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; web component, which just released
&lt;a href=&quot;https://modelviewer.dev/&quot; rel=&quot;noopener&quot;&gt;version 1.1&lt;/a&gt;, lets you declaratively add a 3D model
to a web page, while hosting the model on your own site. The web component
supports responsive design and use cases like augmented reality on some devices,
and it includes features for accessibility, rendering quality, and
interactivity.  The goal of the component is to enable adding 3D models to your
website without understanding the underlying technology and platforms.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;We&#39;re always &lt;a href=&quot;https://github.com/google/model-viewer/releases&quot; rel=&quot;noopener&quot;&gt;updating and
improving&lt;/a&gt;
&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;. Check out the &lt;a href=&quot;https://modelviewer.dev/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;
homepage&lt;/a&gt; to explore what &amp;lt;model-viewer&amp;gt; 1.1 can do.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-a-web-component&quot;&gt;What is a web component? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#what-is-a-web-component&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A web component is a custom HTML element built from standard web platform
features. A web component behaves for all intents and purposes like a standard
element. It has a unique tag, it can have properties and methods, and it can
fire and respond to events. In short, you don&#39;t need to know anything special to
use any web component, much less &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this article, I will show you things that are particular to &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;.
If you&#39;re interested in learning more about web components,
&lt;a href=&quot;https://www.webcomponents.org/&quot; rel=&quot;noopener&quot;&gt;webcomponents.org&lt;/a&gt; is a good place to start.&lt;/p&gt;
&lt;h2 id=&quot;what-can-lessmodel-viewergreater-do&quot;&gt;What can &amp;lt;model-viewer&amp;gt; do? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#what-can-lessmodel-viewergreater-do&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&#39;ll show you a few current capabilities of &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;. You&#39;ll get a great
experience today, and &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; will get better over time as Google adds
new features and improves rendering quality. The examples I&#39;m provided are just
to give you a sense of what it does. If you want to try them there are
installation and usage instructions in &lt;a href=&quot;https://modelviewer.dev/&quot; rel=&quot;noopener&quot;&gt;its GitHub
repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;basic-3d-models&quot;&gt;Basic 3D models &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#basic-3d-models&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Embedding a 3D model is as simple as the markup below. By
&lt;a href=&quot;https://www.marxentlabs.com/glb-files/&quot; rel=&quot;noopener&quot;&gt;using glb files&lt;/a&gt;, we&#39;ve ensured that this component will work on any major
browser.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Import the component --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;module&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;nomodule&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@google/model-viewer/dist/model-viewer-legacy.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Use it like any other HTML element --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;mv-demo&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;shadow-intensity&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;./spacesuit.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;A 3D model of an astronaut&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;auto-rotate&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token attr-name&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;./spacesuit.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;That code renders like this:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://model-viewer-shark.glitch.me/&quot; title=&quot;&lt;model-viewer&gt; on Glitch&quot; allow=&quot;geolocation; microphone; camera; midi; vr; encrypted-media;
clipboard; clipboard-read; clipboard-write&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;adding-motion-and-interactivity&quot;&gt;Adding motion and interactivity &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#adding-motion-and-interactivity&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;auto-rotate&lt;/code&gt; and &lt;code&gt;camera-controls&lt;/code&gt; attributes provide motion and user
control. Those aren&#39;t the only possible attributes. See the documentation for &lt;a href=&quot;https://modelviewer.dev/#section-attributes&quot; rel=&quot;noopener&quot;&gt;a
complete list of attributes&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;assets/Astronaut.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;auto-rotate&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;delayed-loading-with-poster-images&quot;&gt;Delayed loading with poster images &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#delayed-loading-with-poster-images&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some 3D models can be very large, so you might want to hold off loading them
until the user has requested the model. For this, the component has a built-in
means of delaying loading until the user wants it. That&#39;s what the &lt;code&gt;poster&lt;/code&gt;
attribute does.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;assets/Astronaut.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;auto-rotate&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token attr-name&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;./spacesuit.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To show your users that it&#39;s a 3D model, and not just an image, you can provide
some preload animation by using script to switch between multiple posters.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-poster&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;assets/Astronaut.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token attr-name&quot;&gt;auto-rotate&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;assets/poster2.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posters &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;poster.png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;poster2.png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;        document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#toggle-poster&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;poster&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;assets/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;posters&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;responsive-design&quot;&gt;Responsive design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#responsive-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The component handles some types of &lt;a href=&quot;https://web.dev/responsive-web-design-basics&quot;&gt;responsive design&lt;/a&gt;, scaling for both mobile
and desktop. It can also manage multiple instances on a page and uses
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver&quot; rel=&quot;noopener&quot;&gt;Intersection
Observer&lt;/a&gt;
to conserve battery power and GPU cycles when a model isn&#39;t visible.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Multiple spacesuit images representing responsiveness.&quot; decoding=&quot;async&quot; height=&quot;453&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/8jXl21iFxh7O3QeEeL0k.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Multiple spacesuit images representing responsiveness.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;looking-forward&quot;&gt;Looking Forward &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/model-viewer/#looking-forward&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://modelviewer.dev/&quot; rel=&quot;noopener&quot;&gt;Install &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; and give it a try&lt;/a&gt; The
project team wants &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; to be useful to you, and wants your input on
its future. That&#39;s not to say they don&#39;t have ideas. So give it a try and let us
know what you think by &lt;a href=&quot;https://github.com/google/model-viewer/issues&quot; rel=&quot;noopener&quot;&gt;filing an issue in
GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Richer offline experiences with the Periodic Background Sync API</title>
    <link href="https://web.dev/periodic-background-sync/"/>
    <updated>2019-11-10T00:00:00Z</updated>
    <id>https://web.dev/periodic-background-sync/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Web apps should be able to do anything iOS/Android/desktop apps can. The
&lt;a href=&quot;https://developers.google.com/web/updates/capabilities&quot; rel=&quot;noopener&quot;&gt;Capabilities project&lt;/a&gt;,
of which Periodic Background Sync is only a part, aims
to do just that. To learn about other capabilities and to keep up with their
progress, follow &lt;a href=&quot;https://developers.google.com/web/updates/capabilities&quot; rel=&quot;noopener&quot;&gt;Unlocking new capabilities for the
web&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Have you ever been in any of the following situations?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Riding a train or subway with flaky or no connectivity&lt;/li&gt;
&lt;li&gt;Been throttled by your carrier after watching too many videos&lt;/li&gt;
&lt;li&gt;Living in a country where bandwidth struggles to keep up with the demand&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have, then you&#39;ve surely felt the frustration of getting
certain things done on the web, and wondered why platform-specific apps so often do better
in these scenarios. Platform-specific apps can fetch fresh content such as news articles or weather
information ahead of time. Even if there&#39;s no network in the subway, you can still read the
news.&lt;/p&gt;
&lt;p&gt;Periodic Background Sync enables web applications to periodically synchronize
data in the background, bringing web apps closer to the behavior of a platform-specific
app.&lt;/p&gt;
&lt;h2 id=&quot;current-status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#current-status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The table below explains the current status of the Periodic Background Sync API.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;th markdown=&quot;block&quot;&gt;
Step
&lt;/th&gt;
&lt;th markdown=&quot;block&quot;&gt;
Status
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td markdown=&quot;block&quot;&gt;
1. Create explainer
&lt;/td&gt;
&lt;td markdown=&quot;block&quot;&gt;
&lt;a href=&quot;https://github.com/WICG/BackgroundSync/tree/master/explainers&quot;&gt;Complete&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td markdown=&quot;block&quot;&gt;
2. Create initial draft of specification
&lt;/td&gt;
&lt;td markdown=&quot;block&quot;&gt;
&lt;a href=&quot;https://wicg.github.io/periodic-background-sync/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td markdown=&quot;block&quot;&gt;
3. Gather feedback and iterate on design
&lt;/td&gt;
&lt;td markdown=&quot;block&quot;&gt;
In Progress
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td markdown=&quot;block&quot;&gt;
4. Origin trial
&lt;/td&gt;
&lt;td markdown=&quot;block&quot;&gt;
Complete
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td markdown=&quot;block&quot;&gt;
&lt;strong&gt;5. Launch&lt;/strong&gt;
&lt;/td&gt;
&lt;td markdown=&quot;block&quot;&gt;
&lt;strong&gt;Chrome 80&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id=&quot;try-it&quot;&gt;Try it &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#try-it&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can try periodic background sync with the &lt;a href=&quot;https://webplatformapis.com/periodic_sync/periodicSync_improved.html&quot; rel=&quot;noopener&quot;&gt;live demo
app&lt;/a&gt;.
Before using it, make sure that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You&#39;re using Chrome 80 or later.&lt;/li&gt;
&lt;li&gt;You
&lt;a href=&quot;https://developers.google.com/web/fundamentals/app-install-banners/&quot; rel=&quot;noopener&quot;&gt;install&lt;/a&gt;
the web app before enabling periodic background sync.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;concepts-and-usage&quot;&gt;Concepts and usage &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#concepts-and-usage&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Periodic background sync lets you show fresh content when a progressive web app
or service worker-backed page is launched. It does this by downloading data in
the background when the app or page is not being used. This prevents the app&#39;s
content from refreshing after launch while it&#39;s being viewed. Better yet, it
prevents the app from showing a content spinner before refreshing.&lt;/p&gt;
&lt;p&gt;Without periodic background sync, web apps must use alternative methods to
download data. A common example is using a push notification to wake a service
worker. The user is interrupted by a message such as &#39;new data available&#39;.
Updating the data is essentially a side effect. You still have the option of
using push notifications for truly important updates, such as significant
breaking news.&lt;/p&gt;
&lt;p&gt;Periodic background sync is easily confused with background sync. Though they
have similar names, their use cases are different. Among other things,
background sync is most commonly used for resending data to a server when a
previous request has failed.&lt;/p&gt;
&lt;h3 id=&quot;getting-user-engagement-right&quot;&gt;Getting user engagement right &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#getting-user-engagement-right&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Done incorrectly, periodic background sync could be wasteful of users&#39;
resources. Before releasing it, Chrome put it through a trial period to make
sure it was right. This section explains some of the design decisions Chrome
took to make this feature as helpful as possible.&lt;/p&gt;
&lt;p&gt;The first design decision Chrome made is that a web app can only use periodic
background sync after a person has installed it on their device, and has
launched it as a distinct application. Periodic background sync is not available
in the context of a regular tab in Chrome.&lt;/p&gt;
&lt;p&gt;Furthermore, since Chrome doesn&#39;t want unused or seldom used web apps to gratuitously
consume battery or data, Chrome designed periodic background sync such that
developers will have to earn it by providing value to their users. Concretely,
Chrome is using a &lt;a href=&quot;https://www.chromium.org/developers/design-documents/site-engagement&quot; rel=&quot;noopener&quot;&gt;site engagement score&lt;/a&gt;
(&lt;code&gt;about://site-engagement/&lt;/code&gt;) to determine if and how often periodic background syncs can happen
for a given web app. In other words, a &lt;code&gt;periodicsync&lt;/code&gt; event won&#39;t be fired at all unless the engagement
score is greater than zero, and its value affects the frequency at which the
&lt;code&gt;periodicsync&lt;/code&gt; event fires. This ensures that the only apps syncing in the
background are the ones you are actively using.&lt;/p&gt;
&lt;p&gt;Periodic background sync shares some similarities with existing APIs and
practices on popular platforms. For instance, one-off background sync as well as
push notifications allow a web app&#39;s logic to live a little longer (via its
service worker) after a person has closed the page. On most platforms, it&#39;s
common for people to have installed apps that periodically access the network in
the background to provide a better user experience for critical updates,
prefetching content, syncing data, and so on. Similarly, periodic background sync also
extends the lifetime of a web app&#39;s logic to run at regular periods for what
might be a few minutes at a time.&lt;/p&gt;
&lt;p&gt;If the browser allowed this to occur frequently and without restrictions, it
could result in some privacy concerns. Here&#39;s how Chrome has addressed this
risk for periodic background sync:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The background sync activity only occurs on a network that the device has
previously connected to. Chrome recommends to only connect to networks operated by
trustworthy parties.&lt;/li&gt;
&lt;li&gt;As with all internet communications, periodic background sync reveals the IP
addresses of the client, the server it&#39;s talking to, and the name of the
server. To reduce this exposure to roughly what it would be if the app only
synced when it was in the foreground, the browser limits the frequency of an
app&#39;s background syncs to align with how often the person uses that app. If
the person stops frequently interacting with the app, periodic background sync
will stop triggering. This is a net improvement over the status quo in platform-specific
apps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;when-can-it-be-used&quot;&gt;When can it be used? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#when-can-it-be-used&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rules for use vary by browser. To summarize from above, Chrome puts the
following requirements on periodic background sync:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A particular user engagement score.&lt;/li&gt;
&lt;li&gt;Presence of a previously used network.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The timing of synchronizations are not controlled by developers. The
synchronization frequency will align with how often the app is used. (Note that
platform-specific apps currently don&#39;t do this.) It also takes into the device&#39;s power and
connectivity state.&lt;/p&gt;
&lt;h3 id=&quot;when-should-it-be-used&quot;&gt;When should it be used? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#when-should-it-be-used&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When your service worker wakes up to handle a &lt;code&gt;periodicsync&lt;/code&gt; event, you have the
&lt;em&gt;opportunity&lt;/em&gt; to request data, but not the &lt;em&gt;obligation&lt;/em&gt; to do so. When handling
the event you should take network conditions and available storage into
consideration and download different amounts of data in response. You can use
the following resources to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API&quot; rel=&quot;noopener&quot;&gt;Network Information API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/save-data/#detecting_the_save-data_setting&quot; rel=&quot;noopener&quot;&gt;Detecting data saver mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/08/estimating-available-storage-space&quot; rel=&quot;noopener&quot;&gt;Estimating available storage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;permissions&quot;&gt;Permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#permissions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After the service worker is installed, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API&quot; rel=&quot;noopener&quot;&gt;Permissions
API&lt;/a&gt; to query
for &lt;code&gt;periodic-background-sync&lt;/code&gt;. You can do this from either a window or a
service worker context.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; status &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;periodic-background-sync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;status&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Periodic background sync can be used.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Periodic background sync cannot be used.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;registering-a-periodic-sync&quot;&gt;Registering a periodic sync &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#registering-a-periodic-sync&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As already stated, periodic background sync requires a service worker. Retrieve
a &lt;code&gt;PeriodicSyncManager&lt;/code&gt; using &lt;code&gt;ServiceWorkerRegistration.periodicSync&lt;/code&gt; and call
&lt;code&gt;register()&lt;/code&gt; on it. Registering requires both a tag and a minimum
synchronization interval (&lt;code&gt;minInterval&lt;/code&gt;). The tag identifies the registered sync
so that multiple syncs can be registered. In the example below, the tag name is
&lt;code&gt;&#39;content-sync&#39;&lt;/code&gt; and the &lt;code&gt;minInterval&lt;/code&gt; is one day.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; registration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ready&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;periodicSync&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;periodicSync&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;content-sync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token comment&quot;&gt;// An interval of one day.&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      minInterval&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Periodic background sync cannot be used.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;verifying-a-registration&quot;&gt;Verifying a registration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#verifying-a-registration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Call &lt;code&gt;periodicSync.getTags()&lt;/code&gt; to retrieve an array of registration tags. The
example below uses tag names to confirm that cache updating is active to avoid
updating again.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; registration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ready&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;periodicSync&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tags &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;periodicSync&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Only update content if sync isn&#39;t set up.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;content-sync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;updateContentOnPageLoad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// If periodic background sync isn&#39;t supported, always update.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token function&quot;&gt;updateContentOnPageLoad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also use &lt;code&gt;getTags()&lt;/code&gt; to show a list of active registrations in your web
app&#39;s settings page so that users can enable or disable specific types of
updates.&lt;/p&gt;
&lt;h3 id=&quot;responding-to-a-periodic-background-sync-event&quot;&gt;Responding to a periodic background sync event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#responding-to-a-periodic-background-sync-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To respond to a periodic background sync event add a &lt;code&gt;periodicsync&lt;/code&gt; event
handler to your service worker. The &lt;code&gt;event&lt;/code&gt; object passed to it will contain a
&lt;code&gt;tag&lt;/code&gt; parameter matching the value used during registration. For example if a
periodic background sync was registered with the name &lt;code&gt;&#39;content-sync&#39;&lt;/code&gt;, then
&lt;code&gt;event.tag&lt;/code&gt; will be &lt;code&gt;&#39;content-sync&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;periodicsync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tag &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;content-sync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// See the &quot;Think before you sync&quot; section for&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// checks you could perform before syncing.&lt;/span&gt;&lt;br /&gt;    event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;syncContent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Other logic for different tags as needed.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;unregistering-a-sync&quot;&gt;Unregistering a sync &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#unregistering-a-sync&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To end a registered sync, call &lt;code&gt;periodicSync.unregister()&lt;/code&gt; with the name of the
sync you want to unregister.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; registration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ready&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;periodicSync&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;periodicSync&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;unregister&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;content-sync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;interfaces&quot;&gt;Interfaces &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#interfaces&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s a quick run down of the interfaces provided by the Periodic Background
Sync API.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PeriodicSyncEvent&lt;/code&gt;. Passed to the &lt;code&gt;ServiceWorkerGlobalScope.onperiodicsync&lt;/code&gt; event handler at a
time of the browser&#39;s choosing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PeriodicSyncManager&lt;/code&gt;. Registers and unregisters periodic syncs and provides tags for registered
syncs. Retrieve an instance of this class from the ServiceWorkerRegistration.periodicSync`
property.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ServiceWorkerGlobalScope.onperiodicsync&lt;/code&gt;. Registers a handler to receive the &lt;code&gt;PeriodicSyncEvent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ServiceWorkerRegistration.periodicSync&lt;/code&gt;. Returns a reference to the &lt;code&gt;PeriodicSyncManager&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;example&quot;&gt;Example &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#example&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;updating-content&quot;&gt;Updating content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#updating-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The following example uses periodic background sync to download and cache up-to-date articles for a news site or blog. Notice the tag name, which indicates the kind of sync this is (&lt;code&gt;&#39;update-articles&#39;&lt;/code&gt;). The call to &lt;code&gt;updateArticles()&lt;/code&gt; is wrapped in &lt;code&gt;event.waitUntil()&lt;/code&gt; so that the service worker won&#39;t terminate before the articles are downloaded and stored.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateArticles&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; articlesCache &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; caches&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;articles&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; articlesCache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/api/articles&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;periodicsync&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tag &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;update-articles&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateArticles&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;adding-periodic-background-sync-to-an-existing-web-app&quot;&gt;Adding periodic background sync to an existing web app &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#adding-periodic-background-sync-to-an-existing-web-app&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/so-pwa/pull/11&quot; rel=&quot;noopener&quot;&gt;This set of changes&lt;/a&gt; were needed to add
periodic background sync to an &lt;a href=&quot;https://so-pwa.firebaseapp.com/&quot; rel=&quot;noopener&quot;&gt;existing PWA&lt;/a&gt;. This example includes a number of helpful logging statements that describe the
state of periodic background sync in the web app.&lt;/p&gt;
&lt;h2 id=&quot;debugging&quot;&gt;Debugging &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#debugging&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It can be a challenge to get and end-to-end view of periodic background sync
while testing locally. Information about active registrations, approximate sync
intervals, and logs of past sync events provide valuable context while debugging
your web app&#39;s behavior. Fortunately, you can find all of that information
through an experimental feature in Chrome DevTools.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Periodic background sync debugging is enabled in Chrome 81 and later.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;recording-local-activity&quot;&gt;Recording local activity &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#recording-local-activity&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Periodic Background Sync&lt;/strong&gt; section of DevTools is organized around key events
in the periodic background sync lifecycle: registering for sync, performing a
background sync, and unregistering. To obtain information about these events,
click &lt;strong&gt;Start recording&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The record button in DevTools&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;90&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 708px) 708px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/wcl5Bm6Pe9xn5Dps6IN6.png?auto=format&amp;w=1416 1416w&quot; width=&quot;708&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The record button in DevTools
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;While recording, entries will appear in DevTools corresponding to events, with
context and metadata logged for each.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example of recorded periodic background sync data&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;357&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/m92Art0OwiM0VyI7czFB.png?auto=format&amp;w=1600 1600w&quot; style=&quot;max-width: 75%&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    An example of recorded periodic background sync data
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;After enabling recording once, it will stay enabled for up to three days,
allowing DevTools to capture local debugging information about background syncs
that might take place, even hours in the future.&lt;/p&gt;
&lt;h3 id=&quot;simulating-events&quot;&gt;Simulating events &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#simulating-events&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While recording background activity can be helpful, there are times when you&#39;ll
want to test your &lt;code&gt;periodicsync&lt;/code&gt; handler immediately, without waiting for an
event to fire on its normal cadence.&lt;/p&gt;
&lt;p&gt;You can do this via the &lt;strong&gt;Service Workers&lt;/strong&gt; section within the Application panel in
Chrome DevTools. The &lt;strong&gt;Periodic Sync&lt;/strong&gt; field allows you to provide a tag for the
event to use, and to trigger it as many times as you&#39;d like.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Manually triggering a &lt;code&gt;periodicsync&lt;/code&gt; event requires Chrome 81 or later.&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The &amp;#x27;Service Workers&amp;#x27; section of the Application panel shows a &amp;#x27;Periodic Sync&amp;#x27; text field and button.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;321&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ5QdjwaRDP42cHqW98W.png?auto=format&amp;w=1600 1600w&quot; style=&quot;max-width: 90%&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;using-the-devtools-interface&quot;&gt;Using the DevTools interface &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/periodic-background-sync/#using-the-devtools-interface&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Starting in Chrome 81, you&#39;ll see a &lt;strong&gt;Periodic Background Sync&lt;/strong&gt; section in the
DevTools &lt;em&gt;Application&lt;/em&gt; panel.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Application panel showing the Periodic Background Sync section&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;253&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 382px) 382px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/eYJtJfZ9Qo145lUQe4Ur.png?auto=format&amp;w=764 764w&quot; style=&quot;max-width: 75%&quot; width=&quot;382&quot; /&gt;
&lt;/figure&gt;
</content>
    <author>
      <name>Jeff Posnick</name>
    </author><author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Improving page dismissal in synchronous XMLHttpRequest()</title>
    <link href="https://web.dev/disallow-synchronous-xhr/"/>
    <updated>2019-12-18T00:00:00Z</updated>
    <id>https://web.dev/disallow-synchronous-xhr/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;It&#39;s common for a page or app to have unsubmitted analytics or other data at the
time a user closes it. To prevent data loss, some sites use a synchronous call
to &lt;code&gt;XMLHttpRequest()&lt;/code&gt; to keep the page or app open until its data is passed to
the server. Not only are there better ways to save data, but this technique creates
a bad user experience by delaying closing of the page for up to several seconds.&lt;/p&gt;
&lt;p&gt;This practice needs to change, and browsers are responding. The &lt;code&gt;XMLHttpRequest()&lt;/code&gt;
specification is already &lt;a href=&quot;https://xhr.spec.whatwg.org/#sync-warning&quot; rel=&quot;noopener&quot;&gt;slated for deprecation and
removal&lt;/a&gt;. Chrome 80 takes the first
step by disallowing synchronous calls inside several event handlers,
specifically &lt;code&gt;beforeunload&lt;/code&gt;, &lt;code&gt;unload&lt;/code&gt;, &lt;code&gt;pagehide&lt;/code&gt;, and &lt;code&gt;visibilitychange&lt;/code&gt; when
they are fired in the dismissal. WebKit also recently landed &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=204912&quot; rel=&quot;noopener&quot;&gt;a commit implementing
the same behavior change&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this article I&#39;ll briefly describe options for those who need time to update
their sites and outline the alternatives to &lt;code&gt;XMLHttpRequest()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;temporary-opt-outs&quot;&gt;Temporary opt-outs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disallow-synchronous-xhr/#temporary-opt-outs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome does not simply want to pull the plug on &lt;code&gt;XMLHttpRequest()&lt;/code&gt;, which is why a few
temporary opt-out options are available. For sites on the internet, &lt;a href=&quot;https://developers.chrome.com/origintrials/#/view_trial/4391009636686233601&quot; rel=&quot;noopener&quot;&gt;an origin
trial is
available&lt;/a&gt;.
With this, you add an origin-specific token to your page headers that enables
synchronous &lt;code&gt;XMLHttpRequest()&lt;/code&gt; calls. This option ends shortly before Chrome 89
ships, sometime in March 2021. Enterprise Chrome customers can also
use the  &lt;code&gt;AllowSyncXHRInPageDismissal&lt;/code&gt; policy flag, which ends at the same time.&lt;/p&gt;
&lt;h2 id=&quot;alternatives&quot;&gt;Alternatives &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disallow-synchronous-xhr/#alternatives&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Regardless of how you send data back to the server, it&#39;s best to avoid waiting
until page unload to send all the data at once. Aside from creating a bad user
experience, unload is unreliable on modern browsers and risks data loss if
something goes wrong. Specifically, unload events &lt;a href=&quot;https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/&quot; rel=&quot;noopener&quot;&gt;often don&#39;t fire on mobile
browsers&lt;/a&gt;
because there are &lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&quot; rel=&quot;noopener&quot;&gt;many ways to
close&lt;/a&gt; a
tab or browser on mobile operating systems without the &lt;code&gt;unload&lt;/code&gt; event firing.
With &lt;code&gt;XMLHttpRequest()&lt;/code&gt;, using small payloads was a choice. Now it&#39;s a
requirement. Both of its alternatives have an upload limit of 64 KB per
context, as required by the specification.&lt;/p&gt;
&lt;h3 id=&quot;fetch-keepalive&quot;&gt;Fetch keepalive &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disallow-synchronous-xhr/#fetch-keepalive&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot; rel=&quot;noopener&quot;&gt;Fetch API&lt;/a&gt;
provides a robust means of dealing with server interactions and &lt;a href=&quot;https://fetch.spec.whatwg.org/#preface&quot; rel=&quot;noopener&quot;&gt;a consistent
interface&lt;/a&gt; for use across different
platform APIs. Among its options is &lt;code&gt;keepalive&lt;/code&gt;, which ensures that a request
continues whether or not the page that made it stays open:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;unload&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/siteAnalytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    method&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    body&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getStatistics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    keepalive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;fetch()&lt;/code&gt; method has the advantage of greater control over what&#39;s sent to
the server. What I don&#39;t show in the example is that &lt;code&gt;fetch()&lt;/code&gt; also returns a
promise that resolves with a &lt;code&gt;Response&lt;/code&gt; object. Since I&#39;m trying to get out of the
way of the page&#39;s unloading, I chose not to do anything with it.&lt;/p&gt;
&lt;h3 id=&quot;sendbeacon()&quot;&gt;SendBeacon() &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disallow-synchronous-xhr/#sendbeacon()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;SendBeacon()&lt;/code&gt;&lt;/a&gt;
actually uses the Fetch API under the hood, which is why it has the same
64 KB payload limitation and why it also ensures that a request continues
after a page unload. Its primary advantage is its simplicity. It lets you
submit your data with a single line of code:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;unload&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendBeacon&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/siteAnalytics&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getStatistics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disallow-synchronous-xhr/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;increased availability of
&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;
across browsers, &lt;code&gt;XMLHttpRequest()&lt;/code&gt; will hopefully be removed
from the web platform at some point. Browser vendors agree it should be removed, but it will
take time. Deprecating one of its worst use cases is a first step that improves
the user experience for everyone.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Photo by &lt;a href=&quot;https://unsplash.com/@thatsmrbio?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Matthew Hamilton&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/roadblock?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Positioning virtual objects in real-world views</title>
    <link href="https://web.dev/ar-hit-test/"/>
    <updated>2020-02-13T00:00:00Z</updated>
    <id>https://web.dev/ar-hit-test/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The WebXR Device API shipped last fall in Chrome 79. As stated then, Chrome&#39;s
implementation of the API is a work in progress. Chrome is happy to announce
that some of the work is finished. In Chrome 81, two new features have arrived:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5450241148977152&quot; rel=&quot;noopener&quot;&gt;Augmented reality session types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/4755348300759040&quot; rel=&quot;noopener&quot;&gt;Hit testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article covers the &lt;a href=&quot;https://github.com/immersive-web/hit-test/blob/master/hit-testing-explainer.md&quot; rel=&quot;noopener&quot;&gt;WebXR Hit Test
API&lt;/a&gt;, a
means of placing virtual objects in a real-world camera view.&lt;/p&gt;
&lt;p&gt;In this article I assume you already know how to create an augmented reality
session and that you know how to run a frame loop. If you&#39;re not familiar with
these concepts, you should read the earlier articles in this series.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/vr-comes-to-the-web/&quot;&gt;Virtual reality comes to the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/&quot;&gt;Virtual reality comes to the web, part II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/web-ar&quot;&gt;Web AR: you may already know how to use it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-immersive-ar-session-sample&quot;&gt;The immersive AR session sample &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#the-immersive-ar-session-sample&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The code in this article is based on, but not identical to, that found in the
Immersive Web Working Group&#39;s Hit Test sample
(&lt;a href=&quot;https://immersive-web.github.io/webxr-samples/hit-test.html&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/immersive-web/webxr-samples/blob/master/hit-test.html&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;).
This example lets you place virtual sunflowers on surfaces in the real world.&lt;/p&gt;
&lt;p&gt;When you first open the app, you&#39;ll see a blue circle with a dot in the middle.
The dot is the intersection between an imaginary line from your device to the
point in the environment. It moves as you move the device. As it finds
intersection points, it appears to snap to surfaces such as floors, table tops,
and walls. It does this because hit testing provides the position and
orientation of the intersection point, but nothing about the surfaces
themselves.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;A reminder for those of you are new: in the WebXR device API &amp;quot;position and
orientation&amp;quot; are covered by the term pose. I will be using that term from here
on.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This circle is called a &lt;em&gt;reticle&lt;/em&gt;, which is a temporary image that aids in
placing an object in augmented reality. If you tap the screen, a sunflower is
placed on the surface at the reticle location and orientation of the reticle
point, regardless of where you tapped the screen. The reticle continues to move
with your device.&lt;/p&gt;
&lt;figure class=&quot;w-figure  w-figure--right&quot;&gt;
  &lt;img alt=&quot;A reticle rendered on a wall, Lax, or Strict depending on their context&quot; decoding=&quot;async&quot; height=&quot;1422&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/42fbB0q2WTa9ytTm8NZN.png?auto=format&amp;w=1600 1600w&quot; style=&quot;max-width: 60vw;&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The reticle is a temporary image that aids in placing an object in augmented reality.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;create-the-reticle&quot;&gt;Create the reticle &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#create-the-reticle&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You must create the reticle image yourself since it is not provided by the
browser or the API. The method of loading and drawing it is framework specific.
If you&#39;re not drawing it directly using WebGL or WebGL2 consult your framework
documentation. For this reason, I won&#39;t go into detail about how the reticle is
drawn in the sample. Below I show one line of it for one reason only: so that in
later code samples, you&#39;ll know what I&#39;m referring to when I use the &lt;code&gt;reticle&lt;/code&gt;
variable.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reticle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Gltf2Node&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;url&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;media/gltf/reticle/reticle.gltf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;request-a-session&quot;&gt;Request a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#request-a-session&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When requesting a session, you must request &lt;code&gt;&#39;hit-test&#39;&lt;/code&gt; in the
&lt;code&gt;requiredFeatures&lt;/code&gt; array as shown below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;immersive-ar&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  requiredFeatures&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;local&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;hit-test&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do something with the session&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;entering-a-session&quot;&gt;Entering a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#entering-a-session&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In previous articles I&#39;ve presented code for entering an XR session. I&#39;ve shown
a version of this below with some additions. First I&#39;ve added the &lt;code&gt;select&lt;/code&gt; event
listener. When the user taps the screen, a flower will be placed in the camera
view based on the pose of the reticle. I&#39;ll describe that event listener later.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;select&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSelect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  gl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;viewer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    xrViewerSpace &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; refSpace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestHitTestSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; space&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; xrViewerSpace &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hitTestSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      xrHitTestSource &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hitTestSource&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;local&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    xrRefSpace &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; refSpace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;multiple-reference-spaces&quot;&gt;Multiple reference spaces &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#multiple-reference-spaces&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Notice that the highlighted code calls &lt;code&gt;XRSession.requestReferenceSpace()&lt;/code&gt;
twice. I initially found this confusing. I asked why does the hit test code not
request an animation frame (starting the frame loop) and why does the frame loop
seem to not involve hit tests. The source of the confusion was a
misunderstanding of reference spaces. Reference spaces express relationships
between an origin and the world.&lt;/p&gt;
&lt;p&gt;To understand what this code is doing, pretend that you&#39;re viewing this sample
using a standalone rig, and you have both a headset and a controller. To measure
distances from the controller, you would use a controller-centered frame of
reference. But to draw something to the screen you would use user-centered
coordinates.&lt;/p&gt;
&lt;p&gt;In this sample, the viewer and the controller are the same device. But I have a
problem. What I draw must be stable with regard to the environment, but the
&#39;controller&#39; I&#39;m drawing with is moving.&lt;/p&gt;
&lt;p&gt;For image drawing, I use the &lt;code&gt;local&lt;/code&gt; reference space, which gives me stability
in terms of the environment. After getting this I start the frame loop by
calling &lt;code&gt;requestAnimationFrame()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For hit testing, I use the &lt;code&gt;viewer&lt;/code&gt; reference space, which is based on the
device&#39;s pose at the time of the hit test. The label &#39;viewer&#39; is somewhat
confusing in this context because I&#39;m talking about a controller. It makes sense
if you think of the controller as an electronic viewer. After getting this, I
call &lt;code&gt;xrSession.requestHitTestSource()&lt;/code&gt;, which creates the source of hit test
data that I&#39;ll use when drawing.&lt;/p&gt;
&lt;h2 id=&quot;running-a-frame-loop&quot;&gt;Running a frame loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#running-a-frame-loop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;requestAnimationFrame()&lt;/code&gt; callback also gets new code to handle hit testing.&lt;/p&gt;
&lt;p&gt;As you move your device, the reticle needs to move with it as it tries to find
surfaces. To create the illusion of movement, redraw the reticle in every frame.
But don&#39;t show the reticle if the hit test fails. So, for the reticle I created
earlier, I set it&#39;s &lt;code&gt;visible&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reminder: the hitTestSource was acquired during onSessionStart()&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hitTestResults &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHitTestResults&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; pose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Draw to the screen&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To draw anything in AR, I need to know where the viewer is and where they&#39;re
looking. So I test that &lt;code&gt;hitTestSource&lt;/code&gt; and the &lt;code&gt;xrViewerPose&lt;/code&gt; are still valid.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reminder: the hitTestSource was acquired during onSessionStart()&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hitTestResults &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHitTestResults&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; pose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Draw to the screen&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now I call &lt;code&gt;getHitTestResults()&lt;/code&gt;. It takes the &lt;code&gt;hitTestSource&lt;/code&gt; as an argument
and returns an array of &lt;code&gt;HitTestResult&lt;/code&gt; instances. The hit test may find
multiple surfaces. The first one in the array is the one closest to the camera.
Most of the time you will use it, but an array is returned for advanced use
cases. For example, imagine your camera is pointed at a box on a table on a
floor. It&#39;s possible that the hit test will return all three surfaces in the
array. In most cases, it will be the box that I care about. If the length of the
returned array is 0, in other words, if no hit test is returned, continue
onward. Try again in the next frame.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reminder: the hitTestSource was acquired during onSessionStart()&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hitTestResults &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHitTestResults&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; pose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Draw to the screen&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Finally, I need to process the hit test results. The basic process is this. Get
a pose from the hit test result, transform (move) the reticle image to the hit
test position, then set its &lt;code&gt;visible&lt;/code&gt; property to true.  The pose represents the
pose of a point on a surface.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reminder: the hitTestSource was acquired during onSessionStart()&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hitTestResults &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHitTestResults&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrHitTestSource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; pose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hitTestResults&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Draw to the screen&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;placing-an-object&quot;&gt;Placing an object &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#placing-an-object&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An object is placed in AR when the user taps the screen. I already added a
&lt;code&gt;select&lt;/code&gt; event handler to the session. (&lt;a href=&quot;https://web.dev/ar-hit-test/#entering-a-session&quot;&gt;See above&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The important thing in this step is knowing where to place it. Since the moving
reticle gives you a constant source of hit tests, the simplest way to place an
object is to draw it at the location of the reticle at the last hit test.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSelect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// The reticle should already be positioned at the latest hit point,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// so we can just use its matrix to save an unnecessary call to&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// event.frame.getHitTestResults.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;addARObjectAt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ar-hit-test/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The best way to get a handle on this is to step through the &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-ar-session.html&quot; rel=&quot;noopener&quot;&gt;sample
code&lt;/a&gt; or
try out the
&lt;a href=&quot;https://codelabs.developers.google.com/codelabs/ar-with-webxr&quot; rel=&quot;noopener&quot;&gt;codelab&lt;/a&gt;. I hope
I&#39;ve given you enough background to make sense of both.&lt;/p&gt;
&lt;p&gt;We&#39;re not done building immersive web APIs, not by a long shot. We&#39;ll publish
new articles here as we make progress.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@fr3nks&quot; rel=&quot;noopener&quot;&gt;Daniel Frank&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>ResizeObserver: it’s like document.onresize for elements</title>
    <link href="https://web.dev/resize-observer/"/>
    <updated>2016-10-07T00:00:00Z</updated>
    <id>https://web.dev/resize-observer/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Before &lt;code&gt;ResizeObserver&lt;/code&gt;, you had to attach a listener to the document&#39;s &lt;code&gt;resize&lt;/code&gt;
event to get notified of any change of the viewport&#39;s dimensions. In the event
handler, you would then have to figure out which elements have been affected by
that change and call a specific routine to react appropriately. If you needed
the new dimensions of an element after a resize, you had to call
&lt;code&gt;getBoundingClientRect()&lt;/code&gt; or &lt;code&gt;getComputedStyle()&lt;/code&gt;, which can cause layout
thrashing if you don&#39;t take care of batching &lt;em&gt;all&lt;/em&gt; your reads and &lt;em&gt;all&lt;/em&gt; your
writes.&lt;/p&gt;
&lt;p&gt;This didn&#39;t even cover cases where elements change their size without the main
window having been resized. For example, appending new children, setting an
element&#39;s &lt;code&gt;display&lt;/code&gt; style to &lt;code&gt;none&lt;/code&gt;, or similar actions can change the size of
an element, its siblings, or its ancestors.&lt;/p&gt;
&lt;p&gt;This is why &lt;code&gt;ResizeObserver&lt;/code&gt; is a useful primitive. It reacts to changes in
size of any of the observed elements, independent of what caused the change.
It provides access to the new size of the observed elements too.&lt;/p&gt;
&lt;h2 id=&quot;api&quot;&gt;API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All the APIs with the &lt;code&gt;Observer&lt;/code&gt; suffix we mentioned above share a simple API
design. &lt;code&gt;ResizeObserver&lt;/code&gt; is no exception. You create a &lt;code&gt;ResizeObserver&lt;/code&gt; object
and pass a callback to the constructor. The callback is passed an array of
&lt;code&gt;ResizeObserverEntry&lt;/code&gt; objects—one entry per observed element—which
contains the new dimensions for the element.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResizeObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; cr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;contentRect&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Element:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Element size: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;cr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px x &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;cr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Element padding: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;cr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px ; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;cr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Observe one or multiple elements&lt;/span&gt;&lt;br /&gt;ro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;someElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;some-details&quot;&gt;Some details &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#some-details&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;what-is-being-reported&quot;&gt;What is being reported? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#what-is-being-reported&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Generally, a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ResizeObserverEntry&lt;/code&gt;&lt;/a&gt;
reports the content box of an element through a property called
&lt;code&gt;contentRect&lt;/code&gt;, which returns a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DOMRectReadOnly&lt;/code&gt;&lt;/a&gt;
object. The content box is the box in which content can be placed. It is
the border box minus the padding.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A diagram of the CSS box model.&quot; decoding=&quot;async&quot; height=&quot;562&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 727px) 727px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/CKxpe8LNq2CMPFdtLtVK.png?auto=format&amp;w=1454 1454w&quot; width=&quot;727&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;It&#39;s important to note that while &lt;code&gt;ResizeObserver&lt;/code&gt; &lt;em&gt;reports&lt;/em&gt; both the dimensions
of the &lt;code&gt;contentRect&lt;/code&gt; and the padding, it only &lt;em&gt;watches&lt;/em&gt; the &lt;code&gt;contentRect&lt;/code&gt;.
&lt;em&gt;Don&#39;t&lt;/em&gt; confuse &lt;code&gt;contentRect&lt;/code&gt; with the bounding box of the element. The bounding
box, as reported by &lt;code&gt;getBoundingClientRect()&lt;/code&gt;, is the box that contains the
entire element and its descendants. SVGs are an exception to the rule, where
&lt;code&gt;ResizeObserver&lt;/code&gt; will report the dimensions of the bounding box.&lt;/p&gt;
&lt;p&gt;As of Chrome 84, &lt;code&gt;ResizeObserverEntry&lt;/code&gt; has three new properties to provide more
detailed information. Each of these properties returns a &lt;code&gt;ResizeObserverSize&lt;/code&gt;
object containing a &lt;code&gt;blockSize&lt;/code&gt; property and an &lt;code&gt;inlineSize&lt;/code&gt; property. This
information is about the observered element at the time the callback is invoked.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;borderBoxSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contentBoxSize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;devicePixelContentBoxSize&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these items return read-only arrays because in the future it&#39;s hoped that
they can support elements that have multiple fragments, which occur in
multi-column scenarios. For now, these arrays will only contain one element.&lt;/p&gt;
&lt;p&gt;Platform support for these properties is limited, but &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Firefox already
supports&lt;/a&gt;
the first two.&lt;/p&gt;
&lt;h3 id=&quot;when-is-it-being-reported&quot;&gt;When is it being reported? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#when-is-it-being-reported&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The spec proscribes that &lt;code&gt;ResizeObserver&lt;/code&gt; should process all resize events
before paint and after layout. This makes the callback of a &lt;code&gt;ResizeObserver&lt;/code&gt; the
ideal place to make changes to your page&#39;s layout. Because &lt;code&gt;ResizeObserver&lt;/code&gt;
processing happens between layout and paint, doing so will only invalidate
layout, not paint.&lt;/p&gt;
&lt;h3 id=&quot;gotcha&quot;&gt;Gotcha &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#gotcha&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You might be asking yourself: what happens if I change the size of an observed
element inside the callback to &lt;code&gt;ResizeObserver&lt;/code&gt;? The answer is: you will trigger
another call to the callback right away. Fortunately, &lt;code&gt;ResizeObserver&lt;/code&gt; has a
mechanism to avoid infinite callback loops and cyclic dependencies. Changes will
only be processed in the same frame if the resized element is deeper in the DOM
tree than the &lt;em&gt;shallowest&lt;/em&gt; element processed in the previous callback.
Otherwise, they&#39;ll get deferred to the next frame.&lt;/p&gt;
&lt;h2 id=&quot;application&quot;&gt;Application &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#application&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One thing that &lt;code&gt;ResizeObserver&lt;/code&gt; allows you to do is to implement per-element
media queries. By observing elements, you can imperatively define your
design breakpoints and change an element&#39;s styles. In the following
&lt;a href=&quot;https://googlechrome.github.io/samples/resizeobserver/&quot; rel=&quot;noopener&quot;&gt;example&lt;/a&gt;, the second box
will change its border radius according to its width.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/resizeobserver/elem-mq_vp8.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/resizeobserver/elem-mq_x264.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResizeObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;borderRadius &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;br /&gt;        Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;contentRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;px&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Only observe the second box&lt;/span&gt;&lt;br /&gt;ro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.box:nth-child(2)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Another interesting example to look at is a chat window. The problem that arises
in a typical top-to-bottom conversation layout is scroll positioning. To avoid
confusing the user, it is helpful if the window sticks to the bottom of the
conversation, where the newest messages appear. Additionally, any kind of layout
change (think of a phone going from landscape to portrait or vice versa) should
achieve the same.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ResizeObserver&lt;/code&gt; allows you to write a &lt;em&gt;single&lt;/em&gt; piece of code that takes care of
&lt;em&gt;both&lt;/em&gt; scenarios. Resizing the window is an event that a &lt;code&gt;ResizeObserver&lt;/code&gt; can
capture by definition, but calling &lt;code&gt;appendChild()&lt;/code&gt; also resizes that element
(unless&lt;code&gt;overflow: hidden&lt;/code&gt; is set), because it needs to make space for the new
elements. With this in mind, it takes very few lines to achieve the desired
effect:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
 &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
   &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/resizeobserver/chat_vp8.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
   &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/resizeobserver/chat_x264.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
 &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResizeObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollingElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollTop &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollingElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollHeight&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Observe the scrollingElement for when the window gets resized&lt;/span&gt;&lt;br /&gt;ro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollingElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Observe the timeline to process new messages&lt;/span&gt;&lt;br /&gt;ro&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeline&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Pretty neat, huh?&lt;/p&gt;
&lt;p&gt;From here, I could add more code to handle the case where the user has scrolled
up manually and wants scrolling to stick to &lt;em&gt;that&lt;/em&gt; message when a new message
comes in.&lt;/p&gt;
&lt;p&gt;Another use case is for any kind of custom element that is doing its own layout.
Until &lt;code&gt;ResizeObserver&lt;/code&gt;, there was no reliable way to get notified when its
dimensions change so its children can be laid out again.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/resize-observer/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ResizeObserver&lt;/code&gt; is available in &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/ResizeObserver#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;most major
browsers&lt;/a&gt;.
In some cases, that availability is quite recent. There are &lt;a href=&quot;https://github.com/WICG/ResizeObserver/issues/3&quot; rel=&quot;noopener&quot;&gt;some polyfills
available&lt;/a&gt; but it is not
possible to completely duplicate the functionality of &lt;code&gt;ResizeObserver&lt;/code&gt;. Current
implementations either rely on polling or on adding sentinel elements to the
DOM. The former will drain your battery on mobile by keeping the CPU busy while
the latter modifies your DOM and might mess up styling and other DOM-reliant
code.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@markusspiske?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Markus
Spiske&lt;/a&gt;
on
&lt;a href=&quot;https://unsplash.com/s/photos/observe-growth?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Surma</name>
    </author><author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Virtual reality comes to the web</title>
    <link href="https://web.dev/vr-comes-to-the-web/"/>
    <updated>2019-10-31T00:00:00Z</updated>
    <id>https://web.dev/vr-comes-to-the-web/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Immersive experiences came to the web in Chrome 79. The WebXR Device API brings
virtual reality brought virtual reality, while support for augmented reality
arrives in Chrome 81. While an update to the GamePad API extends the advanced
use of controlls to VR. Other browsers will be supporting these specs soon,
including Firefox Reality, Oculus Browser, Edge and Magic Leap&#39;s Helio browser,
among others.&lt;/p&gt;
&lt;p&gt;This article begins a series on the immersive web. This installment covers
setting up a basic WebXR application as well as entering and exiting an XR
session. Later articles will cover the frame loop (the workhorse of WebXR
experience), the specifics of augmented reality, and the WebXR Hit Test API, a
means of detecting surfaces in an AR session. Unless stated otherwise,
everything I cover in this and succeeding articles applies equally to both AR
and VR.&lt;/p&gt;
&lt;h2 id=&quot;what-is-the-immersive-web&quot;&gt;What is the immersive web? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#what-is-the-immersive-web&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Though we use two terms to describe immersive experiences—augmented
reality and virtual reality—many think of them on a spectrum from complete
reality to completely virtual, with degrees of immersion in between. The &#39;X&#39; in
XR is intended to reflect that thinking by being a sort of algebraic variable
that stands for anything in the spectrum of immersive experiences.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A graph illustrating the spectrum of visual experiences from complete reality to completely immersive.&quot; decoding=&quot;async&quot; height=&quot;204&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/iQ99APUTFIgjdRPyS1C4.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    The spectrum of immersive experiences
  &lt;/figcaption&gt;
&lt;/figure&gt;Examples of immersive experiences include:&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Games&lt;/li&gt;
&lt;li&gt;360° videos&lt;/li&gt;
&lt;li&gt;Traditional 2D (or 3D) videos presented in immersive surroundings&lt;/li&gt;
&lt;li&gt;Home buying&lt;/li&gt;
&lt;li&gt;Viewing products in your home before you buy them&lt;/li&gt;
&lt;li&gt;Immersive art&lt;/li&gt;
&lt;li&gt;Something cool nobody&#39;s thought of yet&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;concepts-and-usage&quot;&gt;Concepts and usage &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#concepts-and-usage&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&#39;ll explain a few basics of using the WebXR Device API. If you need more depth
than I&#39;ve provided, check out the Immersive Web Working Group&#39;s &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/&quot; rel=&quot;noopener&quot;&gt;WebXR
samples&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API&quot; rel=&quot;noopener&quot;&gt;MDN&#39;s growing
reference
materials&lt;/a&gt;.
If you&#39;re familiar with early versions of the WebXR Device API, you should
glance over all of this material. There have been changes.&lt;/p&gt;
&lt;p&gt;The code in this article is based on the Immersive Web Working Group&#39;s barebones
sample (&lt;a href=&quot;https://immersive-web.github.io/webxr-samples/vr-barebones.html&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/immersive-web/webxr-samples/blob/master/vr-barebones.html&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;),
but is edited for clarity and simplicity.&lt;/p&gt;
&lt;p&gt;Part of creating the WebXR specification has been fleshing out security and
privacy measures to protect users. Consequently, implementations must adhere to
certain requirements. A web page or app must be active and focused before it can
request anything sensitive from the viewer. Web pages or apps must be served
over HTTPS. The API itself is designed to protect information obtained from
sensors and cameras, which it needs in order to function.&lt;/p&gt;
&lt;h3 id=&quot;request-a-session&quot;&gt;Request a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#request-a-session&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Entering an XR session requires a user gesture. To get that, use feature
detection to test for &lt;code&gt;XRSystem&lt;/code&gt; (via &lt;code&gt;navigator.xr&lt;/code&gt;) and make a call to
&lt;code&gt;XRSystem.isSessionSupported()&lt;/code&gt;. Be aware that in Chrome versions 79 and 80 the
&lt;code&gt;XRSystem&lt;/code&gt; object was called &lt;code&gt;XR&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the example below, I&#39;ve indicated that I
want a virtual reality session with the &lt;code&gt;&#39;immersive-vr&#39;&lt;/code&gt; session type. The
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XR/isSessionSupported#Syntax&quot; rel=&quot;noopener&quot;&gt;other session
types&lt;/a&gt;
are &lt;code&gt;&#39;immersive-ar&#39;&lt;/code&gt; and &lt;code&gt;&#39;inline&#39;&lt;/code&gt;. An inline session is for presenting content
within HTML and is mainly used for teaser content. The &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-ar-session.html&quot; rel=&quot;noopener&quot;&gt;Immersive AR
Session&lt;/a&gt;
sample demonstrates this. I&#39;ll explain that in a later article.&lt;/p&gt;
&lt;p&gt;Once I know that virtual reality sessions are supported, I enable a button that
lets me acquire a user gesture.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; supported &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isSessionSupported&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;immersive-vr&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;supported&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onButtonClicked&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Enter VR&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;enabled &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; supported&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// supported is Boolean&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;After enabling the button, I wait for a click event then request a session.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onButtonClicked&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;immersive-vr&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Exit XR&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Notice the object hierarchy in this code. It moves from &lt;code&gt;navigator&lt;/code&gt; to &lt;code&gt;xr&lt;/code&gt; to
an &lt;code&gt;XRSession&lt;/code&gt; instance. In early versions of the API, a script had to request a
device before requesting a session. Now, the device is acquired implicitly.&lt;/p&gt;
&lt;h3 id=&quot;enter-a-session&quot;&gt;Enter a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#enter-a-session&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After getting a session, I need to start it and enter it. But first, I need to
set up a few things. A session needs an &lt;code&gt;onend&lt;/code&gt; event handler so that the app or
web page can be reset when the user exits.&lt;/p&gt;
&lt;p&gt;I&#39;ll also need a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element to draw my scene on. It needs to be an
XR-compatible
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext&quot; rel=&quot;noopener&quot;&gt;WebGLRenderingContext&lt;/a&gt;
or
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext&quot; rel=&quot;noopener&quot;&gt;WebGL2RenderingContext&lt;/a&gt;.
All drawing is done using them or a WebGL-based framework such as
&lt;a href=&quot;https://threejs.org/&quot; rel=&quot;noopener&quot;&gt;Three.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now that I have a place to draw, I need a source of content to draw on
it. For that, I create an instance of &lt;code&gt;XRWebGLLayer&lt;/code&gt;. I associate it with the
canvas by calling &lt;code&gt;XRSession.updateRenderState()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once I&#39;m in a session, I need a way of determining where things are in virtual
reality. I&#39;ll need a reference space. A &lt;code&gt;&#39;local-floor&#39;&lt;/code&gt; reference space is one
where the origin is located near the viewer and the y-axis is 0 at floor level
and is not expected to move. There are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XRSession/requestReferenceSpace&quot; rel=&quot;noopener&quot;&gt;other types of reference
spaces&lt;/a&gt;,
but that is a more complicated topic than I can go into here. I save the
reference space to a variable because I&#39;ll need it when I draw to the screen.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  webGLRenContext &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;local-floor&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    xrRefSpace &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; refSpace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;After getting a reference space, I call &lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt;.
This is the start of presenting virtual content, which is done in the frame
loop.&lt;/p&gt;
&lt;h3 id=&quot;run-a-frame-loop&quot;&gt;Run a frame loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#run-a-frame-loop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The frame loop is a user-agent controlled infinite loop in which content is
repeatedly drawn to the screen. Content is drawn in discrete blocks called
frames. The succession of frames creates the illusion of movement. For VR
applications the frames per second can be anywhere from 60 to 144. AR for
Android runs at 30 frames per second. Your code should not assume any particular
frame rate.&lt;/p&gt;
&lt;p&gt;The basic process for the frame loop is:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Call &lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt;. In response, the user agent invokes the &lt;code&gt;XRFrameRequestCallback&lt;/code&gt;, which is defined by you.&lt;/li&gt;
  &lt;li&gt;Inside your callback function:
    &lt;ol&gt;
      &lt;li&gt;Call &lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt; again.&lt;/li&gt;
      &lt;li&gt;Get the viewer&#39;s pose.&lt;/li&gt;
      &lt;li&gt;Pass (&#39;bind&#39;) the &lt;code&gt;WebGLFramebuffer&lt;/code&gt; from the &lt;code&gt;XRWebGLLayer&lt;/code&gt; to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Iterate over each &lt;code&gt;XRView&lt;/code&gt; object, retrieving its &lt;code&gt;XRViewport&lt;/code&gt; from the &lt;code&gt;XRWebGLLayer&lt;/code&gt; and passing it to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Draw something to the framebuffer.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The remainder of this article describes step 1 and part of step 2,  setting up
and calling the &lt;code&gt;XRFrameRequestCallback&lt;/code&gt;. The remaining items of step 2 are
covered in part II.&lt;/p&gt;
&lt;h4 id=&quot;the-xrframerequestcallback&quot;&gt;The XRFrameRequestCallback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#the-xrframerequestcallback&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;XRFrameRequestCallback&lt;/code&gt; is defined by you. It takes two parameters: a
&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; and an &lt;code&gt;XRFrame&lt;/code&gt; instance. The &lt;code&gt;XRFrame&lt;/code&gt; object provides
the information needed to render a single frame to the display. The
&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; argument is for future use.&lt;/p&gt;
&lt;p&gt;Before doing anything else, I&#39;m going to request the next animation frame. As
previously stated, the timing of frames is determined by the user agent based on
the underlying hardware. Requesting the next frame first ensures that
the frame loop continues if something during the callback throws an error.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Render a frame.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;At this point, it&#39;s time to draw something for the viewer. That&#39;s a discussion
for part II. Before going there, let me show you how to end a session.&lt;/p&gt;
&lt;h3 id=&quot;end-the-session&quot;&gt;End the session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#end-the-session&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An immersive session may end for several reasons including ending by your own
code through a call to &lt;code&gt;XRSession.end()&lt;/code&gt;. Other causes include the headset being
disconnected or another application taking control of it. This is why a
well-behaved application should monitor the &lt;code&gt;end&lt;/code&gt; event. When it occurs, discard
the session and its related render objects. An ended immersive session cannot be
resumed. To reenter the immersive experience, my app needs to start a new
session.&lt;/p&gt;
&lt;p&gt;Recall from &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/#entering-a-session&quot;&gt;Entering a session&lt;/a&gt; that during setup, I added
an &lt;code&gt;onend&lt;/code&gt; event handler.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// More setup…&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Inside the event handler, restore the state of the app before the user entered a
session.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionEnded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Enter VR&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I haven&#39;t explained everthing you need to write a Web XR or AR application.
Hopefull, I&#39;ve give  you enought to start making sense of the code for yourself,
and enough to start experimenting. In the next article, I&#39;ll explain the frame
loop, which is where content is drawn to the screen.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@jeshoots&quot; rel=&quot;noopener&quot;&gt;JESHOOTS.COM&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Virtual reality comes to the web, part II</title>
    <link href="https://web.dev/vr-comes-to-the-web-pt-ii/"/>
    <updated>2020-02-13T00:00:00Z</updated>
    <id>https://web.dev/vr-comes-to-the-web-pt-ii/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Recently, I published &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/&quot;&gt;Virtual reality comes to the
web&lt;/a&gt;, an article that introduced basic
concepts behind the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API&quot; rel=&quot;noopener&quot;&gt;WebXR Device
API&lt;/a&gt;. I
also provided instructions for requesting, entering, and ending an XR session.&lt;/p&gt;
&lt;p&gt;This article describes the frame loop, which is a user-agent controlled
infinite loop in which content is repeatedly drawn to the screen. Content is
drawn in discrete blocks called frames. The succession of frames creates the
illusion of movement.&lt;/p&gt;
&lt;h2 id=&quot;what-this-article-is-not&quot;&gt;What this article is not &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#what-this-article-is-not&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;WebGL and WebGL2 are the only means of rendering content during a frame loop in
a WebXR App. Fortunately many frameworks provide a layer of abstraction on top
of WebGL and WebGL2. Such frameworks include &lt;a href=&quot;https://threejs.org/&quot; rel=&quot;noopener&quot;&gt;three.js&lt;/a&gt;,
&lt;a href=&quot;https://www.babylonjs.com/&quot; rel=&quot;noopener&quot;&gt;babylonjs&lt;/a&gt;, and
&lt;a href=&quot;https://playcanvas.com/&quot; rel=&quot;noopener&quot;&gt;PlayCanvas&lt;/a&gt;, while &lt;a href=&quot;https://aframe.io/&quot; rel=&quot;noopener&quot;&gt;A-Frame&lt;/a&gt; and
&lt;a href=&quot;https://facebook.github.io/react-360/&quot; rel=&quot;noopener&quot;&gt;React 360&lt;/a&gt; are designed for interacting
with WebXR.&lt;/p&gt;
&lt;p&gt;This article is neither a WebGL nor a framework tutorial. It explains basics of
a frame loop using the Immersive Web Working Group&#39;s Immersive VR Session sample
(&lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-vr-session.html&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;,
&lt;a href=&quot;https://github.com/immersive-web/webxr-samples/blob/master/immersive-vr-session.html&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;).
If you want to dive into WebGL or one of the frameworks, the internet provides a
growing list of articles.&lt;/p&gt;
&lt;h2 id=&quot;the-players-and-the-game&quot;&gt;The players and the game &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#the-players-and-the-game&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When trying to understand the frame loop, I kept getting lost in the details.
There&#39;s a lot of objects in play, and some of them are only named by reference
properties on other objects. To help you keep it straight, I&#39;ll describe the
objects, which I&#39;m calling &#39;players&#39;. Then I&#39;ll describe how they interact,
which I&#39;m calling &#39;the game&#39;.&lt;/p&gt;
&lt;h2 id=&quot;the-players&quot;&gt;The players &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#the-players&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;xrviewerpose&quot;&gt;XRViewerPose &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#xrviewerpose&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A pose is the position and orientation of something in 3D space. Both viewers
and input devices have a pose, but it&#39;s the viewer&#39;s pose we&#39;re concerned with
here. Both viewer and input device poses have a &lt;code&gt;transform&lt;/code&gt; attribute describing
its position as a vector and its orientation as a quaternion relative to the
origin. The origin is specified based on the requested reference space type when
calling &lt;code&gt;XRSession.requestReferenceSpace()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reference spaces take a bit to explain. I cover them in depth in &lt;a href=&quot;https://web.dev/web-ar/&quot;&gt;Augmented
reality&lt;/a&gt;. The sample I&#39;m using as the basis for this
article uses a &lt;code&gt;&#39;local&#39;&lt;/code&gt; reference space which means the origin is at the
viewer&#39;s position at the time of session creation without a well-defined floor,
and its precise position may vary by platform.&lt;/p&gt;
&lt;h3 id=&quot;xrview&quot;&gt;XRView &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#xrview&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A view corresponds to a camera viewing the virtual scene. A view also has a
&lt;code&gt;transform&lt;/code&gt; attribute describing it&#39;s position as a vector and its orientation.
These are provided both as a vector/quaternion pair and as an equivalent matrix,
you can use either representation depending on which best fits your code. Each
view corresponds to a display or a portion of a display used by a device to
present imagery to the viewer. &lt;code&gt;XRView&lt;/code&gt; objects are returned in an array from
the &lt;code&gt;XRViewerPose&lt;/code&gt; object. The number of views in the array varies. On mobile
devices an AR scene has one view, which may or may not cover the device screen.
Headsets typically have two views, one for each eye.&lt;/p&gt;
&lt;h3 id=&quot;xrwebgllayer&quot;&gt;XRWebGLLayer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#xrwebgllayer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Layers provide a source of bitmap images and descriptions of how those images
are to be rendered in the device. This description doesn&#39;t quite capture what
this player does. I&#39;ve come to think of it as a middleman between a device and a
&lt;code&gt;WebGLRenderingContext&lt;/code&gt;. MDN takes much the same view, stating that it &#39;provides
a linkage&#39; between the two. As such, it provides access to the other players.&lt;/p&gt;
&lt;p&gt;In general, WebGL objects store state information for rendering 2D and 3D
graphics.&lt;/p&gt;
&lt;h3 id=&quot;webglframebuffer&quot;&gt;WebGLFramebuffer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#webglframebuffer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A framebuffer provides image data to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;. After
retrieving it from the &lt;code&gt;XRWebGLLayer&lt;/code&gt;, you simply pass it to the current
&lt;code&gt;WebGLRenderingContext&lt;/code&gt;. Other than calling &lt;code&gt;bindFramebuffer()&lt;/code&gt; (more about that
later) you will never access this object directly. You will merely pass it from
the &lt;code&gt;XRWebGLLayer&lt;/code&gt; to the WebGLRenderingContext.&lt;/p&gt;
&lt;h3 id=&quot;xrviewport&quot;&gt;XRViewport &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#xrviewport&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A viewport provides the coordinates and dimensions of a rectangular region in
the &lt;code&gt;WebGLFramebuffer&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;webglrenderingcontext&quot;&gt;WebGLRenderingContext &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#webglrenderingcontext&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A rendering context is a programmatic access point for a canvas (the space we&#39;re
drawing on). To do this, it needs both a &lt;code&gt;WebGLFramebuffer&lt;/code&gt; and an XRViewport.&lt;/p&gt;
&lt;p&gt;Notice the relationship between &lt;code&gt;XRWebGLLayer&lt;/code&gt; and &lt;code&gt;WebGLRenderingContext&lt;/code&gt;. One
corresponds to the viewer&#39;s device and the other corresponds to the web page.
&lt;code&gt;WebGLFramebuffer&lt;/code&gt; and &lt;code&gt;XRViewport&lt;/code&gt; are passed from the former to the latter.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The relationship between XRWebGLLayer and WebGLRenderingContext&quot; decoding=&quot;async&quot; height=&quot;94&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 711px) 711px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ZdH8cIApe8jUr7F1WNgC.png?auto=format&amp;w=1422 1422w&quot; width=&quot;711&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    The relationship between &lt;code&gt;XRWebGLLayer&lt;/code&gt; and &lt;code&gt;WebGLRenderingContext&lt;/code&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;the-game&quot;&gt;The game &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#the-game&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that we know who the players are, let&#39;s look at the game they play. It&#39;s a
game that starts over with every frame. Recall that frames are part of a &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/#running-a-frame-loop&quot;&gt;frame
loop&lt;/a&gt; that happens at
a rate that depends on the underlying hardware. For VR applications the frames
per second can be anywhere from 60 to 144. AR for Android runs at 30 frames per
second. Your code should not assume any particular frame rate.&lt;/p&gt;
&lt;p&gt;The basic process for the frame loop looks like this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Call &lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt;. In response, the user agent invokes the &lt;code&gt;XRFrameRequestCallback&lt;/code&gt;, which is defined by you.&lt;/li&gt;
  &lt;li&gt;Inside your callback function:
    &lt;ol&gt;
      &lt;li&gt;Call &lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt; again.&lt;/li&gt;
      &lt;li&gt;Get the viewer&#39;s pose.&lt;/li&gt;
      &lt;li&gt;Pass (&#39;bind&#39;) the &lt;code&gt;WebGLFramebuffer&lt;/code&gt; from the &lt;code&gt;XRWebGLLayer&lt;/code&gt; to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Iterate over each &lt;code&gt;XRView&lt;/code&gt; object, retrieving its &lt;code&gt;XRViewport&lt;/code&gt; from the &lt;code&gt;XRWebGLLayer&lt;/code&gt; and passing it to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Draw something to the framebuffer.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Because steps 1 and 2a were covered in the previous article, I&#39;ll start at step
2b.&lt;/p&gt;
&lt;h3 id=&quot;get-the-viewer&#39;s-pose&quot;&gt;Get the viewer&#39;s pose &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#get-the-viewer&#39;s-pose&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It probably goes without saying. To draw anything in AR or VR, I need to know
where the viewer is and where they&#39;re looking. The viewer&#39;s position and
orientation are provided by an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XRViewerPose&quot; rel=&quot;noopener&quot;&gt;XRViewerPose
object&lt;/a&gt;. I
get the viewer&#39;s pose by calling &lt;code&gt;XRFrame.getViewerPose()&lt;/code&gt; on the current
animation frame. I pass it the reference space I acquired when I set up the
session. The values returned by this object are always relative to the reference
space I requested when I &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/#entering-a-session&quot;&gt;entered the current
session&lt;/a&gt;. As you may
recall, I have to pass the current reference space when requesting the pose.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Render based on the pose.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;There&#39;s one viewer pose that represents the user&#39;s overall position, meaning
either the viewer&#39;s head or the phone camera in the case of a smartphone.
The pose tells your application where the viewer is. Actual image rendering uses
&lt;code&gt;XRView&lt;/code&gt; objects, which I&#39;ll get to in a bit.&lt;/p&gt;
&lt;p&gt;Before moving on, I test whether the viewer pose was returned in case the system
loses tracking or blocks the pose for privacy reasons. Tracking is the XR
device&#39;s ability to know where it and/or it&#39;s input devices are relative to the
environment. Tracking can be lost in several ways, and varies depending on the
method used for tracking. For example, if cameras on the headset or phone are
used for tracking the device may lose its ability to determine where it is in
situations with low or no light, or if the cameras are covered.&lt;/p&gt;
&lt;p&gt;An example of blocking the pose for privacy reasons is if the headset is showing
a security dialog such as a permission prompt, the browser may stop providing
poses to the application while this is happening. But I&amp;quot;ve already called
&lt;code&gt;XRSession.requestAnimationFrame()&lt;/code&gt; so that if the system can recover, the frame
loop will continue. If not, the user agent will end the session and call the
&lt;code&gt;end&lt;/code&gt; event handler.&lt;/p&gt;
&lt;h3 id=&quot;a-short-detour&quot;&gt;A short detour &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#a-short-detour&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The next step requires objects created during &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/#requesting-a-session&quot;&gt;session
set-up&lt;/a&gt;. Recall that
I created a canvas and instructed it to create an XR-compatible Web GL rendering
context, which I got by calling &lt;code&gt;canvas.getContext()&lt;/code&gt;. All drawing is done using
the WebGL API, the WebGL2 API, or a WebGL-based framework such as Three.js. This
context was passed to the session object via &lt;code&gt;updateRenderState()&lt;/code&gt;, along with a
new instance of &lt;code&gt;XRWebGLLayer&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// The rendering context must be based on WebGL or WebGL2&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; webGLRenContext &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;pass-(&#39;bind&#39;)-the-webglframebuffer&quot;&gt;Pass (&#39;bind&#39;) the WebGLFramebuffer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#pass-(&#39;bind&#39;)-the-webglframebuffer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;XRWebGLLayer&lt;/code&gt; provides a framebuffer for the &lt;code&gt;WebGLRenderingContext&lt;/code&gt;
provided specifically for use with WebXR and replacing the rendering contexts
default framebuffer. This is called &#39;binding&#39; in the language of WebGL.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; glLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;renderState&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;baseLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bindFramebuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FRAMEBUFFER&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; glLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framebuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Iterate over the views&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;iterate-over-each-xrview-object&quot;&gt;Iterate over each XRView object &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#iterate-over-each-xrview-object&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After getting the pose and binding the framebuffer, it&#39;s time to get the
viewports. The &lt;code&gt;XRViewerPose&lt;/code&gt; contains an array of XRView interfaces each of
which represents a display or a portion of a display. They contain information
that&#39;s needed to render content that&#39;s correctly positioned for the device and
the viewer such as the field of view, eye offset, and other optical properties.
Since I&#39;m drawing for two eyes, I have two views, which I loop through and draw
a separate image for each.&lt;/p&gt;
&lt;p&gt;When implementing for phone-based augmented reality, I would have only one view
but I&#39;d still use a loop. Though it may seem pointless to iterate through one
view, doing so allows you to have a single rendering path for a spectrum of
immersive experiences. This is an important difference between WebXR and other
immersive systems.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; glLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;renderState&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;baseLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bindFramebuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FRAMEBUFFER&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; glLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framebuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrView &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;views&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token comment&quot;&gt;// Pass viewports to the context&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;pass-the-xrviewport-object-to-the-webglrenderingcontext&quot;&gt;Pass the XRViewport object to the WebGLRenderingContext &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#pass-the-xrviewport-object-to-the-webglrenderingcontext&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An &lt;code&gt;XRView&lt;/code&gt; object refers to what&#39;s observable on a screen. But to draw to that
view I need coordinates and dimensions that are specific to my device. As with
the framebuffer, I request them from the &lt;code&gt;XRWebGLLayer&lt;/code&gt; and pass them to the
&lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrRefSpace&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; glLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;renderState&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;baseLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bindFramebuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;FRAMEBUFFER&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; glLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;framebuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrView &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;views&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; viewport &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; glLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrView&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      webGLRenContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; viewport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; viewport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; viewport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token comment&quot;&gt;// Draw something to the framebuffer&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;the-webglrencontext&quot;&gt;The webGLRenContext &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#the-webglrencontext&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In writing this article I had a debate with a few collegues over the naming of
the &lt;code&gt;webGLRenContext&lt;/code&gt; object. The sample scripts and most WebXR code simpley
calls this variable &lt;code&gt;gl&lt;/code&gt;. When I was working to understand the samples, I kept
forgetting what &lt;code&gt;gl&lt;/code&gt; referred to. I&#39;ve called it &lt;code&gt;webGLRenContext&lt;/code&gt; to remind you
while your learning that this is an instance of &lt;code&gt;WebGLRenderingContext&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The reason is that using &lt;code&gt;gl&lt;/code&gt; allows method names to look like their
counterparts in the OpenGL ES 2.0 API, used for creating VR in compiled
languages. This fact is obvious if you&#39;ve written VR apps using OpenGL, but
confusing if you&#39;re completely new to this technology.&lt;/p&gt;
&lt;h3 id=&quot;draw-something-to-the-framebuffer&quot;&gt;Draw something to the framebuffer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#draw-something-to-the-framebuffer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you&#39;re feeling really ambitious, you can use WebGL directly, but I don&#39;t
recommend that. It&#39;s much simpler to use one of the frameworks &lt;a href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#what-this-article-is-not&quot;&gt;listed at the
top&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is not the end of WebXR updates or articles. You can find a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API&quot; rel=&quot;noopener&quot;&gt;reference for
all of WebXR&#39;s interfaces and
members&lt;/a&gt;
at MDN. For upcoming enhancements to the interfaces themselves, follow
individual features on &lt;a href=&quot;https://www.chromestatus.com/features#WebXR&quot; rel=&quot;noopener&quot;&gt;Chrome
Status&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@jeshoots&quot; rel=&quot;noopener&quot;&gt;JESHOOTS.COM&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Augmented reality: You may already know it</title>
    <link href="https://web.dev/web-ar/"/>
    <updated>2020-02-13T00:00:00Z</updated>
    <id>https://web.dev/web-ar/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The WebXR Device API shipped last fall in Chrome 79. As stated then, Chrome&#39;s
implementation of the API is a work in progress. Chrome is happy to announce
that some of the work is finished. In Chrome 81, two new features have arrived:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5450241148977152&quot; rel=&quot;noopener&quot;&gt;Augmented reality session types&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/4755348300759040&quot; rel=&quot;noopener&quot;&gt;Hit testing&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article covers augmented reality. If you&#39;ve already used the WebXR Device
API, you&#39;ll be happy to know there&#39;s very little new to learn. Entering a WebXR
session is largely the same. Running a frame loop is largely the same. The
differences lie in configurations that allow content to be shown appropriately
for augmented reality. If you&#39;re not familiar with the basic concepts of WebXR,
you should read my earlier posts on the WebXR Device API, or at least be
familiar with the topics covered therein. You should know how to &lt;a href=&quot;https://web.dev/vr-comes-to-the-web/&quot;&gt;request and
enter a session&lt;/a&gt; and you should know how
to run &lt;a href=&quot;https://web.dev/vr-comes-to-the-web-pt-ii&quot;&gt;a frame loop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For information on hit testing, see the companion article &lt;a href=&quot;https://web.dev/ar-hit-test&quot;&gt;Positioning virtual
objects in real-world views&lt;/a&gt;. The code in this
article is based on the Immersive AR Session sample
(&lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-ar-session.html&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;
&lt;a href=&quot;https://github.com/immersive-web/webxr-samples/blob/master/immersive-vr-session.html&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;) from
the Immersive Web Working Group&#39;s &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/&quot; rel=&quot;noopener&quot;&gt;WebXR Device API
samples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before diving into the code you should use the &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-ar-session.html&quot; rel=&quot;noopener&quot;&gt;Immersive AR Session
sample&lt;/a&gt;
at least once. You&#39;ll need a modern Android phone with Chrome 81 or later.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-it-useful-for&quot;&gt;What&#39;s it useful for? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#what&#39;s-it-useful-for&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Augmented reality will be a valuable addition to a lot of existing or new web
pages by allowing them to implement AR use cases without leaving the browser.
For example, it can help people learn on education sites, and allow potential
buyers to visualize objects in their home while shopping.&lt;/p&gt;
&lt;p&gt;Consider the second use case. Imagine simulating placing a life-size
representation of a virtual object in a real scene. Once placed, the image stays
on the selected surface, appears the size it would be if the actual item were on
that surface, and allows the user to move around it as well as closer to it or
farther from it. This gives viewers a deeper understanding of the object than is
possible with a two dimensional image.&lt;/p&gt;
&lt;p&gt;I&#39;m getting a little ahead of myself. To actually do what I&#39;ve described, you
need AR functionality and some means of detecting surfaces. This article covers
the former. The accompanying article on the WebXR Hit Test API (linked to above)
covers the latter.&lt;/p&gt;
&lt;h2 id=&quot;requesting-a-session&quot;&gt;Requesting a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#requesting-a-session&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Requesting a session is very much like what you&#39;ve seen before. First find out
if the session type you want is available on the current device by calling
&lt;code&gt;xr.isSessionSupported()&lt;/code&gt;. Instead of requesting &lt;code&gt;&#39;immersive-vr&#39;&lt;/code&gt; as before,
request &lt;code&gt;&#39;immersive-ar&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; supported &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isSessionSupported&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;immersive-ar&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;supported&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onButtonClicked&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Enter AR&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;enabled &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; supported&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// supported is Boolean&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;As before, this enables an &#39;Enter AR&#39; button. When the user clicks it, call
&lt;code&gt;xr.requestSession()&lt;/code&gt;, also passing &lt;code&gt;&#39;immersive-ar&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onButtonClicked&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;xr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;immersive-ar&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isImmersive &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      xrButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Exit AR&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;a-convenience-property&quot;&gt;A convenience property &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#a-convenience-property&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You&#39;ve probably noticed that I highlighted two lines in the last code sample.
The &lt;code&gt;XRSession&lt;/code&gt; object would seem to have a property called &lt;code&gt;isImmersive&lt;/code&gt;. This
is a convenience property I&#39;ve created myself, and not part of the spec. I&#39;ll
use it later to make decisions about what to show the viewer. Why isn&#39;t this
property part of the API? Because your app may need to track this property
differently so the spec authors decided to keep the API clean.&lt;/p&gt;
&lt;h2 id=&quot;entering-a-session&quot;&gt;Entering a session &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#entering-a-session&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Recall what &lt;code&gt;onSessionStarted()&lt;/code&gt; looked like in my earlier article:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  gl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;local-floor&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    xrRefSpace &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; refSpace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I need to add a few things to account for rendering augmented reality. Turn off
the background First, I&#39;m going to determine whether I need the background. This
is the first place I&#39;m going to use my convenience property.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isImmersive&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;removeBackground&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  gl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  refSpaceType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isImmersive &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;local&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;viewer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;refSpaceType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;reference-spaces&quot;&gt;Reference spaces &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#reference-spaces&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;My earlier articles skimmed over reference spaces. The sample I&#39;m describing
uses two of them, so it&#39;s time to correct that omission.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;A full explanation of reference spaces would be longer than I can provide
here. I&#39;m only going to discuss reference spaces in regards to augmented
reality.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A reference space describes the relationship between the virtual world and the
user&#39;s physical environment. It does this by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specifying the origin for the coordinate system used for expressing positions
in the virtual world.&lt;/li&gt;
&lt;li&gt;Specifying whether the user is expected to move within that coordinate system.&lt;/li&gt;
&lt;li&gt;Whether that coordinate system has pre-established boundaries. (The examples
shown here do not use coordinate systems with pre-established boundaries.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For all reference spaces, the X coordinate expresses left and right, the Y
expresses up and down, and Z expresses forward and backward. Positive values are
right, up, and backward, respectively.&lt;/p&gt;
&lt;p&gt;The coordinates returned by &lt;code&gt;XRFrame.getViewerPose()&lt;/code&gt; depend on the requested
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace#Reference_space_types&quot; rel=&quot;noopener&quot;&gt;reference space
type&lt;/a&gt;.
More about that when we get to the frame loop. Right now we need to select a
reference type that&#39;s appropriate for augmented reality. Again, this uses my
convenience property.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; refSpaceType&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onSessionStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;xrSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;end&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onSessionEnded&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isImmersive&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;removeBackground&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  gl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;webgl&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; xrCompatible&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateRenderState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    baseLayer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XRWebGLLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; gl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  refSpaceType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isImmersive &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;local&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;viewer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestReferenceSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;refSpaceType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;refSpace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If you&#39;ve visited the &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/immersive-ar-session.html&quot; rel=&quot;noopener&quot;&gt;Immersive AR Session
Sample&lt;/a&gt;
you&#39;ll notice that initially the scene is static and not at all augmented
reality. You can drag and swipe with your finger to move around the scene. If
you click &amp;quot;START AR&amp;quot;, the background drops out and you can move around the scene
by moving the device. The modes use different reference space types. The
highlighted text above shows how this is selected. It uses the following
reference types:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;local&lt;/code&gt; - The origin is at the viewer&#39;s position at the time of session
creation. This means the experience doesn&#39;t necessarily have a well-defined
floor and the exact position of the origin may vary by platform. Though there
are no pre-established boundaries to the space, it&#39;s expected that content can
be viewed with no movement other than rotation. As you can see from our own AR
example, some movement within the space may be possible.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;viewer&lt;/code&gt; - Used most frequently for content presented inline in the page, this
space follows the viewing device. When passed to getViewerPose it provides no
tracking, and thus always reports a pose at the origin unless the application
modifies it with &lt;code&gt;XRReferenceSpace.getOffsetReferenceSpace()&lt;/code&gt;. The sample uses
this to enable touch-based panning of the camera.&lt;/p&gt;
&lt;h2 id=&quot;running-a-frame-loop&quot;&gt;Running a frame loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#running-a-frame-loop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Conceptually, nothing changes from what I did in the VR session described in my
earlier articles. Pass the reference space type to &lt;code&gt;XRFrame.getViewerPose()&lt;/code&gt;.
The returned &lt;code&gt;XRViewerPose&lt;/code&gt; will be for the current reference space type. Using
&lt;code&gt;viewer&lt;/code&gt; as the default allows a page to show content previews before user
consent is requested for AR or VR. This illustrates an important point: the
inline content uses the same frame loop as the immersive content, cutting down
the amount of code that needs to be maintained.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onXRFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;hrTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; xrFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrSession &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  xrSession&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;onXRFrame&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xrViewerPose &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xrFrame&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewerPose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;refSpaceType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xrViewerPose&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Render based on the pose.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-ar/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This series of articles only covers the basics of implementing immersive content
on the web. Many more capabilities and use cases are presented by the Immersive
Web Working Group&#39;s &lt;a href=&quot;https://immersive-web.github.io/webxr-samples/&quot; rel=&quot;noopener&quot;&gt;WebXR Device API
samples&lt;/a&gt;. We&#39;ve also just
published a &lt;a href=&quot;https://web.dev/ar-hit-test/&quot;&gt;hit test article&lt;/a&gt; which explains an API
for detecting surfaces and placing virtual items in a real-world camera view.
Check them out and watch The web.dev blog for more
articles in the year to come.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@davidgrdm&quot; rel=&quot;noopener&quot;&gt;David Grandmougin&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>Integrate PWAs into built-in sharing UIs with Workbox</title>
    <link href="https://web.dev/workbox-share-targets/"/>
    <updated>2019-12-19T00:00:00Z</updated>
    <id>https://web.dev/workbox-share-targets/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Web Share Target API&lt;/a&gt; lets you display
your &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/checklist&quot; rel=&quot;noopener&quot;&gt;Progressive Web App&lt;/a&gt; in a
user&#39;s system-level share &lt;a href=&quot;https://material.io/develop/android/components/bottom-sheet-behavior/&quot; rel=&quot;noopener&quot;&gt;sheet&lt;/a&gt; after it&#39;s been installed. While it works great if you have a server
available to receive the request, it&#39;s much harder to get working if you don&#39;t.&lt;/p&gt;
&lt;p&gt;In this article we&#39;ll use
&lt;a href=&quot;https://developers.google.com/web/tools/workbox&quot; rel=&quot;noopener&quot;&gt;Workbox&lt;/a&gt;, a set of JavaScript
libraries for adding offline support to web apps, to create a share target URL
that lives entirely inside your &lt;a href=&quot;https://web.dev/service-workers-cache-storage/&quot;&gt;service worker&lt;/a&gt;. This lets static sites and
single-page apps serve as share targets without a dedicated server endpoint.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;Android phone with the &amp;#x27;Share via&amp;#x27; drawer open.&quot; decoding=&quot;async&quot; height=&quot;377&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/mp2bdiP2gVeMQ4UX12vd.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    System-level share target picker with an installed PWA called
    &lt;code&gt;Share Target Test&lt;/code&gt; as an option.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;on-the-same-page&quot;&gt;On the same page &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/workbox-share-targets/#on-the-same-page&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re unfamiliar with how Web Share Target Works, &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Receiving shared data with the Web Share
Target API&lt;/a&gt; gives you an in-depth introduction.
Here&#39;s a quick review.&lt;/p&gt;
&lt;p&gt;There are two parts to implementing web share target functionality. First,
update your &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;web app manifest&lt;/a&gt; to indicate that you want your app to be a share
target when installed. The following example directs shares to the &lt;code&gt;/share&lt;/code&gt; url
via a &lt;code&gt;POST&lt;/code&gt; request. It is encoded as a multipart form, with title being called
&lt;code&gt;name&lt;/code&gt;, text being called &lt;code&gt;description&lt;/code&gt;, and JPEG images being called &lt;code&gt;photos&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;…&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;&quot;share_target&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/share&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;enctype&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;files&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;photos&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;service-worker-share-targets-with-workbox&quot;&gt;Service worker share targets with Workbox &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/workbox-share-targets/#service-worker-share-targets-with-workbox&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While normally handled by a server endpoint, a neat trick you can do for a share
target is to register a route directly in your service worker to handle the
request. This will let your app be a share target without a backend.&lt;/p&gt;
&lt;p&gt;You do this in &lt;a href=&quot;https://developers.google.com/web/tools/workbox&quot; rel=&quot;noopener&quot;&gt;Workbox&lt;/a&gt; by
registering a route that&#39;s handled by your service worker. Start by importing
&lt;code&gt;registerRoute&lt;/code&gt; from &lt;code&gt;&#39;workbox-routing&#39;&lt;/code&gt;. Notice that it&#39;s registered for the
&lt;code&gt;/share&lt;/code&gt; route, the same one listed in the example web app manifest. In
response it calls &lt;code&gt;shareTargetHandler()&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; registerRoute &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;workbox-routing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;/share&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  shareTargetHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;shareTargetHandler()&lt;/code&gt; function is asynchronous and takes the event, awaits
the form data, then retrieves the media files from that.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;shareTargetHandler&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; formData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mediaFiles &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; formData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;media&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mediaFile &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; mediaFiles&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Do something with mediaFile&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Maybe cache it or post it back to a server&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do something with the rest of formData as you need&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Maybe save it to IndexedDB&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can then do whatever you&#39;d like with these files. You can cache them. You
can send them somewhere with a fetch request. You can even use the other
manifest options, maybe serving a page with some query parameters for the other
shared items or storing the data and pointers to the media in the &lt;a href=&quot;https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/cache-api&quot; rel=&quot;noopener&quot;&gt;Cache Storage
API&lt;/a&gt;
or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot; rel=&quot;noopener&quot;&gt;IndexedDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can try it out on the sample app &lt;a href=&quot;https://fugu-journal.web.app/&quot; rel=&quot;noopener&quot;&gt;Fugu
Journal&lt;/a&gt; and see its service worker
implementation in its &lt;a href=&quot;https://github.com/chromeos/bridging-the-native-app-gap/blob/master/fugu-journal/src/js/service-worker.js&quot; rel=&quot;noopener&quot;&gt;source
code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One common thing you might do is hold shared resources until better network
connections are available. Workbox also supports &lt;a href=&quot;https://web.dev/periodic-background-sync/&quot;&gt;periodic background
sync&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/workbox-share-targets/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Share Target API is a simple way to deeply integrate your Progressive Web
App into user&#39;s devices, putting them on-par with platform-specific applications for the
critical task of sharing content between apps. But doing so usually requires a
server available to receive the request. By leveraging Workbox to create a share
target route directly in your service worker, your app is free of this
constraint, allowing Share Target to work for apps while offline and without
backends.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ecasap?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Elaine Casap&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/share?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    <author>
      <name>Sam Richard</name>
    </author><author>
      <name>Joe Medley</name>
    </author><author>
      <name>Jeff Posnick</name>
    </author>
  </entry>
</feed>
