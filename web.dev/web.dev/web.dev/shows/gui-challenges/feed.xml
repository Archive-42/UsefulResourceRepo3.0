<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>GUI Challenges on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/shows/gui-challenges/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="GUI Challenges on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>There is no one way to solve interfaces challenges. 
In this series, we&amp;#39;ll be challenging ourselves and each other 
to find multiple ways to solve interface challenges 
and expand the diversity of our skills.
</subtitle>
  
  
  <entry>
    <title>Thinking on ways to solve BREADCRUMBS</title>
    <link href="https://web.dev/shows/gui-challenges/kHL3gxAlvK8/"/>
    <updated>2021-07-14T02:45:40Z</updated>
    <id>https://web.dev/shows/gui-challenges/kHL3gxAlvK8/</id>
    <content type="text/html" mode="escaped"><p>In today's GUI challenge, we're building a breadcrumbs component.. with a twist! Instead of a linear list of links, this breadcrumbs component exposes all of it's siblings in a dropdown, allowing fast traversal of your site's architecture.</p>
<p>0:00 - Introduction<br />
0:23 - Demo<br />
1:56 - Layouts<br />
4:13 - Debugging corner<br />
5:25 - Mobile UX<br />
6:17 - Reduced motion<br />
7:34 - JavaScript<br />
10:38 - Outro</p>
<p>Read along → <a href="https://goo.gle/2TbySnq">https://goo.gle/2TbySnq</a><br />
Try a demo → <a href="https://goo.gle/3ktEAwj">https://goo.gle/3ktEAwj</a><br />
Get the source → <a href="https://goo.gle/3n4Sfcg">https://goo.gle/3n4Sfcg</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve COLOR SCHEMES</title>
    <link href="https://web.dev/shows/gui-challenges/oHcTn83M1ls/"/>
    <updated>2021-06-09T16:45:46Z</updated>
    <id>https://web.dev/shows/gui-challenges/oHcTn83M1ls/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge, we’re building dark, light and dim color schemes with HSL. The CSS works across modern browsers, establishes foundational architecture for more themes, and is accessible.</p>
<p>0:00 - Introduction<br />
0:21 - Scheme overview<br />
1:15 - Debugging corner<br />
1:55 - Custom property architecture<br />
4:17 - The Cascade<br />
5:51 - DevTools<br />
7:40 - Bump bump til ya pass<br />
9:54 - Relative vs Absolute color adjusting<br />
11:54 - Outro</p>
<p>Read along → <a href="https://goo.gle/350bmMi">https://goo.gle/350bmMi</a><br />
Try a demo → <a href="https://goo.gle/3ps7Rry">https://goo.gle/3ps7Rry</a><br />
Get the source → <a href="https://goo.gle/3n4Sfcg">https://goo.gle/3n4Sfcg</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve a MEDIA SCROLLER</title>
    <link href="https://web.dev/shows/gui-challenges/jmLdZY_Lo1k/"/>
    <updated>2021-05-12T17:05:41Z</updated>
    <id>https://web.dev/shows/gui-challenges/jmLdZY_Lo1k/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge, @Adam Argyle shares thinking on ways to create inline scrolling experiences for the web that are minimal, responsive, accessible and work across browsers and platforms (like TVs!).</p>
<p>00:00 Introduction<br />
00:20 Component demo<br />
01:22 Cross browser demos<br />
04:05 International layout<br />
05:15 Debug Tooling<br />
06:56 Prefers reduced data<br />
08:47 Prefers reduced motion<br />
10:57 Roving UX<br />
12:45 aspect-ratio<br />
14:11 Conclusion</p>
<p>Read along → <a href="https://goo.gle/2SJY4km">https://goo.gle/2SJY4km</a><br />
Try a demo → <a href="https://goo.gle/33AzdkX">https://goo.gle/33AzdkX</a><br />
Get the source → <a href="https://goo.gle/3n4Sfcg">https://goo.gle/3n4Sfcg</a><br />
Follow Adam on Twitter → <a href="https://goo.gle/2RId4P1">https://goo.gle/2RId4P1</a><br />
More on roving-index from Rob Dodson → <a href="https://goo.gle/3tFkdNp">https://goo.gle/3tFkdNp</a><br />
More on logical properties on web.dev → <a href="https://goo.gle/3uJOvQi">https://goo.gle/3uJOvQi</a><br />
What's new in DevTools 91 → <a href="https://goo.gle/3eLof2N">https://goo.gle/3eLof2N</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve SPLIT TEXT</title>
    <link href="https://web.dev/shows/gui-challenges/3hvN7bkjZBk/"/>
    <updated>2021-04-21T16:41:41Z</updated>
    <id>https://web.dev/shows/gui-challenges/3hvN7bkjZBk/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge, @Adam Argyle will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here, ask questions, or submit your own code!</p>
<p>00:00 Introduction<br />
00:29 Cross browser demos<br />
01:25 Reduced motion<br />
02:36 HTML<br />
03:21 Javascript<br />
05:08 Animation devtools<br />
06:30 CSS<br />
10:21 Conclusion</p>
<p>Read along → <a href="https://goo.gle/3guHkHI">https://goo.gle/3guHkHI</a><br />
Try a demo → <a href="https://goo.gle/3sCQhkm">https://goo.gle/3sCQhkm</a><br />
Get the source → <a href="https://goo.gle/3n4Sfcg">https://goo.gle/3n4Sfcg</a><br />
Follow Adam on Twitter → <a href="https://goo.gle/2RId4P1">https://goo.gle/2RId4P1</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers  → <a href="https://goo.gle/ChromeDevs">https://goo.gle/ChromeDevs</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve SETTINGS</title>
    <link href="https://web.dev/shows/gui-challenges/dm7gnp6eh3Q/"/>
    <updated>2021-03-18T17:00:03Z</updated>
    <id>https://web.dev/shows/gui-challenges/dm7gnp6eh3Q/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge, we build and demo a dynamic settings page with sliders and checkboxes. Our settings page is responsive, supports multiple device inputs, and works across browsers. How would you create a settings page?</p>
<p>@Adam Argyle  will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here, ask questions, or submit your own code!</p>
<p>00:00 Introduction<br />
00:37 Cross Platform<br />
01:39 Spacing<br />
03:02 Layouts<br />
04:55 Color<br />
06:19 User Input<br />
07:18 Javascript<br />
08:20 Outro</p>
<p>Read along → <a href="https://goo.gle/3bCerGK">https://goo.gle/3bCerGK</a><br />
Try a demo → <a href="http://goo.gle/3qysEbW">http://goo.gle/3qysEbW</a><br />
Get the source → <a href="http://goo.gle/2OdXlWO">http://goo.gle/2OdXlWO</a></p>
<p>Install VisBug → <a href="http://goo.gle/3l286HF">http://goo.gle/3l286HF</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve TABS</title>
    <link href="https://web.dev/shows/gui-challenges/mMBcHcvxuuA/"/>
    <updated>2021-02-17T18:00:09Z</updated>
    <id>https://web.dev/shows/gui-challenges/mMBcHcvxuuA/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge, we’re building a tabs component with some really cool features that you may not have thought about. Our tabs component is responsive, supports multiple device inputs, works across browsers, and let’s you mimic some of the buttery features you love on apps.</p>
<p>@Adam Argyle will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here, ask questions, or submit your own code!</p>
<p>00:00 Introduction<br />
00:42 Features overview<br />
03:03 HTML<br />
04:14 Scrolling<br />
05:04 Inspect Layouts<br />
07:35 Layout Styles<br />
12:10 prefers-reduced-motion<br />
13:10 JavaScript &amp; Animation<br />
14:37 Conclusion</p>
<p>Read along → <a href="https://goo.gle/37jHOen">https://goo.gle/37jHOen</a><br />
Try a demo → <a href="http://goo.gle/3prCpb2">http://goo.gle/3prCpb2</a><br />
Get the source → <a href="http://goo.gle/2NsK7EK">http://goo.gle/2NsK7EK</a></p>
<p>@ScrollTimeline Polyfill → <a href="http://goo.gle/2NfUhZs">http://goo.gle/2NfUhZs</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Submission shoutouts for SIDENAV</title>
    <link href="https://web.dev/shows/gui-challenges/1omr0HzI_N0/"/>
    <updated>2021-02-03T18:00:07Z</updated>
    <id>https://web.dev/shows/gui-challenges/1omr0HzI_N0/</id>
    <content type="text/html" mode="escaped"><p>We asked the community to build a sidenav component your way and you all delivered! Check out the submissions:<br />
@a_nurella → <a href="http://goo.gle/3j9bmQm">http://goo.gle/3j9bmQm</a><br />
@mayeedwin1 → <a href="http://goo.gle/2Lin1A4">http://goo.gle/2Lin1A4</a><br />
@_developit → <a href="http://goo.gle/3j907HR">http://goo.gle/3j907HR</a><br />
@EvroMalarkey → <a href="https://goo.gle/3cwJZP2">https://goo.gle/3cwJZP2</a></p>
<p>Do you have another way you’d create a side navigation? Send it our way!</p>
<p>Watch the GUI sidenav episode → <a href="https://goo.gle/3o4UYS1">https://goo.gle/3o4UYS1</a></p>
<p>Code along → <a href="https://goo.gle/3sQ8Xif">https://goo.gle/3sQ8Xif</a><br />
Read along → <a href="https://goo.gle/2Np83J9">https://goo.gle/2Np83J9</a><br />
Try a demo → <a href="http://goo.gle/3bVBFYT">http://goo.gle/3bVBFYT</a></p>
<p>Subscribe to Google Chrome Developers  → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIChallenges #GUIsubmissions</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve a SIDENAV</title>
    <link href="https://web.dev/shows/gui-challenges/uiZqDLqjGRY/"/>
    <updated>2021-01-21T18:00:20Z</updated>
    <id>https://web.dev/shows/gui-challenges/uiZqDLqjGRY/</id>
    <content type="text/html" mode="escaped"><p>In today’s GUI challenge we create a responsive, accessible slide out side navigation user experience using CSS and JS. The sidenav works on multiple browsers, screen sizes and input devices. Rad right? Follow as we employ grid, transforms, pseudo classes and a dollop of JavaScript to handle this UX.</p>
<p>@Adam Argyle will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here, ask questions or submit your own code!</p>
<p>00:00 Introduction<br />
00:30 Debugging Corner Feature Overview<br />
02:25 Grid += Media Query Stack Layout<br />
03:42 Accessible Transform Transition<br />
04:22 :target Pseudo Class<br />
05:57 Escape Key UX<br />
06:16 Orchestrating Focus<br />
06:49 Screen Reader UX<br />
07:56 Outro &amp; Call To Action</p>
<p>Code along → <a href="https://goo.gle/3sQ8Xif">https://goo.gle/3sQ8Xif</a><br />
Read along → <a href="https://goo.gle/2Np83J9">https://goo.gle/2Np83J9</a><br />
Try a demo → <a href="http://goo.gle/3bVBFYT">http://goo.gle/3bVBFYT</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
See how others are building sidenavs (GUI Submissions) → <a href="https://goo.gle/36CAeuO">https://goo.gle/36CAeuO</a><br />
Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Submission shoutout for CENTERING</title>
    <link href="https://web.dev/shows/gui-challenges/Rzpm9VirtkE/"/>
    <updated>2021-01-13T18:06:20Z</updated>
    <id>https://web.dev/shows/gui-challenges/Rzpm9VirtkE/</id>
    <content type="text/html" mode="escaped"><p>We stress tested 5 different CSS centering techniques and I challenged you to submit your own. Shout out to Chris Coyier from CSS-Tricks for sharing his own tricks! Do you have another way you’d center in CSS? Send it our way!</p>
<p>Watch the GUI Centering episode → <a href="https://goo.gle/39d9Rwb">https://goo.gle/39d9Rwb</a><br />
Check out Chris’s blog post → <a href="http://goo.gle/3nrVCZo">http://goo.gle/3nrVCZo</a></p>
<p>Code along → <a href="https://goo.gle/3qEIaE8">https://goo.gle/3qEIaE8</a><br />
Read along → <a href="https://goo.gle/39NHC9a">https://goo.gle/39NHC9a</a><br />
Try a demo → <a href="https://goo.gle/33PIW7A">https://goo.gle/33PIW7A</a></p>
<p>Subscribe to Google Chrome Developers  → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIChallenges #GUIsubmissions</p>
</content>
    
  </entry>
  
  <entry>
    <title>Submission shoutout for STORIES | GUI Challenges</title>
    <link href="https://web.dev/shows/gui-challenges/LYVBO3l_FRU/"/>
    <updated>2020-12-17T19:00:24Z</updated>
    <id>https://web.dev/shows/gui-challenges/LYVBO3l_FRU/</id>
    <content type="text/html" mode="escaped"><p>You saw me build stories my way and I challenged you all to build it your way.  Shout out to @Geoffrich_ for his submission on Twitter! Do you have another way you’d build stories? Send it our way!</p>
<p>Watch the GUI Stories episode → <a href="https://goo.gle/2WjCHF2">https://goo.gle/2WjCHF2</a></p>
<p>Code along → <a href="https://goo.gle/3fy8fjf">https://goo.gle/3fy8fjf</a><br />
Read along → <a href="https://goo.gle/3kZuZK8">https://goo.gle/3kZuZK8</a><br />
Try a demo → <a href="https://goo.gle/3mjGldz">https://goo.gle/3mjGldz</a><br />
View source → <a href="https://goo.gle/365kXTt">https://goo.gle/365kXTt</a><br />
Overscroll-behavior on MDN → <a href="https://goo.gle/39fOID5">https://goo.gle/39fOID5</a><br />
Perceptual color on the CSS Podcast → <a href="https://goo.gle/3l6hdoX">https://goo.gle/3l6hdoX</a></p>
<p>Subscribe to Google Chrome Developers  → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIChallenges #GUIsubmissions</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve CENTERING</title>
    <link href="https://web.dev/shows/gui-challenges/ncYzTvEMCyE/"/>
    <updated>2020-12-16T18:00:08Z</updated>
    <id>https://web.dev/shows/gui-challenges/ncYzTvEMCyE/</id>
    <content type="text/html" mode="escaped"><p>In today’s challenge, we’re stress testing 5 different CSS centering techniques. See what techniques should earn a place in your tool belt by watching how they react to common layout stress. The contestants: content center, gentle flex, autobot, fluffy center, and pop &amp; plop.</p>
<p>@Adam Argyle will be responding to your comments for the first 30 minutes after the episode releases. Connect with us here or by submitting your own code!</p>
<p>Code along → <a href="https://goo.gle/3qEIaE8">https://goo.gle/3qEIaE8</a><br />
Read along → <a href="https://goo.gle/39NHC9a">https://goo.gle/39NHC9a</a><br />
Try a demo → <a href="https://goo.gle/33PIW7A">https://goo.gle/33PIW7A</a></p>
<p>Watch more GUI Challenges → <a href="https://goo.gle/GUIchallenges">https://goo.gle/GUIchallenges</a><br />
See how others are building stories (GUI Submissions) → <a href="https://goo.gle/35AO28C">https://goo.gle/35AO28C</a></p>
<p>Subscribe to Google Chrome Developers → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges #CSS #ChromeDeveloper</p>
</content>
    
  </entry>
  
  <entry>
    <title>Thinking on ways to solve STORIES | GUI Challenges</title>
    <link href="https://web.dev/shows/gui-challenges/PzvdREGR0Xw/"/>
    <updated>2020-11-25T17:36:45Z</updated>
    <id>https://web.dev/shows/gui-challenges/PzvdREGR0Xw/</id>
    <content type="text/html" mode="escaped"><p>Welcome to GUI Challenges where I create interfaces my way and challenge you to do it your way. With our creative minds combined, we’ll find multiple ways to solve these interfaces, and expand the diversity of our skills.</p>
<p>In today’s challenge we’re building “stories”, a mobile fullscreen, tap centric user experience for quickly or casually navigating through a multi-dimensional array of content.</p>
<p>Code along → <a href="https://goo.gle/3fy8fjf">https://goo.gle/3fy8fjf</a><br />
Read along → <a href="https://goo.gle/3kZuZK8">https://goo.gle/3kZuZK8</a><br />
Try a demo → <a href="https://goo.gle/3mjGldz">https://goo.gle/3mjGldz</a><br />
View source → <a href="https://goo.gle/365kXTt">https://goo.gle/365kXTt</a><br />
Overscroll-behavior on MDN → <a href="https://goo.gle/39fOID5">https://goo.gle/39fOID5</a><br />
Perceptual color on the CSS Podcast → <a href="https://goo.gle/3l6hdoX">https://goo.gle/3l6hdoX</a></p>
<p>See how others are building stories (GUI Submissions) → <a href="https://goo.gle/34mjiru">https://goo.gle/34mjiru</a></p>
<p>Subscribe to Google Chrome Developers  → <a href="http://goo.gl/LLLNvf">http://goo.gl/LLLNvf</a></p>
<p>#GUIchallenges</p>
</content>
    
  </entry>
</feed>
