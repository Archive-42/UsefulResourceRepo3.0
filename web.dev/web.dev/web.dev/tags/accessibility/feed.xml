<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Accessibility on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/accessibility/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Accessibility on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about Accessibility.</subtitle>
  
  
  <entry>
    <title>ARIA items do not have accessible names</title>
    <link href="https://web.dev/aria-name/"/>
    <updated>2020-12-08T00:00:00Z</updated>
    <id>https://web.dev/aria-name/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Users of screen readers and other assistive technologies need information
about the behavior and purpose of controls on your web page.
Built-in HTML controls like buttons and radio groups
come with that information &lt;a href=&quot;https://web.dev/use-semantic-html&quot;&gt;built in&lt;/a&gt;.
For custom controls you create, however, you must provide the information with
&lt;a href=&quot;https://www.w3.org/TR/wai-aria-1.1/#role_definitions&quot; rel=&quot;noopener&quot;&gt;ARIA&lt;/a&gt;
roles and attributes.
(Learn more in the
&lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/semantics-aria/&quot; rel=&quot;noopener&quot;&gt;Introduction to ARIA&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;To be announced properly by assistive technologies,
both
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Forms&quot; rel=&quot;noopener&quot;&gt;built-in HTML controls&lt;/a&gt;
and
&lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#aria_ex&quot; rel=&quot;noopener&quot;&gt;custom ARIA controls&lt;/a&gt;
must have &lt;a href=&quot;https://web.dev/labels-and-text-alternatives&quot;&gt;accessible names&lt;/a&gt;
that convey their purpose.&lt;/p&gt;
&lt;h2 id=&quot;how-lighthouse-identifies-aria-items-without-accessible-names&quot;&gt;How Lighthouse identifies ARIA items without accessible names &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#how-lighthouse-identifies-aria-items-without-accessible-names&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
flags custom ARIA items whose names
aren&#39;t accessible to assistive technologies:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Lighthouse audit showing custom toggle elements without accessible names&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;259&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dnruhkr4IKtq0Pi9Pgny.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;There are 7 audits that check for accessible names, each one covers a different
set of &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#aria_ex&quot; rel=&quot;noopener&quot;&gt;ARIA roles&lt;/a&gt;. Elements
that have any of the following ARIA roles but don&#39;t have accessible names will cause this audit to fail:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Audit name&lt;/th&gt;
&lt;th&gt;ARIA roles&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-command-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;button&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;menuitem&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-input-field-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;combobox&lt;/code&gt;, &lt;code&gt;listbox&lt;/code&gt;, &lt;code&gt;searchbox&lt;/code&gt;, &lt;code&gt;slider&lt;/code&gt;, &lt;code&gt;spinbutton&lt;/code&gt;, &lt;code&gt;textbox&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-meter-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;meter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-progressbar-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;progressbar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-toggle-field-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;checkbox&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt;, &lt;code&gt;menuitemcheckbox&lt;/code&gt;, &lt;code&gt;menuitemradio&lt;/code&gt;, &lt;code&gt;radio&lt;/code&gt;, &lt;code&gt;radiogroup&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-tooltip-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tooltip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;aria-treeitem-name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;treeitem&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Most common input types can be created with standardized HTML elements,
which come with built-in behaviors and accessible semantics
that can be time consuming to replicate.
Consider &lt;a href=&quot;https://web.dev/semantics-and-screen-readers/#use-semantic-html&quot;&gt;using built-in elements&lt;/a&gt;
instead of ARIA roles if possible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Lighthouse Accessibility score is a weighted average of all the accessibility audits.
See the
&lt;a href=&quot;https://web.dev/accessibility-scoring&quot;&gt;Lighthouse accessibility scoring&lt;/a&gt; post
for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;example-1:-how-to-add-accessible-names-to-your-custom-aria-toggle-fields&quot;&gt;Example 1: How to add accessible names to your custom ARIA toggle fields &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#example-1:-how-to-add-accessible-names-to-your-custom-aria-toggle-fields&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;option-1:-add-inner-text-to-the-element&quot;&gt;Option 1: Add inner text to the element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#option-1:-add-inner-text-to-the-element&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The easiest way to provide an accessible name for most elements
is to include text content inside the element.&lt;/p&gt;
&lt;p&gt;For example, this custom checkbox will be announced as &amp;quot;Newspaper&amp;quot;
to assistive technology users:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;checkbox1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Newspaper&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Using the &lt;a href=&quot;https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/&quot; rel=&quot;noopener&quot;&gt;clip pattern&lt;/a&gt; you can hide the inner text on screen, but still have it announced by assistive technology. This can be especially handy if you translate your pages for localization.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/accessible&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Learn more &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;visually-hidden&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;about accessibility on web.dev&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;option-2:-add-an-aria-label-attribute-to-the-element&quot;&gt;Option 2: Add an &lt;code&gt;aria-label&lt;/code&gt; attribute to the element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#option-2:-add-an-aria-label-attribute-to-the-element&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you can&#39;t add inner text—for example, if you don&#39;t want
the element&#39;s name to be visible—use
the &lt;code&gt;aria-label&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;This custom switch will be announced as &amp;quot;Toggle blue light&amp;quot;
to assistive technology users:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;switch1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;switch&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;aria-checked&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Toggle blue light&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;off&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;on&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;option-3:-refer-to-another-element-using-aria-labelledby&quot;&gt;Option 3: Refer to another element using &lt;code&gt;aria-labelledby&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#option-3:-refer-to-another-element-using-aria-labelledby&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;aria-labelledby&lt;/code&gt; attribute to identify another element, using its ID,
to serve as the name for the current element.&lt;/p&gt;
&lt;p&gt;For example, this custom menu radio button refers to the &lt;code&gt;menuitem1Label&lt;/code&gt; paragraph
as its label and will be announced as &amp;quot;Sans-serif&amp;quot;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;menuitem1Label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sans-serif&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;menuitem1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;menuitemradio&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token attr-name&quot;&gt;aria-labelledby&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;menuitem1Label&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token attr-name&quot;&gt;aria-checked&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;example-2:-how-to-add-accessible-names-to-your-custom-aria-input-fields&quot;&gt;Example 2: How to add accessible names to your custom ARIA input fields &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#example-2:-how-to-add-accessible-names-to-your-custom-aria-input-fields&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The easiest way to provide an accessible name for most elements
is to include text content in the element.
However, custom input fields typically don&#39;t have inner text,
so you can use one of the following strategies instead.&lt;/p&gt;
&lt;h3 id=&quot;option-1:-add-an-aria-label-attribute-to-the-element&quot;&gt;Option 1: Add an &lt;code&gt;aria-label&lt;/code&gt; attribute to the element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#option-1:-add-an-aria-label-attribute-to-the-element&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;aria-label&lt;/code&gt; attribute to define the name for the current element.&lt;/p&gt;
&lt;p&gt;For example, this custom combobox will be announced as &amp;quot;country&amp;quot;
to assistive technology users:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;combo1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;combobox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;option-2:-refer-to-another-element-using-aria-labelledby&quot;&gt;Option 2: Refer to another element using &lt;code&gt;aria-labelledby&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#option-2:-refer-to-another-element-using-aria-labelledby&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;aria-labelledby&lt;/code&gt; attribute to identify another element, using its ID,
to serve as the name for the current element.&lt;/p&gt;
&lt;p&gt;For example, this custom searchbox refers to the &lt;code&gt;searchLabel&lt;/code&gt; paragraph
as its label and will be announced as &amp;quot;Search currency pairs&amp;quot;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;searchLabel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Search currency pairs:&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;search&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;searchbox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;contenteditable&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;aria-labelledby&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;searchLabel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;resources&quot;&gt;Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-name/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/audits/accessibility/aria-toggle-field-name.js&quot; rel=&quot;noopener&quot;&gt;Source code for &lt;strong&gt;Not all ARIA toggle fields have accessible names&lt;/strong&gt; audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-command-name&quot; rel=&quot;noopener&quot;&gt;ARIA button, link, and menuitem must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-input-field-name&quot; rel=&quot;noopener&quot;&gt;ARIA input fields must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-meter-name&quot; rel=&quot;noopener&quot;&gt;ARIA meter must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-progressbar-name&quot; rel=&quot;noopener&quot;&gt;ARIA progressbar must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-toggle-field-label&quot; rel=&quot;noopener&quot;&gt;ARIA toggle fields have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-tooltip-name&quot; rel=&quot;noopener&quot;&gt;ARIA tooltip must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dequeuniversity.com/rules/axe/4.1/aria-treeitem-name&quot; rel=&quot;noopener&quot;&gt;ARIA treeitem must have an accessible name (Deque University)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/labels-and-text-alternatives&quot;&gt;Labels and text alternatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/use-semantic-html&quot;&gt;Use semantic HTML for easy keyboard wins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Next-generation web styling</title>
    <link href="https://web.dev/next-gen-css-2019/"/>
    <updated>2019-12-05T00:00:00Z</updated>
    <id>https://web.dev/next-gen-css-2019/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;There are a &lt;em&gt;ton&lt;/em&gt; of exciting things happening in CSS right now—and
many of them are already supported in today&#39;s browsers!
Our talk at CDS 2019, which you can watch below,
covers several new and upcoming features we thought should get some attention.&lt;/p&gt;
&lt;p&gt;This post focuses on the features you can use today,
so be sure to watch the talk
for a deeper discussion of upcoming features like Houdini.
You can also find demos for all the features we discuss on our
&lt;a href=&quot;https://a.nerdy.dev/css-at-cds&quot; rel=&quot;noopener&quot;&gt;CSS@CDS page&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;-oyeaIirVC0&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;contents&quot;&gt;Contents &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#contents&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#scroll-snap&quot;&gt;Scroll Snap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#:focus-within&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#media-queries-level-5&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#logical-properties&quot;&gt;Logical properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#position:-sticky&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#backdrop-filter&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#is&quot;&gt;&lt;code&gt;:is()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#css-houdini&quot;&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;scroll-snap&quot;&gt;Scroll Snap &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#scroll-snap&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap/Basic_concepts&quot; rel=&quot;noopener&quot;&gt;Scroll Snap&lt;/a&gt; lets you define snap points as the user scrolls your content vertically, horizontally, or  both. It offers built-in scroll inertia and deceleration, and it&#39;s touch enabled.&lt;/p&gt;
&lt;p&gt;This sample code sets up horizontal scrolling in a &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element with snap points aligned to the left sides of child &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; elements:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;section &gt; picture&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s how it works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the parent &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element,
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overflow-x&lt;/code&gt; is set to &lt;code&gt;auto&lt;/code&gt; to allow horizontal scrolling.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overscroll-behavior-x&lt;/code&gt; is set to &lt;code&gt;contain&lt;/code&gt; to prevent any parent elements from scrolling when the user reaches the boundaries of the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element&#39;s scroll area. (This isn&#39;t strictly necessary for snapping, but it&#39;s usually a good idea.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scroll-snap-type&lt;/code&gt; is set to &lt;code&gt;x&lt;/code&gt;—for horizontal snapping—and &lt;code&gt;mandatory&lt;/code&gt;—to ensure that the viewport always snaps to the closest snap point.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On the child &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; elements, &lt;code&gt;scroll-snap-align&lt;/code&gt; is set to start, which sets the snap points on the left side of each picture (assuming &lt;code&gt;direction&lt;/code&gt; is set to &lt;code&gt;ltr&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And here&#39;s a live demo:&lt;/p&gt;
&lt;iframe height=&quot;520&quot; style=&quot;display: block; width: 400px; max-width: 100%; margin: 0 auto;&quot; scrolling=&quot;no&quot; title=&quot;Awww Scroll Snap [horizontal]&quot; src=&quot;https://codepen.io/argyleink/embed/zYYZPqb?height=916&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/argyleink/pen/zYYZPqb&quot;&gt;Awww Scroll Snap [horizontal]&lt;/a&gt; by Adam Argyle
  (&lt;a href=&quot;https://codepen.io/argyleink&quot;&gt;@argyleink&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;You can also take a look at demos for &lt;a href=&quot;https://codepen.io/argyleink/pen/oNNZoZj&quot; rel=&quot;noopener&quot;&gt;vertical scroll snap&lt;/a&gt; and &lt;a href=&quot;https://codepen.io/argyleink/pen/MWWpOmz&quot; rel=&quot;noopener&quot;&gt;matrix scroll snap&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While scroll snap supports vertical snapping, be cautious when using it at the page level since it can feel like control is being taken from the user in some cases. It&#39;s usually best to apply snapping to a component on your page rather than the page itself.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;:focus-within&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#:focus-within&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt;&lt;/a&gt; addresses a long-standing accessibility issue: there are many cases when focusing a child element should affect the presentation of a parent element so that the UI is accessible to users of assistive technologies.&lt;/p&gt;
&lt;p&gt;For example, if you have a dropdown menu with several items, the menu should remain visible while any of the items has focus. Otherwise, the menu disappears for keyboard users.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:focus-within&lt;/code&gt; tells the browser to apply a style when focus is on any child element of a specified element. Returning to the menu example, by setting &lt;code&gt;:focus-within&lt;/code&gt; on the menu element, you can make sure it stays visible when a menu item has focus:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.menu:focus-within&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;img alt=&quot;An illustration showing the difference in behavior between focus and focus-within.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Try tabbing through the focusable elements in the demo below. You&#39;ll notice that the menus remain visible as you focus on the menu items:&lt;/p&gt;
&lt;iframe height=&quot;275&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Simple CSS Dropdown Menu with Hover and :focus-within and Focus states&quot; src=&quot;https://codepen.io/una/embed/RMmogp?height=265&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/RMmogp&quot;&gt;Simple CSS Dropdown Menu with Hover and :focus-within and Focus states&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;media-queries-level-5&quot;&gt;Media Queries Level 5 &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#media-queries-level-5&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#environment-blending&quot; rel=&quot;noopener&quot;&gt;New media queries&lt;/a&gt; give us powerful ways to adjust the user experience of our apps based on a user&#39;s device preferences. Basically, the browser serves as a proxy for system-level preferences that we can respond to in our CSS using the &lt;code&gt;prefers-*&lt;/code&gt; group of media queries:&lt;/p&gt;
&lt;img alt=&quot;A diagram showing media queries interpreting system-level user preferences.&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Here are the new queries we think developers will be most excited about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/03/prefers-reduced-motion&quot; rel=&quot;noopener&quot;&gt;prefers-reduced-motion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/prefers-color-scheme/&quot;&gt;prefers-color-scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast&quot; rel=&quot;noopener&quot;&gt;prefers-contrast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-transparency&quot; rel=&quot;noopener&quot;&gt;prefers-reduced-transparency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors&quot; rel=&quot;noopener&quot;&gt;forced-colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/inverted-colors&quot; rel=&quot;noopener&quot;&gt;inverted-colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These queries are a huge win for accessibility. Previously we had no way to know, for example, that a user had set their OS to high-contrast mode. If you wanted to provide a high-contrast mode for a web app that remained true to your brand, you had to ask users to choose it from UI within your app. Now you can detect the high-contrast setting from the OS using &lt;code&gt;prefers-contrast&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One exciting implication of these media queries is that we can design for multiple combinations of system-level user preferences to accommodate the wide range of user preferences and accessibility needs. If a user wants high-contrast dark mode when in dimly lit environments, you can do that!&lt;/p&gt;
&lt;p&gt;It&#39;s important to Adam that &amp;quot;prefers reduced motion&amp;quot; doesn&#39;t get implemented as &amp;quot;no motion.&amp;quot; The user is saying they prefer less motion, not that they don&#39;t want any animation. He asserts reduced motion is not no motion. Here&#39;s an example that uses a crossfade animation when the user prefers reduced motion:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/reduced-motion.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/reduced-motion.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In Chrome Canary, you can test CSS that uses &lt;code&gt;prefers-reduced-motion&lt;/code&gt; or &lt;code&gt;prefers-color-scheme&lt;/code&gt; by choosing the appropriate settings in the DevTools &lt;strong&gt;Rendering&lt;/strong&gt; drawer. To access &lt;strong&gt;Rendering&lt;/strong&gt;, &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/command-menu&quot; rel=&quot;noopener&quot;&gt;open the Command Menu&lt;/a&gt; and run the &lt;code&gt;Show Rendering&lt;/code&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;logical-properties&quot;&gt;Logical properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#logical-properties&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties&quot; rel=&quot;noopener&quot;&gt;Logical properties&lt;/a&gt; solve a problem that has gained visibility as more developers tackle internationalization. Many layout properties like &lt;code&gt;margin&lt;/code&gt; and &lt;code&gt;padding&lt;/code&gt; assume a language that is read top-to-bottom and left-to-right.&lt;/p&gt;
&lt;img alt=&quot;A diagram showing traditional CSS layout properties.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;When designing pages for multiple languages with varying writing modes, developers have had to adjust all those properties individually across multiple elements, which quickly becomes a maintainability nightmare.&lt;/p&gt;
&lt;p&gt;Logical properties let you maintain layout integrity across translations and writing modes. They dynamically update based on the semantic ordering of content rather than its spatial arrangement. With logical properties, each element has two dimensions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;block&lt;/strong&gt; dimension is &lt;strong&gt;perpendicular&lt;/strong&gt; to the flow of text in a line. (In English, &lt;code&gt;block-size&lt;/code&gt; is the same as &lt;code&gt;height&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;inline&lt;/strong&gt; dimension is &lt;strong&gt;parallel&lt;/strong&gt; to the flow of text in a line. (In English, &lt;code&gt;inline-size&lt;/code&gt; is the same as &lt;code&gt;width&lt;/code&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These dimension names apply to all logical layout properties. So, for example, in English, &lt;code&gt;block-start&lt;/code&gt; is the same as &lt;code&gt;top&lt;/code&gt;, and &lt;code&gt;inline-end&lt;/code&gt; is the same as &lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;A diagram showing new CSS logical layout properties.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;With logical properties, you can automatically update your layout for other languages by simply changing the &lt;code&gt;writing-mode&lt;/code&gt; and &lt;code&gt;direction&lt;/code&gt; properties for your page rather than updating dozens of layout properties on individual elements.&lt;/p&gt;
&lt;p&gt;You can see how logical properties work in the demo below by setting the &lt;code&gt;writing-mode&lt;/code&gt; property on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element to different values:&lt;/p&gt;
&lt;iframe height=&quot;750&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Logical Properties Demo&quot; src=&quot;https://codepen.io/una/embed/mddxpaY?height=265&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/mddxpaY&quot;&gt;Logical Properties Demo&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;position:-sticky&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#position:-sticky&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An element with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/position#Sticky_positioning&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt;&lt;/a&gt; remains in block flow until it starts to go offscreen,
at which point it stops scrolling with the rest of the page
and sticks to the position specified by the element&#39;s &lt;code&gt;top&lt;/code&gt; value.
The space allocated for that element remains in the flow,
and the element returns to it when the user scrolls back up.&lt;/p&gt;
&lt;p&gt;Sticky positioning lets you create many useful effects that previously required JavaScript. To show some of the possibilities, we&#39;ve created several demos. Each demo uses largely the same CSS and only slightly adjusts the HTML markup to create each effect.&lt;/p&gt;
&lt;h3 id=&quot;sticky-stack&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/YzzZyMx&quot; rel=&quot;noopener&quot;&gt;Sticky Stack&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-stack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this demo, all sticky elements share the same container. That means that each sticky element slides over the previous one as the user scrolls down. The sticky elements share the same stuck position.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-stack.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-stack.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;sticky-slide&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/abbJOjP&quot; rel=&quot;noopener&quot;&gt;Sticky Slide&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-slide&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here, the sticky elements are cousins. (That is, their parents are siblings.) When a sticky element hits the lower boundary of its container, it moves up with the container, creating the impression that lower sticky elements are pushing up higher ones. In other words, they appear to compete for the stuck position.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-slide.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-slide.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;sticky-desperado&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/qBBrbyx&quot; rel=&quot;noopener&quot;&gt;Sticky Desperado&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-desperado&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Like Sticky Slide, the sticky elements in this demo are cousins. However, they&#39;ve been placed in containers set to a two-column grid layout.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-desperado.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-desperado.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;backdrop-filter&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#backdrop-filter&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt; property lets you apply graphical effects to the area &lt;em&gt;behind&lt;/em&gt; an element rather than to the element itself. This makes lots of cool effects that were previously only achievable using complicated CSS and JavaScript hacks doable with one line of CSS.&lt;/p&gt;
&lt;p&gt;For example, this demo uses &lt;code&gt;backdrop-filter&lt;/code&gt; to achieve OS-style blurring:&lt;/p&gt;
&lt;iframe height=&quot;510&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;mddjjor&quot; src=&quot;https://codepen.io/una/embed/mddjjor?height=265&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/mddjjor&quot;&gt;mddjjor&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;We already have a &lt;a href=&quot;https://web.dev/backdrop-filter/&quot;&gt;great post about &lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt;, so head there for more info.&lt;/p&gt;
&lt;h2 id=&quot;:is()&quot;&gt;&lt;code&gt;:is()&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#:is()&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:is&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:is()&lt;/code&gt; pseudo-class&lt;/a&gt; is actually over ten years old, it still doesn&#39;t see as much use as we think it deserves. It takes a comma-separated list of selectors as its argument and matches any selectors in that list. That flexibility makes it incredibly handy and can significantly reduce the amount of CSS you ship.&lt;/p&gt;
&lt;p&gt;Here&#39;s a quick example:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/is-animation.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/is-animation.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;button.focus,&lt;br /&gt;button:focus&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;article &gt; h1,&lt;br /&gt;article &gt; h2,&lt;br /&gt;article &gt; h3,&lt;br /&gt;article &gt; h4,&lt;br /&gt;article &gt; h5,&lt;br /&gt;article &gt; h6&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* selects the same elements as the code above */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;button:is(.focus, :focus)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;article &gt; :is(h1,h2,h3,h4,h5,h6)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#gap&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&quot; rel=&quot;noopener&quot;&gt;CSS grid layout&lt;/a&gt; has had &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/gap&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt; (previously &lt;code&gt;grid-gap&lt;/code&gt;) for some time. By specifying the internal spacing of a containing element rather than the spacing around child elements, &lt;code&gt;gap&lt;/code&gt; solves many common layout issues. For example, with gap, you don&#39;t have to worry about margins on child elements causing unwanted whitespace around the edges of a containing element:&lt;/p&gt;
&lt;img alt=&quot;Illustration showing how the gap property avoids unintended spacing around edges of a container element.&quot; decoding=&quot;async&quot; height=&quot;846&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Even better news: &lt;code&gt;gap&lt;/code&gt; is coming to flexbox, bringing all the same spacing perks that grid has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s one spacing declaration rather than many.&lt;/li&gt;
&lt;li&gt;There&#39;s no need to establish conventions for your project about which child elements should own spacing—the containing element owns the spacing instead.&lt;/li&gt;
&lt;li&gt;The code is more easily understandable than older strategies like the &lt;a href=&quot;https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/&quot; rel=&quot;noopener&quot;&gt;lobotomized owl&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following video shows the benefits of using a single &lt;code&gt;gap&lt;/code&gt; property for two elements, one with a grid layout and one with a flex layout:&lt;/p&gt;
&lt;p&gt;Right now, only FireFox supports &lt;code&gt;gap&lt;/code&gt; in flex layouts, but play around with this demo to see how it works:&lt;/p&gt;
&lt;iframe height=&quot;600&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Gappy&quot; src=&quot;https://codepen.io/argyleink/embed/abbVqEv?height=265&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/argyleink/pen/abbVqEv&quot;&gt;Gappy&lt;/a&gt; by Adam Argyle
  (&lt;a href=&quot;https://codepen.io/argyleink&quot;&gt;@argyleink&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;css-houdini&quot;&gt;CSS Houdini &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#css-houdini&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Houdini&quot; rel=&quot;noopener&quot;&gt;Houdini&lt;/a&gt; is a set of low-level APIs for the browser&#39;s rendering engine that lets you tell the browser how to interpret custom CSS. In other words, it gives you access to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model&quot; rel=&quot;noopener&quot;&gt;CSS Object Model&lt;/a&gt;, letting you &lt;em&gt;extend&lt;/em&gt; CSS via JavaScript. This has several benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It gives you much more power to create custom CSS features.&lt;/li&gt;
&lt;li&gt;It&#39;s easier to separate rendering concerns from application logic.&lt;/li&gt;
&lt;li&gt;It&#39;s more performant than the CSS polyfilling we currently do with JavaScript since the browser will no longer have to parse scripts and do a second rendering cycle; Houdini code is parsed in the first rendering cycle.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Illustration showing how Houdini works compared to traditional JavaScript polyfills.&quot; decoding=&quot;async&quot; height=&quot;599&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Houdini is an umbrella name for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Houdini#The_Houdini_APIs&quot; rel=&quot;noopener&quot;&gt;several APIs&lt;/a&gt;. If you want more information about them and their current status, take a look at &lt;a href=&quot;https://ishoudinireadyyet.com/&quot; rel=&quot;noopener&quot;&gt;Is Houdini Ready Yet?&lt;/a&gt; In our talk, we covered the Properties and Values API, the Paint API, and the Animation Worklet because they&#39;re currently the most supported. We could easily dedicate a full post to each of these exciting APIs, but, for now, check out our talk for an overview and some cool demos that start to give a sense of what you can do with the APIs.&lt;/p&gt;
&lt;h2 id=&quot;overflow&quot;&gt;Overflow &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#overflow&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few more things on the horizon that we wanted to discuss but didn&#39;t have time to cover in depth, so we ran through them in a speed round.⚡ If you haven&#39;t heard of some of these features yet, be sure to watch &lt;a href=&quot;https://youtu.be/-oyeaIirVC0?t=1825&quot; rel=&quot;noopener&quot;&gt;the last part of the talk&lt;/a&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: a property that will allow you to set height and width at the same time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aspect-ratio&lt;/code&gt;: a property that sets an aspect ratio for elements that don&#39;t have one intrinsically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min()&lt;/code&gt;, &lt;code&gt;max()&lt;/code&gt;, and &lt;code&gt;clamp()&lt;/code&gt;: functions that will let you set numeric constraints on any CSS property, not just width and height&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list-style-type&lt;/code&gt; an existing property, but it will soon support a wider range of values, including emoji and SVGs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display: outer inner&lt;/code&gt;: The &lt;code&gt;display&lt;/code&gt; property will soon accept two parameters, which will let you explicitly specify its outer and inner layouts rather than using compound keywords like &lt;code&gt;inline-flex&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;CSS regions: will let you fill a specified, non-rectangular area that content can flow into and out of&lt;/li&gt;
&lt;li&gt;CSS modules: JavaScript will be able to request a CSS module and get a rich object back that&#39;s easy to perform operations on&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author><author>
      <name>Una Kravets</name>
    </author>
  </entry>
  
  <entry>
    <title>Media accessibility</title>
    <link href="https://web.dev/media-accessibility/"/>
    <updated>2020-08-20T00:00:00Z</updated>
    <id>https://web.dev/media-accessibility/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Accessibility isn&#39;t like icing on a cake. It&#39;s never anything you put on a
backlog with the hope of introducing it later. Captions and screen reader
descriptions are the only way many users can experience your videos, and in some
jurisdictions, they&#39;re even required by law or regulation.&lt;/p&gt;
&lt;p&gt;To add captions or screen reader descriptions to a web video, add a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt; tag
to a &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag. In addition to captions and screen reader descriptions, tags
may also be used for subtitles and chapter titles. The can also help search
engines understand what&#39;s in a video. Those capabilities are outside the scope
of this article.&lt;/p&gt;
&lt;figure class=&quot;w-figure  w-figure--inline-right&quot;&gt;
  &lt;img alt=&quot;Screenshot showing captions displayed using the track element in Chrome on Android&quot; decoding=&quot;async&quot; height=&quot;480&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vbNDp5R05MwQmsxZ0RLI.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screenshot showing captions displayed using the
track element in Chrome on Android&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;An example &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag with two &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tags is shown below. There&#39;s also a
sample you can &lt;a href=&quot;https://track-demonstration.glitch.me/&quot; rel=&quot;noopener&quot;&gt;view on Glitch&lt;/a&gt;
(&lt;a href=&quot;https://glitch.com/edit/#!/track-demonstration&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To add captions to your video add a track element as a child of the video
element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/webfundamentals-assets/videos/chrome.webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/webm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;source&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://storage.googleapis.com/webfundamentals-assets/videos/chrome.mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;video/mp4&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;track&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chrome-subtitles-en.vtt&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;English captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token attr-name&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;srclang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;track&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chrome-subtitles-zh.vtt&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;中文字幕&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token attr-name&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;captions&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;srclang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;zh&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;This browser does not support the video element.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag is similar to the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element in that both have a &lt;code&gt;src&lt;/code&gt;
attribute that points to referenced content. For a &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag, it points to a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API&quot; rel=&quot;noopener&quot;&gt;WebVTT file&lt;/a&gt;.  The
&lt;code&gt;label&lt;/code&gt; attribute specifies the how a particular track will be identified in the
interface. To provide tracks for multiple languages add a separate &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; tag
for each WebVTT file you&#39;re providing and indicate the language using the
&lt;code&gt;srclang&lt;/code&gt; attribute. The &lt;code&gt;default&lt;/code&gt; attribute indicates which language track is
the default.&lt;/p&gt;
&lt;h2 id=&quot;define-captions-in-track-file&quot;&gt;Define captions in track file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/media-accessibility/#define-captions-in-track-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Below is a hypothetical WebVTT file for the demo linked to above. The file is a text file containing a series of &lt;em&gt;cues&lt;/em&gt;. Each cue is a block of text to display on screen and the time range during which it will be displayed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;WEBVTT&lt;br /&gt;&lt;br /&gt;00:00.000 --&gt; 00:04.999&lt;br /&gt;Man sitting on a tree branch, using a laptop.&lt;br /&gt;&lt;br /&gt;00:05.000 --&gt; 00:08.000&lt;br /&gt;The branch breaks, and he starts to fall.&lt;br /&gt;&lt;br /&gt;...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each item in a track file is called a cue. Each cue has a start time and end
time separated by an arrow, with cue text in the line below. Cues can optionally
also have IDs: &lt;code&gt;railroad&lt;/code&gt; and &lt;code&gt;manuscript&lt;/code&gt; in the example below. Cues are
separated by an empty line.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;WEBVTT&lt;br /&gt;&lt;br /&gt;railroad&lt;br /&gt;00:00:10.000 --&gt; 00:00:12.500&lt;br /&gt;Left uninspired by the crust of railroad earth&lt;br /&gt;&lt;br /&gt;manuscript&lt;br /&gt;00:00:13.200 --&gt; 00:00:16.900&lt;br /&gt;that touched the lead to the pages of your manuscript.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Cue times are in hours:minutes:seconds:milliseconds format. Parsing is strict.
Numbers must be zero padded if necessary: hours, minutes, and seconds must have
two digits (00 for a zero value) and milliseconds must have three digits (000
for zero). There is an excellent WebVTT validator at &lt;a href=&quot;https://quuz.org/webvtt/&quot; rel=&quot;noopener&quot;&gt;Live WebVTT
Validator&lt;/a&gt;, which checks for errors in time
formatting, and problems such as non-sequential times.&lt;/p&gt;
&lt;p&gt;You can create a VTT file by hand, thought there are &lt;a href=&quot;https://www.google.com/search?q=webvtt+services&quot; rel=&quot;noopener&quot;&gt;services that will create
them for you&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author>
  </entry>
  
  <entry>
    <title>ARIA: poison or antidote?
</title>
    <link href="https://web.dev/aria-poison-or-antidote/"/>
    <updated>2020-08-18T00:00:00Z</updated>
    <id>https://web.dev/aria-poison-or-antidote/</id>
    <content type="text/html" mode="escaped">&lt;h2 id=&quot;what-is-aria&quot;&gt;What is ARIA? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#what-is-aria&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ARIA lets web authors create an alternative reality, seen only by screen readers 🤥&lt;/p&gt;
&lt;p&gt;Sometimes it&#39;s necessary to expand on the truth or even downright &amp;quot;lie&amp;quot; to screen readers about
what&#39;s happening in web content. For example, &amp;quot;focus is really over here!&amp;quot; or &amp;quot;this is really a
slider!&amp;quot;. It&#39;s like adding magical sticky notes on top of tools and widgets on your workbench. These
magical sticky notes make everyone believe what&#39;s written on them.&lt;/p&gt;
&lt;p&gt;Whenever a magical sticky note exists, it either overrides our belief about what each tool is, or
something about the tool. Example: &amp;quot;this thing over here is a glue gun!&amp;quot;. Even though it&#39;s still
actually an empty blue box sitting there on the workbench, the magical sticky note will make us see
it is a glue gun. We can also add, &amp;quot;and it is 30% full!&amp;quot;. The screen reader will now report that
there is a 30% full glue gun there.&lt;/p&gt;
&lt;p&gt;The web equivalent to this is to take a plain box element (a div) with an image inside of it, and
use ARIA to say it&#39;s a slider at value 30 out of 100.&lt;/p&gt;
&lt;h2 id=&quot;what-isn&#39;t-aria&quot;&gt;What isn&#39;t ARIA? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#what-isn&#39;t-aria&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ARIA does not affect the appearance of a web page, or the behavior for a mouse or keyboard user.
Only users of assistive technologies will notice any difference from ARIA. Web developers can add
any arbitrary ARIA without affecting users that aren&#39;t running an assistive technology.&lt;/p&gt;
&lt;p&gt;You read it right: ARIA doesn&#39;t actually do anything to keyboard focus or tab order. That&#39;s all done
in HTML, sometimes tweaked with bits of JavaScript.&lt;/p&gt;
&lt;h2 id=&quot;how-does-aria-work&quot;&gt;How does ARIA work? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#how-does-aria-work&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Browsers are asked by a screen reader or other assistive technology for information about each
element. When ARIA is present on an element, the browser takes in the information and changes
what it tells the screen reader about that element.&lt;/p&gt;
&lt;h2 id=&quot;why-aria&quot;&gt;Why ARIA? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#why-aria&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Why would we ever want to lie to our users!?&lt;/p&gt;
&lt;p&gt;Let&#39;s say the local web store doesn&#39;t sell all the widgets we need. But, we are
&lt;a href=&quot;https://www.cbs.com/shows/macgyver/&quot; rel=&quot;noopener&quot;&gt;MacGyver&lt;/a&gt;, dammit. We can just invent our own widgets from
other widgets! FWIW, the
&lt;a href=&quot;https://www.cbs.com/shows/macgyver/news/1005839/the-notorious-tools-of-macgyver-s-trade/&quot; rel=&quot;noopener&quot;&gt;MacGyver&#39;s seven most used things&lt;/a&gt;
are Swiss Army knives, gum, shoe strings, matches, paper clips, birthday candles, and duct tape. He
uses them to make bombs and other things that aren&#39;t just laying around. This is pretty similar to a
web author who needs to make a menu bar. Menu bars are so useful you would think they would be part of
HTML, but they aren&#39;t. Oh well! You didn&#39;t think authors would be happy with links and buttons did
you? So the author will cobble one together using their favorite tools: divs, images, style, click
handlers, keypress handlers, spit, and ARIA.&lt;/p&gt;
&lt;p&gt;Sometimes, rather than using ARIA to the max, we just use it as an enhancement. It can be useful to
sprinkle a little ARIA on some HTML that already basically works. For example, we might want a form
control to point to an error message alert that relates to some invalid input. Or we might want to
indicate that a textbox is for searching. These little tweaks can make ordinary websites more usable
with a screen reader.&lt;/p&gt;
&lt;h2 id=&quot;menu-bar-example&quot;&gt;Menu bar example &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#menu-bar-example&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;supporting-mouse-clicker-people&quot;&gt;Supporting mouse clicker people &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#supporting-mouse-clicker-people&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let&#39;s make a menu bar together. We show a bunch of items in generic box elements called divs. Any
time our user clicks on a div, it executes the corresponding command. Cool, it works for mouse
clicker people!&lt;/p&gt;
&lt;p&gt;Next we make it look pretty. We use CSS, i.e. styles, lining things up nicely and putting visual
outlines around them. We make it look enough like other menu bars that sighties intuitively know
that it&#39;s a menu bar and how to use it. Our menu bar even uses a different background color on any
item that the mouse is over, giving the user some helpful visual feedback.&lt;/p&gt;
&lt;p&gt;Some menu items are parents. They spawn child submenus. Whenever the user hovers on one of these we
start an animation that slides out the child submenu.&lt;/p&gt;
&lt;p&gt;This, of course, is all pretty inaccessible, as is the usual case for many things on the web,
largely because the HTML standards wizards didn&#39;t add everything a web author needs. And even if
they did, web authors would always want to invent their own special version anyway.&lt;/p&gt;
&lt;h3 id=&quot;making-our-menu-bar-keyboard-accessible&quot;&gt;Making our menu bar keyboard accessible &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#making-our-menu-bar-keyboard-accessible&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a first step toward accessibility, let&#39;s add keyboard accessibility. This part only uses HTML,
and not ARIA. Remember that ARIA does not affect core aspects such as appearance, mouse, or
keyboard for users without assistive technologies.&lt;/p&gt;
&lt;p&gt;Just like a web page can respond to the mouse, it can also respond to the keyboard. Our JavaScript
will listen to all keystrokes that occur and decide if the keypress is useful. If not, it throws it
back to the page like a fish that&#39;s too small to eat. Our rules are something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the user presses an arrow key, let&#39;s look at our own internal menu bar blueprints and
decide what the new active menu item should be. We will clear any current highlights and
highlight the new menu item so the sighted user visually knows where they are. The web page
should then call &lt;code&gt;event.preventDefault()&lt;/code&gt; to prevent the browser from performing the
usual action (scrolling the page, in this case).&lt;/li&gt;
&lt;li&gt;If the user presses the &lt;kbd&gt;Enter&lt;/kbd&gt; key, we can treat it just like a click, and perform
the appropriate action (or even open another menu).&lt;/li&gt;
&lt;li&gt;If the user presses a key that should do something else, don&#39;t eat that!
Throw it back to the page as nature intended. For example, our menu bar
doesn&#39;t need the &lt;kbd&gt;Tab&lt;/kbd&gt; key, so throw it back! This is hard to get
right, and authors often mess it up. For example, the menu bar needs arrow
keys, but not &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Arrow&lt;/kbd&gt; or
&lt;kbd&gt;Command&lt;/kbd&gt;+Arrow. Those are shortcuts for moving to the
previous/next page in the web history of your browser tab. If the author
isn&#39;t careful, the menu bar will eat those. This kind of bug happens a lot,
and we haven&#39;t even started with ARIA yet!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;screen-reader-access-to-our-menu-bar&quot;&gt;Screen reader access to our menu bar &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#screen-reader-access-to-our-menu-bar&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our menu bar was created with duct tape and divs. As a result, a screen reader has no idea what any
of it is. The background color for the active item is just a color. The menu item divs are just
plain objects with no particular meaning. Consequently, a user of our menu bar doesn&#39;t get any
instructions about what keys to press or what item they&#39;re on.&lt;/p&gt;
&lt;p&gt;But that&#39;s no fair! The menu bar acts just fine for the sighted user.&lt;/p&gt;
&lt;p&gt;ARIA to the rescue. ARIA lets us pretend to the screen reader that focus is in a
menu bar. If the author does everything right, our custom menu bar will look to the screen reader
just like a menu bar in a desktop application.&lt;/p&gt;
&lt;p&gt;Our first, ahem, ARIA lie, is to use the &lt;code&gt;aria-activedescendant&lt;/code&gt; attribute, and set it to the ID of
the currently active menuitem, being careful to update it whenever it changes. For example,
&lt;code&gt;aria-activedescendant=&amp;quot;settings-menuitem&amp;quot;&lt;/code&gt;. This little white lie causes the screen reader to
consider our ARIA active item as the focus, which is read aloud or shown on a Braille display.&lt;/p&gt;
&lt;details class=&quot;w-details&quot;&gt;
&lt;summary class=&quot;w-details__summary&quot;&gt;
  &lt;h2 class=&quot;w-details__header&quot;&gt;
    Explanation of &lt;em&gt;ancestor&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt;, and &lt;em&gt;descendant&lt;/em&gt;
  &lt;/h2&gt;
&lt;/summary&gt;
The term descendant refers to the
fact that an item is contained somewhere inside of another. The opposite term is ancestor, which is
to say an item is contained by ancestors. For the next container up/down, these may use the more
specific terms parent/child. For example, imagine a document with a paragraph that has a link
inside. The link&#39;s parent is a paragraph, but it also has the document as an ancestor. 
Conversely, the document may have many paragraph children, each with links. The links are all
descendants of the grandparent document.
&lt;/details&gt;
&lt;p&gt;Back to &lt;code&gt;aria-activedescendant&lt;/code&gt;. By using it to point from the focused menu bar to a specific menu
item, the screen reader now knows where the user has moved, but nothing else about the object. What
is this div thing anyway? That&#39;s where the role attribute comes in. We use &lt;code&gt;role=&amp;quot;menubar&amp;quot;&lt;/code&gt; on the
containing element for the entire thing, then we use &lt;code&gt;role=&amp;quot;menu&amp;quot;&lt;/code&gt; on groups of items, and
&lt;code&gt;role=&amp;quot;menuitem&amp;quot;&lt;/code&gt; on … drumroll … the individual menu items.&lt;/p&gt;
&lt;p&gt;And what if the menuitem can lead to a child menu? The user needs to know that right? For a sighted
user, there might be a little picture of a triangle at the end of the menu, but the screen reader
doesn&#39;t know how to automatically read images, at least at this point. We can add
&lt;code&gt;aria-expanded=&amp;quot;false&amp;quot;&lt;/code&gt; on each expandable menuitem to indicate that 1) there is something that can
be expanded, and 2) it currently is not expanded. As an added touch the author should put
&lt;code&gt;role=&amp;quot;none&amp;quot;&lt;/code&gt; on the img triangle to indicate it&#39;s for prettification purposes only. This prevents
the screen reader from saying anything about the image that would be redundant at best and possibly annoying.&lt;/p&gt;
&lt;h2 id=&quot;dealing-with-bugs&quot;&gt;Dealing with bugs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#dealing-with-bugs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;keyboard-bugs-(html!)&quot;&gt;Keyboard bugs (HTML!) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#keyboard-bugs-(html!)&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Although keyboard access is a part of core HTML, authors mess it up all the time, either because
they don&#39;t use keyboard navigation all that much, or because there is much nuance to get right.&lt;/p&gt;
&lt;p&gt;Examples of bugs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A checkbox uses spacebar to toggle, but the author forgot to call &lt;code&gt;preventDefault()&lt;/code&gt;. Now
the spacebar will both toggle the checkbox and page down, which is the default browser behavior
for spacebar.&lt;/li&gt;
&lt;li&gt;An ARIA modal dialog wants to trap tab navigation inside of it, and the author forgets to
specifically allow &lt;kbd&gt;Control&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt; through to the browser. Now,
&lt;kbd&gt;Control&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt; just navigates within their dialog, and doesn&#39;t switch tabs
in the browser as it should. Ugh.&lt;/li&gt;
&lt;li&gt;An author creates a selection list, and implements up/down, but does not implement
home/end/pageup/pagedown or first letter navigation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Authors should follow known patterns. Check out the &lt;a href=&quot;https://web.dev/aria-poison-or-antidote/#resources&quot;&gt;Resources&lt;/a&gt; section for more information.&lt;/p&gt;
&lt;p&gt;For pure keyboard access issues, it&#39;s useful to also try without a screen reader, or with virtual
browser mode off. Screen readers are not generally necessary to discover keyboard bugs, and keyboard
access is actually implemented with HTML, not ARIA. After all, ARIA doesn&#39;t affect basic stuff like
the keyboard or mouse behavior, it only lies to the screen reader about what&#39;s in the web page,
what&#39;s currently focused, etc.&lt;/p&gt;
&lt;p&gt;Keyboard bugs are almost always a bug in the web content, specifically in their HTML and JavaScript,
not in ARIA.&lt;/p&gt;
&lt;h3 id=&quot;aria-bugs:-why-are-there-so-many&quot;&gt;ARIA bugs: why are there so many? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#aria-bugs:-why-are-there-so-many&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are many, many places where authors can get ARIA wrong, and each will lead to either complete
breakage or subtle differences. The subtle ones are probably worse, because the author won&#39;t catch
most of them before publishing.&lt;/p&gt;
&lt;p&gt;After all, unless the author is an experienced screen reader user, something is going to go wrong in
the ARIA. In our menu bar example, the author could think the &amp;quot;option&amp;quot; role was to be used when &amp;quot;menuitem&amp;quot;
was correct. They could forget to use &lt;code&gt;aria-expanded&lt;/code&gt;, forget to set and clear
&lt;code&gt;aria-activedescendant&lt;/code&gt; at the right times, or forget to have a menu bar containing the other menus.
And what about menu item counts? Usually menu items are presented by screen readers with something
like &amp;quot;item 3 of 5&amp;quot; so that the user knows where they are. This is generally counted automatically by
the browser, but in some cases, and in some browser - screen reader combinations, the wrong numbers
might be computed, and the author would need to override these numbers with &lt;code&gt;aria-posinset&lt;/code&gt; and
&lt;code&gt;aria-setsize&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And this is just menu bars. Think of how many kinds of widgets there are. Glance at the ARIA spec or
authoring practices if you like. For each pattern, there are a dozen ways ARIA could be misused.
ARIA relies on authors to know what they&#39;re doing. What could possibly go wrong, given that most
authors are not screen reader users?&lt;/p&gt;
&lt;p&gt;In other words, it is 100 percent necessary for actual screen reader users to try ARIA widgets before
they&#39;re considered shippable. There&#39;s too much nuance. Ideally everything would be tried with
several different browser-screen reader combinations, because of the numerous implementation
quirks, in addition to a few incomplete implementations.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In summary, ARIA magic can be used to override or add to anything and everything that the HTML says.
It can be used to do little fine changes to the accessibility presentation, or to create an
entire experience. This is why ARIA is both incredibly powerful and yet dangerous in the hands of
our friendly local web authors who don&#39;t generally use screen readers themselves.&lt;/p&gt;
&lt;p&gt;ARIA is just a dumb truth override markup layer. When a screen reader asks what&#39;s happening, if ARIA
exists, they get the ARIA version of the truth instead of the real underlying truth.&lt;/p&gt;
&lt;h2 id=&quot;addendum-1:-additional-resources&quot;&gt;Addendum 1: Additional Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#addendum-1:-additional-resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;hybrid-reference-with-keyboard-info-and-code-examples&quot;&gt;Hybrid reference with keyboard info and code examples &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#hybrid-reference-with-keyboard-info-and-code-examples&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/&quot; rel=&quot;noopener&quot;&gt;W3C&#39;s ARIA Authoring Practices&lt;/a&gt;: this
documents the important keyboard navigation characteristics of each example and provides
working JS/CSS/ARIA code. The examples are focused on what works today, and do not cover mobile.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;addendum-2:-what-is-aria-most-used-for&quot;&gt;Addendum 2: What is ARIA most used for? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#addendum-2:-what-is-aria-most-used-for&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Because ARIA can replace or supplement small or large truths, generally
useful for saying stuff that the screen reader cares about.&lt;/p&gt;
&lt;p&gt;Here are some common uses of ARIA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Special widgets that don&#39;t exist in HTML, like a menu bar, autocomplete, tree, or spreadsheet&lt;/li&gt;
&lt;li&gt;Widgets that exist in HTML, but the author invented their own anyway, possibly because they
needed to tweak the behavior or appearance of the normal widget. For example, an HTML &lt;code&gt;&amp;lt;input type=&amp;quot;range&amp;quot;&amp;gt;&lt;/code&gt; element is basically a slider, but authors want to make it look different. For
most things, CSS can be used, but for &lt;code&gt;input type=&amp;quot;range&amp;quot;&lt;/code&gt;, CSS is awkward. An author can
make their own slider, and use &lt;code&gt;role=&amp;quot;slider&amp;quot;&lt;/code&gt; on it with &lt;code&gt;aria-valuenow&lt;/code&gt; to say what the current
value is.&lt;/li&gt;
&lt;li&gt;Live regions tell screen readers &amp;quot;in this area of the page, anything that changes is worth telling
the user about.&amp;quot;&lt;/li&gt;
&lt;li&gt;Landmarks (HTML has equivalents now). These are somewhat like headings, in that they help
screen reader users find what they want faster. However, they&#39;re different in that they contain
the entire related area. Like, &amp;quot;this container is the main area of the page&amp;quot; and &amp;quot;this
container over here is a navigation panel&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;addendum-3:-what&#39;s-an-accessibility-api&quot;&gt;Addendum 3: What&#39;s an Accessibility API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/aria-poison-or-antidote/#addendum-3:-what&#39;s-an-accessibility-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An accessibility API is how a screen reader or other AT knows what&#39;s in the page and what&#39;s
happening right now. Examples include MSAA, IA2, and UIA. And that&#39;s just Windows! There are two parts to
an accessibility API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &amp;quot;tree&amp;quot; of objects that represents a container hierarchy. These are like Russian nesting dolls,
but each doll can contain multiple other dolls. For example, a document can contain a bunch of
paragraphs, and a paragraph can have text, images, links, boldface, etc. Each item in the
object tree can have properties like a role (what am I?), a name/label, a user-entered value, a
description, as well as boolean states like focusable, focused, required, checked. ARIA can
override any of these properties.&lt;br /&gt;
The screen reader uses the tree to help the user navigate in virtual buffer mode, like &amp;quot;go to
the next heading please&amp;quot;.&lt;/li&gt;
&lt;li&gt;A series of events that occur describing changes to the tree, like &amp;quot;focus is now over
here!&amp;quot;.  The screen reader uses the events to tell the user what has just happened. When
important HTML or ARIA markup changes, an event is fired to tell the screen reader that
something changed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually authors just use HTML, which maps nicely to these accessibility APIs. When HTML is not
enough, ARIA is used and the browser overrides the HTML semantics before sending the object tree or
events to the screen reader.&lt;/p&gt;
</content>
    <author>
      <name>Aaron Leventhal</name>
    </author>
  </entry>
  
  <entry>
    <title>web.dev LIVE wrap-up</title>
    <link href="https://web.dev/live-wrap-up/"/>
    <updated>2020-07-06T00:00:00Z</updated>
    <id>https://web.dev/live-wrap-up/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;We just wrapped up our three-day event, &lt;a href=&quot;https://web.dev/live&quot;&gt;web.dev LIVE&lt;/a&gt;, where some of the web
community came together online to talk about the state of web development. We kicked off each day in
a different regional timezone, and Googlers shared a round of updates, news, and tips in the spirit
of helping developers with tools and guidance to keep the web stable, powerful, and accessible.&lt;/p&gt;
&lt;p&gt;If you missed some of the live stream, all of the
&lt;a href=&quot;https://web.dev/live&quot;&gt;sessions are recorded&lt;/a&gt; and available for you to watch on YouTube.
We&#39;ve also got upcoming &lt;a href=&quot;https://web.dev/live/#regional-events&quot;&gt;regional events&lt;/a&gt; all around
the world which are organized by Google Developer Groups and will provide
deep-dive sessions on topics related to what we covered during web.dev LIVE.&lt;/p&gt;
&lt;p&gt;Let&#39;s dive into some of the news and updates that were shared over the three days.&lt;/p&gt;
&lt;h2 id=&quot;web-vitals&quot;&gt;Web Vitals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#web-vitals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team
&lt;a href=&quot;https://blog.chromium.org/2020/05/introducing-web-vitals-essential-metrics.html&quot; rel=&quot;noopener&quot;&gt;announced&lt;/a&gt; the
&lt;a href=&quot;https://web.dev/vitals&quot;&gt;Web Vitals&lt;/a&gt; initiative to provide unified guidance, metrics, and tools to
help developers deliver great user experiences on the web. The Google Search team also &lt;a href=&quot;https://webmasters.googleblog.com/2020/05/evaluating-page-experience.html&quot; rel=&quot;noopener&quot;&gt;recently
announced&lt;/a&gt; that they will
be evaluating page experience as a ranking criteria, and will include &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;Core Web
Vitals&lt;/a&gt; metrics as its foundation.&lt;/p&gt;
&lt;p&gt;The three pillars of the 2020 Core Web Vitals are loading, interactivity, and visual stability of
page content, which are captured by the following metrics:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An illustration of the Core Web Vitals.&quot; decoding=&quot;async&quot; height=&quot;232&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/kzOdl2pRyEEPEQI0U2lQ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;Largest Contentful Paint&lt;/a&gt; measures perceived load speed and
marks the point in the page load timeline when a page&#39;s main content has likely loaded.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fid/&quot;&gt;First Input Delay&lt;/a&gt; measures responsiveness and quantifies the
experience users feel when trying to first interact with a page.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift&lt;/a&gt; measures visual stability and quantifies
the amount of unexpected movement of page content.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At web.dev LIVE, we shared best practices on how to &lt;a href=&quot;https://youtu.be/AQqFZ5t8uNc&quot; rel=&quot;noopener&quot;&gt;optimize for Core Web
Vitals&lt;/a&gt; and how to use &lt;a href=&quot;https://youtu.be/OHb3xZIqUeU&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools to explore your site&#39;s
vitals values&lt;/a&gt;. We also shared plenty of other performance-related
talks that you can find at &lt;a href=&quot;https://web.dev/live&quot;&gt;web.dev/live&lt;/a&gt; in the Day 1 schedule.&lt;/p&gt;
&lt;h2 id=&quot;tooling.report&quot;&gt;tooling.report &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#tooling.report&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Developing for a platform as broad as the web can be challenging. Build tools are often at the heart
of your web development project, taking on a key role in handling your developer and product
lifecycle.&lt;/p&gt;
&lt;p&gt;We have all seen unwieldy build config files, so to help web developers &lt;em&gt;and&lt;/em&gt; tooling authors
conquer the complexity of the web, we built &lt;a href=&quot;https://web.dev/introducing-tooling-report&quot;&gt;tooling.report&lt;/a&gt;. It&#39;s a website
that helps you choose the right build tool for your next project, decide if migrating from one tool
to another is worth it, or figure out how to incorporate best practices into your tooling
configuration and code base.&lt;/p&gt;
&lt;p&gt;We designed a suite of tests to determine which build tools allow you to follow
web development best practices. We worked with the build tool authors to
make sure we used their tools correctly and represented them fairly.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the tooling.report UI.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;316&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/awFmvfMqFv3gvbpIICJY.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The initial release of tooling.report covers webpack v4, Rollup v2, Parcel v2, and Browserify with Gulp,
which appear to be the most popular build tools right now. We built tooling.report with the
flexibility of adding more build tools and additional tests with help from the community.&lt;/p&gt;
&lt;p&gt;If we&#39;re missing a best practice that should be tested, please &lt;a href=&quot;https://github.com/GoogleChromeLabs/tooling.report/issues/new&quot; rel=&quot;noopener&quot;&gt;propose it in a GitHub
issue&lt;/a&gt;. If you&#39;re up for writing a
test or adding a new tool we did not include in the initial set, we welcome you to
&lt;a href=&quot;https://github.com/GoogleChromeLabs/tooling.report/blob/dev/CONTRIBUTING.md&quot; rel=&quot;noopener&quot;&gt;contribute&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;In the meantime, you can read more about our &lt;a href=&quot;https://web.dev/introducing-tooling-report&quot;&gt;approach towards building
tooling.report&lt;/a&gt; and watch our &lt;a href=&quot;https://youtu.be/vsMJiNtQWvw&quot; rel=&quot;noopener&quot;&gt;session from web.dev
LIVE&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;privacy-and-security-on-the-web&quot;&gt;Privacy and security on the web &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#privacy-and-security-on-the-web&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome believes in an open web that is respectful of users&#39; privacy and maintains key use cases that
keep the web working for everyone.&lt;/p&gt;
&lt;p&gt;In 2019, Chrome
&lt;a href=&quot;https://blog.chromium.org/2019/05/improving-privacy-and-security-on-web.html&quot; rel=&quot;noopener&quot;&gt;proposed&lt;/a&gt; an update
to the cookie standard to restrict cookies to first-party contexts by default and require cookies
for third-party contexts to be explicitly marked as such. Specifically, this provides a line of defense
against Cross-Site Request Forgery attacks. The proposal is now being adopted by Chrome, Firefox,
Edge, and other browsers.&lt;/p&gt;
&lt;p&gt;While Chrome decided to &lt;a href=&quot;https://blog.chromium.org/2020/04/temporarily-rolling-back-samesite.html&quot; rel=&quot;noopener&quot;&gt;temporarily
rollback&lt;/a&gt; these changes
in light of COVID-19, sadly, during a crisis when people are most vulnerable, you also see these
kinds of attacks increase. So, with the Chrome 84 Stable release (mid-July 2020), the changes will
&lt;a href=&quot;https://www.chromium.org/updates/same-site?pli=1#20200528&quot; rel=&quot;noopener&quot;&gt;start to roll out again&lt;/a&gt; across all
Chrome versions from 80 and up. Check out the &lt;a href=&quot;https://web.dev/samesite-cookies-explained/&quot;&gt;SameSite cookies
guidance&lt;/a&gt; as well as the &lt;a href=&quot;https://youtu.be/Fet6-IiX69E&quot; rel=&quot;noopener&quot;&gt;web.dev LIVE
session&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;Moreover, under the banner of the &lt;a href=&quot;https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html&quot; rel=&quot;noopener&quot;&gt;Privacy
Sandbox&lt;/a&gt; Chrome is
introducing a number of standards proposals that aim to support the use cases that let people make
their living using the web platform, but do it in a way that better respects user privacy. Chrome is
actively seeking feedback on these proposals, and is participating within the open forums of the W3C
to discuss the proposals as well as those submitted by other parties. Learn more about this
initiative in the &lt;a href=&quot;https://youtu.be/8Tl0uQdVpxU&quot; rel=&quot;noopener&quot;&gt;Security and privacy for the open web&lt;/a&gt; session.&lt;/p&gt;
&lt;p&gt;Finally, looking at user security, &lt;a href=&quot;https://meltdownattack.com/&quot; rel=&quot;noopener&quot;&gt;Spectre&lt;/a&gt; was a vulnerability that
meant malicious code running in one browser process might be able to read any data associated with
that process even if it&#39;s from a different origin. One of the browser mitigations for this is site
isolation, i.e. putting each site into a separate process. Watch the web.dev LIVE session on the
&lt;a href=&quot;https://youtu.be/XLNJYhjA-0c&quot; rel=&quot;noopener&quot;&gt;new Cross-Origin Opener and Embedder Policies&lt;/a&gt; (COOP and COEP) to
learn more.&lt;/p&gt;
&lt;h2 id=&quot;building-a-web-with-powerful-capabilities&quot;&gt;Building a web with powerful capabilities &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#building-a-web-with-powerful-capabilities&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome wants you to be free to create the highest quality web apps that give you the biggest reach
to users across devices. Combining the installability and reliability of PWAs, with the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; (Project Fugu), Chrome is focusing on three
things to close the gap between platform-specific apps and the web, to help you build and deliver great
experiences.&lt;/p&gt;
&lt;p&gt;First, Chrome teams have been working hard to give web developers and users &lt;a href=&quot;https://web.dev/customize-install/&quot;&gt;more control over the install
experience&lt;/a&gt;, &lt;a href=&quot;https://web.dev/install-criteria/&quot;&gt;adding an install promotion to the
omnibox&lt;/a&gt;, and
&lt;a href=&quot;https://web.dev/promote-install/#browser-promotion&quot;&gt;more&lt;/a&gt;. Despite the web&#39;s ubiquity, it&#39;s still
important for some businesses to have their app in the store. To help, Chrome launched
&lt;a href=&quot;https://github.com/GoogleChromeLabs/bubblewrap&quot; rel=&quot;noopener&quot;&gt;Bubblewrap&lt;/a&gt;, a library and CLI that makes it
trivial to get your PWA into the Play Store. In fact, &lt;a href=&quot;http://pwabuilder.com/&quot; rel=&quot;noopener&quot;&gt;PWABuilder.com&lt;/a&gt; now
uses Bubblewrap under the hood. In just a few mouse clicks, you can generate an APK and upload your
PWA to the Play Store, as long as you meet the
&lt;a href=&quot;https://blog.chromium.org/2020/06/changes-to-quality-criteria-for-pwas.html&quot; rel=&quot;noopener&quot;&gt;criteria&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Second, Chrome is providing tighter integration with the operating system, such as the ability to
share a photo, song, or whatever by invoking the system-level share service with the &lt;a href=&quot;https://web.dev/web-share/&quot;&gt;Web Share
API&lt;/a&gt;, or the ability to &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;receive content when shared from a different
installed app&lt;/a&gt;. You can keep users up-to-date, or subtly notify
them of new activity with &lt;a href=&quot;https://web.dev/badging-api/&quot;&gt;app badging&lt;/a&gt;. Also, it&#39;s now easier for
users to quickly start an action using &lt;a href=&quot;https://web.dev/app-shortcuts/&quot;&gt;App Shortcuts&lt;/a&gt;, which will
land in Chrome 84 (mid-July 2020).&lt;/p&gt;
&lt;p&gt;And finally, Chrome has been working on new capabilities that enable new scenarios that weren&#39;t
possible before, like editors that &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;read and write to files on the user&#39;s local file
system&lt;/a&gt;, or get the list of locally installed fonts so that
users can use them in their designs.&lt;/p&gt;
&lt;p&gt;During web.dev LIVE, we spoke about &lt;a href=&quot;https://youtu.be/NXCT3htg9nk&quot; rel=&quot;noopener&quot;&gt;lots of other capabilities and
features&lt;/a&gt; that can enable you to deliver the same kind of experience,
with the same capabilities, as platform-specific apps. See all sessions at &lt;a href=&quot;https://web.dev/live&quot;&gt;web.dev/live&lt;/a&gt;
in the Day 2 schedule.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-new-in-chrome-devtools-and-lighthouse-6.0&quot;&gt;What&#39;s new in Chrome DevTools and Lighthouse 6.0 &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#what&#39;s-new-in-chrome-devtools-and-lighthouse-6.0&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;chrome-devtools:-new-issues-tab-color-deficiencies-emulator-and-web-vitals-support&quot;&gt;Chrome Devtools: new Issues tab, color deficiencies emulator, and Web Vitals support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#chrome-devtools:-new-issues-tab-color-deficiencies-emulator-and-web-vitals-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of the most powerful features of Chrome DevTools is its ability to spot issues on a web page and
bring them to the developer&#39;s attention. This is most pertinent as we move into the next phase of a
&lt;a href=&quot;https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html&quot; rel=&quot;noopener&quot;&gt;privacy-first web&lt;/a&gt;.
To reduce notification fatigue and clutter in the Console, Chrome DevTools launched the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/issues&quot; rel=&quot;noopener&quot;&gt;Issues
tab&lt;/a&gt; which focuses on three types of
critical issues to start with: &lt;a href=&quot;https://web.dev/samesite-cookies-explained&quot;&gt;cookie problems&lt;/a&gt;,
&lt;a href=&quot;https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content&quot; rel=&quot;noopener&quot;&gt;mixed content&lt;/a&gt;,
and &lt;a href=&quot;https://web.dev/coop-coep/&quot;&gt;COEP issues&lt;/a&gt;. Watch the web.dev LIVE session on &lt;a href=&quot;https://youtu.be/1TbkSxQb4bI&quot; rel=&quot;noopener&quot;&gt;finding and fixing
problems with the Issues tab&lt;/a&gt; to get started.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the Issues tab.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;535&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/G7AmzK1btOMBUPEhnFhV.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Moreover, with the &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;Core Web Vitals&lt;/a&gt; becoming one of the
most critical sets of metrics for web developers to track and measure, DevTools wants to ensure
developers are able to easily track how they perform against these thresholds. So these three
metrics are now in the Chrome DevTools Performance panel.&lt;/p&gt;
&lt;p&gt;And finally, with an increasing number of developers focusing on accessibility, DevTools also
introduced a &lt;a href=&quot;https://twitter.com/mathias/status/1237393102635012101?&quot; rel=&quot;noopener&quot;&gt;color vision deficiencies
emulator&lt;/a&gt; that allows developers to
emulate blurred vision and other types of vision deficiencies. You
can learn more about this and many other features in the &lt;a href=&quot;https://youtu.be/6yrJZHqJe2k&quot; rel=&quot;noopener&quot;&gt;What&#39;s new in
DevTools&lt;/a&gt; session.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the vision deficiencies emulator.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;509&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/3gTvVdPvTN3IUyhSN8gn.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;lighthouse-6.0:-new-metrics-core-web-vitals-lab-measurements-an-updated-performance-score-and-new-audits&quot;&gt;Lighthouse 6.0: New metrics, Core Web Vitals lab measurements, an updated Performance score, and new audits &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#lighthouse-6.0:-new-metrics-core-web-vitals-lab-measurements-an-updated-performance-score-and-new-audits&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt; is an open-source automated tool
that helps developers improve their site&#39;s performance. In its latest version, the Lighthouse team
focused on providing insights based on metrics that give you a balanced view of the quality of your
user experience against critical dimensions.&lt;/p&gt;
&lt;p&gt;To ensure consistency, Lighthouse added support for the Core Web Vitals:
&lt;a href=&quot;https://web.dev/lcp/&quot;&gt;LCP&lt;/a&gt;, &lt;a href=&quot;https://web.dev/tbt/&quot;&gt;TBT&lt;/a&gt; (a proxy for
&lt;a href=&quot;https://web.dev/fid/&quot;&gt;FID&lt;/a&gt; since Lighthouse is a lab tool and FID can only be
measured in the field) and &lt;a href=&quot;https://web.dev/cls/&quot;&gt;CLS&lt;/a&gt;. Lighthouse also removed
three old metrics: &lt;a href=&quot;https://web.dev/first-meaningful-paint/&quot;&gt;First Meaningful
Paint&lt;/a&gt;, &lt;a href=&quot;https://web.dev/first-cpu-idle/&quot;&gt;First CPU
Idle&lt;/a&gt;, and &lt;a href=&quot;https://web.dev/lighthouse-max-potential-fid/&quot;&gt;Max Potential
FID&lt;/a&gt;. These removals are due to
considerations like metric variability and newer metrics offering better
reflections of the part of user experience that Lighthouse is trying to measure.
Additionally, Lighthouse also made some adjustments to how much each metric
factors into the overall Performance score based on user feedback.&lt;/p&gt;
&lt;p&gt;Lighthouse also added a &lt;a href=&quot;https://googlechrome.github.io/lighthouse/scorecalc/&quot; rel=&quot;noopener&quot;&gt;scoring
calculator&lt;/a&gt; to help you explore your
performance scoring, by providing a comparison between version 5 and 6 scores. When you run an audit
with Lighthouse 6.0, the report comes with a link to the calculator with your results populated.&lt;/p&gt;
&lt;p&gt;And finally, Lighthouse added a bunch of &lt;a href=&quot;https://web.dev/lighthouse-whats-new-6.0/#new-audits&quot;&gt;new
audits&lt;/a&gt;, with a focus on JavaScript analysis
and accessibility.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A list of the new audits.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qAVFUVHR7Ad0tm05J1d3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Learn more by watching the &lt;a href=&quot;https://youtu.be/yDHfrhCGFQw&quot; rel=&quot;noopener&quot;&gt;What&#39;s new in speed tooling&lt;/a&gt;
session.&lt;/p&gt;
&lt;h2 id=&quot;learn-more&quot;&gt;Learn more &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/live-wrap-up/#learn-more&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you to everyone in the community who joined us to discuss the web
platform&#39;s opportunities and challenges.&lt;/p&gt;
&lt;p&gt;This post summarized some of the highlights of the event, but there was so much
more. Make sure to check out all the &lt;a href=&quot;https://web.dev/live&quot;&gt;sessions&lt;/a&gt; and
&lt;a href=&quot;https://web.dev/newsletter&quot;&gt;subscribe to the web.dev newsletter&lt;/a&gt; if you&#39;d like
more content straight to your inbox. And visit the &lt;a href=&quot;https://web.dev/live#regional-events&quot;&gt;Regional
Events&lt;/a&gt; section on web.dev/live to find an upcoming community
event in your timezone!&lt;/p&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Accessible responsive design</title>
    <link href="https://web.dev/accessible-responsive-design/"/>
    <updated>2020-03-31T00:00:00Z</updated>
    <id>https://web.dev/accessible-responsive-design/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;We know that it&#39;s a good idea to design responsively to provide the best multi-device experience,
but responsive design also yields a win for accessibility.&lt;/p&gt;
&lt;p&gt;Consider a site like &lt;a href=&quot;https://udacity.com/&quot; rel=&quot;noopener&quot;&gt;Udacity&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Udacity site&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;393&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/5q9dDtEubSM23SzokQNu.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;A low-vision user who has difficulty reading small print might zoom in the page,
perhaps as much as 400%.
Because the site is designed responsively,
the UI will rearrange itself for the &amp;quot;smaller viewport&amp;quot; (actually for the larger page),
which is great for desktop users who require screen magnification
and for mobile screen reader users as well. It&#39;s a win-win.
Here&#39;s the same page magnified to 400%:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Udacity site zoomed to 400%&quot; decoding=&quot;async&quot; height=&quot;393&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/WKHO21uWQz5lJ7Aqej1E.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;In fact, just by designing responsively,
we&#39;re meeting rule &lt;a href=&quot;https://webaim.org/standards/wcag/checklist#sc1.4.4&quot; rel=&quot;noopener&quot;&gt;1.4.4 of the WebAIM checklist&lt;/a&gt;,
which states that a page &amp;quot;… should be readable and functional when the text size is doubled.&amp;quot;&lt;/p&gt;
&lt;p&gt;Going over all of responsive design is outside the scope of this guide,
but here are a few important takeaways that will benefit your responsive experience
and give your users better access to your content.&lt;/p&gt;
&lt;h2 id=&quot;use-the-viewport-meta-tag&quot;&gt;Use the viewport meta tag &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#use-the-viewport-meta-tag&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Setting &lt;code&gt;width=device-width&lt;/code&gt; will match the screen&#39;s width in device-independent pixels,
and setting &lt;code&gt;initial-scale=1&lt;/code&gt; establishes a 1:1 relationship between CSS pixels and device-independent pixels.
Doing this instructs the browser to fit your content to the screen size,
so users don&#39;t just see a bunch of scrunched-up text.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/responsive-web-design-basics/#viewport&quot;&gt;Size content to viewport&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;h2 id=&quot;allow-users-to-zoom&quot;&gt;Allow users to zoom &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#allow-users-to-zoom&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is possible to use the viewport meta tag to prevent zooming,
by setting &lt;code&gt;maximum-scale=1&lt;/code&gt; or &lt;code&gt;user-scaleable=no&lt;/code&gt;.
Avoid doing this, and let your users zoom in if they need to.&lt;/p&gt;
&lt;h2 id=&quot;design-with-flexibility&quot;&gt;Design with flexibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#design-with-flexibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Avoid targetting specific screen sizes and instead use a flexible grid,
making changes to the layout when the content dictates.
As we saw with the Udacity example above, this approach ensures that the design responds
whether the reduced space is due to a smaller screen or a higher zoom level.&lt;/p&gt;
&lt;p&gt;You can read more about these techniques in the &lt;a href=&quot;https://web.dev/responsive-web-design-basics/&quot;&gt;Responsive web design basics&lt;/a&gt; article.&lt;/p&gt;
&lt;h2 id=&quot;use-relative-units-for-text&quot;&gt;Use relative units for text &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#use-relative-units-for-text&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To get the best out of your flexible grid
use relative units like em or rem for things like text size, instead of pixel values.
Some browsers support resizing text only in user preferences,
and if you&#39;re using a pixel value for text, this setting will not affect your copy.
If, however, you&#39;ve used relative units throughout,
then the site copy will update to reflect the user&#39;s preference.&lt;/p&gt;
&lt;p&gt;This will enable the whole site to reflow as the user zooms,
creating the reading experience they need to use your site.&lt;/p&gt;
&lt;h2 id=&quot;avoid-disconnecting-the-visual-view-from-the-source-order&quot;&gt;Avoid disconnecting the visual view from the source order &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#avoid-disconnecting-the-visual-view-from-the-source-order&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A visitor who is tabbing through your site with the keyboard
will be following the order of the content in the HTML document.
When using modern layout methods such as &lt;a href=&quot;https://web.dev/responsive-web-design-basics/#flexbox&quot;&gt;Flexbox&lt;/a&gt; and &lt;a href=&quot;https://web.dev/responsive-web-design-basics/#grid&quot;&gt;Grid&lt;/a&gt;,
it is easy to make the visual rendering not match the source order.
This can lead to disconcerting jumps around the page for someone using the keyboard to move around.&lt;/p&gt;
&lt;p&gt;Make sure to test your design at each breakpoint by tabbing through the content,
does the flow through the page still make sense?&lt;/p&gt;
&lt;p&gt;Read more about &lt;a href=&quot;https://web.dev/content-reordering/&quot;&gt;the source and visual display disconnect&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;take-care-with-spatial-clues&quot;&gt;Take care with spatial clues &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#take-care-with-spatial-clues&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When writing microcopy avoid using language which indicates the location of an element on the page.
For example, referring to navigation &amp;quot;on your left&amp;quot; makes no sense in a mobile version
when the navigation is at the top of the screen.&lt;/p&gt;
&lt;h2 id=&quot;ensure-tap-targets-are-large-enough-on-touchscreen-devices&quot;&gt;Ensure tap targets are large enough on touchscreen devices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-responsive-design/#ensure-tap-targets-are-large-enough-on-touchscreen-devices&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On touchscreen devices make sure your tap targets are large enough
to make them easy to activate without hitting other links.
A good size for any tappable element is 48px,
read more guidance on &lt;a href=&quot;https://web.dev/accessible-tap-targets/&quot;&gt;tap targets&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Dave Gash</name>
    </author><author>
      <name>Meggin Kearney</name>
    </author><author>
      <name>Rachel Andrew</name>
    </author><author>
      <name>Rob Dodson</name>
    </author>
  </entry>
  
  <entry>
    <title>Accessible tap targets</title>
    <link href="https://web.dev/accessible-tap-targets/"/>
    <updated>2020-03-31T00:00:00Z</updated>
    <id>https://web.dev/accessible-tap-targets/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;When your design is displayed on a mobile device,
you should ensure that interactive elements like buttons or links are large enough,
and have enough space around them,
to make them easy to press without accidentally overlapping onto other elements.
This benefits all users,
but is especially helpful for anyone with a motor impairment.&lt;/p&gt;
&lt;p&gt;A minimum recommended touch target size is around 48 device independent pixels
on a site with a properly set mobile viewport.
For example, while an icon may only have a width and height of 24px,
you can use additional padding to bring the tap target size up to 48px.
The 48x48 pixel area corresponds to around 9mm,
which is about the size of a person&#39;s finger pad area.&lt;/p&gt;
&lt;p&gt;In the demo, I have added padding to all of the links in order to make sure they meet the minimum size.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/tap-targets?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;tap-targets on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Touch targets should also be spaced about 8 pixels apart,
both horizontally and vertically,
so that a user&#39;s finger pressing on one tap target does not inadvertently touch another tap target.&lt;/p&gt;
&lt;h2 id=&quot;testing-your-touch-targets&quot;&gt;Testing your touch targets &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-tap-targets/#testing-your-touch-targets&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If your target is text and you have used relative values such as &lt;code&gt;em&lt;/code&gt; or &lt;code&gt;rem&lt;/code&gt; to size the text and any padding,
you can use DevTools to check that the computed value of that area is large enough.
In the example below I am using &lt;code&gt;em&lt;/code&gt; for my text and padding.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/tap-targets-2?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;tap-targets-2 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Inspect the &lt;code&gt;a&lt;/code&gt; of the link,
and in Chrome DevTools switch to the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/css/overrides#computed&quot; rel=&quot;noopener&quot;&gt;Computed pane&lt;/a&gt;  where you can inspect the various parts of the box
and see what pixel size they resolve to.
In Firefox DevTools there is a Layout Panel.
In that Panel you get the actual size of the inspected element.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;max-width: 500px&quot;&gt;
  &lt;img alt=&quot;The Layout Panel in Firefox DevTools showing the size of the a element&quot; decoding=&quot;async&quot; height=&quot;565&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/vmFzREveRttHVDfLqqCx.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;using-media-queries-to-detect-touchscreen-use&quot;&gt;Using media queries to detect touchscreen use &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-tap-targets/#using-media-queries-to-detect-touchscreen-use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the media features we can now test for with media queries
is whether the user&#39;s primary input is a touchscreen.
The &lt;code&gt;pointer&lt;/code&gt; feature will return &lt;code&gt;fine&lt;/code&gt; or &lt;code&gt;coarse&lt;/code&gt;.
A fine pointer will be someone using a mouse or trackpad,
even if that mouse is connected via Bluetooth to a phone.
A &lt;code&gt;coarse&lt;/code&gt; pointer indicates a touchscreen,
which could be a mobile device but may also be a laptop screen or large tablet.&lt;/p&gt;
&lt;p&gt;If you are adjusting your CSS within a media query to increase the touch target,
testing for a coarse pointer allows you to increase the tap targets for all touchscreen users.
This gives the larger tap area whether the device is a phone or larger device,
while testing for width only gives you mobile users.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.container a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .2em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; coarse&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.container a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .8em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can find out more about interaction media features such as pointer
in the &lt;a href=&quot;https://web.dev/responsive-web-design-basics/&quot;&gt;Responsive web design basics&lt;/a&gt; article.&lt;/p&gt;
</content>
    <author>
      <name>Dave Gash</name>
    </author><author>
      <name>Meggin Kearney</name>
    </author><author>
      <name>Rachel Andrew</name>
    </author><author>
      <name>Rob Dodson</name>
    </author>
  </entry>
  
  <entry>
    <title>Color and contrast accessibility</title>
    <link href="https://web.dev/color-and-contrast-accessibility/"/>
    <updated>2020-03-31T00:00:00Z</updated>
    <id>https://web.dev/color-and-contrast-accessibility/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;If you have good vision, it&#39;s easy to assume that everyone perceives colors,
or text legibility, the same way you do—but of course that&#39;s not the case.&lt;/p&gt;
&lt;p&gt;As you might imagine,
some color combinations that are easy for some people to read are difficult or impossible for others.
This usually comes down to color contrast,
the relationship between the foreground and background colors&#39; luminance.
When the colors are similar, the contrast ratio is low;
when they are different, the contrast ratio is high.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://webaim.org/standards/wcag/&quot; rel=&quot;noopener&quot;&gt;WebAIM guidelines&lt;/a&gt; recommend an AA (minimum) contrast ratio of 4.5:1 for all text.
An exception is made for very large text (120-150% larger than the default body text),
for which the ratio can go down to 3:1. Notice the difference in the contrast ratios shown below.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An image showing the different contrast ratios&quot; decoding=&quot;async&quot; height=&quot;328&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/DcYclKelVqhQ2CWlIG97.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The contrast ratio of 4.5:1 was chosen for level AA
because it compensates for the loss in contrast sensitivity
usually experienced by users with vision loss equivalent to approximately 20/40 vision.
20/40 is commonly reported as typical visual acuity of people at about age 80.
For users with low vision impairments or color deficiencies,
we can increase the contrast up to 7:1 for body text.&lt;/p&gt;
&lt;p&gt;You can use the Accessibility Audit in Lighthouse to check your color contrast.
Open DevTools, click Audits, and select Accessibility to run the report.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the output of an audit for color contrast.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;218&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/vSFzNOurQO6z2xV6qWuW.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Chrome also includes an experimental feature to help you &lt;a href=&quot;https://developers.google.com/web/updates/2020/10/devtools#css-overview&quot; rel=&quot;noopener&quot;&gt;detect all the low contrast texts of your page&lt;/a&gt;. You can also use the &lt;a href=&quot;https://developers.google.com/web/updates/2020/08/devtools#accessible-color&quot; rel=&quot;noopener&quot;&gt;accessible color suggestion&lt;/a&gt; to fix the low contrast text.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the output of the Chrome low contrast text experimental feature.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;521&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/VYZeK2l2vs6pIoWhH2hO.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;For a more complete report, install the &lt;a href=&quot;https://accessibilityinsights.io/&quot; rel=&quot;noopener&quot;&gt;Accessibility Insights Extension&lt;/a&gt;.
One of the checks in the Fastpass report, is color contrast.
You will get a detailed report of any failing elements.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-screenshot&quot;&gt;
  &lt;img alt=&quot;The report in Accessibility Insights&quot; decoding=&quot;async&quot; height=&quot;473&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/CR21TFMZw8gWsSTWOGIF.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;advanced-perceptual-contrast-algorithm-(apca)&quot;&gt;Advanced Perceptual Contrast Algorithm (APCA) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/color-and-contrast-accessibility/#advanced-perceptual-contrast-algorithm-(apca)&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/silver/guidelines/methods/Method-font-characteristic-contrast.html&quot; rel=&quot;noopener&quot;&gt;Advanced Perceptual Contrast Algorithm (APCA)&lt;/a&gt; is a new way to compute contrast based on modern research on color perception.&lt;/p&gt;
&lt;p&gt;Compared to &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/quickref/#contrast-minimum&quot; rel=&quot;noopener&quot;&gt;AA&lt;/a&gt;/&lt;a href=&quot;https://www.w3.org/WAI/WCAG21/quickref/#contrast-enhanced&quot; rel=&quot;noopener&quot;&gt;AAA&lt;/a&gt; guidelines, APCA is more context-dependent.&lt;/p&gt;
&lt;p&gt;The contrast is calculated based on the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spatial properties (font weight and text size)&lt;/li&gt;
&lt;li&gt;Text color (perceived lightness difference between text and background)&lt;/li&gt;
&lt;li&gt;Context (ambient light, surroundings, and intended purpose of the text)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chrome includes an &lt;a href=&quot;https://developers.google.com/web/updates/2021/01/devtools#apca&quot; rel=&quot;noopener&quot;&gt;experimental feature to replace the AA/AAA contrast ratio guidelines with APCA&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of the output of the APCA feature in Chrome.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;543&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/YhGKRLYvt37j3ldlwiXE.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;don&#39;t-convey-information-with-color-alone&quot;&gt;Don&#39;t convey information with color alone &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/color-and-contrast-accessibility/#don&#39;t-convey-information-with-color-alone&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are roughly 320 million people worldwide with color vision deficiency.
About 1 in 12 men and 1 in 200 women have some form of &amp;quot;color blindness&amp;quot;;
that means about 1/20th, or 5%, of your users will not experience your site the way you intended.
When we rely on color to convey information, we push that number to unacceptable levels.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Note: The term &amp;quot;color blindness&amp;quot; is often used to describe a visual condition where a person has trouble distinguishing colors,
but in fact very few people are truly color blind.
Most people with color deficiencies can see some or most colors,
but have difficulty differentiating between certain colors such as reds and greens (most common),
browns and oranges, and blues and purples.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For example, in an input form,
a telephone number might be underlined in red to show that it is invalid.
But to a color deficient or screen reader user, that information is not conveyed well, if at all.
Thus, you should always try to provide multiple avenues for the user to access critical information.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;width: 200px&quot;&gt;
  &lt;img alt=&quot;A image of an input form with an incorrect phone number highlighted only with a red color.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;323&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 293px) 293px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/MKmlhejyjNpk7XE9R2KV.png?auto=format&amp;w=586 586w&quot; width=&quot;293&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;a href=&quot;https://webaim.org/standards/wcag/checklist#sc1.4.1&quot; rel=&quot;noopener&quot;&gt;WebAIM checklist states in section 1.4.1&lt;/a&gt; that
&amp;quot;color should not be used as the sole method of conveying content or distinguishing visual elements.&amp;quot;
It also notes that &amp;quot;color alone should not be used to distinguish links from surrounding text&amp;quot;
unless they meet certain contrast requirements.
Instead, the checklist recommends adding an additional indicator such as an underscore
(using the CSS &lt;code&gt;text-decoration&lt;/code&gt; property) to indicate when the link is active.&lt;/p&gt;
&lt;p&gt;An easy way to fix the previous example is to add an additional message to the field,
announcing that it is invalid and why.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;width: 200px&quot;&gt;
  &lt;img alt=&quot;The same input form as in the last example, this time with a text label indicating the problem with the field.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;343&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 292px) 292px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/FLQPcG16akNRoElx3pnz.png?auto=format&amp;w=584 584w&quot; width=&quot;292&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;When you&#39;re building an app, keep these sorts of things in mind
and watch out for areas where you may be relying too heavily on color to convey important information.&lt;/p&gt;
&lt;p&gt;If you&#39;re curious about how your site looks to different people,
or if you rely heavily on the use of color in your UI,
you can use DevTools to simulate various forms of visual impairment,
including different types of color blindness.
Chrome includes an &lt;a href=&quot;https://developers.google.com/web/updates/2020/03/devtools#vision-deficiencies&quot; rel=&quot;noopener&quot;&gt;Emulate Vision Deficiencies feature&lt;/a&gt;.
To access it open DevTools and then open the &lt;strong&gt;Rendering&lt;/strong&gt; tab in the Drawer,
you can then emulate the following color deficiencies.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Protanopia: the inability to perceive any red light.&lt;/li&gt;
&lt;li&gt;Deuteranopia: the inability to perceive any green light.&lt;/li&gt;
&lt;li&gt;Tritanopia: the inability to perceive any blue light.&lt;/li&gt;
&lt;li&gt;Achromatopsia: the inability to perceive any color except for shades of grey (extremely rare).&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Emulating the vision of a person with Achromatopsia shows our page in greyscale.&quot; class=&quot;w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;393&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/VAnFxYhzFcpovdTCToPl.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;high-contrast-mode&quot;&gt;High contrast mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/color-and-contrast-accessibility/#high-contrast-mode&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;High-contrast mode allows a user to invert foreground and background colors,
which often helps text stand out better.
For someone with a low vision impairment,
high-contrast mode can make it much easier to navigate the content on the page.
There are a few ways to get a high-contrast setup on your machine.&lt;/p&gt;
&lt;p&gt;Operating systems like Mac OSX and Windows offer high-contrast modes
that can be enabled for everything at the system level.&lt;/p&gt;
&lt;p&gt;A useful exercise is to turn on high-contrast settings
and verify that all of the UI in your application is still visible and usable.&lt;/p&gt;
&lt;p&gt;For example, a navigation bar might use a subtle background color
to indicate which page is currently selected.
If you view it in a high-contrast extension, that subtlety completely disappears,
and with it goes the reader&#39;s understanding of which page is active.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;width: 500px&quot;&gt;
  &lt;img alt=&quot;Screenshot of a navigation bar in high contrast mode where the acvtive tab is hard to read&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;57&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 640px) 640px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/dgmA4W1Qu8JmcgsH80HD.png?auto=format&amp;w=1280 1280w&quot; width=&quot;640&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Similarly, if you consider the example from the previous lesson,
the red underline on the invalid phone number field might be
displayed in a hard-to-distinguish blue-green color.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the address form used earlier, this time in high contrast mode. The color change of the invalid element is hard to read.&quot; decoding=&quot;async&quot; height=&quot;328&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 700px) 700px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/HtlXwmHQHBcAO4LYSfAA.jpg?auto=format&amp;w=1400 1400w&quot; width=&quot;700&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;If you are meeting the contrast ratios covered earlier
you should be fine when it comes to supporting high-contrast mode.
But for added peace of mind, consider installing the
&lt;a href=&quot;https://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph&quot; rel=&quot;noopener&quot;&gt;High Contrast Chrome Extension&lt;/a&gt;
and giving your page a once-over just to check that everything works, and looks, as expected.&lt;/p&gt;
</content>
    <author>
      <name>Dave Gash</name>
    </author><author>
      <name>Meggin Kearney</name>
    </author><author>
      <name>Rachel Andrew</name>
    </author><author>
      <name>Rob Dodson</name>
    </author>
  </entry>
  
  <entry>
    <title>Content reordering</title>
    <link href="https://web.dev/content-reordering/"/>
    <updated>2020-05-29T00:00:00Z</updated>
    <id>https://web.dev/content-reordering/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The order of content in your document is important for the accessibility of your site.
A screen reader will read out content based on the document order,
using the HTML elements that you have selected to give meaning to that content.
A person navigating the site using a keyboard, rather than a touchscreen or mouse, will tab around the document.
This means that they will jump from active element to active element,
tabbing between links and form fields, once again in the order they exist in the document.&lt;/p&gt;
&lt;p&gt;Starting with a well-structured document and using all of the right HTML elements
is therefore a key part of creating an accessible site.
However, it is possible to undo some of that good work when you start using CSS. Let&#39;s take a look at why.&lt;/p&gt;
&lt;h2 id=&quot;source-vs.-visual-order&quot;&gt;Source vs. visual order &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/content-reordering/#source-vs.-visual-order&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Website navigation is often marked up as a list of links.
You can then use &lt;a href=&quot;https://web.dev/responsive-web-design-basics/#flexbox&quot;&gt;Flexbox&lt;/a&gt; to turn these into a horizontal bar.
In the Glitch example below, I have created this commonly used pattern.
Click into the example, and tab between the links.
The focus will move in a logical direction from left to right,
the order that we read in English.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/flex-nav-source-ordered?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;flex-nav-source-ordered on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;If you have created this sort of pattern and then were asked to move &lt;strong&gt;Contact Us&lt;/strong&gt;,
which is second in the source, to the end. You could use the &lt;code&gt;order&lt;/code&gt; property which works in Flexbox.
Try tabbing through the items in the example below, which has used the &lt;code&gt;order&lt;/code&gt; property to rearrange the items.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/flex-nav-ordered?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;flex-nav-ordered on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;The focus jumps to the final item and then back again.
As far as the tab order is concerned that item is the second item.
Visually however, it&#39;s the last item.&lt;/p&gt;
&lt;p&gt;The above example highlights the problem that we face if we rearrange and reorder content using CSS.
If you were dealing with this issue then the right thing to do would be to change the order in the source,
rather than using CSS.&lt;/p&gt;
&lt;h2 id=&quot;which-css-properties-can-cause-reordering&quot;&gt;Which CSS properties can cause reordering? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/content-reordering/#which-css-properties-can-cause-reordering&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Any layout method that allows you to move elements around can cause this problem.
The following CSS properties commonly cause content reordering problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using &lt;code&gt;position: absolute&lt;/code&gt; and taking an item out of flow visually.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;order&lt;/code&gt; property in Flexbox and Grid layout.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;row-reverse&lt;/code&gt; and &lt;code&gt;column-reverse&lt;/code&gt; values for &lt;code&gt;flex-direction&lt;/code&gt; in Flexbox.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;dense&lt;/code&gt; value for &lt;code&gt;grid-auto-flow&lt;/code&gt; in Grid Layout.&lt;/li&gt;
&lt;li&gt;Any positioning by line name or number, or with &lt;code&gt;grid-template-areas&lt;/code&gt; in Grid Layout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this next example, I have created a layout using CSS Grid and positioned the items
using line numbers, without considering where they are in the source.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/grid-mixed-up-order?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;grid-mixed-up-order on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Try tabbing around this example, and see how the focus jumps about.
This makes for a very confusing experience, especially if this is a long page.&lt;/p&gt;
&lt;h2 id=&quot;testing-for-the-problem&quot;&gt;Testing for the problem &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/content-reordering/#testing-for-the-problem&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A very simple test is to keyboard navigate through your page. Can you get to everything?
Are there any strange jumps as you do so?&lt;/p&gt;
&lt;p&gt;For a visual demonstration of content reordering,
try the Tab Stop checker in the &lt;a href=&quot;https://accessibilityinsights.io/&quot; rel=&quot;noopener&quot;&gt;Accessibility Insights&lt;/a&gt; extension for Chrome.
The image below shows the CSS Grid example in that tool.
You can see how the focus has to jump around the layout.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;max-width: 600px&quot;&gt;
  &lt;img alt=&quot;A screenshot of the Accessibility Insights Tool demonstrating the confusing order of items.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;919&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/n0i0TJf3OdZYvwswrHDV.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;content-reordering-and-responsive-web-design&quot;&gt;Content reordering and responsive web design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/content-reordering/#content-reordering-and-responsive-web-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you only have one presentation of your content,
then having your source in a logical order, and reflecting that in layout is not usually difficult.
It can become harder, when you consider the layout at different breakpoints.
It might make sense to have an element moved to the bottom of the layout on smaller screens for example.&lt;/p&gt;
&lt;p&gt;There is not at this time a good solution for this problem.
In most situations developing &amp;quot;mobile first&amp;quot;, will help you keep your source and layout in order.
The choices you make about priority on mobile, are often solid ones for the content in general.
The key is to be aware when there is a possibility of this type of content reordering,
and to test that the end experience is not too jarring at each breakpoint.&lt;/p&gt;
</content>
    <author>
      <name>Rachel Andrew</name>
    </author>
  </entry>
  
  <entry>
    <title>Ensure your website is available and usable for everyone during COVID-19</title>
    <link href="https://web.dev/covid19/"/>
    <updated>2020-04-03T00:00:00Z</updated>
    <id>https://web.dev/covid19/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This page provides guidance to help ensure your website is available,
accessible, secure, and usable for everyone at all times.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If you&#39;re building or maintaining a health organization website
that qualifies as a national health ministry or US state-level agency, you can
request to join the COVID-19 Google Search technical support group. Visit
&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/health-organizations-covid19.html&quot; rel=&quot;noopener&quot;&gt;Helping health organizations make COVID-19 information more
accessible&lt;/a&gt;
to learn more. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The guidance on this page comes from a cross-functional collection of teams
within Google that are shifting their short-term focus to support websites that are
helping people stay safe during the COVID-19 situation. These Googlers have seen that sites
are facing unprecedented increases in demand from people looking for critical
information, many of whom have rarely or never used the web before. It can be a challenge
to ensure sites are available during this time and accessible to all.&lt;/p&gt;
&lt;h2 id=&quot;guidance&quot;&gt;Guidance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#guidance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This guidance is a work in progress and will be updated frequently.
If you have any suggestions, please &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/issues/new/choose&quot; rel=&quot;noopener&quot;&gt;file an
issue&lt;/a&gt;, or &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/blob/master/src/site/content/en/blog/covid19/index.md&quot; rel=&quot;noopener&quot;&gt;edit
this page&lt;/a&gt;
and then open a pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;availability&quot;&gt;Availability, reliability, resilience, and stability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#availability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your site is seeing traffic spikes and it&#39;s failing, or you want to prevent it
from failing, the guidance below can help you quickly fix problems or detect them
before they become major issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;a href=&quot;https://web.dev/overloaded-server&quot;&gt;Fix an overloaded server&lt;/a&gt; to learn
how to detect, mitigate, and prevent traffic spike issues.&lt;/li&gt;
&lt;li&gt;Remove unnecessary images, videos, scripts, and fonts. Ensure each page focuses
on just delivering the functionality that the people using your site really
need.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast/#optimize-your-images&quot;&gt;Optimizing your images&lt;/a&gt; may
significantly reduce your server bandwidth usage because &lt;a href=&quot;https://images.guide/#introduction&quot; rel=&quot;noopener&quot;&gt;images are the
number one source of bloat on the web&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Offload as much of your static content to CDNs as possible.
More details from common providers:
&lt;a href=&quot;https://aws.amazon.com/cloudfront/&quot; rel=&quot;noopener&quot;&gt;AWS&lt;/a&gt;,
&lt;a href=&quot;https://azure.microsoft.com/en-us/services/cdn/&quot; rel=&quot;noopener&quot;&gt;Azure&lt;/a&gt;,
&lt;a href=&quot;https://www.cloudflare.com/cdn/&quot; rel=&quot;noopener&quot;&gt;Cloudflare&lt;/a&gt;,
&lt;a href=&quot;https://cloud.google.com/cdn&quot; rel=&quot;noopener&quot;&gt;Google Cloud&lt;/a&gt;,
&lt;a href=&quot;https://firebase.google.com/docs/hosting&quot; rel=&quot;noopener&quot;&gt;Firebase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check if your CDN has any optimizations that are easy to turn on, such as
dynamic image compression, text compression, or automatic minification of JS
and CSS resources.&lt;/li&gt;
&lt;li&gt;Optimizing HTTP caching can significantly reduce demands on your servers with
minimal code change. Check out &lt;a href=&quot;https://web.dev/http-cache/&quot;&gt;The HTTP cache: your first line of
defense&lt;/a&gt; for an overview and &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot; rel=&quot;noopener&quot;&gt;HTTP
caching&lt;/a&gt;
and &lt;a href=&quot;https://jakearchibald.com/2016/caching-best-practices/&quot; rel=&quot;noopener&quot;&gt;Caching best
practices&lt;/a&gt; for
specific recommendations. The &lt;a href=&quot;https://web.dev/uses-long-cache-ttl/&quot;&gt;Serve static assets with an efficient cache
policy&lt;/a&gt; audit in Lighthouse can help you
quickly detect resources that aren&#39;t being cached. Keep in mind that different
types of resources will have different freshness requirements and will
therefore require different caching strategies.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/service-workers-cache-storage/&quot;&gt;Service workers&lt;/a&gt; are another
way to significantly reduce demands on your servers but may require significant technical
investment. They also enable your website to work
&lt;a href=&quot;https://developers.google.com/web/fundamentals/codelabs/offline&quot; rel=&quot;noopener&quot;&gt;offline&lt;/a&gt;,
enabling you to present opening hours, phone numbers, and other information to
returning users without a connection. &lt;a href=&quot;https://web.dev/workbox/&quot;&gt;Workbox&lt;/a&gt; is
the recommended approach for adding service workers to websites because it
automates a lot of boilerplate, makes it easier to follow best practices, and
prevents subtle bugs that are common when using the low-level &lt;code&gt;ServiceWorker&lt;/code&gt;
API directly.&lt;/li&gt;
&lt;li&gt;If your site is seeing major increased usage, check whether you have adequate
protection against &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot; rel=&quot;noopener&quot;&gt;DDoS
attacks&lt;/a&gt; because your
site may now be a more attractive target. More details from common providers:
&lt;a href=&quot;https://aws.amazon.com/answers/networking/aws-ddos-attack-mitigation/&quot; rel=&quot;noopener&quot;&gt;AWS&lt;/a&gt;,
&lt;a href=&quot;https://azure.microsoft.com/en-us/services/ddos-protection/&quot; rel=&quot;noopener&quot;&gt;Azure&lt;/a&gt;,
&lt;a href=&quot;https://www.cloudflare.com/learning/ddos/ddos-mitigation/&quot; rel=&quot;noopener&quot;&gt;Cloudflare&lt;/a&gt;,
&lt;a href=&quot;https://cloud.google.com/files/GCPDDoSprotection-04122016.pdf&quot; rel=&quot;noopener&quot;&gt;Google Cloud&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/reliable/&quot;&gt;Network reliability&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;accessibility&quot;&gt;Accessibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#accessibility&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Focusing on accessibility is more important than ever because more people with a
variety of needs are probably accessing your site. Follow the guidelines below
to ensure that the core functionality of your website is accessible for
everyone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accessibility is a team effort and everyone has a role to play. Start by
reviewing Google&#39;s &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/a11y-for-teams&quot; rel=&quot;noopener&quot;&gt;Accessibility for Teams
guide&lt;/a&gt;
as well as &lt;a href=&quot;https://accessibility.digital.gov/&quot; rel=&quot;noopener&quot;&gt;the team guide from the U.S. Digital
Service&lt;/a&gt;. These guides explain what each
team member (product managers, engineers, designers, QA, and so on) can
contribute.&lt;/li&gt;
&lt;li&gt;Do an &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/how-to-review&quot; rel=&quot;noopener&quot;&gt;Accessibility
Review&lt;/a&gt;
to determine what&#39;s working well, and what needs improvement.
The &lt;a href=&quot;https://wave.webaim.org/extension/&quot; rel=&quot;noopener&quot;&gt;WAVE browser extensions&lt;/a&gt; can help
guide you through a manual accessibility audit of your site.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href=&quot;https://web.dev/accessible&quot;&gt;Accessibility Guides&lt;/a&gt; to better understand
specific topics like keyboard navigation and screen reader support.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse#devtools&quot; rel=&quot;noopener&quot;&gt;Run a Lighthouse
audit&lt;/a&gt; to catch
common accessibility issues. The report also provides a list of manual checks
that you can perform to improve the operability of your site. Note that an
Accessibility score of 100 does not guarantee that your site is accessible. There
are many important issues that Lighthouse can&#39;t test for in an automated
fashion so it&#39;s still important to do manual reviews. Other automated auditing
tools include the &lt;a href=&quot;https://wave.webaim.org/api/&quot; rel=&quot;noopener&quot;&gt;WAVE API&lt;/a&gt; and the &lt;a href=&quot;https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd&quot; rel=&quot;noopener&quot;&gt;AXE
extension&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Complete the &lt;a href=&quot;https://egghead.io/courses/start-building-accessible-web-applications-today&quot; rel=&quot;noopener&quot;&gt;Start Building Accessible Web Applications Today course
on
egghead.io&lt;/a&gt;
course or check out the &lt;a href=&quot;https://www.udacity.com/course/web-accessibility--ud891&quot; rel=&quot;noopener&quot;&gt;Web Accessibility course on
Udacity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Watch the &lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g&quot; rel=&quot;noopener&quot;&gt;A11ycast
playlist&lt;/a&gt;
for more quick tips on specific accessibility topics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;PII&quot;&gt;Identity, security, and privacy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#PII&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It can be tempting to take shortcuts to get critical fixes out the door, but
always be careful that you are not opening up security holes in doing so. People
need to access content on topics that are extremely private. Websites need to
protect this sensitive user data at all costs and convince people that their
&lt;a href=&quot;https://en.wikipedia.org/wiki/Personal_data&quot; rel=&quot;noopener&quot;&gt;personally identifiable
information&lt;/a&gt; (PII) is safe.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand &lt;a href=&quot;https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https&quot; rel=&quot;noopener&quot;&gt;why all websites should be protected with
HTTPS&lt;/a&gt;,
not just those that handle sensitive PII data.&lt;/li&gt;
&lt;li&gt;Switch to a hosting provider that uses HTTPS by default, or use &lt;a href=&quot;https://letsencrypt.org/getting-started/&quot; rel=&quot;noopener&quot;&gt;Let&#39;s
Encrypt&lt;/a&gt; or similar services to
enable HTTPS on your servers.&lt;/li&gt;
&lt;li&gt;Review &lt;a href=&quot;https://web.dev/samesite-cookies-explained/&quot;&gt;SameSite cookies explained&lt;/a&gt; to learn
how to make your use of cookies more secure. Note that
&lt;a href=&quot;https://blog.chromium.org/2020/04/temporarily-rolling-back-samesite.html&quot; rel=&quot;noopener&quot;&gt;the enforcement of SameSite cookie labeling has been temporarily rolled back&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/secure/&quot;&gt;Safe and secure&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;usability&quot;&gt;Usability, UI, and UX &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#usability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;People are relying more heavily on the web to fulfill basic needs. Many of these
people don&#39;t use the web frequently. It&#39;s worthwhile to audit the usability of
your site&#39;s core functionality and make sure it&#39;s as simple and easy to use as
possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consider adding a prominent banner (that can be removed with an &lt;strong&gt;X&lt;/strong&gt; button)
to the top of your website that clearly communicates service updates. Use a
call-to-action in the banner to direct people to more specific resources.
Consider using distinct colors and fonts that stand out from the rest of your
page content. Keep your writing empathetic, focused on people&#39;s needs, and
transparent about what kind of service to expect.&lt;/li&gt;
&lt;li&gt;Look for opportunities to minimize physical interactions in your &lt;a href=&quot;https://www.nngroup.com/articles/journey-mapping-101/&quot; rel=&quot;noopener&quot;&gt;critical
user journeys&lt;/a&gt; (CUJs)
and suggest those changes to your product team. For example, if your delivery
service usually requires a signature, see if there&#39;s any way to work around
that.&lt;/li&gt;
&lt;li&gt;Double-check that your CUJs are as simple and intuitive as possible and
suggest changes to your product team if you see any opportunities to improve.&lt;/li&gt;
&lt;li&gt;Review the &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/principles&quot; rel=&quot;noopener&quot;&gt;principles of good mobile
design&lt;/a&gt;
and try out your CUJs on various mobile devices to make sure there aren&#39;t any
glaring issues. The people who don&#39;t use the web often and are suddenly finding
themselves having to rely on the web more are probably accessing your site from
mobile devices.&lt;/li&gt;
&lt;li&gt;Refactor your site to use &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/responsive&quot; rel=&quot;noopener&quot;&gt;responsive design
patterns&lt;/a&gt;
as much as possible.&lt;/li&gt;
&lt;li&gt;Ensure that your forms are
&lt;a href=&quot;https://www.smashingmagazine.com/2017/06/designing-efficient-web-forms/&quot; rel=&quot;noopener&quot;&gt;efficient&lt;/a&gt;
and
&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms&quot; rel=&quot;noopener&quot;&gt;well-designed&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;seo&quot;&gt;SEO &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#seo&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;People are looking for critical health- and job-related information. It&#39;s
important to ensure that your sites are discoverable by all search engines.
The &lt;a href=&quot;https://web.dev/lighthouse-seo/&quot;&gt;Lighthouse SEO audits&lt;/a&gt; can help you detect basic problems.
Follow the official blogs of search engines for the latest guidance and updates:
&lt;a href=&quot;https://webmasters.googleblog.com/&quot; rel=&quot;noopener&quot;&gt;Google&lt;/a&gt;,
&lt;a href=&quot;https://blogs.bing.com/webmaster/&quot; rel=&quot;noopener&quot;&gt;Bing&lt;/a&gt;,
&lt;a href=&quot;http://research.baidu.com/Blog&quot; rel=&quot;noopener&quot;&gt;Baidu&lt;/a&gt;,
&lt;a href=&quot;https://spreadprivacy.com/tag/duckduckgo/&quot; rel=&quot;noopener&quot;&gt;DuckDuckGo&lt;/a&gt;,
&lt;a href=&quot;https://yandex.com/blog/yacompany-com&quot; rel=&quot;noopener&quot;&gt;Yandex&lt;/a&gt;.
Recent COVID-19-related posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/how-to-pause-your-business-online-in.html&quot; rel=&quot;noopener&quot;&gt;How to change your online activities while minimizing impact on your Google
Search
presence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/new-properties-virtual-or-canceled-events.html&quot; rel=&quot;noopener&quot;&gt;New properties for virtual, postponed, and canceled
events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.bing.com/webmaster/march-2020/Bing-adopts-schema-org-mark-up-for-Special-Announcements-about-COVID-19&quot; rel=&quot;noopener&quot;&gt;Bing adopts schema.org markup for special announcements for
COVID-19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/data-types/special-announcements&quot; rel=&quot;noopener&quot;&gt;Add structured data to COVID-19 announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/health-organizations-covid19.html&quot; rel=&quot;noopener&quot;&gt;Helping health organizations make COVID-19 information more
accessible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9781983&quot; rel=&quot;noopener&quot;&gt;General best practices for Search for health &amp;amp; government
sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/discoverable/&quot;&gt;Discoverable&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;performance&quot;&gt;Performance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#performance&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some ISPs (&lt;a href=&quot;https://economictimes.indiatimes.com/tech/internet/brace-yourself-for-slower-data-speeds/articleshow/74702264.cms&quot; rel=&quot;noopener&quot;&gt;in India for
example&lt;/a&gt;)
are seeing a &lt;a href=&quot;https://www.npr.org/2020/03/17/817154787/internet-traffic-surges-as-companies-and-schools-send-people-home&quot; rel=&quot;noopener&quot;&gt;sharp increase in home internet
usage&lt;/a&gt;
and don&#39;t have the infrastructure to meet the increased demand. In situations
like this your website speed may be getting slower through no fault of your own.
Optimizing your load performance could be a way to offset the headwind of
reduced bandwidth. In other words, by reducing the number of bytes that need to
be sent over the network in order to load your pages, you can offset the
performance impact of reduced bandwidth.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Images are the &lt;a href=&quot;https://images.guide/#introduction&quot; rel=&quot;noopener&quot;&gt;number one cause of bloat on the
web&lt;/a&gt;. You might be able to significantly
reduce your website&#39;s bandwidth usage by &lt;a href=&quot;https://web.dev/fast/#optimize-your-images&quot;&gt;optimizing your
images&lt;/a&gt;.
&lt;a href=&quot;https://squoosh.app/&quot; rel=&quot;noopener&quot;&gt;Squoosh&lt;/a&gt; is a simple open source image compression tool
that can help you quickly compress your images.&lt;/li&gt;
&lt;li&gt;Run &lt;a href=&quot;https://webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt; or
&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/#get-started&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
to discover your top performance improvement opportunities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-text-compression/&quot;&gt;Enable text compression&lt;/a&gt; to reduce
the network size of text resources. This is often an easy performance win that
requires minimal technical investment.&lt;/li&gt;
&lt;li&gt;Read &lt;a href=&quot;https://web.dev/fixing-website-speed-cross-functionally/&quot;&gt;Fixing website speed
cross-functionally&lt;/a&gt;
to learn how to collaborate with and get buy-in from other departments.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/browser-level-image-lazy-loading/&quot;&gt;Use standardized lazy-loading for images&lt;/a&gt; to
minimize requests for images that people may never actually see. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser
compatibility&lt;/a&gt;
is not 100% but the feature can be treated as a progressive enhancement. In
other words, if a certain browser doesn&#39;t support standardized lazy-loading, the
image should load as it normally does.&lt;/li&gt;
&lt;li&gt;Check if your site has any A/B testing or personalization scripts that can be
loaded more asynchronously or if there&#39;s any non-critical functionality in the
scripts that can be disabled. A/B testing and personalization scripts usually
can&#39;t be loaded &lt;em&gt;completely&lt;/em&gt; asynchronously because they need to run before
the page content loads, but there may be some opportunity to load parts of the
scripts more asynchronously. See &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path&quot; rel=&quot;noopener&quot;&gt;Critical Rendering Path&lt;/a&gt; to understand
the fundamental tradeoff between synchronous scripts (also known as
render-blocking scripts) in general and page load time, and then decide
whether you need to prioritize the render-blocking scripts over page load
time, or vice versa.&lt;/li&gt;
&lt;li&gt;Third-party code constitutes &lt;a href=&quot;https://almanac.httparchive.org/en/2019/third-parties&quot; rel=&quot;noopener&quot;&gt;around half of all
requests&lt;/a&gt; for most
websites. Consider
&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript&quot; rel=&quot;noopener&quot;&gt;optimizing&lt;/a&gt;
or temporarily removing or disabling third-party code that isn&#39;t fundamental
to running your site.&lt;/li&gt;
&lt;li&gt;If feature releases are deprioritized, this might be the perfect time to clean
up. Remove tags from your tag managers, clean up bloated CSS and JS, and
remove deprecated features or code. The
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/coverage&quot; rel=&quot;noopener&quot;&gt;Coverage tab&lt;/a&gt;
in Chrome DevTools and the
&lt;a href=&quot;https://pptr.dev/#?product=Puppeteer&amp;amp;version=v2.1.1&amp;amp;show=api-class-coverage&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Coverage&lt;/code&gt;&lt;/a&gt; class
in Puppeteer can help you detect unused code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/fast/&quot;&gt;Fast load times&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://unsplash.com/photos/Q1p7bh3SHj8&quot; rel=&quot;noopener&quot;&gt;Hero image&lt;/a&gt; by
&lt;a href=&quot;https://unsplash.com/@nasa&quot; rel=&quot;noopener&quot;&gt;NASA&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/s/photos/earth&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Accessibility tips for web developers</title>
    <link href="https://web.dev/a11y-tips-for-web-dev/"/>
    <updated>2019-12-06T00:00:00Z</updated>
    <id>https://web.dev/a11y-tips-for-web-dev/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;It&#39;s awesome to build sites that are inclusive and accessible to everyone.
There are at least six key areas of disability you can optimize for:
&lt;strong&gt;visual&lt;/strong&gt;, &lt;strong&gt;hearing&lt;/strong&gt;, &lt;strong&gt;mobility&lt;/strong&gt;, &lt;strong&gt;cognition&lt;/strong&gt;, &lt;strong&gt;speech&lt;/strong&gt;, and &lt;strong&gt;neural&lt;/strong&gt;.
Many tools and resources can help here,
even if you&#39;re totally new to web accessibility.&lt;/p&gt;
&lt;p&gt;Over one billion people live with some form of disability.
You might have been in a loud room at some point
trying to hear the conversation around you
or in a low-lighting condition trying to find something in the dark.
Do you remember the frustration you felt with that circumstance?
Now imagine if that temporary condition were permanent.
How different would your experience on the web be?&lt;/p&gt;
&lt;p&gt;To be accessible, sites need to work across multiple devices
with varying screen sizes and different kinds of input, such as screen readers.
Moreover, sites should be usable by the broadest group of users,
including those with disabilities.
Here&#39;s a sample of just a few disabilities your users may have:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Vision&lt;/th&gt;
        &lt;th&gt;Hearing&lt;/th&gt;
        &lt;th&gt;Mobility&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Low vision&lt;/li&gt;
            &lt;li&gt;Blindness&lt;/li&gt;
            &lt;li&gt;Color blindness&lt;/li&gt;
            &lt;li&gt;Cataracts&lt;/li&gt;
            &lt;li&gt;Sun glare&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Hard of hearing&lt;/li&gt;
            &lt;li&gt;Deafness&lt;/li&gt;
            &lt;li&gt;Noise&lt;/li&gt;
            &lt;li&gt;Ear infection&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Spinal cord injury&lt;/li&gt;
            &lt;li&gt;Limited dexterity&lt;/li&gt;
            &lt;li&gt;Hands full&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;th&gt;Cognitive&lt;/th&gt;
        &lt;th&gt;Speech&lt;/th&gt;
        &lt;th&gt;Neural&lt;/th&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Learning disability&lt;/li&gt;
            &lt;li&gt;Sleepiness or distraction&lt;/li&gt;
            &lt;li&gt;Migraine&lt;/li&gt;
            &lt;li&gt;Autism&lt;/li&gt;
            &lt;li&gt;Seizure&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Ambient noise&lt;/li&gt;
            &lt;li&gt;Sore throat&lt;/li&gt;
            &lt;li&gt;Speech impediment&lt;/li&gt;
            &lt;li&gt;Unable to speak&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Depression&lt;/li&gt;
            &lt;li&gt;PTSD&lt;/li&gt;
            &lt;li&gt;Bipolar disorder&lt;/li&gt;
            &lt;li&gt;Anxiety&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Visual issues&lt;/strong&gt; range from an inability to distinguish colors to no vision at all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure text content meets a minimum
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast&quot; rel=&quot;noopener&quot;&gt;contrast ratio threshold&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Avoid communicating information
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-without-color&quot; rel=&quot;noopener&quot;&gt;using solely color&lt;/a&gt;
and ensure that all text is
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-scale&quot; rel=&quot;noopener&quot;&gt;resizable&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ensure all user interface components can be used with assistive technologies
such as screen readers, magnifiers, and braille displays.
This entails ensuring that UI components are marked up
such that accessibility APIs can programmatically determine
the &lt;em&gt;role&lt;/em&gt;, &lt;em&gt;state&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;, and &lt;em&gt;title&lt;/em&gt; of any element.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The element inspection feature in the Chrome, Edge, and Firefox developer
tools displays a tooltip of CSS properties
that includes a quick check for color contrast ratio.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the Chrome DevTools Inspect Element tooltip.&quot; decoding=&quot;async&quot; height=&quot;370&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;I personally live with low vision, and I often find myself zooming in on sites,
their DevTools, and the terminal.
While supporting zoom is almost never at the top of developers&#39; to-do lists,
it can make a world of difference to users like me.🤓&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hearing issues&lt;/strong&gt; mean a user may have issues hearing sound emitted from a page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#media-equiv-av-only-alt&quot; rel=&quot;noopener&quot;&gt;text alternatives&lt;/a&gt;
for all content that is not strictly text.&lt;/li&gt;
&lt;li&gt;Test that your UI components are still functional
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#content-structure-separation-understanding&quot; rel=&quot;noopener&quot;&gt;without sound&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Screenshot of the ChromeVox screen reader reading a web page.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;strong&gt;Mobility issues&lt;/strong&gt; can include the inability to operate a mouse, a keyboard, or a touch screen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the content of your UI components
&lt;a href=&quot;http://www.w3.org/TR/wai-aria-practices/#keyboard&quot; rel=&quot;noopener&quot;&gt;functionally accessible from a keyboard&lt;/a&gt;
for any actions one would otherwise use a mouse for.&lt;/li&gt;
&lt;li&gt;Ensure pages are correctly marked up for assistive technologies—including
screen readers, voice control software, and physical switch controls—which
tend to use the same APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cognitive issues&lt;/strong&gt; mean a user may require assistive technologies
to help them with reading text, so it&#39;s important to ensure text alternatives exist.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be mindful when using animations. Avoid video and animation that
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#time-limits&quot; rel=&quot;noopener&quot;&gt;repeat&lt;/a&gt;
or flash, which can cause &lt;a href=&quot;http://www.w3.org/TR/WCAG20/#seizure&quot; rel=&quot;noopener&quot;&gt;issues&lt;/a&gt;
for some users.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/web/updates/2019/03/prefers-reduced-motion#too_much_motion_in_real_life_and_on_the_web&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt;
CSS media query allows you to limit animations
and autoplaying videos for users who prefer reduced motion:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/*&lt;br /&gt;If the user expresses a preference for reduced motion, don&#39;t use animations on buttons.&lt;br /&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reduce&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid interactions that are
&lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Understanding/no-timing.html&quot; rel=&quot;noopener&quot;&gt;timing-based&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This may seem like a lot of bases to cover,
but we&#39;ll walk through the process for assessing
and then improving the accessibility of your UI components.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The GOV.UK accessibility team has made some great
&lt;a href=&quot;https://accessibility.blog.gov.uk/2016/09/02/dos-and-donts-on-designing-for-accessibility/&quot; rel=&quot;noopener&quot;&gt;accessibility dos and don&#39;ts digital posters&lt;/a&gt;
to spread awareness of best practices in your team:&lt;/p&gt;
&lt;img alt=&quot;Digital posters showing accessibility dos and don&amp;#x27;ts.&quot; decoding=&quot;async&quot; height=&quot;721&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;are-your-ui-components-accessible&quot;&gt;Are your UI components accessible? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#are-your-ui-components-accessible&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Summary (tl;dr)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When auditing your page&#39;s UI components for accessibility, ask yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can you use your UI component with the keyboard only?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Does the component manage focus and avoid focus traps?
Can it respond to the appropriate keyboard events?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can you use your UI component with a screen reader?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Have you provided text alternatives for any information presented visually?
Have you added semantic information using ARIA?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work without sound?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Turn off your speakers and go through your use cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work without color?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ensure your UI component can be used by someone who cannot see colors.
A helpful tool for simulating color blindness is a Chrome extension called
&lt;a href=&quot;https://chrome.google.com/webstore/detail/see/dkihcccbkkakkbpikjmpnbamkgbjfdcn&quot; rel=&quot;noopener&quot;&gt;SEE&lt;/a&gt;.
(Try all four forms of color blindness simulation available.)
You may also be interested in the
&lt;a href=&quot;https://chrome.google.com/webstore/detail/daltonize/obcnmdgpjakcffkcjnonpdlainhphpgh&quot; rel=&quot;noopener&quot;&gt;Daltonize&lt;/a&gt;
extension, which is similarly useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work with high-contrast mode enabled?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All modern operating systems support a high contrast mode.
&lt;a href=&quot;https://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph?hl=en&quot; rel=&quot;noopener&quot;&gt;High Contrast&lt;/a&gt;
is a Chrome extension that can help here.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standardized controls (such as &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;)
have accessibility built in by the browser.
They are focusable using the &lt;code&gt;Tab&lt;/code&gt; key;
they respond to keyboard events (like the &lt;code&gt;Enter&lt;/code&gt;, &lt;code&gt;Space&lt;/code&gt;, and arrow keys);
and they have semantic roles, states, and properties used by accessibility tools.
Their default styling should also meet the accessibility requirements listed above.&lt;/p&gt;
&lt;p&gt;Custom UI components
(with the exception of components that extend standard elements like &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;)
do not have any built-in functionality, including accessibility,
so you need to provide it.
A good place to start when implementing accessibility
is to compare your component to an analogous standard element
(or a combination of several standard elements,
depending on how complex your component is).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Most browser developer tools support inspecting the accessibility tree of a page.
In Chrome DevTools, this is available via the &lt;strong&gt;Accessibility&lt;/strong&gt; tab in the &lt;strong&gt;Elements&lt;/strong&gt; panel:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the accessibility tree view in Chrome DevTools.&quot; decoding=&quot;async&quot; height=&quot;486&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Firefox also has an &lt;strong&gt;Accessibility&lt;/strong&gt; panel:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the accessibility tree view in FireFox DevTools.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Safari exposes accessibility information in the &lt;strong&gt;Elements&lt;/strong&gt; panel&#39;s &lt;strong&gt;Node&lt;/strong&gt; tab.&lt;/p&gt;
&lt;p&gt;The following is a list of questions you can ask yourself when attempting to make your UI components more accessible.&lt;/p&gt;
&lt;h2 id=&quot;can-your-ui-component-be-used-with-the-keyboard-alone&quot;&gt;Can your UI component be used with the keyboard alone? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-your-ui-component-be-used-with-the-keyboard-alone&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ideally, ensure that all functionality
in your UI component can be accessed via keyboard.
When designing your user experience,
think about how you would use your element with the keyboard alone
and figure out a consistent set of keyboard interactions.&lt;/p&gt;
&lt;p&gt;First, ensure that you have a sensible focus target for each component.
For example, a complex component like a menu may be one focus target within a page
but should then manage focus within itself so that the active menu item always takes focus.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of a menu and submenu that requires focus management.&quot; decoding=&quot;async&quot; height=&quot;377&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Managing focus within a complex element.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-tabindex&quot;&gt;Using tabindex &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#using-tabindex&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;tabindex&lt;/code&gt; attribute allows elements and UI components to be focused using the keyboard. Keyboard-only and assistive technology users both need to be able to place keyboard focus on elements to interact with them. Built-in interactive elements (like &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;) are implicitly focusable, so they don&#39;t need a &lt;code&gt;tabindex&lt;/code&gt; attribute unless you wish to change their position in the tab order.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;There are three types of &lt;code&gt;tabindex&lt;/code&gt; values:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;tabindex=&amp;quot;0&amp;quot;&lt;/code&gt;&lt;/strong&gt; is the most common and places the element in the natural tab order (defined by the DOM order).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;a &lt;code&gt;tabindex&lt;/code&gt; value greater than 0&lt;/strong&gt; places the element in a manual tab order—all elements in the page with a positive &lt;code&gt;tabindex&lt;/code&gt; value are visited in numerical order before elements in the natural tab order.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;a &lt;code&gt;tabindex&lt;/code&gt; value equal to -1&lt;/strong&gt; causes the element to be programmatically focusable, but not in the tab order.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For custom UI components, always use &lt;code&gt;tabindex&lt;/code&gt; values of 0 or -1, as you won&#39;t be able to determine the order of elements on a given page ahead of time—and even if you did, the order may change. A &lt;code&gt;tabindex&lt;/code&gt; value of -1 is particularly useful for managing focus within complex components as described above.&lt;/p&gt;
&lt;p&gt;Also ensure that focus is always visible, whether by allowing the default focus ring style or by applying a discernible custom focus style. Remember not to trap keyboard users—they should be able to move focus away from an element using only the keyboard.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You may also be interested in the roving &lt;code&gt;tabindex&lt;/code&gt; or &lt;code&gt;aria-activedescendant&lt;/code&gt; approaches,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets#Technique_1_Roving_tabindex&quot; rel=&quot;noopener&quot;&gt;covered over on MDN&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;using-autofocus&quot;&gt;Using autofocus &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#using-autofocus&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The HTML autofocus attribute allows an author to specify
that a particular element should automatically take focus
when the page is loaded.
&lt;code&gt;autofocus&lt;/code&gt; is already supported on
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#association-of-controls-and-forms&quot; rel=&quot;noopener&quot;&gt;all web form controls&lt;/a&gt;,
including buttons.
To autofocus elements in your own custom UI components,
call the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.focus&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;focus()&lt;/code&gt;&lt;/a&gt; method,
supported on all HTML elements that can be focused
(for example, &lt;code&gt;document.querySelector(&#39;myButton&#39;).focus()&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&quot;adding-keyboard-interaction&quot;&gt;Adding keyboard interaction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#adding-keyboard-interaction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once your UI component is focusable,
provide a good keyboard interaction story
when a component is focused by handling appropriate keyboard events.
For example, allow the user to use arrow keys to select menu options
and &lt;code&gt;Space&lt;/code&gt; or &lt;code&gt;Enter&lt;/code&gt; to activate buttons.
The ARIA &lt;a href=&quot;http://www.w3.org/TR/wai-aria-practices/#aria_ex&quot; rel=&quot;noopener&quot;&gt;design patterns guide&lt;/a&gt;
provides some guidance here.&lt;/p&gt;
&lt;p&gt;Finally, ensure that your keyboard shortcuts are discoverable.
A common practice is to have a keyboard shortcut legend (on-screen text)
to inform the user that shortcuts exist.
For example, &amp;quot;Press ? for keyboard shortcuts.&amp;quot;
Alternatively, a hint such a tooltip can be used
to inform the user about a shortcut.&lt;/p&gt;
&lt;p&gt;The importance of managing focus cannot be overstated.
One example is a navigation drawer.
If you add a UI component to the page,
you need to direct focus to an element inside of it;
otherwise, users may have to tab through the entire page to get there.
This can be a frustrating experience,
so be sure to test focus for all keyboard navigable components in your page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can use &lt;a href=&quot;https://github.com/puppeteer/puppeteer&quot; rel=&quot;noopener&quot;&gt;Puppeteer&lt;/a&gt;
to automate running keyboard accessibility tests for toggling UI states.
&lt;a href=&quot;https://medium.com/walkme-engineering/web-accessibility-testing-d499a7f7a032&quot; rel=&quot;noopener&quot;&gt;WalkMe Engineering&lt;/a&gt;
has a great guide on this I recommend reading.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;WalkMe state toggle test.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 441px) 441px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=882 882w&quot; width=&quot;441&quot; /&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Example for expanding and collapsing a category with the Space key&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.category&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify tabIndex, role and focus&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;tabindex&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;activeElement &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify aria-expanded = false&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;aria-expanded&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// toggle category by pressing Space&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keyboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;press&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Space&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify aria-expanded = true&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;aria-expanded&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;can-you-use-your-ui-component-with-a-screen-reader&quot;&gt;Can you use your UI component with a screen reader? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-you-use-your-ui-component-with-a-screen-reader&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Around 1–2% of people use a screen reader.
Can you understand all important information
and interact with the component using the screen reader and keyboard alone?&lt;/p&gt;
&lt;p&gt;The following questions should help you address screen reader accessibility.&lt;/p&gt;
&lt;h3 id=&quot;do-all-components-and-images-have-meaningful-text-alternatives&quot;&gt;Do all components and images have meaningful text alternatives? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#do-all-components-and-images-have-meaningful-text-alternatives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wherever information about the &lt;em&gt;name&lt;/em&gt; or &lt;em&gt;purpose&lt;/em&gt;
of an interactive component is conveyed visually,
provide an accessible text alternative.&lt;/p&gt;
&lt;p&gt;For example, if your &lt;code&gt;&amp;lt;fancy-menu&amp;gt;&lt;/code&gt; UI component only displays a gear icon
to indicate that it&#39;s a settings menu,
it needs an accessible text alternative, such as &amp;quot;settings,&amp;quot;
that conveys the same information.
Depending on context,
you can provide a text alternative using an &lt;code&gt;alt&lt;/code&gt; attribute,
an &lt;code&gt;aria-label&lt;/code&gt; attribute, an &lt;code&gt;aria-labelledby&lt;/code&gt; attribute,
or plain text in the Shadow DOM.
You can find general technical tips in &lt;a href=&quot;http://webaim.org/resources/quickref/&quot; rel=&quot;noopener&quot;&gt;WebAIM Quick Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any UI component that displays an image should provide a mechanism
for providing alternative text for that image, analogous to the &lt;code&gt;alt&lt;/code&gt; attribute.&lt;/p&gt;
&lt;h3 id=&quot;do-your-components-provide-semantic-information&quot;&gt;Do your components provide semantic information? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#do-your-components-provide-semantic-information&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Assistive technology conveys semantic information
that is otherwise expressed to sighted users via visual cues
such as formatting, cursor style, or position.
Standardized elements have this semantic information built-in by the browser,
but for custom components you need to use
&lt;a href=&quot;http://www.w3.org/WAI/PF/aria/&quot; rel=&quot;noopener&quot;&gt;ARIA&lt;/a&gt; to add the information.&lt;/p&gt;
&lt;p&gt;As a rule of thumb, any component that listens to a mouse click or hover event
should not only have some kind of keyboard event listener,
but also an ARIA role and potentially ARIA states and attributes.&lt;/p&gt;
&lt;p&gt;For example, a custom &lt;code&gt;&amp;lt;fancy-slider&amp;gt;&lt;/code&gt; UI component might take an ARIA role of slider,
which has some related ARIA attributes: &lt;code&gt;aria-valuenow&lt;/code&gt;, &lt;code&gt;aria-valuemin&lt;/code&gt; and &lt;code&gt;aria-valuemax&lt;/code&gt;.
By binding these attributes to the relevant properties on your custom component,
you can allow users of assistive technology to interact with the element,
change its value, and even cause the element&#39;s visual presentation to change accordingly.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of a slider.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;56&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 159px) 159px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=159 159w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=181 181w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=207 207w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=236 236w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=269 269w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=306 306w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=318 318w&quot; width=&quot;159&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A range slider component.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;fancy-slider&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;slider&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuemin&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuemax&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;5&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuenow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;2.5&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;fancy-slider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;can-users-understand-everything-without-relying-on-color&quot;&gt;Can users understand everything without relying on color? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-users-understand-everything-without-relying-on-color&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Color shouldn&#39;t be used as the only means of conveying information,
such as indicating a status, prompting the user for a response,
or visualizing data.
For example, if you have a pie chart,
provide labels and values for each slice
so users who have visual impairments can understand the information
even if they can&#39;t tell where the slices begin and end:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A pie chart with labels and values to ensure accessibility.&quot; decoding=&quot;async&quot; height=&quot;442&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;An accessible pie chart. (From the &lt;a href=&quot;https://www.w3.org/WAI/GL/low-vision-a11y-tf/wiki/Informational_Graphic_Contrast_(Minimum)&quot; rel=&quot;noopener&quot;&gt;W3C Web Accessibility Initiative&lt;/a&gt;.)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;is-there-sufficient-contrast-between-text-and-images-and-their-background&quot;&gt;Is there sufficient contrast between text and images and their background? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#is-there-sufficient-contrast-between-text-and-images-and-their-background&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Any text content displayed in your component should meet the
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast&quot; rel=&quot;noopener&quot;&gt;minimum WCAG AA-level contrast threshold&lt;/a&gt;.
Consider providing a high-contrast theme that meets the
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast7&quot; rel=&quot;noopener&quot;&gt;higher AAA threshold&lt;/a&gt;,
and ensure that user agent style sheets can be applied
if users require custom contrast or different colors.
You can use this &lt;a href=&quot;http://webaim.org/resources/contrastchecker/&quot; rel=&quot;noopener&quot;&gt;Color Contrast Checker&lt;/a&gt;
as an aid when designing your component.&lt;/p&gt;
&lt;h3 id=&quot;is-the-moving-or-flashing-content-in-your-components-stoppable-and-safe&quot;&gt;Is the moving or flashing content in your components stoppable and safe? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#is-the-moving-or-flashing-content-in-your-components-stoppable-and-safe&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Content that moves, scrolls, or blinks for more than five seconds
should be able to be paused, stopped or hidden.
In general, avoid flashing content.
If something must flash, make sure it flashes no more than three times per second.&lt;/p&gt;
&lt;h2 id=&quot;accessibility-tooling&quot;&gt;Accessibility Tooling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#accessibility-tooling&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A number of tools are available that can assist with
debugging the accessibility of your visual components.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deque.com/products/axe/&quot; rel=&quot;noopener&quot;&gt;Axe&lt;/a&gt; provides automated accessibility testing
for your framework or browser of choice.
&lt;a href=&quot;https://www.deque.com/blog/axe-and-attest-integration-puppeteer/&quot; rel=&quot;noopener&quot;&gt;Axe Puppeteer&lt;/a&gt;
can be used for writing automated accessibility tests.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
Accessibility audits provide helpful insights for discovering common accessibility issues.
The accessibility score is a weighted average of all accessibility audits
based on &lt;a href=&quot;https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md&quot; rel=&quot;noopener&quot;&gt;Axe user impact assessments&lt;/a&gt;.
For monitoring accessibility via continuous integration, see &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot; rel=&quot;noopener&quot;&gt;Lighthouse CI&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Screenshot of the Lighthouse accessibility audit.&quot; decoding=&quot;async&quot; height=&quot;649&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://tenon.io/&quot; rel=&quot;noopener&quot;&gt;Tenon.io&lt;/a&gt; is useful for testing common accessibility problems.
Tenon has strong integration support across build tools, browsers (via extensions), and even text editors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many library- and framework-specific tools
for highlighting accessibility issues with components.
For example, &lt;a href=&quot;https://web.dev/accessibility-auditing-react/&quot;&gt;web.dev&lt;/a&gt;
explains how to use &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-jsx-a11y&quot; rel=&quot;noopener&quot;&gt;eslint-plugin-jsx-a11y&lt;/a&gt;
to highlight accessibility issues for React components in your editor:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of a code editor with an accessibility issue flagged by eslint-plugin-jsx-a11y.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;If you use Angular, &lt;a href=&quot;https://web.dev/accessible-angular-with-codelyzer&quot;&gt;codelyzer&lt;/a&gt;
provides in-editor accessibility audits too:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of a code editor with an accessibility issue flagged by codelyzer.&quot; decoding=&quot;async&quot; height=&quot;433&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can examine the way that assistive technologies see web content by using
&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html#//apple_ref/doc/uid/TP40001078-CH210-SW1&quot; rel=&quot;noopener&quot;&gt;Accessibility Inspector&lt;/a&gt; (Mac)
or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/dd373661(v=vs.85).aspx&quot; rel=&quot;noopener&quot;&gt;Windows Automation API Testing Tools&lt;/a&gt;
and &lt;a href=&quot;http://accessibility.linuxfoundation.org/a11yweb/util/accprobe/&quot; rel=&quot;noopener&quot;&gt;AccProbe&lt;/a&gt; (Windows).
You can also see the full accessibility tree that Chrome creates
by navigating to &lt;code&gt;about://accessibility&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The best way to test for screen reader support on a Mac is using the VoiceOver utility.
Use &lt;code&gt;⌘F5&lt;/code&gt; to enable or disable it, &lt;code&gt;Ctrl+Option ←→&lt;/code&gt; to move through the page,
and &lt;code&gt;Ctrl+Shift+Option + ↑↓&lt;/code&gt; to move up and down the accessibility tree.
For more detailed instructions,
see the &lt;a href=&quot;http://www.apple.com/voiceover/info/guide/_1131.html&quot; rel=&quot;noopener&quot;&gt;full list of VoiceOver commands&lt;/a&gt;
and the &lt;a href=&quot;http://www.apple.com/voiceover/info/guide/_1131.html#vo27972&quot; rel=&quot;noopener&quot;&gt;list of VoiceOver Web commands&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://khan.github.io/tota11y/&quot; rel=&quot;noopener&quot;&gt;tota11y&lt;/a&gt; is a useful visualizer
for assistive technology issues built by Khan Academy.
It&#39;s a script that adds a button to your document that triggers several plugins
for annotating things like insufficient contrast ratio and other a11y violations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Windows, &lt;a href=&quot;http://www.nvaccess.org/&quot; rel=&quot;noopener&quot;&gt;NVDA&lt;/a&gt; is a free, open source screen reader
that&#39;s fully featured and rapidly gaining in popularity.
However, note that it has a much steeper learning curve for sighted users than VoiceOver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://chromelens.xyz/&quot; rel=&quot;noopener&quot;&gt;ChromeLens&lt;/a&gt; helps develop for the visually impaired.
It also has great support for visualizing keyboard navigation paths.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of ChromeLens.&quot; decoding=&quot;async&quot; height=&quot;514&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.chromevox.com/&quot; rel=&quot;noopener&quot;&gt;ChromeVox&lt;/a&gt; is a screen reader available as a Chrome extension and built into ChromeOS devices.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#conclusions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We still have a long way to go to improve accessibility on the web.
Per the &lt;a href=&quot;https://almanac.httparchive.org/en/2019/accessibility&quot; rel=&quot;noopener&quot;&gt;Web Almanac&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 out of every 5 sites have text that easily blends into the background, making it unreadable.&lt;/li&gt;
&lt;li&gt;49.91% of pages still fail to provide &lt;code&gt;alt&lt;/code&gt; attributes for some of their images.&lt;/li&gt;
&lt;li&gt;Only 24% of pages that use buttons or links include textual labels for them.&lt;/li&gt;
&lt;li&gt;Only 22.33% of pages provide labels for all their form inputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about accessibility fundamentals and help improve those statistics,
I recommend the &lt;a href=&quot;https://web.dev/accessible/&quot;&gt;Accessible to all&lt;/a&gt; docs on web.dev.
There&#39;s much we can do to build experiences that are more accessible for everyone.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the web.dev &amp;#x27;Accessible to all&amp;#x27; collection page.&quot; decoding=&quot;async&quot; height=&quot;513&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
</content>
    <author>
      <name>Addy Osmani</name>
    </author>
  </entry>
  
  <entry>
    <title>Audit your Angular app&#39;s accessibility with codelyzer</title>
    <link href="https://web.dev/accessible-angular-with-codelyzer/"/>
    <updated>2019-07-03T00:00:00Z</updated>
    <id>https://web.dev/accessible-angular-with-codelyzer/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Making your app accessible means that all users, including those with special needs, can use it and understand the content. According to the &lt;a href=&quot;https://www.who.int/disabilities/world_report/2011/report.pdf&quot; rel=&quot;noopener&quot;&gt;World Health Report&lt;/a&gt;, more than a billion people—about 15% of the world&#39;s population—have some form of disability. So &lt;a href=&quot;https://web.dev/accessible&quot;&gt;accessibility&lt;/a&gt; is a priority for any development project.&lt;/p&gt;
&lt;p&gt;In this post you&#39;ll learn how to add &lt;a href=&quot;https://github.com/mgechev/codelyzer&quot; rel=&quot;noopener&quot;&gt;codelyzer&#39;s&lt;/a&gt; accessibility checks to the build process for an Angular app. This approach lets you catch accessibility bugs directly in your text editor as you code.&lt;/p&gt;
&lt;h2 id=&quot;using-codelyzer-to-detect-inaccessible-elements&quot;&gt;Using codelyzer to detect inaccessible elements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-angular-with-codelyzer/#using-codelyzer-to-detect-inaccessible-elements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mgechev/codelyzer&quot; rel=&quot;noopener&quot;&gt;codelyzer&lt;/a&gt; is a tool that sits on top of &lt;a href=&quot;https://palantir.github.io/tslint/&quot; rel=&quot;noopener&quot;&gt;TSLint&lt;/a&gt; and checks whether Angular TypeScript projects follow a set of linting rules. Projects set up with the &lt;a href=&quot;https://cli.angular.io/&quot; rel=&quot;noopener&quot;&gt;Angular command line interface (CLI)&lt;/a&gt; include codelyzer by default.&lt;/p&gt;
&lt;p&gt;codelyzer has over 50 rules for checking if an Angular application follows best practices. Of those, there are about 10 rules for enforcing accessibility criteria. To learn about the various accessibility checks provided by codelyzer and their rationales, see the &lt;a href=&quot;https://medium.com/ngconf/new-accessibility-rules-in-codelyzer-v5-0-0-85eec1d3e9bb&quot; rel=&quot;noopener&quot;&gt;New Accessibility rules in Codelyzer&lt;/a&gt; article.&lt;/p&gt;
&lt;p&gt;Currently, all the accessibility rules are experimental and disabled by default. You can enable them by adding them to the TSLint configuration file (&lt;code&gt;tslint.json&lt;/code&gt;):&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;rulesDirectory&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&quot;codelyzer&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    ...&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-alt-text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-elements-content&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-label-for&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-tabindex-no-positive&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-table-scope&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-accessibility-valid-aria&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-click-events-have-key-events&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-mouse-events-have-key-events&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-no-autofocus&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;template-no-distracting-elements&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;TSLint works with all popular text editors and IDEs. To use it with VSCode, install the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eg2.tslint&quot; rel=&quot;noopener&quot;&gt;TSLint plugin&lt;/a&gt;. In WebStorm, TSLint is enabled by default. For other editors, check the TSLint &lt;a href=&quot;https://github.com/palantir/tslint#tslint&quot; rel=&quot;noopener&quot;&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With codelyzer&#39;s accessibility checks set up, you get a popup showing accessibility errors in TypeScript files or inline templates as you code:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of a codelyzer popup in a text editor.&quot; decoding=&quot;async&quot; height=&quot;433&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/XArrTmBXfijqQ8AteI76.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A codelyzer popup showing a form element labeling error.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To perform linting over the entire project (including external templates), use the &lt;code&gt;ng lint&lt;/code&gt; command:&lt;/p&gt;
&lt;img alt=&quot;Linting with Angular CLI&quot; decoding=&quot;async&quot; height=&quot;342&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/sZdIj5CNklqppTk0UCf3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;supplementing-codelyzer&quot;&gt;Supplementing codelyzer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-angular-with-codelyzer/#supplementing-codelyzer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt; is another tool you can use to enforce accessibility practices in your Angular application. The main difference between codelyzer and Lighthouse is when their checks get performed. Codelyzer statically analyzes the application at development time, without running it. This means that during development you can get direct feedback in your text editor or in the terminal. By contrast, Lighthouse actually runs your application and performs a bunch of checks using dynamic analysis.&lt;/p&gt;
&lt;p&gt;Both tools can be useful parts of your development flow. Lighthouse has better coverage given the checks it performs, while codelyzer allows you to iterate faster by getting constant feedback in your text editor.&lt;/p&gt;
&lt;h2 id=&quot;enforcing-accessibility-checks-in-your-continuous-integration&quot;&gt;Enforcing accessibility checks in your continuous integration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-angular-with-codelyzer/#enforcing-accessibility-checks-in-your-continuous-integration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Introducing static accessibility checks in your continuous integration (CI) can be a great enhancement for your development flow. With codelyzer you can easily enforce certain accessibility rules or other practices by running &lt;code&gt;ng lint&lt;/code&gt; on each code modification (for example for each new pull request).&lt;/p&gt;
&lt;p&gt;This way, even before you proceed to code review, your CI can tell you if there are any accessibility violations.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/accessible-angular-with-codelyzer/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To improve the accessibility of your Angular app:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enable the experimental accessibility rules in codelyzer.&lt;/li&gt;
&lt;li&gt;Perform accessibility linting over your entire project using the Angular CLI.&lt;/li&gt;
&lt;li&gt;Fix all the accessibility problems reported by codelyzer.&lt;/li&gt;
&lt;li&gt;Consider using Lighthouse for accessibility audits at runtime.&lt;/li&gt;
&lt;/ol&gt;
</content>
    <author>
      <name>Zama Khan Mohammed</name>
    </author><author>
      <name>Minko Gechev</name>
    </author>
  </entry>
</feed>
