<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Games on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/games/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Games on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about Games.</subtitle>
  
  
  <entry>
    <title>Human interface devices on the web: a few quick examples</title>
    <link href="https://web.dev/hid-examples/"/>
    <updated>2020-07-22T00:00:00Z</updated>
    <id>https://web.dev/hid-examples/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID API&lt;/a&gt;, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;,
launched in ChromeÂ 89.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the WebHID API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a long tail of human interface devices (HIDs) that are too new, too
old, or too uncommon to be accessible by systems&#39; device drivers. The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID
API&lt;/a&gt; solves this by providing a way to implement device-specific logic in
JavaScript.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the WebHID API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An HID takes input from or provides output to humans. Examples of devices
include keyboards, pointing devices (mice, touchscreens, etc.), and gamepads.
The &lt;a href=&quot;https://www.usb.org/hid&quot; rel=&quot;noopener&quot;&gt;HID protocol&lt;/a&gt; makes it possible to access these
devices on desktop computers using operating system drivers. The web platform
supports HIDs by relying on these drivers.&lt;/p&gt;
&lt;p&gt;The inability to access uncommon HID devices is particularly painful when it
comes to gamepad support. Gamepads designed for PC often use HID for gamepad
inputs (buttons, joysticks, triggers) and outputs (LEDs, rumble). However,
gamepad inputs and outputs are not well standardized and web browsers often
require custom logic for specific devices. This is unsustainable and results in
poor support for the long tail of older and uncommon devices. It also causes the
browser to depend on quirks present in the behavior of specific devices.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos, demos, demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re curious about how any of these samples work, the source code for all
of them is available on GitHub. &lt;a href=&quot;https://github.com/WICG/webhid/blob/master/EXPLAINER.md#example&quot; rel=&quot;noopener&quot;&gt;There&#39;s a barebones code example&lt;/a&gt; in
the explainer.&lt;/p&gt;
&lt;h3 id=&quot;macbook-pro-keyboard-backlight&quot;&gt;MacBook Pro keyboard backlight &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#macbook-pro-keyboard-backlight&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The biggest barrier to trying out any of these demos is lack of access to the
device. Fortunately, if you have a MacBook Pro with a TouchBar, you don&#39;t need
to buy anything. This demo lets you use the API right from your laptop. It also
shows how WebHID can be used to unlock functionality of built-in devices, not
just peripherals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; FWeinb&lt;br /&gt;
&lt;strong&gt;Demo/Source:&lt;/strong&gt; &lt;a href=&quot;https://codesandbox.io/s/webhid-demo-keyboard-backlight-qlq95&quot; rel=&quot;noopener&quot;&gt;Keyboard Backlight&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;game-controllers&quot;&gt;Game controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#game-controllers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;playstation-4-wireless-controller&quot;&gt;PlayStationÂ 4 Wireless controller &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#playstation-4-wireless-controller&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next up is something fewer of you are likely to have. Sony&#39;s DualShockÂ 4 is a
wireless controller for PlayStationÂ 4 game consoles.&lt;/p&gt;
&lt;p&gt;The DualShockÂ 4 Demo uses WebHID to receive the raw input reports from the
DualShockÂ 4 and provides a high-level API to access the controller&#39;s gyroscope,
accelerometer, touchpad, button, and thumbstick inputs. It also supports rumble
and setting the color of an RGB LED housed within the controller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; TheBITLINK&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://thebitlink.github.io/WebHID-DS4/&quot; rel=&quot;noopener&quot;&gt;DualShockÂ 4 Demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/TheBITLINK/WebHID-DS4&quot; rel=&quot;noopener&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;nintendo-switch-joy-con-controllers&quot;&gt;Nintendo Switch Joy-Con controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#nintendo-switch-joy-con-controllers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Play the Chrome dino ðŸ¦– offline game by actually jumping with a Nintendo Switch Joy-Con
controller in your pants pockets. This demo is powered by
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;Joy-Con WebHID&lt;/a&gt;, a WebHID driver for the
Nintendo Switch Joy-Con controllers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; &lt;a href=&quot;https://web.dev/authors/thomassteiner/&quot;&gt;Thomas Steiner&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://tomayac.github.io/chrome-dino-webhid/&quot; rel=&quot;noopener&quot;&gt;Chrome Dino WebHID&lt;/a&gt;
(&lt;a href=&quot;https://github.com/tomayac/chrome-dino-webhid&quot; rel=&quot;noopener&quot;&gt;demo source&lt;/a&gt;,
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;driver source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;the-blinkstick-strip&quot;&gt;The BlinkStick Strip &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#the-blinkstick-strip&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BlinkStick Strip is a HID-compliant light strip with 8Â RGB LEDs. The demo allows
the user to select from several blink patterns including chase, blink, and
Larson scanner (aka Cylon).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Robat Williams&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://robatwilliams.github.io/webhid-demos/blinkstick-strip/&quot; rel=&quot;noopener&quot;&gt;blinkstick-strip&lt;/a&gt; (&lt;a href=&quot;https://github.com/robatwilliams/webhid-demos&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;blink-blink-blink&quot;&gt;Blink, blink, blink &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#blink-blink-blink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What does this demo do? (Wait for it.) It blinks. Actually it&#39;s three demos that
use the blink(1) USB notification light.&lt;/p&gt;
&lt;p&gt;blink(1) is simple and well-documented, which makes it a great option for
getting started with HID.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Tod E. Kurt&lt;br /&gt;
&lt;strong&gt;Demos:&lt;/strong&gt; &lt;a href=&quot;https://blink1.thingm.com/&quot; rel=&quot;noopener&quot;&gt;blink(1)&lt;/a&gt; (&lt;a href=&quot;https://github.com/todbot/blink1-webhid&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you to &lt;a href=&quot;https://web.dev/authors/petelepage/&quot;&gt;Pete LePage&lt;/a&gt; and &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce
Basques&lt;/a&gt; for reviews of this article.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ugur?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Ugur
Akdemir&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/game-controllers?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author><author>
      <name>Matt Reynolds</name>
    </author>
  </entry>
  
  <entry>
    <title>Disable mouse acceleration to provide a better FPS gaming experience</title>
    <link href="https://web.dev/disable-mouse-acceleration/"/>
    <updated>2020-11-26T00:00:00Z</updated>
    <id>https://web.dev/disable-mouse-acceleration/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Accelerated movement is an ergonomic feature when using a mouse or trackpad to
move the pointer on screen. It allows precise movement by moving slowly while
also allowing the pointer to cross the entire screen with a quick short motion.
Specifically, for the same physical distance that you move the mouse, the
pointer on screen travels further if the distance was traveled faster.&lt;/p&gt;
&lt;p&gt;Operating systems enable mouse acceleration by default. For some &lt;a href=&quot;https://en.wikipedia.org/wiki/First-person_(video_games)&quot; rel=&quot;noopener&quot;&gt;first-party
perspective&lt;/a&gt; games, commonly first party shooters (FPS), raw mouse input data is
used to control camera rotation without an acceleration adjustment. The same
physical motion, slow or fast, results in the same rotation. This results in a
better gaming experience and higher accuracy according to professional gamers.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the pointer motion control in Windows 10 settings.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;260&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Pointer motion control in Windows 10 settings.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Starting in Chrome 88, web apps can switch back and forth between accelerated
and non-accelerated mouse movement data thanks to the &lt;a href=&quot;https://github.com/w3c/pointerlock/pull/49&quot; rel=&quot;noopener&quot;&gt;updated Pointer Lock
API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Web-based gaming platforms such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Stadia&quot; rel=&quot;noopener&quot;&gt;Google Stadia&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/GeForce_Now&quot; rel=&quot;noopener&quot;&gt;Nvidia GeForce Now&lt;/a&gt;
already use these new capabilities to please FPS gamers.&lt;/p&gt;
&lt;h2 id=&quot;use&quot;&gt;Using the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;request&quot;&gt;Request a pointer lock &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#request&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A pointer lock is the canonical term for when a desktop application hides the
pointer icon and interprets mouse motion for something else, e.g. looking around
in a 3D world.&lt;/p&gt;
&lt;p&gt;The  &lt;code&gt;movementX&lt;/code&gt; and &lt;code&gt;movementY&lt;/code&gt; attributes from the &lt;code&gt;mousemove&lt;/code&gt; document events
tell you how much the mouse pointer moved since the last move event. However,
those are not updated when the pointer moves outside of the web page.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;mousemove&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;movementX: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movementX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; movementY: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movementY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Capturing the mouse pointer (or requesting a pointer lock) allows you to not
worry about the pointer moving outside anymore. This is especially useful for
immersive web games. When the pointer is locked, all mouse events go to the
target element of the pointer lock.&lt;/p&gt;
&lt;p&gt;Call &lt;code&gt;requestPointerLock()&lt;/code&gt; on the target element to request a pointer lock, and
listen to &lt;code&gt;pointerlockchange&lt;/code&gt; and &lt;code&gt;pointerlockerror&lt;/code&gt; events to monitor pointer
lock changes.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; myTargetElement &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Call this function to request a pointer lock.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointerlockchange&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pointerLockElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;pointer is locked on &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pointerLockElement&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer is unlocked&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointerlockerror&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer lock error&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;disable-mouse-acceleration&quot;&gt;Disable mouse acceleration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#disable-mouse-acceleration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Call &lt;code&gt;requestPointerLock()&lt;/code&gt; with  &lt;code&gt;{ unadjustedMovement: true }&lt;/code&gt; to disable
OS-level adjustment for mouse acceleration, and access raw mouse input.
This way, mouse movement data from &lt;code&gt;mousemove&lt;/code&gt; events won&#39;t include mouse
acceleration when the pointer is locked.&lt;/p&gt;
&lt;p&gt;Use the new returned promise from &lt;code&gt;requestPointerLock()&lt;/code&gt; to know if the request
was successful.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestPointerLockWithUnadjustedMovement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; promise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    unadjustedMovement&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;promise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;disabling mouse acceleration is not supported&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; promise&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer is locked&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NotSupportedError&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Some platforms may not support unadjusted movement.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// You can request again a regular pointer lock.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It is possible to toggle between accelerated and non-accelerated mouse movement
data without releasing the pointer lock. Simply request the pointer lock again
with the desired option. If that request fails, the original lock will remain
intact and the returned promise will reject. No pointer lock events will fire
for a failed change request.&lt;/p&gt;
&lt;h3 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Pointer Lock API is &lt;a href=&quot;https://caniuse.com/?search=pointerlock&quot; rel=&quot;noopener&quot;&gt;well supported across browsers&lt;/a&gt;. However Chromium-based
browsers (e.g. Chrome, Edge, etc.) are the only ones to support disabling
OS-level adjustment for mouse acceleration as of October 2020.
See MDN&#39;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser compatibility&lt;/a&gt; table for updates.&lt;/p&gt;
&lt;h3 id=&quot;os-support&quot;&gt;Operating system support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#os-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Disabling OS-level adjustment for mouse acceleration is supported on Chrome OS,
macOS Catalina 10.15.1, and Windows. Linux will follow.&lt;/p&gt;
&lt;h2 id=&quot;sample&quot;&gt;Sample  &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#sample&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can play with the Pointer Lock API by running the &lt;a href=&quot;https://unadjusted-movement.glitch.me/&quot; rel=&quot;noopener&quot;&gt;sample&lt;/a&gt; on Glitch. Be
sure to &lt;a href=&quot;https://glitch.com/edit/#!/unadjusted-movement?path=script.js&quot; rel=&quot;noopener&quot;&gt;check out the source code&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/unadjusted-movement?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;unadjusted-movement on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/slightlyoff/unadjusted_pointer_lock_explainer&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/pointerlock/pull/49&quot; rel=&quot;noopener&quot;&gt;Specification PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/pointerlock&quot; rel=&quot;noopener&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5723553087356928&quot; rel=&quot;noopener&quot;&gt;ChromeStatus entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=982379&quot; rel=&quot;noopener&quot;&gt;Chrome tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/d/msg/blink-dev/cQn7OwcMQ64/OWmA9KMKBQAJ&quot; rel=&quot;noopener&quot;&gt;Intent to ship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/448&quot; rel=&quot;noopener&quot;&gt;Mozilla&#39;s position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2020-October/031473.html&quot; rel=&quot;noopener&quot;&gt;WebKit&#39;s position&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/jameshollyergoogle&quot; rel=&quot;noopener&quot;&gt;James Hollyer&lt;/a&gt;, &lt;a href=&quot;https://github.com/tomayac&quot; rel=&quot;noopener&quot;&gt;Thomas Steiner&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/scheib&quot; rel=&quot;noopener&quot;&gt;Vincent Scheib&lt;/a&gt; for their reviews of this article.&lt;/p&gt;
</content>
    <author>
      <name>FranÃ§ois Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Ready Player Web</title>
    <link href="https://web.dev/ready-player-web/"/>
    <updated>2019-08-21T00:00:00Z</updated>
    <id>https://web.dev/ready-player-web/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Good game developers know that to capitalise on the opportunity of a particular platform it&#39;s important to embrace the unique characteristics of that platform. So what are the unique characteristics of the web? And what defines a web game?&lt;/p&gt;
&lt;p&gt;At Google I/O 2019 I presented my thoughts on the state of the web games ecosystem, the current best practices for modern web game development, and where the industry is heading. In this blog post, I&#39;ll summarise some of the key points from my talk which you can watch in full on YouTube:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;aVTYxHL45SA&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;the-challenges-of-web-games&quot;&gt;The challenges of web games &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#the-challenges-of-web-games&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before joining Google I created a mobile game known as &lt;a href=&quot;https://www.duetgame.com/&quot; rel=&quot;noopener&quot;&gt;Duet&lt;/a&gt; which was downloaded nearly 20 million times. Through that experience I learned that the three essential ingredients to building a successful business out of a game are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A functional game&lt;/li&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;A way to monetize users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Without these three elements, a game developer cannot succeed. Nowadays, these last two points are the most critical. Closed HTML5 ecosystems such as WeChat, Facebook Instant Games, and more have demonstrated that building games using HTML5 is achievable.&lt;/p&gt;
&lt;h2 id=&quot;modern-best-practices&quot;&gt;Modern best practices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#modern-best-practices&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By &amp;quot;functional game&amp;quot; I refer to the three most core elements of what makes a game work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Visuals&lt;/li&gt;
&lt;li&gt;Audio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each of these areas, the web platform has made significant strides in the past few years. For CPU performance we have access to a &lt;a href=&quot;https://www.youtube.com/watch?v=njt-Qzw0mVY&quot; rel=&quot;noopener&quot;&gt;performant new standard called WebAssembly&lt;/a&gt;. From the graphics side, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API&quot; rel=&quot;noopener&quot;&gt;WebGL 1.0&lt;/a&gt; has &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API#WebGL_1&quot; rel=&quot;noopener&quot;&gt;good cross-browser support&lt;/a&gt; and future standards such as &lt;a href=&quot;https://www.youtube.com/watch?v=K2JzIUIHIhc&quot; rel=&quot;noopener&quot;&gt;WebGPU&lt;/a&gt; are positioning the web platform for an extensible future of graphics programming similar to Vulkan and Metal. Finally, for web audio we have the &lt;a href=&quot;https://www.youtube.com/watch?v=-GaD0RCp-Q0&quot; rel=&quot;noopener&quot;&gt;common Web Audio API and more recently the Audio Worklet API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recently, Unity previewed a new runtime called Project Tiny which is focused on building 2D games for HTML5-based platforms. Project Tiny applies a new modular design to the engine structure of Unity enabling the core Unity engine to be under 1 megabyte in size.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two tanks engaged in a battle.&quot; decoding=&quot;async&quot; height=&quot;449&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Unity&#39;s Tanks Demo exported via HTML5.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;From the technical side, there has never been a better time to embrace web game development.&lt;/p&gt;
&lt;h2 id=&quot;enter-the-loop&quot;&gt;Enter the loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#enter-the-loop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A great game is obviously more than just good performance, graphics, and sound thoughâ€“to be great a game must be fun.&lt;/p&gt;
&lt;p&gt;Fun is a difficult element to measure in a product. When a game is fun, interesting, or innovative enough, users will want to tell their friendsâ€“in other words, they&#39;ll want to share the experience. Tapping into this opportunity and coupling it with the web is a powerful combination that unlocks a lot of potential for viral growth. And on the web in particular, without a central discovery platform, our best bet towards acquiring users is to ensure our games are as viral as possible.&lt;/p&gt;
&lt;p&gt;Good game developers know that to capitalise on a particular platformâ€“whether at a software or hardware levelâ€“it&#39;s important to embrace the unique characteristics of that platform. For example, if you&#39;re building a game for a console with motion controls, you should probably think about the best way to embrace those motion controls.&lt;/p&gt;
&lt;p&gt;In other words, you must respect the expectations of the users of the platform you&#39;re building for. What do users of the web expect? They expect web content to load fast and be interactive quickly. In my talk, I covered several examples of waysâ€“both on and off the webâ€“that games have been designed to load quickly, pull users into their game worlds, engage those users, and provide users with additional incentives to share their experiences.&lt;/p&gt;
&lt;img alt=&quot;Three games with minimalist art styles.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;I personally believe that the key to building a successful web game is to lean into this unique characteristic of the web. Specifically, the strength of the web&#39;s URL structure and the sharing loop that users can join in.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example of a web game I built using &lt;a href=&quot;http://construct.net/&quot; rel=&quot;noopener&quot;&gt;Construct 3&lt;/a&gt; that leverages the URL in a fun and engaging way.&lt;/p&gt;
&lt;img alt=&quot;A level editor interface for a game.&quot; decoding=&quot;async&quot; height=&quot;608&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://io-space-board.firebaseapp.com/&quot; rel=&quot;noopener&quot;&gt;Space Board&lt;/a&gt; is a very simple game that can be played on either mobile with touch controls or on desktop with keyboard input. The objective is to navigate a maze of obstacles to reach a goal at the end.&lt;/p&gt;
&lt;p&gt;How does Space Board leverage the URL in a unique fashion? By encoding the level structure into the URL itself. All levels are defined as a 10 by 10 grid of objectsâ€“e.g. walls, enemy turrets, keys, locked doors etc. The URL then lists all the individual grid positions and their contents. A wall is represented by a &lt;code&gt;W&lt;/code&gt; character. An empty space is an underscore character.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://io-space-board.firebaseapp.com/?gameWorld=_wwwwwwwwww___ww__eww_k__d___ww___ww___ww_wwwww_www_wwwww_www___ww___ww_s_ww_f_ww___ww___wwwwwwwwwwww&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It&#39;s ugly but it does the job.&lt;/p&gt;
&lt;p&gt;Upon completing a level in Space Board, the player has the opportunity to design their own level using the simple level editor shown above. By enabling players to design their own levels we are giving them the opportunity for personalisation. When a user feels a connection to a game and a sense of ownership via creation and customisation they are more likely to want to share that &#39;thing&#39; with the world.&lt;/p&gt;
&lt;p&gt;The desire to share a game is the beginning of the viral loop that we are aiming to achieve with our web games. This game design and sharing mechanism is just one example that&#39;s possible but there are many other possibilitiesâ€“I encourage you to watch my talk for further examples!&lt;/p&gt;
&lt;h2 id=&quot;return-on-investment&quot;&gt;Return on investment &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#return-on-investment&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At present, there are ultimately two schools of thought with regards to how a game developer can generate revenue through web games:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monetizing the games directly&lt;/li&gt;
&lt;li&gt;Treating them as an acquisition channel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Treating web games as an acquisition channel means leveraging the web version of your iOS/Android/desktop game as a mechanism to get your players hooked and convincing them to download your larger iOS/Android/desktop binary. You then generate revenue with the iOS/Android/desktop platform&#39;s built-in payment and billing backends.&lt;/p&gt;
&lt;p&gt;Monetization is usually a mixture of advertising and microtransactions. There is still work to be done for the web to compete with mobile platforms in game advertising. For example, formats like Rewarded Video Ads have been extremely popular for mobile games for several years and yet we&#39;re only now seeing ad networks deploy these formats on the web.&lt;/p&gt;
&lt;p&gt;Nonetheless, there are game developers who continue to be successful on the open web through advertising via traditional banner ads and interstitial video ads. Take a look at &lt;a href=&quot;https://support.google.com/adsense/answer/1705831&quot; rel=&quot;noopener&quot;&gt;Adsense for Games&lt;/a&gt; for more information on these formats.&lt;/p&gt;
&lt;p&gt;For microtransactions, the web offers complete flexibility due to the limitless number of payment methods that can be implemented. However this quality is a double-edged sword. The negative side of this is that players have less implicit trust towards a new website they discover versus the familiarity of the platform-specific mobile store payment methods.&lt;/p&gt;
&lt;p&gt;One solution that brings a more consistent payment UI to the web is the &lt;a href=&quot;https://developers.google.com/web/fundamentals/payments/&quot; rel=&quot;noopener&quot;&gt;Payment Request API&lt;/a&gt;. This API invokes a UI that is shown by the browser and streamlines the acquisition of payment details such as credit cards and billing addresses. However, acquiring payment details is just the first step of making a transaction. You need a backend billing platform as well.&lt;/p&gt;
&lt;h2 id=&quot;the-future&quot;&gt;The future &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#the-future&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We&#39;ve seen several surprisingly successful web games over the past few years. Slither.io has built a mixed web and platform-specific business that demonstrates the tremendous reach and viral growth opportunity that the web offers. Portals such as &lt;a href=&quot;https://poki.com/&quot; rel=&quot;noopener&quot;&gt;Poki.com&lt;/a&gt; are innovating in their user experience and releasing new games every day including titles that match the fidelity of their mobile counterparts, such as Subway Surfers or Crossy Road.&lt;/p&gt;
&lt;p&gt;Furthermore, if you look outside of the open web you can see that web games are already taking off. Closed ecosystems such as WeChat and LINE offer satisfying games which aren&#39;t playable on the open web but which are built on top of web technologies like HTML5 and WebViews. This is a clear sign that the web has reached a level of fidelity that&#39;s capable of rivaling platform-specific mobile gamesâ€“perhaps not in a textbook definition of fidelity but in a more important metric: player attention.&lt;/p&gt;
</content>
    <author>
      <name>Tom Greenaway</name>
    </author>
  </entry>
  
  <entry>
    <title>Introducing PROXX</title>
    <link href="https://web.dev/proxx-announce/"/>
    <updated>2019-05-09T00:00:00Z</updated>
    <id>https://web.dev/proxx-announce/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The team that brought you &lt;a href=&quot;https://squoosh.app/&quot; rel=&quot;noopener&quot;&gt;squoosh.app&lt;/a&gt; is back! This time,
we built a web-based game called PROXX (&lt;a href=&quot;https://proxx.app/&quot; rel=&quot;noopener&quot;&gt;proxx.app&lt;/a&gt;). PROXX
is a game of proximity inspired by the legendary game Minesweeper. The game is
situated in the space and your job is to find out where the black holes are. It
works on all kinds of devicesâ€”from desktop all the way to feature phones.
Users can play the game using a mouse, keyboard, d-pad even with a screen
reader.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
&lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; poster=&quot;https://storage.googleapis.com/webfundamentals-assets/proxx-announce-blogpost/poster.jpg&quot;&gt;
  &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/proxx-announce-blogpost/kaios_vp8.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
  &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/proxx-announce-blogpost/kaios_x264.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
&lt;/video&gt;
 &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    PROXX on a feature phone.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;our-baseline&quot;&gt;Our baseline &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#our-baseline&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before building this game, we set the following goals and budgets for the
application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Same core experience&lt;/strong&gt;: all devices must function the same way&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accessible&lt;/strong&gt;: mouse, keyboard, touch, d-pad, screen readers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performant&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Less than 25kb of initial payload&lt;/li&gt;
&lt;li&gt;Less than 5 seconds TTI (&lt;a href=&quot;https://web.dev/interactive&quot;&gt;time to interactive&lt;/a&gt;)
on slow 3G&lt;/li&gt;
&lt;li&gt;Consistent 60fps animation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;img alt=&quot;A pixelbook running PROXX&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;445&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ka9f7OrsFGjsulY1QoYe.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    PROXX on a pixelbook.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;web-workers&quot;&gt;Web Workers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#web-workers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The game consists of 4 main entities, the core game logic, the UI service, the
state service, and the animation graphics. Since we knew from the get-go we
would have to run heavily animated graphics on the main thread, we moved the
game logic and state service to a web worker in order to keep the main thread as
free as possible.&lt;/p&gt;
&lt;h2 id=&quot;build-time-pre-render&quot;&gt;Build time pre-render &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#build-time-pre-render&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our UI is built with &lt;a href=&quot;https://preactjs.com/&quot; rel=&quot;noopener&quot;&gt;Preact&lt;/a&gt;, as it allows us to hit our
aggressive target for an initial payload that is less than 25kb. In order to
give a good initial loading experience, we decided to pre-render our 1st view.
We prerender at build time using &lt;a href=&quot;https://pptr.dev/&quot; rel=&quot;noopener&quot;&gt;Puppeteer&lt;/a&gt; to access the
top page and let preact populate the DOM. The resulting DOM is then serialized
to HTML and saved as index.html&lt;/p&gt;
&lt;h2 id=&quot;canvas-for-animation-(invisible)-dom-for-accessibility&quot;&gt;Canvas for animation, (invisible) DOM For accessibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#canvas-for-animation-(invisible)-dom-for-accessibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We render the game graphics in a canvas using
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API&quot; rel=&quot;noopener&quot;&gt;WebGL&lt;/a&gt;. One canvas
is responsible for the background animation and another one canvas for the game
grid on top. We also have an HTML table with buttons for accessibility reasons,
that is on top of both of these canvases, but is made invisible (opacity: 0).
Even though what you see is a canvas rendering of the game state, the player is
interacting with the invisible DOM table, giving us the ability to attach event
listeners and rely on the browser&#39;s focus management.&lt;/p&gt;
&lt;p&gt;By keeping the DOM element in the canvas, we are able to tap into browsers
built-in accessibility features. For example: by setting &lt;code&gt;role=&amp;quot;grid&amp;quot;&lt;/code&gt; on our game
table, screen readers can announce the row and column of the focused cell
without us having to implement that.&lt;/p&gt;
&lt;h2 id=&quot;rollup-for-bundling-and-code-splitting&quot;&gt;Rollup for bundling and code splitting &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#rollup-for-bundling-and-code-splitting&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our total size for the app comes down to 100KB gzipped. Out of that, 20KB is for
the initial payload (index.html). We use &lt;a href=&quot;https://rollupjs.org/&quot; rel=&quot;noopener&quot;&gt;Rollup.js&lt;/a&gt; for
this project. We have shared dependencies between the main thread and our web
worker, and Rollup can put these shared dependencies in a separate chunk that
only needs to be loaded once. Other bundlers like webpack duplicate the shared
dependencies which results in double-loading.&lt;/p&gt;
&lt;h2 id=&quot;supporting-feature-phones&quot;&gt;Supporting feature phones &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#supporting-feature-phones&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Smart feature phones such as &lt;a href=&quot;https://www.kaiostech.com/&quot; rel=&quot;noopener&quot;&gt;KaiOS&lt;/a&gt; phones are
rapidly gaining popularity. These are very resource constrained devices, but our
approach of using web workers whenever we can allowed us to make the experience
highly responsive on these phones as well. Since feature phones come with
different input interface (d-pad and number keys, no touchscreen), we also
implemented key-based interface.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;img alt=&quot;A man playing PROXX on a yellow feature phone&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;512&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zk0lWvjbZ0V2Shz53d42.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    PROXX on a feature phone.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;what&#39;s-next&quot;&gt;What&#39;s next &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/proxx-announce/#what&#39;s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We had great but busy time building this game in time for Google I/O 2019, so we
will take some well-deserved time off to rest, but plan to come back with more
in-depth documentation on each of these areas of the game.&lt;/p&gt;
&lt;p&gt;Until then, please check the talk Mariko gave at I/O on this project.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;w8P5HLxcIO4&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;You can browse the code at &lt;a href=&quot;https://github.com/GoogleChromeLabs/proxx&quot; rel=&quot;noopener&quot;&gt;the proxx github repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cheers! Surma, Jake, Mariko&lt;/p&gt;
</content>
    <author>
      <name>Mariko Kosaka</name>
    </author>
  </entry>
</feed>
