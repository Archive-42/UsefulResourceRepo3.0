<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Devices on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/devices/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Devices on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about connecting hardware devices to the web.</subtitle>
  
  
  <entry>
    <title>Communicating with Bluetooth devices over JavaScript</title>
    <link href="https://web.dev/bluetooth/"/>
    <updated>2015-07-21T00:00:00Z</updated>
    <id>https://web.dev/bluetooth/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;What if I told you websites could communicate with nearby Bluetooth devices
in a secure and privacy-preserving way? This way, heart rate monitors, singing
lightbulbs, and even &lt;a href=&quot;https://www.youtube.com/watch?v=1LV1Fk5ZXwA&quot; rel=&quot;noopener&quot;&gt;turtles&lt;/a&gt; could interact directly with a website.&lt;/p&gt;
&lt;p&gt;Until now, the ability to interact with Bluetooth devices has been possible
only for platform-specific apps. The Web Bluetooth API aims to change this and
brings it to web browsers as well.&lt;/p&gt;
&lt;h2 id=&quot;before-we-start&quot;&gt;Before we start &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#before-we-start&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article assumes you have some basic knowledge of how Bluetooth Low
Energy (BLE) and the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Generic Attribute Profile&lt;/a&gt; (GATT) work.&lt;/p&gt;
&lt;p&gt;Even though the &lt;a href=&quot;https://webbluetoothcg.github.io/web-bluetooth/&quot; rel=&quot;noopener&quot;&gt;Web Bluetooth API specification&lt;/a&gt; is not finalized yet, the spec
authors are actively looking for enthusiastic developers to try out this API and
give &lt;a href=&quot;https://github.com/WebBluetoothCG/web-bluetooth/issues&quot; rel=&quot;noopener&quot;&gt;feedback on the spec&lt;/a&gt; and &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3EBluetooth&quot; rel=&quot;noopener&quot;&gt;feedback on the implementation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A subset of the Web Bluetooth API is available in Chrome OS, Chrome for Android
6.0, Mac (Chrome 56) and Windows 10 (Chrome 70). This means you should be able
to &lt;a href=&quot;https://web.dev/bluetooth/#request&quot;&gt;request&lt;/a&gt; and &lt;a href=&quot;https://web.dev/bluetooth/#connect&quot;&gt;connect to&lt;/a&gt; nearby Bluetooth Low Energy devices,
&lt;a href=&quot;https://web.dev/bluetooth/#read&quot;&gt;read&lt;/a&gt;/&lt;a href=&quot;https://web.dev/bluetooth/#write&quot;&gt;write&lt;/a&gt; Bluetooth characteristics, &lt;a href=&quot;https://web.dev/bluetooth/#notifications&quot;&gt;receive GATT Notifications&lt;/a&gt;, know
when a &lt;a href=&quot;https://web.dev/bluetooth/#disconnect&quot;&gt;Bluetooth device gets disconnected&lt;/a&gt;, and even &lt;a href=&quot;https://web.dev/bluetooth/#descriptors&quot;&gt;read and write to
Bluetooth descriptors&lt;/a&gt;. See MDN&#39;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser compatibility&lt;/a&gt; table for more
information.&lt;/p&gt;
&lt;p&gt;For Linux and earlier versions of Windows, enable the
&lt;code&gt;#experimental-web-platform-features&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;available-for-origin-trials&quot;&gt;Available for origin trials &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#available-for-origin-trials&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In order to get as much feedback as possible from developers using the Web
Bluetooth API in the field, Chrome has previously added this feature in Chrome
53 as an &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;origin trial&lt;/a&gt; for Chrome OS, Android, and Mac.&lt;/p&gt;
&lt;p&gt;The trial has successfully ended in January 2017.&lt;/p&gt;
&lt;h2 id=&quot;security-requirements&quot;&gt;Security requirements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#security-requirements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To understand the security tradeoffs, I recommend the &lt;a href=&quot;https://medium.com/@jyasskin/the-web-bluetooth-security-model-666b4e7eed2&quot; rel=&quot;noopener&quot;&gt;Web Bluetooth Security
Model&lt;/a&gt; post from Jeffrey Yasskin, a software engineer on the Chrome team,
working on the Web Bluetooth API specification.&lt;/p&gt;
&lt;h3 id=&quot;https-only&quot;&gt;HTTPS only &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#https-only&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Because this experimental API is a powerful new feature added to the web, it is
made available only to &lt;a href=&quot;https://w3c.github.io/webappsec-secure-contexts/#intro&quot; rel=&quot;noopener&quot;&gt;secure contexts&lt;/a&gt;. This means you&#39;ll need to build with
&lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot; rel=&quot;noopener&quot;&gt;TLS&lt;/a&gt; in mind.&lt;/p&gt;
&lt;h3 id=&quot;user-gesture-required&quot;&gt;User gesture required &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#user-gesture-required&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a security feature, discovering Bluetooth devices with
&lt;code&gt;navigator.bluetooth.requestDevice&lt;/code&gt; must be triggered by &lt;a href=&quot;https://html.spec.whatwg.org/multipage/interaction.html#activation&quot; rel=&quot;noopener&quot;&gt;a user gesture&lt;/a&gt; such
as a touch or a mouse click. We&#39;re talking about listening to
&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/pointer-events&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;pointerup&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;click&lt;/code&gt;, and &lt;code&gt;touchend&lt;/code&gt; events.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;button&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pointerup&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Call navigator.bluetooth.requestDevice&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;get-into-the-code&quot;&gt;Get into the code &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#get-into-the-code&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Web Bluetooth API relies heavily on JavaScript &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot; rel=&quot;noopener&quot;&gt;Promises&lt;/a&gt;. If you&#39;re not
familiar with them, check out this great &lt;a href=&quot;https://web.dev/promises&quot;&gt;Promises tutorial&lt;/a&gt;. One more thing,
&lt;code&gt;() =&amp;gt; {}&lt;/code&gt; are simply ECMAScript 2015 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noopener&quot;&gt;Arrow functions&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;request&quot;&gt;Request Bluetooth devices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#request&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This version of the Web Bluetooth API specification allows websites, running in
the Central role, to connect to remote GATT Servers over a BLE connection. It
supports communication among devices that implement Bluetooth 4.0 or later.&lt;/p&gt;
&lt;p&gt;When a website requests access to nearby devices using
&lt;code&gt;navigator.bluetooth.requestDevice&lt;/code&gt;, the browser prompts user with a device
chooser where they can pick one device or simply cancel the request.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/bluetooth/bluetooth-device-chooser.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    &lt;a href=&quot;https://webbluetoothcg.github.io/demos/playbulb-candle/&quot;&gt;Bluetooth device user prompt.&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;navigator.bluetooth.requestDevice()&lt;/code&gt; function takes a mandatory object that
defines filters. These filters are used to return only devices that match some
advertised Bluetooth GATT services and/or the device name.&lt;/p&gt;
&lt;h4 id=&quot;services-filter&quot;&gt;Services filter &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#services-filter&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For instance, to request Bluetooth devices advertising the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Bluetooth GATT
Battery Service&lt;/a&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If your Bluetooth GATT Service is not on the list of &lt;a href=&quot;https://www.bluetooth.com/specifications/assigned-numbers/&quot; rel=&quot;noopener&quot;&gt;the standardized Bluetooth
GATT services&lt;/a&gt; though, you may provide either the full Bluetooth UUID or a short
16- or 32-bit form.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0x1234&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x12345678&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;99999999-0000-1000-8000-00805f9b34fb&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;name-filter&quot;&gt;Name filter &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#name-filter&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You can also request Bluetooth devices based on the device name being advertised
with the &lt;code&gt;name&lt;/code&gt; filters key, or even a prefix of this name with the &lt;code&gt;namePrefix&lt;/code&gt;
filters key. Note that in this case, you will also need to define the
&lt;code&gt;optionalServices&lt;/code&gt; key to be able to access any services not included in a
service filter. If you don&#39;t, you&#39;ll get an error later when trying to access
them.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Francois robot&#39;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  optionalServices&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Required to access service later.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;manufacturer-data-filter&quot;&gt;Manufacturer data filter &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#manufacturer-data-filter&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;It is also possible to request Bluetooth devices based on the manufacturer
specific data being advertised with the &lt;code&gt;manufacturerData&lt;/code&gt; filters key. This key
is an array of objects with a mandatory &lt;a href=&quot;https://www.bluetooth.com/specifications/assigned-numbers/company-identifiers/&quot; rel=&quot;noopener&quot;&gt;Bluetooth company identifier&lt;/a&gt; key named
&lt;code&gt;companyIdentifier&lt;/code&gt;. You can also provide a data prefix that filters
manufacturer data from Bluetooth devices that start with it. Note that you will
also need to define the &lt;code&gt;optionalServices&lt;/code&gt; key to be able to access any services
not included in a service filter. If you don&#39;t, you&#39;ll get an error later when
trying to access them.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Filter Bluetooth devices from Google company with manufacturer data bytes&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// that start with [0x01, 0x02].&lt;/span&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    manufacturerData&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      companyIdentifier&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x00e0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      dataPrefix&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  optionalServices&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Required to access service later.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;A mask can also be used with a data prefix to match some patterns in
manufacturer data. Check out the &lt;a href=&quot;https://github.com/WebBluetoothCG/web-bluetooth/blob/main/data-filters-explainer.md&quot; rel=&quot;noopener&quot;&gt;Bluetooth data filters explainer&lt;/a&gt; to learn
more.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;At the time of writing, the &lt;code&gt;manufacturerData&lt;/code&gt; filter key is available in
Chrome 92. If backwards compatibility with older browsers is desired, you
have to provide a fallback option as the manufacturer data filter is considered
empty. See an &lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/5Id2LANtFko/m/5SIig7ktAgAJ&quot; rel=&quot;noopener&quot;&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;no-filters&quot;&gt;No filters &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#no-filters&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Finally, instead of &lt;code&gt;filters&lt;/code&gt; you can use the &lt;code&gt;acceptAllDevices&lt;/code&gt; key to show all
nearby Bluetooth devices. You will also need to define the &lt;code&gt;optionalServices&lt;/code&gt;
key to be able to access some services. If you don&#39;t, you&#39;ll get an error later
when trying to access them.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  acceptAllDevices&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  optionalServices&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Required to access service later.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
This may result in a bunch of unrelated devices being shown in the chooser and
energy being wasted as there are no filters. Use it with caution.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;connect&quot;&gt;Connect to a Bluetooth device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#connect&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So what do you do now that you have a &lt;code&gt;BluetoothDevice&lt;/code&gt;? Let&#39;s connect to the
Bluetooth remote GATT Server which holds the service and characteristic
definitions.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Human-readable name of the device.&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Attempts to connect to remote GATT Server.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read&quot;&gt;Read a Bluetooth Characteristic &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#read&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we are connected to the GATT Server of the remote Bluetooth device. Now we
want to get a Primary GATT Service and read a characteristic that belongs to
this service. Let&#39;s try, for instance, to read the current charge level of the
device&#39;s battery.&lt;/p&gt;
&lt;p&gt;In the example below, &lt;code&gt;battery_level&lt;/code&gt; is the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;standardized Battery Level
Characteristic&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Getting Battery Service…&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrimaryService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_service&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Getting Battery Level Characteristic…&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;battery_level&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reading Battery Level…&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Battery percentage is &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUint8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If you use a custom Bluetooth GATT characteristic, you may provide either the
full Bluetooth UUID or a short 16- or 32-bit form to
&lt;code&gt;service.getCharacteristic&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that you can also add a &lt;code&gt;characteristicvaluechanged&lt;/code&gt; event listener on a
characteristic to handle reading its value. Check out the &lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/read-characteristic-value-changed.html&quot; rel=&quot;noopener&quot;&gt;Read Characteristic
Value Changed Sample&lt;/a&gt; to see how to optionally handle upcoming GATT
notifications as well.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;…&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Set up event listener for when characteristic value changes.&lt;/span&gt;&lt;br /&gt;  characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;characteristicvaluechanged&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;                                  handleBatteryLevelChanged&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Reading Battery Level…&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleBatteryLevelChanged&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; batteryLevel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUint8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Battery percentage is &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; batteryLevel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;write&quot;&gt;Write to a Bluetooth Characteristic &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#write&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Writing to a Bluetooth GATT Characteristic is as easy as reading it. This time,
let&#39;s use the Heart Rate Control Point to reset the value of the Energy Expended
field to 0 on a heart rate monitor device.&lt;/p&gt;
&lt;p&gt;I promise there is no magic here. It&#39;s all explained in the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Heart Rate Control
Point Characteristic page&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrimaryService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate_control_point&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Writing 1 is the signal to reset energy expended.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; resetEnergyExpended &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Uint8Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resetEnergyExpended&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Energy expended has been reset.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;notifications&quot;&gt;Receive GATT notifications &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#notifications&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now, let&#39;s see how to be notified when the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Heart Rate Measurement&lt;/a&gt;
characteristic changes on the device:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrimaryService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;heart_rate_measurement&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;startNotifications&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;characteristicvaluechanged&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;                                  handleCharacteristicValueChanged&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Notifications have been started.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleCharacteristicValueChanged&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Received &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// TODO: Parse Heart Rate Measurement value.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// See https://github.com/WebBluetoothCG/demos/blob/gh-pages/heart-rate-sensor/heartRateSensor.js&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/notifications.html&quot; rel=&quot;noopener&quot;&gt;Notifications Sample&lt;/a&gt; shows you to how to stop notifications with
&lt;code&gt;stopNotifications()&lt;/code&gt; and properly remove the added &lt;code&gt;characteristicvaluechanged&lt;/code&gt;
event listener.&lt;/p&gt;
&lt;h3 id=&quot;disconnect&quot;&gt;Disconnect from a Bluetooth Device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#disconnect&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To provide a better user experience, you may want to listen for disconnection events
and invite the user to reconnect:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Francois robot&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Set up event listener for when device gets disconnected.&lt;/span&gt;&lt;br /&gt;  device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;gattserverdisconnected&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onDisconnected&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Attempts to connect to remote GATT Server.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onDisconnected&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; device &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Device &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; is disconnected.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also call &lt;code&gt;device.gatt.disconnect()&lt;/code&gt; to disconnect your web app from the
Bluetooth device. This will trigger existing &lt;code&gt;gattserverdisconnected&lt;/code&gt; event
listeners. Note that it will NOT stop bluetooth device communication if another
app is already communicating with the Bluetooth device. Check out the &lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/device-disconnect.html&quot; rel=&quot;noopener&quot;&gt;Device
Disconnect Sample&lt;/a&gt; and the &lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/automatic-reconnect.html&quot; rel=&quot;noopener&quot;&gt;Automatic Reconnect Sample&lt;/a&gt; to dive deeper.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Bluetooth GATT attributes, services, characteristics, etc. are invalidated when
a device disconnects. This means your code should always retrieve (through
&lt;code&gt;getPrimaryService(s)&lt;/code&gt;, &lt;code&gt;getCharacteristic(s)&lt;/code&gt;, etc.) these attributes after
reconnecting.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;descriptors&quot;&gt;Read and write to Bluetooth descriptors &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#descriptors&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bluetooth GATT descriptors are attributes that describe a characteristic value.
You can read and write them to in a similar way to Bluetooth GATT
characteristics.&lt;/p&gt;
&lt;p&gt;Let&#39;s see for instance how to read the user description of the measurement
interval of the device&#39;s health thermometer.&lt;/p&gt;
&lt;p&gt;In the example below, &lt;code&gt;health_thermometer&lt;/code&gt; is the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Health Thermometer service&lt;/a&gt;,
&lt;code&gt;measurement_interval&lt;/code&gt; the &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;Measurement Interval characteristic&lt;/a&gt;, and
&lt;code&gt;gatt.characteristic_user_description&lt;/code&gt; the &lt;a href=&quot;https://www.bluetooth.com/specifications/assigned-numbers/&quot; rel=&quot;noopener&quot;&gt;Characteristic User Description
descriptor&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;health_thermometer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrimaryService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;health_thermometer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;measurement_interval&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDescriptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;gatt.characteristic_user_description&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;descriptor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; descriptor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;User Description: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now that we&#39;ve read the user description of the measurement interval of the
device&#39;s health thermometer, let&#39;s see how to update it and write a custom
value.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bluetooth&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; services&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;health_thermometer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gatt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrimaryService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;health_thermometer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;measurement_interval&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;characteristic&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; characteristic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDescriptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;gatt.characteristic_user_description&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;descriptor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; encoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; userDescription &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; encoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Defines the time between measurements.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; descriptor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userDescription&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;samples-demos-and-codelabs&quot;&gt;Samples, demos and codelabs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#samples-demos-and-codelabs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All &lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/index.html&quot; rel=&quot;noopener&quot;&gt;Web Bluetooth samples&lt;/a&gt; below have been successfully tested. To enjoy these
samples to their fullest, I recommend you install the &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.github.webbluetoothcg.bletestperipheral&quot; rel=&quot;noopener&quot;&gt;BLE Peripheral Simulator
Android App&lt;/a&gt; which simulates a BLE peripheral with a Battery Service, a Heart Rate
Service, or a Health Thermometer Service.&lt;/p&gt;
&lt;h3 id=&quot;beginner&quot;&gt;Beginner &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#beginner&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/device-info.html&quot; rel=&quot;noopener&quot;&gt;Device Info&lt;/a&gt; - retrieve basic device information from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/battery-level.html&quot; rel=&quot;noopener&quot;&gt;Battery Level&lt;/a&gt; - retrieve battery information from a BLE Device advertising Battery information.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/reset-energy.html&quot; rel=&quot;noopener&quot;&gt;Reset Energy&lt;/a&gt; - reset energy expended from a BLE Device advertising Heart Rate.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/characteristic-properties.html&quot; rel=&quot;noopener&quot;&gt;Characteristic Properties&lt;/a&gt; - display all properties of a specific characteristic from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/notifications.html&quot; rel=&quot;noopener&quot;&gt;Notifications&lt;/a&gt; - start and stop characteristic notifications from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/device-disconnect.html&quot; rel=&quot;noopener&quot;&gt;Device Disconnect&lt;/a&gt; - disconnect and get notified from a disconnection of a BLE Device after connecting to it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/get-characteristics.html&quot; rel=&quot;noopener&quot;&gt;Get Characteristics&lt;/a&gt; - get all characteristics of an advertised service from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/get-descriptors.html&quot; rel=&quot;noopener&quot;&gt;Get Descriptors&lt;/a&gt; - get all characteristics&#39; descriptors of an advertised service from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/manufacturer-data-filter.html&quot; rel=&quot;noopener&quot;&gt;Manufacturer Data Filter&lt;/a&gt; - retrieve basic device information from a BLE Device that matches manufacturer data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;combining-multiple-operations&quot;&gt;Combining multiple operations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#combining-multiple-operations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/gap-characteristics.html&quot; rel=&quot;noopener&quot;&gt;GAP Characteristics&lt;/a&gt; - get all GAP characteristics of a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/device-information-characteristics.html&quot; rel=&quot;noopener&quot;&gt;Device Information Characteristics&lt;/a&gt; - get all Device Information characteristics of a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/link-loss.html&quot; rel=&quot;noopener&quot;&gt;Link Loss&lt;/a&gt; - set the Alert Level characteristic of a BLE Device (readValue &amp;amp; writeValue).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/discover-services-and-characteristics.html&quot; rel=&quot;noopener&quot;&gt;Discover Services &amp;amp; Characteristics&lt;/a&gt; - discover all accessible primary services and their characteristics from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/automatic-reconnect.html&quot; rel=&quot;noopener&quot;&gt;Automatic Reconnect&lt;/a&gt; - reconnect to a disconnected BLE device using an exponential backoff algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/read-characteristic-value-changed.html&quot; rel=&quot;noopener&quot;&gt;Read Characteristic Value Changed&lt;/a&gt; - read battery level and be notified of changes from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/read-descriptors.html&quot; rel=&quot;noopener&quot;&gt;Read Descriptors&lt;/a&gt; - read all characteristic&#39;s descriptors of a service from a BLE Device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/web-bluetooth/write-descriptor.html&quot; rel=&quot;noopener&quot;&gt;Write Descriptor&lt;/a&gt; - write to the descriptor &amp;quot;Characteristic User Description&amp;quot; on a BLE Device.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/WebBluetoothCG/demos&quot; rel=&quot;noopener&quot;&gt;curated Web Bluetooth Demos&lt;/a&gt; and &lt;a href=&quot;https://github.com/search?q=org%3Agooglecodelabs+bluetooth&quot; rel=&quot;noopener&quot;&gt;official Web Bluetooth Codelabs&lt;/a&gt; as well.&lt;/p&gt;
&lt;h2 id=&quot;libraries&quot;&gt;Libraries &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#libraries&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/web-bluetooth-utils&quot; rel=&quot;noopener&quot;&gt;web-bluetooth-utils&lt;/a&gt; is a npm module that adds some convenience functions to
the API.&lt;/li&gt;
&lt;li&gt;A Web Bluetooth API shim is available in &lt;a href=&quot;https://github.com/sandeepmistry/noble&quot; rel=&quot;noopener&quot;&gt;noble&lt;/a&gt;, the most popular Node.js BLE
central module. This allows you to webpack/browserify noble without the need
for a WebSocket server or other plugins.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/manekinekko/angular-web-bluetooth&quot; rel=&quot;noopener&quot;&gt;angular-web-bluetooth&lt;/a&gt; is a module for &lt;a href=&quot;https://angularjs.org/&quot; rel=&quot;noopener&quot;&gt;Angular&lt;/a&gt; that abstracts away all the
boilerplate needed to configure the Web Bluetooth API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#tools&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://beaufortfrancois.github.io/sandbox/web-bluetooth/generator&quot; rel=&quot;noopener&quot;&gt;Get Started with Web Bluetooth&lt;/a&gt; is a simple Web App that will generate all
the JavaScript boilerplate code to start interacting with a Bluetooth device.
Enter a device name, a service, a characteristic, define its properties and
you&#39;re good to go.&lt;/li&gt;
&lt;li&gt;If you&#39;re already a Bluetooth developer, the &lt;a href=&quot;https://github.com/beaufortfrancois/sandbox/tree/gh-pages/web-bluetooth/bluetooth-developer-studio-plugin&quot; rel=&quot;noopener&quot;&gt;Web Bluetooth Developer Studio
Plugin&lt;/a&gt; will also generate the Web Bluetooth JavaScript code for your
Bluetooth device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;tips&quot;&gt;Tips &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#tips&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;Bluetooth Internals&lt;/strong&gt; page is available in Chrome at
&lt;code&gt;about://bluetooth-internals&lt;/code&gt; so that you can inspect everything about nearby
Bluetooth devices: status, services, characteristics, and descriptors.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the internal page to debug Bluetooth in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;572&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/nPX2OfcQKwKtU9xBNhMe.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Internal page in Chrome for debugging Bluetooth devices.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;I also recommend checking out the official &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/developers/how-tos/file-web-bluetooth-bugs&quot; rel=&quot;noopener&quot;&gt;How to file Web Bluetooth bugs&lt;/a&gt;
page as debugging Bluetooth can be hard sometimes.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-next&quot;&gt;What&#39;s next &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#what&#39;s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md&quot; rel=&quot;noopener&quot;&gt;browser and platform implementation status&lt;/a&gt; first to know which parts
of the Web Bluetooth API are currently being implemented.&lt;/p&gt;
&lt;p&gt;Though it&#39;s still incomplete, here&#39;s a sneak peek of what to expect in the near
future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebBluetoothCG/web-bluetooth/pull/239&quot; rel=&quot;noopener&quot;&gt;Scanning for nearby BLE advertisements&lt;/a&gt;
will happen with &lt;code&gt;navigator.bluetooth.requestLEScan()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A new &lt;code&gt;serviceadded&lt;/code&gt; event will track newly discovered Bluetooth GATT Services
while &lt;code&gt;serviceremoved&lt;/code&gt; event will track removed ones. A new &lt;code&gt;servicechanged&lt;/code&gt;
event will fire when any characteristic and/or descriptor gets added or
removed from a Bluetooth GATT Service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Web Bluetooth API? Your public support helps the Chrome team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebBluetooth&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebBluetooth&lt;/code&gt;&lt;/a&gt;
and let us know where and how you are using it.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stack Overflow: &lt;a href=&quot;https://stackoverflow.com/questions/tagged/web-bluetooth&quot; rel=&quot;noopener&quot;&gt;https://stackoverflow.com/questions/tagged/web-bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome Feature Status: &lt;a href=&quot;https://www.chromestatus.com/feature/5264933985976320&quot; rel=&quot;noopener&quot;&gt;https://www.chromestatus.com/feature/5264933985976320&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome Implementation Bugs: &lt;a href=&quot;https://crbug.com/?q=component:Blink%3EBluetooth&quot; rel=&quot;noopener&quot;&gt;https://crbug.com/?q=component:Blink&amp;gt;Bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web Bluetooth Spec: &lt;a href=&quot;https://webbluetoothcg.github.io/web-bluetooth&quot; rel=&quot;noopener&quot;&gt;https://webbluetoothcg.github.io/web-bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spec Issues: &lt;a href=&quot;https://github.com/WebBluetoothCG/web-bluetooth/issues&quot; rel=&quot;noopener&quot;&gt;https://github.com/WebBluetoothCG/web-bluetooth/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BLE Peripheral Simulator App: &lt;a href=&quot;https://github.com/WebBluetoothCG/ble-test-peripheral-android&quot; rel=&quot;noopener&quot;&gt;https://github.com/WebBluetoothCG/ble-test-peripheral-android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;_BUwOBdLjzQ&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/bluetooth/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt; for reviewing this article.
Hero image by &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Bluetooth_4.0_Module_-_BR-LE_4.0-S2A_(16804031059).jpg&quot; rel=&quot;noopener&quot;&gt;SparkFun Electronics from Boulder, USA&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Read from and write to a serial port</title>
    <link href="https://web.dev/serial/"/>
    <updated>2020-08-12T00:00:00Z</updated>
    <id>https://web.dev/serial/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
The Web Serial API, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;, launched
in Chrome 89.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the Web Serial API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A serial port is a bidirectional communication interface that allows sending and
receiving data byte by byte.&lt;/p&gt;
&lt;p&gt;The Web Serial API provides a way for websites to read from and write to a
serial device with JavaScript. Serial devices are connected either through a
serial port on the user&#39;s system or through removable USB and Bluetooth devices
that emulate a serial port.&lt;/p&gt;
&lt;p&gt;In other words, the Web Serial API bridges the web and the physical world by
allowing websites to communicate with serial devices, such as microcontrollers
and 3D printers.&lt;/p&gt;
&lt;p&gt;This API is also a great companion to &lt;a href=&quot;https://developers.google.com/web/updates/2016/03/access-usb-devices-on-the-web&quot; rel=&quot;noopener&quot;&gt;WebUSB&lt;/a&gt; as operating systems require
applications to communicate with some serial ports using their higher-level
serial API rather than the low-level USB API.&lt;/p&gt;
&lt;h2 id=&quot;use-cases&quot;&gt;Suggested use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the educational, hobbyist, and industrial sectors, users connect peripheral
devices to their computers. These devices are often controlled by
microcontrollers via a serial connection used by custom software. Some custom
software to control these devices is built with web technology:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://create.arduino.cc/&quot; rel=&quot;noopener&quot;&gt;Arduino Create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/betaflight/betaflight-configurator&quot; rel=&quot;noopener&quot;&gt;Betaflight Configurator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://espruino.com/ide&quot; rel=&quot;noopener&quot;&gt;Espruino Web IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/makecode&quot; rel=&quot;noopener&quot;&gt;Microsoft MakeCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In some cases, websites communicate with the device through an agent
application that users installed manually. In others, the application is
delivered in a packaged application through a framework such as Electron.
And in others, the user is required to perform an additional step such as
copying a compiled application to the device via a USB flash drive.&lt;/p&gt;
&lt;p&gt;In all these cases, the user experience will be improved by providing direct
communication between the website and the device that it is controlling.&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/reillyeon/serial/blob/gh-pages/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://reillyeon.github.io/serial/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/serial/#feedback&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developers.chrome.com/origintrials/#/view_trial/2992641952387694593&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5. Launch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Complete&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;Using the Web Serial API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To check if the Web Serial API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;serial&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The Web Serial API is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;open-port&quot;&gt;Open a serial port &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#open-port&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Web Serial API is asynchronous by design. This prevents the website UI from
blocking when awaiting input, which is important because serial data can be
received at any time, requiring a way to listen to it.&lt;/p&gt;
&lt;p&gt;To open a serial port, first access a &lt;code&gt;SerialPort&lt;/code&gt; object. For this, you can
either prompt the user to select a single serial port by calling
&lt;code&gt;navigator.serial.requestPort()&lt;/code&gt;, or pick one from &lt;code&gt;navigator.serial.getPorts()&lt;/code&gt;
which returns a list of serial ports the website has been granted access to
previously.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Prompt user to select any serial port.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Get all serial ports the user has previously granted the website access to.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPorts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;navigator.serial.requestPort()&lt;/code&gt; function takes an optional object literal
that defines filters. Those are used to match any serial device connected over
USB with a mandatory USB vendor (&lt;code&gt;usbVendorId&lt;/code&gt;) and optional USB product
identifiers (&lt;code&gt;usbProductId&lt;/code&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Filter on devices with the Arduino Uno USB Vendor/Product IDs.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; filters &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; usbVendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2341&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; usbProductId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x0043&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; usbVendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2341&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; usbProductId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x0001&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Prompt user to select an Arduino Uno device.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; usbProductId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; usbVendorId &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a serial port prompt on a website&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;513&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/BT9OxLREXfb0vcnHlYu8.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;User prompt for selecting a BBC micro:bit&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Calling &lt;code&gt;requestPort()&lt;/code&gt; prompts the user to select a device and returns a
&lt;code&gt;SerialPort&lt;/code&gt; object. Once you have a &lt;code&gt;SerialPort&lt;/code&gt; object, calling &lt;code&gt;port.open()&lt;/code&gt;
with the desired baud rate will open the serial port. The &lt;code&gt;baudRate&lt;/code&gt; dictionary
member specifies how fast data is sent over a serial line. It is expressed in
units of bits-per-second (bps). Check your device&#39;s documentation for the
correct value as all the data you send and receive will be gibberish if this is
specified incorrectly. For some USB and Bluetooth devices that emulate a serial
port this value may be safely set to any value as it is ignored by the
emulation.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Prompt user to select any serial port.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Wait for the serial port to open.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; baudRate&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9600&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also specify any of the options below when opening a serial port. These
options are optional and have convenient &lt;a href=&quot;https://reillyeon.github.io/serial/#dom-serialoptions&quot; rel=&quot;noopener&quot;&gt;default values&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dataBits&lt;/code&gt;: The number of data bits per frame (either 7 or 8).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stopBits&lt;/code&gt;: The number of stop bits at the end of a frame (either 1 or 2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parity&lt;/code&gt;: The parity mode (either &lt;code&gt;&amp;quot;none&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;even&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;odd&amp;quot;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bufferSize&lt;/code&gt;: The size of the read and write buffers that should be created
(must be less than 16MB).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flowControl&lt;/code&gt;: The flow control mode (either &lt;code&gt;&amp;quot;none&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;hardware&amp;quot;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;read-port&quot;&gt;Read from a serial port &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#read-port&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Input and output streams in the Web Serial API are handled by the Streams API.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If streams are new to you, check out &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Concepts&quot; rel=&quot;noopener&quot;&gt;Streams API
concepts&lt;/a&gt;.
This article barely scratches the surface of streams and stream handling.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After the serial port connection is established, the &lt;code&gt;readable&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt;
properties from the &lt;code&gt;SerialPort&lt;/code&gt; object return a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot; rel=&quot;noopener&quot;&gt;ReadableStream&lt;/a&gt; and a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WritableStream&quot; rel=&quot;noopener&quot;&gt;WritableStream&lt;/a&gt;. Those will be used to receive data from and send data to the
serial device. Both use &lt;code&gt;Uint8Array&lt;/code&gt; instances for data transfer.&lt;/p&gt;
&lt;p&gt;When new data arrives from the serial device, &lt;code&gt;port.readable.getReader().read()&lt;/code&gt;
returns two properties asynchronously: the &lt;code&gt;value&lt;/code&gt; and a &lt;code&gt;done&lt;/code&gt; boolean. If
&lt;code&gt;done&lt;/code&gt; is true, the serial port has been closed or there is no more data coming
in. Calling &lt;code&gt;port.readable.getReader()&lt;/code&gt; creates a reader and locks &lt;code&gt;readable&lt;/code&gt; to
it. While &lt;code&gt;readable&lt;/code&gt; is &lt;a href=&quot;https://streams.spec.whatwg.org/#lock&quot; rel=&quot;noopener&quot;&gt;locked&lt;/a&gt;, the serial port can&#39;t be closed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Listen to data coming from the serial device.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; done &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Allow the serial port to be closed later.&lt;/span&gt;&lt;br /&gt;    reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// value is a Uint8Array.&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Some non-fatal serial port read errors can happen under some conditions such as
buffer overflow, framing errors, or parity errors. Those are thrown as
exceptions and can be caught by adding another loop on top of the previous one
that checks &lt;code&gt;port.readable&lt;/code&gt;. This works because as long as the errors are
non-fatal, a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot; rel=&quot;noopener&quot;&gt;ReadableStream&lt;/a&gt; is created automatically. If a fatal error
occurs, such as the serial device being removed, then &lt;code&gt;port.readable&lt;/code&gt; becomes
null.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; done &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token comment&quot;&gt;// Allow the serial port to be closed later.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle non-fatal read error.&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If the serial device sends text back, you can pipe &lt;code&gt;port.readable&lt;/code&gt; through a
&lt;code&gt;TextDecoderStream&lt;/code&gt; as shown below. A &lt;code&gt;TextDecoderStream&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TransformStream&quot; rel=&quot;noopener&quot;&gt;transform stream&lt;/a&gt;
that grabs all &lt;code&gt;Uint8Array&lt;/code&gt; chunks and converts them to strings.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoderStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; readableStreamClosed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Listen to data coming from the serial device.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; done &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Allow the serial port to be closed later.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// value is a string.&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;write-port&quot;&gt;Write to a serial port &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#write-port&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To send data to a serial device, pass data to
&lt;code&gt;port.writable.getWriter().write()&lt;/code&gt;. Calling &lt;code&gt;releaseLock()&lt;/code&gt; on
&lt;code&gt;port.writable.getWriter()&lt;/code&gt; is required for the serial port to be closed later.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;104&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// hello&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Allow the serial port to be closed later.&lt;/span&gt;&lt;br /&gt;writer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Send text to the device through a &lt;code&gt;TextEncoderStream&lt;/code&gt; piped to &lt;code&gt;port.writable&lt;/code&gt;
as shown below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textEncoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoderStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writableStreamClosed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textEncoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textEncoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;close-port&quot;&gt;Close a serial port &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#close-port&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;port.close()&lt;/code&gt; closes the serial port if its &lt;code&gt;readable&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt; members
are &lt;a href=&quot;https://streams.spec.whatwg.org/#lock&quot; rel=&quot;noopener&quot;&gt;unlocked&lt;/a&gt;, meaning &lt;code&gt;releaseLock()&lt;/code&gt; has been called for their respective
reader and writer.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;However, when continuously reading data from a serial device using a loop,
&lt;code&gt;port.readable&lt;/code&gt; will always be locked until it encounters an error. In this
case, calling &lt;code&gt;reader.cancel()&lt;/code&gt; will force &lt;code&gt;reader.read()&lt;/code&gt; to resolve
immediately with &lt;code&gt;{ value: undefined, done: true }&lt;/code&gt; and therefore allowing the
loop to call &lt;code&gt;reader.releaseLock()&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Without transform streams.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; keepReading &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readUntilClosed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; keepReading&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; done &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// reader.cancel() has been called.&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// value is a Uint8Array.&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Handle error...&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Allow the serial port to be closed later.&lt;/span&gt;&lt;br /&gt;      reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; closedPromise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readUntilClosed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;button&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// User clicked a button to close the serial port.&lt;/span&gt;&lt;br /&gt;  keepReading &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Force reader.read() to resolve immediately and subsequently&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// call reader.releaseLock() in the loop example above.&lt;/span&gt;&lt;br /&gt;  reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; closedPromise&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Closing a serial port is more complicated when using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TransformStream&quot; rel=&quot;noopener&quot;&gt;transform streams&lt;/a&gt; (like
&lt;code&gt;TextDecoderStream&lt;/code&gt; and &lt;code&gt;TextEncoderStream&lt;/code&gt;). Call &lt;code&gt;reader.cancel()&lt;/code&gt; as before.
Then call &lt;code&gt;writer.close()&lt;/code&gt; and &lt;code&gt;port.close()&lt;/code&gt;.  This propagates errors through
the transform streams to the underlying serial port. Because error propagation
doesn&#39;t happen immediately, you need to use the &lt;code&gt;readableStreamClosed&lt;/code&gt; and
&lt;code&gt;writableStreamClosed&lt;/code&gt; promises created earlier to detect when &lt;code&gt;port.readable&lt;/code&gt;
and &lt;code&gt;port.writable&lt;/code&gt; have been unlocked. Cancelling the &lt;code&gt;reader&lt;/code&gt; causes the
stream to be aborted; this is why you must catch and ignore the resulting error.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// With transform streams.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoderStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; readableStreamClosed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Listen to data coming from the serial device.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; done &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;releaseLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// value is a string.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textEncoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoderStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writableStreamClosed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textEncoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; readableStreamClosed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Ignore the error */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;writer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writableStreamClosed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;connection-disconnection&quot;&gt;Listen to connection and disconnection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#connection-disconnection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If a serial port is provided by a USB device then that device may be connected
or disconnected from the system. When the website has been granted permission to
access a serial port, it should monitor the &lt;code&gt;connect&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt; events.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;connect&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// TODO: Automatically open event.target or warn user a port is available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serial&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;disconnect&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// TODO: Remove |event.target| from the UI.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// If the serial port was opened, a stream error would be observed as well.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Prior to Chrome 89 the &lt;code&gt;connect&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt; events fired a custom
&lt;code&gt;SerialConnectionEvent&lt;/code&gt; object with the affected &lt;code&gt;SerialPort&lt;/code&gt; interface
available as the &lt;code&gt;port&lt;/code&gt; attribute. You may want to use &lt;code&gt;event.port || event.target&lt;/code&gt; to handle the transition.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;signals&quot;&gt;Handle signals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#signals&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After establishing the serial port connection, you can explicitly query and set
signals exposed by the serial port for device detection and flow control. These
signals are defined as boolean values. For example, some devices such as Arduino
will enter a programming mode if the Data Terminal Ready (DTR) signal is
toggled.&lt;/p&gt;
&lt;p&gt;Setting &lt;a href=&quot;https://reillyeon.github.io/serial/#serialoutputsignals-dictionary&quot; rel=&quot;noopener&quot;&gt;output signals&lt;/a&gt; and getting &lt;a href=&quot;https://reillyeon.github.io/serial/#serialinputsignals-dictionary&quot; rel=&quot;noopener&quot;&gt;input signals&lt;/a&gt; are respectively done by
calling &lt;code&gt;port.setSignals()&lt;/code&gt; and &lt;code&gt;port.getSignals()&lt;/code&gt;. See usage examples below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Turn off Serial Break signal.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSignals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Turn on Data Terminal Ready (DTR) signal.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSignals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; dataTerminalReady&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Turn off Request To Send (RTS) signal.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSignals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; requestToSend&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; signals &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSignals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Clear To Send:       &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;signals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clearToSend&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Data Carrier Detect: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;signals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataCarrierDetect&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Data Set Ready:      &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;signals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataSetReady&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Ring Indicator:      &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;signals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ringIndicator&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;transforming-streams&quot;&gt;Transforming streams &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#transforming-streams&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When you receive data from the serial device, you won&#39;t necessarily get all of
the data at once. It may be arbitrarily chunked. For more information, see
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Concepts&quot; rel=&quot;noopener&quot;&gt;Streams API concepts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To deal with this, you can use some built-in transform streams such as
&lt;code&gt;TextDecoderStream&lt;/code&gt; or create your own transform stream which allows you to
parse the incoming stream and return parsed data. The transform stream sits
between the serial device and the read loop that is consuming the stream. It can
apply an arbitrary transform before the data is consumed. Think of it like an
assembly line: as a widget comes down the line, each step in the line modifies
the widget, so that by the time it gets to its final destination, it&#39;s a fully
functioning widget.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Photo of an aeroplane factory&quot; decoding=&quot;async&quot; height=&quot;519&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/seICV1jfxA6NfFRt9iVL.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;World War II Castle Bromwich Aeroplane Factory&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For example, consider how to create a transform stream class that consumes a
stream and chunks it based on line breaks. Its &lt;code&gt;transform()&lt;/code&gt; method is called
every time new data is received by the stream. It can either enqueue the data or
save it for later. The &lt;code&gt;flush()&lt;/code&gt; method is called when the stream is closed, and
it handles any data that hasn&#39;t been processed yet.&lt;/p&gt;
&lt;p&gt;To use the transform stream class, you need to pipe an incoming stream through
it. In the third code example under &lt;a href=&quot;https://web.dev/serial/#read-port&quot;&gt;Read from a serial port&lt;/a&gt;,
the original input stream was only piped through a &lt;code&gt;TextDecoderStream&lt;/code&gt;, so we
need to call &lt;code&gt;pipeThrough()&lt;/code&gt; to pipe it through our new &lt;code&gt;LineBreakTransformer&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LineBreakTransformer&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// A container for holding stream data until a new line.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chunks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;chunk&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; controller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Append new chunks to existing chunks.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chunks &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; chunk&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// For each line breaks in chunks, send the parsed lines out.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lines &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chunks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;\r\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chunks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; lines&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    lines&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; controller&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// When the stream is closed, flush any remaining chunks out.&lt;/span&gt;&lt;br /&gt;    controller&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;chunks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoderStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; readableStreamClosed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeThrough&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TransformStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LineBreakTransformer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For debugging serial device communication issues, use the &lt;code&gt;tee()&lt;/code&gt; method of
&lt;code&gt;port.readable&lt;/code&gt; to split the streams going to or from the serial device. The two
streams created can be consumed independently and this allows you to print one
to the console for inspection.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;appReadable&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; devReadable&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; port&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tee&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// You may want to update UI with incoming data from appReadable&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// and log incoming data in JS console for inspection from devReadable.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;dev-tips&quot;&gt;Dev Tips &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#dev-tips&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Debugging the Web Serial API in Chrome is easy with the internal page,
&lt;code&gt;about://device-log&lt;/code&gt; where you can see all serial device related events in one
single place.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the internal page for debugging the Web Serial API.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;547&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/p2T9gxxLsDWsS1GaqoXj.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Internal page in Chrome for debugging the Web Serial API.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;codelab&quot;&gt;Codelab &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#codelab&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/web-serial&quot; rel=&quot;noopener&quot;&gt;Google Developer codelab&lt;/a&gt;, you&#39;ll use the Web Serial API to interact
with a &lt;a href=&quot;https://microbit.org/&quot; rel=&quot;noopener&quot;&gt;BBC micro:bit&lt;/a&gt; board to show images on its 5x5 LED matrix.&lt;/p&gt;
&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Web Serial API is available on all desktop platforms (Chrome OS, Linux, macOS,
and Windows) in Chrome 89.&lt;/p&gt;
&lt;h2 id=&quot;polyfill&quot;&gt;Polyfill &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#polyfill&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On Android, support for USB-based serial ports is possible using the WebUSB API
and the &lt;a href=&quot;https://github.com/google/web-serial-polyfill&quot; rel=&quot;noopener&quot;&gt;Serial API polyfill&lt;/a&gt;. This polyfill is limited to hardware and
platforms where the device is accessible via the WebUSB API because it has not
been claimed by a built-in device driver.&lt;/p&gt;
&lt;h2 id=&quot;security-privacy&quot;&gt;Security and privacy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#security-privacy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The spec authors have designed and implemented the Web Serial API using the core
principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;,
including user control, transparency, and ergonomics. The ability to use this
API is primarily gated by a permission model that grants access to only a single
serial device at a time. In response to a user prompt, the user must take active
steps to select a particular serial device.&lt;/p&gt;
&lt;p&gt;To understand the security tradeoffs, check out the &lt;a href=&quot;https://github.com/reillyeon/serial/blob/gh-pages/EXPLAINER.md#security-considerations&quot; rel=&quot;noopener&quot;&gt;security&lt;/a&gt; and &lt;a href=&quot;https://github.com/reillyeon/serial/blob/gh-pages/EXPLAINER.md#privacy-considerations&quot; rel=&quot;noopener&quot;&gt;privacy&lt;/a&gt;
sections of the Web Serial API Explainer.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team would love to hear about your thoughts and experiences with the
Web Serial API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work as expected? Or are there
missing methods or properties that you need to implement your idea?&lt;/p&gt;
&lt;p&gt;File a spec issue on the &lt;a href=&quot;https://github.com/wicg/serial/issues&quot; rel=&quot;noopener&quot;&gt;Web Serial API GitHub repo&lt;/a&gt; or add your
thoughts to an existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation
different from the spec?&lt;/p&gt;
&lt;p&gt;File a bug at &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ESerial&quot; rel=&quot;noopener&quot;&gt;https://new.crbug.com&lt;/a&gt;. Be sure to include as much
detail as you can, provide simple instructions for reproducing the bug, and have
&lt;em&gt;Components&lt;/em&gt; set to &lt;code&gt;Blink&amp;gt;Serial&lt;/code&gt;. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for
sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support&quot;&gt;Show support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#show-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Web Serial API? Your public support helps the Chrome
team prioritize features and shows other browser vendors how critical it is to
support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/chromiumdev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23SerialAPI&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#SerialAPI&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reillyeon.github.io/serial/&quot; rel=&quot;noopener&quot;&gt;Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/884928&quot; rel=&quot;noopener&quot;&gt;Tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/6577673212002304&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://chromestatus.com/features#component%3ABlink%3ESerial&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;Serial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechromelabs.github.io/serial-terminal/&quot; rel=&quot;noopener&quot;&gt;Serial Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.espruino.com/ide/&quot; rel=&quot;noopener&quot;&gt;Espruino Web IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/serial/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/reillyeon&quot; rel=&quot;noopener&quot;&gt;Reilly Grant&lt;/a&gt; and &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; for their reviews of this article.
Aeroplane factory photo by &lt;a href=&quot;https://unsplash.com/@birminghammuseumstrust&quot; rel=&quot;noopener&quot;&gt;Birmingham Museums Trust&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/E1PSU-7aWcY&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Connecting to uncommon HID devices</title>
    <link href="https://web.dev/hid/"/>
    <updated>2020-09-15T00:00:00Z</updated>
    <id>https://web.dev/hid/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
The WebHID API, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;, launched in
Chrome 89.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There is a long tail of human interface devices (HIDs), such as alternative
keyboards or exotic gamepads, that are too new, too old, or too uncommon to be
accessible by systems&#39; device drivers. The WebHID API solves this by providing a
way to implement device-specific logic in JavaScript.&lt;/p&gt;
&lt;h2 id=&quot;use-cases&quot;&gt;Suggested use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A HID device takes input from or provides output to humans. Examples of devices
include keyboards, pointing devices (mice, touchscreens, etc.), and gamepads.
The &lt;a href=&quot;https://www.usb.org/hid&quot; rel=&quot;noopener&quot;&gt;HID protocol&lt;/a&gt; makes it possible to access these devices on desktop
computers using operating system drivers. The web platform supports HID devices
by relying on these drivers.&lt;/p&gt;
&lt;p&gt;The inability to access uncommon HID devices is particularly painful when it
comes to alternative auxiliary keyboards (e.g. &lt;a href=&quot;https://www.elgato.com/en/gaming/stream-deck&quot; rel=&quot;noopener&quot;&gt;Elgato Stream Deck&lt;/a&gt;, &lt;a href=&quot;https://www.jabra.com/business/office-headsets&quot; rel=&quot;noopener&quot;&gt;Jabra
headsets&lt;/a&gt;, &lt;a href=&quot;https://xkeys.com/xkeys.html&quot; rel=&quot;noopener&quot;&gt;X-keys&lt;/a&gt;) and exotic gamepad support. Gamepads designed for desktop
often use HID for gamepad inputs (buttons, joysticks, triggers) and outputs
(LEDs, rumble). Unfortunately, gamepad inputs and outputs are not well
standardized and web browsers often require custom logic for specific devices.
This is unsustainable and results in poor support for the long tail of older and
uncommon devices. It also causes the browser to depend on quirks in the behavior
of specific devices.&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/webhid/blob/master/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://wicg.github.io/webhid/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/hid/#feedback&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developers.chrome.com/origintrials/#/register_trial/1074108511127863297&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5. Launch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Complete&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;terminology&quot;&gt;Terminology &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#terminology&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;HID consists of two fundamental concepts: reports and report descriptors.
Reports are the data that is exchanged between a device and a software client.
The report descriptor describes the format and meaning of data that the device
supports.&lt;/p&gt;
&lt;p&gt;A HID (Human Interface Device) is a type of device that takes input from or
provides output to humans. It also refers to the HID protocol, a standard for
bi-directional communication between a host and a device that is designed to
simplify the installation procedure. The HID protocol was originally developed
for USB devices, but has since been implemented over many other protocols,
including Bluetooth.&lt;/p&gt;
&lt;p&gt;Applications and HID devices exchange binary data through three report types:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Report type&lt;/th&gt;
        &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;Input&amp;nbsp;report&lt;/td&gt;
        &lt;td&gt;Data that is sent from the device to the application (e.g. a button is pressed.)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Output&amp;nbsp;report&lt;/td&gt;
        &lt;td&gt;Data that is sent from the application to the device (e.g. a request to turn on the keyboard backlight.)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;Feature&amp;nbsp;report&lt;/td&gt;
        &lt;td&gt;Data that may be sent in either direction. The format is device-specific.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;A report descriptor describes the binary format of reports supported by the
device. Its structure is hierarchical and can group reports together as distinct
collections within the top-level collection. The &lt;a href=&quot;https://gist.github.com/beaufortfrancois/583424dfef66be1ade86231fd1a260c7&quot; rel=&quot;noopener&quot;&gt;format&lt;/a&gt; of the descriptor is
defined by the HID specification.&lt;/p&gt;
&lt;p&gt;A HID usage is a numeric value referring to a standardized input or output.
Usage values allow a device to describe the intended use of the device and the
purpose of each field in its reports. For example, one is defined for the left
button of a mouse. Usages are also organized into usage pages, which provide an
indication of the high-level category of the device or report.&lt;/p&gt;
&lt;h2 id=&quot;use&quot;&gt;Using the WebHID API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To check if the WebHID API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;hid&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The WebHID API is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;open&quot;&gt;Open a HID connection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#open&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The WebHID API is asynchronous by design to prevent the website UI from
blocking when awaiting input. This is important because HID data can be received
at any time, requiring a way to listen to it.&lt;/p&gt;
&lt;p&gt;To open a HID connection, first access a &lt;code&gt;HIDDevice&lt;/code&gt; object. For this, you can
either prompt the user to select a device by calling
&lt;code&gt;navigator.hid.requestDevice()&lt;/code&gt;, or pick one from &lt;code&gt;navigator.hid.getDevices()&lt;/code&gt;
which returns a list of devices the website has been granted access to
previously.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;navigator.hid.requestDevice()&lt;/code&gt; function takes a mandatory object that
defines filters. Those are used to match any device connected with a USB vendor
identifier (&lt;code&gt;vendorId&lt;/code&gt;), a USB product identifier (&lt;code&gt;productId&lt;/code&gt;), a usage page
value (&lt;code&gt;usagePage&lt;/code&gt;), and a usage value (&lt;code&gt;usage&lt;/code&gt;). You can get those from &lt;a href=&quot;http://www.linux-usb.org/usb-ids.html&quot; rel=&quot;noopener&quot;&gt;the
USB ID Repository&lt;/a&gt; and the &lt;a href=&quot;https://usb.org/document-library/hid-usage-tables-12&quot; rel=&quot;noopener&quot;&gt;HID usage tables document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The multiple &lt;code&gt;HIDDevice&lt;/code&gt; objects returned by this function represent multiple
HID interfaces on the same physical device.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Filter on devices with the Nintendo Switch Joy-Con USB Vendor/Product IDs.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; filters &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    vendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x057e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Nintendo Co., Ltd&lt;/span&gt;&lt;br /&gt;    productId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2006&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Joy-Con Left&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    vendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x057e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Nintendo Co., Ltd&lt;/span&gt;&lt;br /&gt;    productId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2007&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Joy-Con Right&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Prompt user to select a Joy-Con device.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Get all devices the user has previously granted the website access to.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; devices &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDevices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a HID device prompt on a website.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;513&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/gaZo8LxG3Y8eU2VirlZ4.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;User prompt for selecting a Nintendo Switch Joy-Con.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;A &lt;code&gt;HIDDevice&lt;/code&gt; object contains USB vendor and product identifiers for device
identification. Its &lt;code&gt;collections&lt;/code&gt; attribute is initialized with a hierarchical
description of the device&#39;s report formats.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; collection &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;collections&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// A HID collection includes usage, usage page, reports, and subcollections.&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Usage: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;usage&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Usage page: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;usagePage&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; inputReport &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;inputReports&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Input report: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;inputReport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;reportId&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Loop through inputReport.items&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; outputReport &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;outputReports&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Output report: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;outputReport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;reportId&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Loop through outputReport.items&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; featureReport &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;featureReports&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Feature report: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;featureReport&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;reportId&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Loop through featureReport.items&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Loop through subcollections with collection.children&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;HIDDevice&lt;/code&gt; devices are by default returned in a &amp;quot;closed&amp;quot; state and must be
opened by calling &lt;code&gt;open()&lt;/code&gt; before data can be sent or received.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Wait for the HID connection to open before sending/receiving data.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;receive-input-reports&quot;&gt;Receive input reports &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#receive-input-reports&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once the HID connection has been established, you can handle incoming input
reports by listening to the &lt;code&gt;&amp;quot;inputreport&amp;quot;&lt;/code&gt; events from the device. Those events
contain the HID data as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object (&lt;code&gt;data&lt;/code&gt;), the HID device it belongs
to (&lt;code&gt;device&lt;/code&gt;), and the 8-bit report ID associated with the input report
(&lt;code&gt;reportId&lt;/code&gt;).&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Red and blue nintendo switch photo.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;575&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Hr4EXZcunl7r2TJwVvQ8.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Nintendo Switch Joy-Con devices.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Continuing with the previous example, the code below shows you how to detect
which button the user has pressed on a Joy-Con Right device so that you can
hopefully try it at home.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;inputreport&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reportId &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Handle only the Joy-Con Right device and a specific report ID.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;productId &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2007&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; reportId &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUint8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; someButtons &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;X&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Y&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;User pressed button &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;someButtons&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi; hid&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/webhid-joycon-button?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;webhid-joycon-button on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;send-output-reports&quot;&gt;Send output reports &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#send-output-reports&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To send an output report to a HID device, pass the 8-bit report ID associated
with the output report (&lt;code&gt;reportId&lt;/code&gt;) and bytes as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BufferSource&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;BufferSource&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;data&lt;/code&gt;) to
&lt;code&gt;device.sendReport()&lt;/code&gt;. The returned promise resolves once the report has been
sent. If the HID device does not use report IDs, set &lt;code&gt;reportId&lt;/code&gt; to 0.&lt;/p&gt;
&lt;p&gt;The example below applies to a Joy-Con device and shows you how to make it
rumble with output reports.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// First, send a command to enable vibration.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Magical bytes come from https://github.com/mzyy94/joycon-toolweb&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; enableVibrationData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendReport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;enableVibrationData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Then, send a command to make the Joy-Con device rumble.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Actual bytes are available in the sample below.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; rumbleData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* ... */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendReport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rumbleData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi; hid&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/webhid-joycon-rumble?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;webhid-joycon-rumble on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;feature-reports&quot;&gt;Send and receive feature reports &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#feature-reports&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Feature reports are the only type of HID data reports that can travel in both
directions. They allow HID devices and applications to exchange non standardized
HID data. Unlike input and output reports, feature reports are not received or
sent by the application on a regular basis.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Black and silver laptop computer photo.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;575&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/QJiKwOCVAtUsAWUnqLxi.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Laptop keyboard&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To send a feature report to a HID device, pass the 8-bit report ID associated
with the feature report (&lt;code&gt;reportId&lt;/code&gt;) and bytes as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BufferSource&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;BufferSource&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;data&lt;/code&gt;) to
&lt;code&gt;device.sendFeatureReport()&lt;/code&gt;. The returned promise resolves once the report has
been sent. If the HID device does not use report IDs, set &lt;code&gt;reportId&lt;/code&gt; to 0.&lt;/p&gt;
&lt;p&gt;The example below illustrates the use of feature reports by showing you how to
request an Apple keyboard backlight device, open it, and make it blink.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;waitFor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Prompt user to select an Apple Keyboard Backlight device.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; vendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x05ac&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; usage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x0f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; usagePage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0xff00&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Wait for the HID connection to open.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Blink!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reportId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Turn off&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendFeatureReport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reportId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Uint32Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;waitFor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Turn on&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendFeatureReport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reportId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Uint32Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;waitFor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi; hid&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/webhid-apple-keyboard-backlight?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;webhid-apple-keyboard-backlight on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;To receive a feature report from a HID device, pass the 8-bit report ID
associated with the feature report (&lt;code&gt;reportId&lt;/code&gt;)  to
&lt;code&gt;device.receiveFeatureReport()&lt;/code&gt;. The returned promise resolves with a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object that contains the contents of the feature report. If the HID
device does not use report IDs, set &lt;code&gt;reportId&lt;/code&gt; to 0.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Request feature report.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; dataView &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;receiveFeatureReport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;/* reportId= */&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Read feature report contents with dataView.getInt8(), getUint8(), etc...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;connection-disconnection&quot;&gt;Listen to connection and disconnection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#connection-disconnection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When the website has been granted permission to access a HID device, it can
actively receive connection and disconnection events by listening to &lt;code&gt;&amp;quot;connect&amp;quot;&lt;/code&gt;
and &lt;code&gt;&amp;quot;disconnect&amp;quot;&lt;/code&gt; events.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;connect&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Automatically open event.device or warn user a device is available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hid&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;disconnect&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Remove |event.device| from the UI.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;dev-tips&quot;&gt;Dev Tips &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#dev-tips&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Debugging HID in Chrome is easy with the internal page, &lt;code&gt;about://device-log&lt;/code&gt;
where you can see all HID and USB device related events in one single place.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the internal page to debug HID.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;575&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/zwpr1W7oDsRw0DKsFQ9D.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Internal page in Chrome to debug HID.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The WebHID API is available on all desktop platforms (Chrome OS, Linux, macOS,
and Windows) in Chrome 89.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some WebHID demos are listed at &lt;a href=&quot;https://web.dev/hid-examples/&quot;&gt;web.dev/hid-examples&lt;/a&gt;. Go have a look!&lt;/p&gt;
&lt;h2 id=&quot;security-privacy&quot;&gt;Security and privacy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#security-privacy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The spec authors have designed and implemented the WebHID API using the core
principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;,
including user control, transparency, and ergonomics. The ability to use this
API is primarily gated by a permission model that grants access to only a single
HID device at a time. In response to a user prompt, the user must take active
steps to select a particular HID device.&lt;/p&gt;
&lt;p&gt;To understand the security tradeoffs, check out the &lt;a href=&quot;https://wicg.github.io/webhid/#security-and-privacy&quot; rel=&quot;noopener&quot;&gt;Security and Privacy
Considerations&lt;/a&gt; section of the WebHID spec.&lt;/p&gt;
&lt;p&gt;On top of this, Chrome inspects the usage of each top-level collection and if a
top-level collection has a protected usage (e.g. generic keyboard, mouse), then
a website won&#39;t be able to send and receive any reports defined in that
collection. The full list of protected usages is &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/device/public/cpp/hid/hid_usage_and_page.cc&quot; rel=&quot;noopener&quot;&gt;publicly available&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that security-sensitive HID devices (such as FIDO HID devices used for
stronger authentication) are also blocked in Chrome. See the &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:chrome/browser/usb/usb_blocklist.cc&quot; rel=&quot;noopener&quot;&gt;USB blocklist&lt;/a&gt; and
&lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/device/public/cpp/hid/hid_blocklist.cc&quot; rel=&quot;noopener&quot;&gt;HID blocklist&lt;/a&gt; files.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team would love to hear about your thoughts and experiences with the
WebHID API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work as expected? Or are there
missing methods or properties that you need to implement your idea?&lt;/p&gt;
&lt;p&gt;File a spec issue on the &lt;a href=&quot;https://github.com/wicg/webhid/issues&quot; rel=&quot;noopener&quot;&gt;WebHID API GitHub repo&lt;/a&gt; or add your thoughts
to an existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation
different from the spec?&lt;/p&gt;
&lt;p&gt;File a bug at &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3EHID&quot; rel=&quot;noopener&quot;&gt;https://new.crbug.com&lt;/a&gt;. Be sure to include as much
detail as you can, provide simple instructions for reproducing the bug, and have
&lt;em&gt;Components&lt;/em&gt; set to &lt;code&gt;Blink&amp;gt;HID&lt;/code&gt;. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for
sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support&quot;&gt;Show support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#show-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the WebHID API? Your public support helps the Chrome
team prioritize features and shows other browser vendors how critical it is to
support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/chromiumdev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebHID&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebHID&lt;/code&gt;&lt;/a&gt; and let us know
where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/webhid/&quot; rel=&quot;noopener&quot;&gt;Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/890096&quot; rel=&quot;noopener&quot;&gt;Tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5172464636133376&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://chromestatus.com/features#component%3ABlink%3EHID&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;HID&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/nondebug&quot; rel=&quot;noopener&quot;&gt;Matt Reynolds&lt;/a&gt; and &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; for their reviews of this article.
Red and blue Nintendo Switch photo by &lt;a href=&quot;https://unsplash.com/photos/jqpRECmiNEU&quot; rel=&quot;noopener&quot;&gt;Sara Kurfeß&lt;/a&gt;, and black and silver laptop
computer photo by &lt;a href=&quot;https://unsplash.com/photos/ndokCrfQWrI&quot; rel=&quot;noopener&quot;&gt;Athul Cyriac Ajay&lt;/a&gt; on Unsplash.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Access USB Devices on the Web</title>
    <link href="https://web.dev/usb/"/>
    <updated>2016-03-30T00:00:00Z</updated>
    <id>https://web.dev/usb/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;If I said plainly and simply &amp;quot;USB&amp;quot;, there is a good chance that you will
immediately think of keyboards, mice, audio, video, and storage devices. You&#39;re
right but you&#39;ll find other kinds of Universal Serial Bus (USB) devices out
there.&lt;/p&gt;
&lt;p&gt;These non-standardized USB devices require hardware vendors to write platform-specific
drivers and SDKs in order for you (the developer) to take advantage of them.
Sadly this platform-specific code has historically prevented these devices from being used
by the Web. And that&#39;s one of the reasons the WebUSB API has been created: to
provide a way to expose USB device services to the Web. With this API, hardware
manufacturers will be able to build cross-platform JavaScript SDKs for their
devices.
But most importantly this will &lt;strong&gt;make USB safer and easier to use by bringing
it to the Web&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let&#39;s see the behavior you could expect with the WebUSB API:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Buy a USB device.&lt;/li&gt;
&lt;li&gt;Plug it into your computer. A notification appears right away, with the right
website to go to for this device.&lt;/li&gt;
&lt;li&gt;Click the notification. The website is there and ready to use!&lt;/li&gt;
&lt;li&gt;Click to connect and a USB device chooser shows up in Chrome where you can
pick your device.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tada!&lt;/p&gt;
&lt;p&gt;What would this procedure be like without the WebUSB API?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install a platform-specific application.&lt;/li&gt;
&lt;li&gt;If it&#39;s even supported on my operating system, verify that I&#39;ve downloaded
the right thing.&lt;/li&gt;
&lt;li&gt;Install the thing. If you&#39;re lucky, you&#39;ll get no scary OS prompts or popups
warning you about installing drivers/applications from the internet. If
you&#39;re unlucky, the installed drivers or applications malfunction and harm
your computer. (Remember, the web is built to &lt;a href=&quot;https://www.youtube.com/watch?v=29e0CtgXZSI&quot; rel=&quot;noopener&quot;&gt;contain malfunctioning
websites&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;If you only use the feature once, the code stays on your computer until you
think to remove it. (On the Web, the space for unused is eventually
reclaimed.)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;before-i-start&quot;&gt;Before I start &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#before-i-start&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article assumes you have some basic knowledge of how USB works. If not, I
recommend reading &lt;a href=&quot;http://www.beyondlogic.org/usbnutshell&quot; rel=&quot;noopener&quot;&gt;USB in a NutShell&lt;/a&gt;. For background information about USB,
check out the &lt;a href=&quot;https://www.usb.org/&quot; rel=&quot;noopener&quot;&gt;official USB specifications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://wicg.github.io/webusb/&quot; rel=&quot;noopener&quot;&gt;WebUSB API&lt;/a&gt; is available in Chrome 61.&lt;/p&gt;
&lt;h3 id=&quot;available-for-origin-trials&quot;&gt;Available for origin trials &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#available-for-origin-trials&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In order to get as much feedback as possible from developers using the WebUSB
API in the field, we&#39;ve previously added this feature in Chrome 54 and Chrome
57 as an &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;origin trial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The latest trial has successfully ended in September 2017.&lt;/p&gt;
&lt;h2 id=&quot;privacy-and-security&quot;&gt;Privacy and security &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#privacy-and-security&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;https-only&quot;&gt;HTTPS only &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#https-only&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Because of this feature&#39;s power, it only works on &lt;a href=&quot;https://w3c.github.io/webappsec/specs/powerfulfeatures/#intro&quot; rel=&quot;noopener&quot;&gt;secure contexts&lt;/a&gt;. This means
you&#39;ll need to build with &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot; rel=&quot;noopener&quot;&gt;TLS&lt;/a&gt; in mind.&lt;/p&gt;
&lt;h3 id=&quot;user-gesture-required&quot;&gt;User gesture required &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#user-gesture-required&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a security precaution, &lt;code&gt;navigator.usb.requestDevice()&lt;/code&gt; may only
be called through a user gesture such as a touch or mouse click.&lt;/p&gt;
&lt;h3 id=&quot;feature-policy&quot;&gt;Feature Policy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#feature-policy&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy&quot; rel=&quot;noopener&quot;&gt;feature policy&lt;/a&gt; is a mechanism that allows developers to selectively enable
and disable various browser features and APIs. It can be defined via an HTTP
header and/or an iframe &amp;quot;allow&amp;quot; attribute.&lt;/p&gt;
&lt;p&gt;You can define a feature policy that controls whether the usb attribute is
exposed on the Navigator object, or in other words if you allow WebUSB.&lt;/p&gt;
&lt;p&gt;Below is an example of a header policy where WebUSB is not allowed:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-http&quot;&gt;&lt;code class=&quot;language-http&quot;&gt;&lt;span class=&quot;token header-name keyword&quot;&gt;Feature-Policy:&lt;/span&gt; fullscreen &quot;*&quot;; usb &quot;none&quot;; payment &quot;self&quot; https://payment.example.com&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Below is another example of a container policy where USB is allowed:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;allowpaymentrequest&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;usb; fullscreen&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;let&#39;s-start-coding&quot;&gt;Let&#39;s start coding &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#let&#39;s-start-coding&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The WebUSB API relies heavily on JavaScript &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot; rel=&quot;noopener&quot;&gt;Promises&lt;/a&gt;. If you&#39;re not familiar
with them, check out this great &lt;a href=&quot;https://web.dev/promises&quot;&gt;Promises tutorial&lt;/a&gt;. One more thing, &lt;code&gt;() =&amp;gt; {}&lt;/code&gt;
are simply ECMAScript 2015 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noopener&quot;&gt;Arrow functions&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;get-access-to-usb-devices&quot;&gt;Get access to USB devices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#get-access-to-usb-devices&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can either prompt the user to select a single connected USB device using
&lt;code&gt;navigator.usb.requestDevice()&lt;/code&gt; or call &lt;code&gt;navigator.usb.getDevices()&lt;/code&gt; to get a
list of all connected USB devices the origin has access to.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;navigator.usb.requestDevice()&lt;/code&gt; function takes a mandatory JavaScript object
that defines &lt;code&gt;filters&lt;/code&gt;. These filters are used to match any USB device with the
given vendor (&lt;code&gt;vendorId&lt;/code&gt;) and, optionally, product (&lt;code&gt;productId&lt;/code&gt;) identifiers.
The &lt;code&gt;classCode&lt;/code&gt;, &lt;code&gt;protocolCode&lt;/code&gt;, &lt;code&gt;serialNumber&lt;/code&gt;, and &lt;code&gt;subclassCode&lt;/code&gt; keys can
also be defined there as well.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the USB device user prompt in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;533&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/KIbPwUfEqgZZLxugxBOY.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;USB device user prompt.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For instance, here&#39;s how to get access to a connected Arduino device configured
to allow the origin.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;usb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; vendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2341&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;productName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;token comment&quot;&gt;// &quot;Arduino Micro&quot;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;manufacturerName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &quot;Arduino LLC&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Before you ask, I didn&#39;t magically come up with this &lt;code&gt;0x2341&lt;/code&gt; hexadecimal
number. I simply searched for the word &amp;quot;Arduino&amp;quot; in this &lt;a href=&quot;http://www.linux-usb.org/usb.ids&quot; rel=&quot;noopener&quot;&gt;List of USB ID&#39;s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The USB &lt;code&gt;device&lt;/code&gt; returned in the fulfilled promise above has some basic, yet
important information about the device such as the supported USB version,
maximum packet size, vendor, and product IDs, the number of possible
configurations the device can have. Basically it contains all fields in the
&lt;a href=&quot;http://www.beyondlogic.org/usbnutshell/usb5.shtml#DeviceDescriptors&quot; rel=&quot;noopener&quot;&gt;device USB Descriptor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By the way, if a USB device announces its &lt;a href=&quot;https://wicg.github.io/webusb/#webusb-platform-capability-descriptor&quot; rel=&quot;noopener&quot;&gt;support for WebUSB&lt;/a&gt;, as well as
defining a landing page URL, Chrome will show a persistent notification when the
USB device is plugged in. Clicking this notification will open the landing page.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the WebUSB notification in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/1gRIz2wY4LYofeFq5cc3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;WebUSB notification.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;From there, you can simply call &lt;code&gt;navigator.usb.getDevices()&lt;/code&gt; and access your
Arduino device as shown below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;usb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDevices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;devices&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  devices&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;productName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;token comment&quot;&gt;// &quot;Arduino Micro&quot;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;manufacturerName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &quot;Arduino LLC&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;talk-to-an-arduino-usb-board&quot;&gt;Talk to an Arduino USB board &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#talk-to-an-arduino-usb-board&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Okay, now let&#39;s see how easy it is to communicate from a WebUSB compatible
Arduino board over the USB port. Check out instructions at
&lt;a href=&quot;https://github.com/webusb/arduino&quot; rel=&quot;noopener&quot;&gt;https://github.com/webusb/arduino&lt;/a&gt; to WebUSB-enable your &lt;a href=&quot;http://www.arduino.cc/en/Tutorial/Sketch&quot; rel=&quot;noopener&quot;&gt;sketches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Don&#39;t worry, I&#39;ll cover all the WebUSB device methods mentioned below later in
this article.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;usb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestDevice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; filters&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; vendorId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x2341&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;selectedDevice&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    device &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; selectedDevice&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Begin a session.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;selectConfiguration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Select configuration #1 for the device.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;claimInterface&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Request exclusive control over interface #2.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;controlTransferOut&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    requestType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;class&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    recipient&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;interface&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    request&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    value&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    index&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Ready to receive data&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; device&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;transferIn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Waiting for 64 bytes of data from endpoint #5.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Received: &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Please keep in mind that the WebUSB library I&#39;m using here is just implementing
one example protocol (based on the standard USB serial protocol) and that
manufacturers can create any set and types of endpoints they wish.
Control transfers are especially nice for small configuration commands as
they get bus priority and have a well defined structure.&lt;/p&gt;
&lt;p&gt;And here&#39;s the sketch that has been uploaded to the Arduino board.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-arduino&quot;&gt;&lt;code class=&quot;language-arduino&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Third-party WebUSB Arduino library&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;WebUSB.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;WebUSB &lt;span class=&quot;token function&quot;&gt;WebUSBSerial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* https:// */&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;webusb.github.io/arduino/demos&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;token macro-name&quot;&gt;Serial&lt;/span&gt; &lt;span class=&quot;token expression&quot;&gt;WebUSBSerial&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token builtin&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Wait for serial port to connect.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token builtin&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;WebUSB FTW!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token builtin&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Nothing here for now.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The third-party &lt;a href=&quot;https://github.com/webusb/arduino/tree/gh-pages/library/WebUSB&quot; rel=&quot;noopener&quot;&gt;WebUSB Arduino library&lt;/a&gt; used in the sample code above does
basically two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The device acts as a WebUSB device enabling Chrome to read the &lt;a href=&quot;https://wicg.github.io/webusb/#webusb-platform-capability-descriptor&quot; rel=&quot;noopener&quot;&gt;landing page
URL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It exposes a WebUSB Serial API that you may use to override the default one.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Look at the JavaScript code again. Once I get the &lt;code&gt;device&lt;/code&gt; picked by the user,
&lt;code&gt;device.open()&lt;/code&gt; runs all platform-specific steps to start a session with the USB
device. Then, I have to select an available USB Configuration with
&lt;code&gt;device.selectConfiguration()&lt;/code&gt;. Remember that a configuration specifies how the
device is powered, its maximum power consumption and its number of interfaces.
Speaking of interfaces, I also need to request exclusive access with
&lt;code&gt;device.claimInterface()&lt;/code&gt; since data can only be transferred to an interface or
associated endpoints when the interface is claimed. Finally calling
&lt;code&gt;device.controlTransferOut()&lt;/code&gt; is needed to set up the Arduino device with the
appropriate commands to communicate through the WebUSB Serial API.&lt;/p&gt;
&lt;p&gt;From there, &lt;code&gt;device.transferIn()&lt;/code&gt; performs a bulk transfer onto the
device to inform it that the host is ready to receive bulk data. Then, the
promise is fulfilled with a &lt;code&gt;result&lt;/code&gt; object containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot; rel=&quot;noopener&quot;&gt;DataView&lt;/a&gt; &lt;code&gt;data&lt;/code&gt; that
has to be parsed appropriately.&lt;/p&gt;
&lt;p&gt;If you&#39;re familiar with USB, all of this should look pretty familiar.&lt;/p&gt;
&lt;h3 id=&quot;i-want-more&quot;&gt;I want more &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#i-want-more&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The WebUSB API lets you interact with the all USB transfer/endpoint types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CONTROL transfers, used to send or receive configuration or command
parameters to a USB device, are handled with &lt;code&gt;controlTransferIn(setup, length)&lt;/code&gt; and &lt;code&gt;controlTransferOut(setup, data)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;INTERRUPT transfers, used for a small amount of time sensitive data, are
handled with the same methods as BULK transfers with
&lt;code&gt;transferIn(endpointNumber, length)&lt;/code&gt; and &lt;code&gt;transferOut(endpointNumber, data)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;ISOCHRONOUS transfers, used for streams of data like video and sound, are
handled with &lt;code&gt;isochronousTransferIn(endpointNumber, packetLengths)&lt;/code&gt; and
&lt;code&gt;isochronousTransferOut(endpointNumber, data, packetLengths)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;BULK transfers, used to transfer a large amount of non-time-sensitive data in
a reliable way, are handled with &lt;code&gt;transferIn(endpointNumber, length)&lt;/code&gt; and
&lt;code&gt;transferOut(endpointNumber, data)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may also want to have a look at Mike Tsao&#39;s &lt;a href=&quot;https://github.com/sowbug/weblight&quot; rel=&quot;noopener&quot;&gt;WebLight project&lt;/a&gt; which
provides a ground-up example of building a USB-controlled LED device designed
for the WebUSB API (not using an Arduino here). You&#39;ll find hardware, software,
and firmware.&lt;/p&gt;
&lt;h2 id=&quot;tips&quot;&gt;Tips &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#tips&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Debugging USB in Chrome is easier with the internal page &lt;code&gt;about://device-log&lt;/code&gt;
where you can see all USB device related events in one single place.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the device log page to debug WebUSB in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;442&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ssq2mMZmxpWtALortfZx.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Device log page in Chrome for debugging the WebUSB API.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The internal page &lt;code&gt;about://usb-internals&lt;/code&gt; also comes in handy and allows you
to simulate connection and disconnection of virtual WebUSB devices.
This is be useful for doing UI testing without for real hardware.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the internal page to debug WebUSB in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;294&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/KB5z4p7fZRsvkfhVTNkb.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Internal page in Chrome for debugging the WebUSB API.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;On most Linux systems, USB devices are mapped with read-only permissions by
default. To allow Chrome to open a USB device, you will need to add a new &lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/udev.html&quot; rel=&quot;noopener&quot;&gt;udev
rule&lt;/a&gt;. Create a file at &lt;code&gt;/etc/udev/rules.d/50-yourdevicename.rules&lt;/code&gt; with the
following content:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;SUBSYSTEM&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;usb&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ATTR&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;idVendor&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;[yourdevicevendor]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; MODE&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0664&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; GROUP&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;plugdev&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;where &lt;code&gt;[yourdevicevendor]&lt;/code&gt; is &lt;code&gt;2341&lt;/code&gt; if your device is an Arduino for instance.
&lt;code&gt;ATTR{idProduct}&lt;/code&gt; can also be added for a more specific rule. Make sure your
&lt;code&gt;user&lt;/code&gt; is a &lt;a href=&quot;https://wiki.debian.org/SystemGroups&quot; rel=&quot;noopener&quot;&gt;member&lt;/a&gt; of the &lt;code&gt;plugdev&lt;/code&gt; group.  Then, just reconnect your device.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Microsoft OS 2.0 Descriptors used by the Arduino examples only work on Windows
8.1 and later. Without that Windows support still requires manual installation
of an INF file.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stack Overflow: &lt;a href=&quot;https://stackoverflow.com/questions/tagged/webusb&quot; rel=&quot;noopener&quot;&gt;https://stackoverflow.com/questions/tagged/webusb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebUSB API Spec: &lt;a href=&quot;https://wicg.github.io/webusb/&quot; rel=&quot;noopener&quot;&gt;http://wicg.github.io/webusb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome Feature Status: &lt;a href=&quot;https://www.chromestatus.com/feature/5651917954875392&quot; rel=&quot;noopener&quot;&gt;https://www.chromestatus.com/feature/5651917954875392&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spec Issues: &lt;a href=&quot;https://github.com/WICG/webusb/issues&quot; rel=&quot;noopener&quot;&gt;https://github.com/WICG/webusb/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implementation Bugs: &lt;a href=&quot;http://crbug.com/?q=component:Blink%3EUSB&quot; rel=&quot;noopener&quot;&gt;http://crbug.com?q=component:Blink&amp;gt;USB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebUSB ❤ ️Arduino: &lt;a href=&quot;https://github.com/webusb/arduino&quot; rel=&quot;noopener&quot;&gt;https://github.com/webusb/arduino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: &lt;a href=&quot;irc://irc.w3.org:6665/#webusb&quot; rel=&quot;noopener&quot;&gt;#webusb&lt;/a&gt; on W3C&#39;s IRC&lt;/li&gt;
&lt;li&gt;WICG Mailing list: &lt;a href=&quot;https://lists.w3.org/Archives/Public/public-wicg/&quot; rel=&quot;noopener&quot;&gt;https://lists.w3.org/Archives/Public/public-wicg/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebLight project: &lt;a href=&quot;https://github.com/sowbug/weblight&quot; rel=&quot;noopener&quot;&gt;https://github.com/sowbug/weblight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Send a tweet to [@ChromiumDev][cr-dev-twitter] using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebUSB&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebUSB&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/usb/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; for reviewing this article.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Interact with NFC devices on Chrome for Android</title>
    <link href="https://web.dev/nfc/"/>
    <updated>2020-02-12T00:00:00Z</updated>
    <id>https://web.dev/nfc/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
Web NFC, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;, launched in
Chrome 89 for Android.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is Web NFC? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NFC stands for Near Field Communications, a short-range wireless technology
operating at 13.56 MHz that enables communication between devices at a distance
less than 10 cm and a transmission rate of up to 424 kbit/s.&lt;/p&gt;
&lt;p&gt;Web NFC provides sites the ability to read and write to NFC tags when they are
in close proximity to the user&#39;s device (usually 5-10 cm, 2-4 inches).
The current scope is limited to NFC Data Exchange Format (NDEF), a lightweight
binary message format that works across different tag formats.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Phone powering up an NFC tag to exchange data&quot; decoding=&quot;async&quot; height=&quot;489&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/jWmCabXZCB6zNwQIR90I.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Diagram of an NFC operation&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;use-cases&quot;&gt;Suggested use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web NFC is limited to NDEF because the security properties of reading and
writing NDEF data are more easily quantifiable. Low-level I/O operations (e.g.
ISO-DEP, NFC-A/B, NFC-F), Peer-to-Peer communication mode and Host-based Card
Emulation (HCE) are not supported.&lt;/p&gt;
&lt;p&gt;Examples of sites that may use Web NFC include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Museums and art galleries can display additional information about a display
when the user touches their device to an NFC card near the exhibit.&lt;/li&gt;
&lt;li&gt;Inventory management sites can read or write data to the NFC tag on a
container to update information on its contents.&lt;/li&gt;
&lt;li&gt;Conference sites can use it to scan NFC badges during the event.&lt;/li&gt;
&lt;li&gt;Sites can use it for sharing initial secrets needed for device or service
provisioning scenarios and also to deploy configuration data in operational
mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Phone scanning several NFC tags&quot; decoding=&quot;async&quot; height=&quot;383&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/zTEXhIx9nDWtbKrIPN0x.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;NFC inventory management illustrated&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/w3c/web-nfc/blob/gh-pages/EXPLAINER.md#web-nfc-explained&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://w3c.github.io/web-nfc/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/nfc/#feedback&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developers.chrome.com/origintrials/#/view_trial/236438980436951041&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5. Launch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Complete&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;Using Web NFC &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Feature detection for hardware is different from what you&#39;re probably used to.
The presence of &lt;code&gt;NDEFReader&lt;/code&gt; tells you that the browser supports Web NFC, but
not whether the required hardware is present. In particular, if the hardware is
missing, the promise returned by certain calls will reject. I&#39;ll provide
details when I describe &lt;code&gt;NDEFReader&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;NDEFReader&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Scan and write NFC tags */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;terminology&quot;&gt;Terminology &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#terminology&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An NFC tag is a passive NFC device, meaning that is powered by magnetic
induction when an active NFC device (.e.g a phone) is in proximity. NFC tags
come in many forms and fashions, as stickers, credit cards, arm wrists, etc.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Photo of a transparent NFC tag&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/uUBxSkSc3MJBG8Lw52fV.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A transparent NFC tag&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;NDEFReader&lt;/code&gt; object is the entry point in Web NFC that exposes functionality
for preparing reading and/or writing actions that are fulfilled when an NDEF tag
comes in proximity. The &lt;code&gt;NDEF&lt;/code&gt; in &lt;code&gt;NDEFReader&lt;/code&gt; stands for NFC Data Exchange
Format, a lightweight binary message format standardized by the &lt;a href=&quot;https://nfc-forum.org/&quot; rel=&quot;noopener&quot;&gt;NFC Forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;NDEFReader&lt;/code&gt; object is for acting on incoming NDEF messages from NFC tags
and for writing NDEF messages to NFC tags within range.&lt;/p&gt;
&lt;p&gt;An NFC tag that supports NDEF is like a post-it note. Anyone can read it, and
unless it is read-only, anyone can write to it. It contains a single NDEF
message which encapsulates one or more NDEF records. Each NDEF record is a
binary structure that contains a data payload, and associated type information.
Web NFC supports the following NFC Forum standardized record types: empty, text,
URL, smart poster, MIME type, absolute URL, external type, unknown, and local
type.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram of an NDEF message&quot; decoding=&quot;async&quot; height=&quot;243&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/50clBWSJbKkyumsxrioB.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Diagram of an NDEF message&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;scan&quot;&gt;Scan NFC tags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#scan&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To scan NFC tags, first instantiate a new &lt;code&gt;NDEFReader&lt;/code&gt; object. Calling &lt;code&gt;scan()&lt;/code&gt;
returns a promise. The &lt;a href=&quot;https://web.dev/nfc/#security-and-permissions&quot;&gt;user may be prompted&lt;/a&gt; if access was not previously
granted. The promise will resolve if the following conditions are all met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User has allowed the website to interact with NFC devices when they tap their
phone.&lt;/li&gt;
&lt;li&gt;The user&#39;s phone supports NFC.&lt;/li&gt;
&lt;li&gt;The user has enabled NFC on their phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the promise is resolved, incoming NDEF messages are available by
subscribing to &lt;code&gt;reading&lt;/code&gt; events via an event listener. You should also subscribe
to &lt;code&gt;readingerror&lt;/code&gt; events to be notified when incompatible NFC tags are in
proximity.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Scan started successfully.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreadingerror&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Cannot read data from the NFC tag. Try another one?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;NDEF message read.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Error! Scan failed to start: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;error&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When an NFC tag is in proximity, a &lt;code&gt;NDEFReadingEvent&lt;/code&gt; event is fired. It
contains two properties unique to it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;serialNumber&lt;/code&gt; represents the serial number of the device (.e.g
00-11-22-33-44-55-66), or an empty string if none is available.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message&lt;/code&gt; represents the NDEF message stored in the NFC tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To read the content of the NDEF message, loop through &lt;code&gt;message.records&lt;/code&gt; and
process their &lt;code&gt;data&lt;/code&gt; members &lt;a href=&quot;https://w3c.github.io/web-nfc/#data-mapping&quot; rel=&quot;noopener&quot;&gt;appropriately&lt;/a&gt; based on their &lt;code&gt;recordType&lt;/code&gt;.
The &lt;code&gt;data&lt;/code&gt; member is exposed as a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot; rel=&quot;noopener&quot;&gt;DataView&lt;/a&gt;&lt;/code&gt; as it allows handling
cases where data is encoded in UTF-16.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; record &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Record type:  &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MIME type:    &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mediaType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Record id:    &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// TODO: Read text record with record data, lang, and encoding.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// TODO: Read URL record with record data.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle other records with record data.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/nfc/#cookbook&quot;&gt;cookbook&lt;/a&gt; contains many examples of how to read NDEF records based on
their types.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;write&quot;&gt;Write NFC tags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#write&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To write NFC tags, first instantiate a new &lt;code&gt;NDEFReader&lt;/code&gt; object. Calling
&lt;code&gt;write()&lt;/code&gt; returns a promise. The &lt;a href=&quot;https://web.dev/nfc/#security-and-permissions&quot;&gt;user may be prompted&lt;/a&gt; if access was not
previously granted. At this point, an NDEF message is &amp;quot;prepared&amp;quot; and promise
will resolve if the following conditions are all met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User has allowed the website to interact with NFC devices when they tap their
phone.&lt;/li&gt;
&lt;li&gt;The user&#39;s phone supports NFC.&lt;/li&gt;
&lt;li&gt;The user has enabled NFC on their phone.&lt;/li&gt;
&lt;li&gt;User has tapped an NFC tag and an NDEF message has been successfully written.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To write text to an NFC tag, pass a string to the &lt;code&gt;write()&lt;/code&gt; method.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Message written.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Write failed :-( try again: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;error&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write a URL record to an NFC tag, pass a dictionary that represents an NDEF
message to &lt;code&gt;write()&lt;/code&gt;. In the example below, the NDEF message is a dictionary
with a &lt;code&gt;records&lt;/code&gt; key. Its value is an array of records - in this case, a URL
record defined as an object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;url&amp;quot;&lt;/code&gt; and a &lt;code&gt;data&lt;/code&gt;
key set to the URL string.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://w3c.github.io/web-nfc/&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Message written.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Write failed :-( try again: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;error&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It is also possible to write multiple records to an NFC tag.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://w3c.github.io/web-nfc/&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://web.dev/nfc/&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Message written.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Write failed :-( try again: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;error&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/nfc/#cookbook&quot;&gt;cookbook&lt;/a&gt; contains many examples of how to write other types of
NDEF records.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If the NFC tag contains an NDEF message that is not meant to be overwritten, set
the &lt;code&gt;overwrite&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt; in the options passed to the &lt;code&gt;write()&lt;/code&gt;
method. In that case, the returned promise will reject if an NDEF message is
already stored in the NFC tag.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Writing data on an empty NFC tag is fun!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; overwrite&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Message written.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Write failed :-( try again: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;error&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Chrome team has designed and implemented Web NFC using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform
Features&lt;/a&gt;, including user control, transparency, and ergonomics.&lt;/p&gt;
&lt;p&gt;Because NFC expands the domain of information potentially available to malicious
websites, the availability of NFC is restricted to maximize users&#39; awareness and
control over NFC use.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a Web NFC prompt on a website&quot; decoding=&quot;async&quot; height=&quot;407&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/PjUcOk4zbtOFJLXfSeSD.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Web NFC user prompt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Web NFC is only available to top-level frames and secure browsing contexts (HTTPS
only). Origins must first request the &lt;code&gt;&amp;quot;nfc&amp;quot;&lt;/code&gt; &lt;a href=&quot;https://w3c.github.io/permissions/&quot; rel=&quot;noopener&quot;&gt;permission&lt;/a&gt; while handling a
user gesture (e.g a button click). The NDEFReader &lt;code&gt;scan()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods
trigger a user prompt, if access was not previously granted.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#scanButton&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Prompt user to allow website to interact with NFC devices.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle incoming NDEF messages.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The combination of a user-initiated permission prompt and real-world, physical
movement of bringing the device over a target NFC tag mirrors the chooser
pattern found in the other file and device-access APIs.&lt;/p&gt;
&lt;p&gt;To perform a scan or write, the web page must be visible when the user touches
an NFC tag with their device. The browser uses haptic feedback to indicate a
tap. Access to the NFC radio is blocked if the display is off or the device is
locked. For non visible web pages, receiving and pushing NFC content are
suspended, and resumed when a web page becomes visible again.&lt;/p&gt;
&lt;p&gt;Thanks to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot; rel=&quot;noopener&quot;&gt;Page Visibility API&lt;/a&gt;, it is possible to track when document
visibility changes.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onvisibilitychange&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hidden&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// All NFC operations are automatically suspended when document is hidden.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// All NFC operations are resumed, if needed.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;cookbook&quot;&gt;Cookbook &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#cookbook&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s some code samples to get you started.&lt;/p&gt;
&lt;h3 id=&quot;check-for-permission&quot;&gt;Check for permission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#check-for-permission&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/permissions/&quot; rel=&quot;noopener&quot;&gt;Permissions API&lt;/a&gt; allows checking whether the &lt;code&gt;&amp;quot;nfc&amp;quot;&lt;/code&gt; permission was
granted. This example shows how to scan NFC tags without user interaction if
access was previously granted, or show a button otherwise. Note that the same
mechanism works for writing NFC tags as it uses the same permission under the
hood.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;startScanning&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* handle NDEF messages */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; nfcPermissionStatus &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;nfc&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nfcPermissionStatus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;granted&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// NFC access was previously granted, so we can start NFC scanning now.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;startScanning&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Show a &quot;scan&quot; button.&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#scanButton&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;display &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;block&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#scanButton&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Prompt user to allow UA to send and receive info when they tap NFC devices.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;startScanning&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;abort-nfc-operations&quot;&gt;Abort NFC operations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#abort-nfc-operations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AbortController&quot; rel=&quot;noopener&quot;&gt;AbortController&lt;/a&gt;&lt;/code&gt; primitive makes it easy to abort NFC
operations. The example below shows you how to pass the &lt;code&gt;signal&lt;/code&gt; of an
&lt;code&gt;AbortController&lt;/code&gt; through the options of NDEFReader &lt;code&gt;scan()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;
methods and abort both NFC operations at the same time.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; abortController &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbortController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;abortController&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;signal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onabort&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// All NFC operations have been aborted.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; signal&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; abortController&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;signal &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; signal&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; abortController&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;signal &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#abortButton&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  abortController&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-a-text-record&quot;&gt;Read and write a text record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-a-text-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The text record &lt;code&gt;data&lt;/code&gt; can be decoded with a &lt;code&gt;TextDecoder&lt;/code&gt; instantiated with the
record &lt;code&gt;encoding&lt;/code&gt; property. Note that the language of the text record is
available through its &lt;code&gt;lang&lt;/code&gt; property.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readTextRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encoding&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Text: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lang&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write a simple text record, pass a string to the NDEFReader &lt;code&gt;write()&lt;/code&gt; method.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Text records are UTF-8 by default and assume the current document&#39;s language but
both properties (&lt;code&gt;encoding&lt;/code&gt; and &lt;code&gt;lang&lt;/code&gt;) can be specified using the full syntax
for creating a custom NDEF record.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;a2utf16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint16Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; string&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    result&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; string&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;codePointAt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  lang&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  encoding&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;utf-16&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;a2utf16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Bonjour, François !&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;textRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-a-url-record&quot;&gt;Read and write a URL record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-a-url-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;TextDecoder&lt;/code&gt; to decode the record&#39;s &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readUrlRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;URL: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write a URL record, pass an NDEF message dictionary to the NDEFReader
&lt;code&gt;write()&lt;/code&gt; method. The URL record contained in the NDEF message is defined as an
object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;url&amp;quot;&lt;/code&gt; and a &lt;code&gt;data&lt;/code&gt; key set to the URL
string.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; urlRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://w3c.github.io/web-nfc/&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;urlRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-a-mime-type-record&quot;&gt;Read and write a MIME type record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-a-mime-type-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;mediaType&lt;/code&gt; property of a MIME type record represents the MIME type of the
NDEF record payload so that &lt;code&gt;data&lt;/code&gt; can be properly decoded. For instance, use
&lt;code&gt;JSON.parse&lt;/code&gt; to decode JSON text and an Image element to decode image data.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readMimeRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mediaType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;JSON: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mediaType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;image/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mediaType &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; img &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    img&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;src &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;img&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle other MIME types.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write a MIME type record, pass an NDEF message dictionary to the NDEFReader
&lt;code&gt;write()&lt;/code&gt; method. The MIME type record contained in the NDEF message is defined
as an object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;mime&amp;quot;&lt;/code&gt;, a &lt;code&gt;mediaType&lt;/code&gt; key set to
the actual MIME type of the content, and a &lt;code&gt;data&lt;/code&gt; key set to an object that can
be either an &lt;code&gt;ArrayBuffer&lt;/code&gt; or provides a view on to an &lt;code&gt;ArrayBuffer&lt;/code&gt; (e.g.
&lt;code&gt;Uint8Array&lt;/code&gt;, &lt;code&gt;DataView&lt;/code&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; encoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  firstname&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;François&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  lastname&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Beaufort&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; jsonRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  mediaType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; encoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; imageRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  mediaType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;icon1.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;jsonRecord&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; imageRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-an-absolute-url-record&quot;&gt;Read and write an absolute-URL record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-an-absolute-url-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The absolute-URL record &lt;code&gt;data&lt;/code&gt; can be decoded with a simple &lt;code&gt;TextDecoder&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readAbsoluteUrlRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;absolute-url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textDecoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Absolute URL: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write an absolute URL record, pass an NDEF message dictionary to the
NDEFReader &lt;code&gt;write()&lt;/code&gt; method. The absolute-URL record contained in the NDEF
message is defined as an object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;absolute-url&amp;quot;&lt;/code&gt;
and a &lt;code&gt;data&lt;/code&gt; key set to the URL string.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; absoluteUrlRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;absolute-url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://w3c.github.io/web-nfc/&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;absoluteUrlRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-a-smart-poster-record&quot;&gt;Read and write a smart poster record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-a-smart-poster-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A smart poster record (used in magazine advertisements, fliers, billboards,
etc.), describes some web content as an NDEF record that contains an NDEF
message as its payload. Call &lt;code&gt;record.toRecords()&lt;/code&gt; to transform &lt;code&gt;data&lt;/code&gt; to a list
of records contained in the smart poster record. It should have a URL record, a
text record for the title, a MIME type record for the image, and some &lt;a href=&quot;https://w3c.github.io/web-nfc/#smart-poster-record&quot; rel=&quot;noopener&quot;&gt;custom
local type records&lt;/a&gt; such as &lt;code&gt;&amp;quot;:t&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;:act&amp;quot;&lt;/code&gt;, and &lt;code&gt;&amp;quot;:s&amp;quot;&lt;/code&gt; respectively for the
type, action, and size of the smart poster record.&lt;/p&gt;
&lt;p&gt;Local type records are unique only within the local context of the containing
NDEF record. Use them when the meaning of the types doesn&#39;t matter outside
of the local context of the containing record and when storage usage is a hard
constraint. Local type record names always start with &lt;code&gt;:&lt;/code&gt; in Web NFC (e.g.
&lt;code&gt;&amp;quot;:t&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;:s&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;:act&amp;quot;&lt;/code&gt;). This is to differentiate a text record from a local
type text record for instance.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readSmartPosterRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;smartPosterRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;smart-poster&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; record &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; smartPosterRecord&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toRecords&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encoding&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;:act&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      action &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUint8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle other type of records such as `:t`, `:s`.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;action&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Do the action&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Save for later&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Open for editing&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write a smart poster record, pass an NDEF message to the NDEFReader &lt;code&gt;write()&lt;/code&gt;
method. The smart poster record contained in the NDEF message is defined as an
object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;smart-poster&amp;quot;&lt;/code&gt; and a &lt;code&gt;data&lt;/code&gt; key set to
an object that represents (once again) an NDEF message contained in the
smart poster record.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; encoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; smartPosterRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;smart-poster&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// URL record for smart poster content&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://my.org/content/19911&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// title record for smart poster content&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Funny dance&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;:t&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// type record, a local type to smart poster&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; encoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;image/gif&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// MIME type of smart poster content&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;:s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// size record, a local type to smart poster&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint32Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// byte size of smart poster content&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;:act&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// action record, a local type to smart poster&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// do the action, in this case open in the browser&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// icon record, a MIME type record&lt;/span&gt;&lt;br /&gt;        mediaType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;icon1.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// another icon record&lt;/span&gt;&lt;br /&gt;        mediaType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;icon2.jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;smartPosterRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-an-external-type-record&quot;&gt;Read and write an external type record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-an-external-type-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To create application defined records, use external type records. These may
contain an NDEF message as payload that is accessible with &lt;code&gt;toRecords()&lt;/code&gt;. Their
name contains the domain name of the issuing organization, a colon and a type
name that is at least one character long, for instance &lt;code&gt;&amp;quot;example.com:foo&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readExternalTypeRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;externalTypeRecord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; record &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; externalTypeRecord&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toRecords&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encoding&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Text: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textDecoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lang&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;recordType &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; decoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;URL: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;decoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;record&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// TODO: Handle other type of records.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To write an external type record, pass an NDEF message dictionary to the
NDEFReader &lt;code&gt;write()&lt;/code&gt; method. The external type record contained in the NDEF
message is defined as an object with a &lt;code&gt;recordType&lt;/code&gt; key set to the name of the
external type and a &lt;code&gt;data&lt;/code&gt; key set to an object that represents an NDEF message
contained in the external type record. Note that the &lt;code&gt;data&lt;/code&gt; key can also be
either an &lt;code&gt;ArrayBuffer&lt;/code&gt; or provides a view on to an &lt;code&gt;ArrayBuffer&lt;/code&gt; (e.g.
&lt;code&gt;Uint8Array&lt;/code&gt;, &lt;code&gt;DataView&lt;/code&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; externalTypeRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;example.game:a&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://example.game/42&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Game context given here&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        mediaType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;image.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;externalTypeRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read-and-write-an-empty-record&quot;&gt;Read and write an empty record &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#read-and-write-an-empty-record&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An empty record has no payload.&lt;/p&gt;
&lt;p&gt;To write an empty record, pass an NDEF message dictionary to the NDEFReader
&lt;code&gt;write()&lt;/code&gt; method. The empty record contained in the NDEF message is defined as
an object with a &lt;code&gt;recordType&lt;/code&gt; key set to &lt;code&gt;&amp;quot;empty&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; emptyRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;empty&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;emptyRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web NFC is available on Android in Chrome 89.&lt;/p&gt;
&lt;h2 id=&quot;dev-tips&quot;&gt;Dev Tips &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#dev-tips&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s a list of things I wish I had known when I started playing with Web NFC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android handles NFC tags at the OS-level before Web NFC is operational.&lt;/li&gt;
&lt;li&gt;You can find an NFC icon on &lt;a href=&quot;https://material.io/resources/icons/?icon=nfc&amp;amp;style=baseline&quot; rel=&quot;noopener&quot;&gt;material.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use NDEF record &lt;code&gt;id&lt;/code&gt; to easily identifying a record when needed.&lt;/li&gt;
&lt;li&gt;An unformatted NFC tag that supports NDEF contains a single record of the empty type.&lt;/li&gt;
&lt;li&gt;Writing an &lt;a href=&quot;https://developer.android.com/guide/topics/connectivity/nfc/nfc#aar&quot; rel=&quot;noopener&quot;&gt;android application record&lt;/a&gt; is easy, as shown below.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; encoder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextEncoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; aarRecord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  recordType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;android.com:pkg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; encoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;com.example.myapp&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ndef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NDEFReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; ndef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; records&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;aarRecord&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demos&quot;&gt;Demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Try out the &lt;a href=&quot;https://googlechrome.github.io/samples/web-nfc/&quot; rel=&quot;noopener&quot;&gt;official sample&lt;/a&gt; and check out some cool Web NFC demos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web-nfc-demo.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Cards demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kenchris.github.io/webnfc-groceries&quot; rel=&quot;noopener&quot;&gt;Grocery Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kenchris.github.io/webnfc-rsp/&quot; rel=&quot;noopener&quot;&gt;Intel RSP Sensor NFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webnfc-media-memo.netlify.com/&quot; rel=&quot;noopener&quot;&gt;Media MEMO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/webfundamentals-assets/videos/web-nfc-cards-demo.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Web NFC cards demo at Chrome Dev Summit 2019
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/community/web-nfc/&quot; rel=&quot;noopener&quot;&gt;Web NFC Community Group&lt;/a&gt; and the
Chrome team would love to hear about your thoughts and experiences with Web NFC.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work as expected? Or are there
missing methods or properties that you need to implement your idea?&lt;/p&gt;
&lt;p&gt;File a spec issue on the &lt;a href=&quot;https://github.com/w3c/web-nfc/issues&quot; rel=&quot;noopener&quot;&gt;Web NFC GitHub repo&lt;/a&gt; or add your thoughts to
an existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation
different from the spec?&lt;/p&gt;
&lt;p&gt;File a bug at &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ENFC&quot; rel=&quot;noopener&quot;&gt;https://new.crbug.com&lt;/a&gt;. Be sure to include as much
detail as you can, provide simple instructions for reproducing the bug, and have
&lt;em&gt;Components&lt;/em&gt; set to &lt;code&gt;Blink&amp;gt;NFC&lt;/code&gt;. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for
sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support&quot;&gt;Show support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#show-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use Web NFC? Your public support helps the Chrome team
prioritize features and shows other browser vendors how critical it is to
support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/chromiumdev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WebNFC&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WebNFC&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/web-nfc/&quot; rel=&quot;noopener&quot;&gt;Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web-nfc-demo.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Web NFC Demo&lt;/a&gt; | &lt;a href=&quot;https://glitch.com/edit/#!/web-nfc-demo?path=script.js:1:0&quot; rel=&quot;noopener&quot;&gt;Web NFC Demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=520391&quot; rel=&quot;noopener&quot;&gt;Tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/6261030015467520&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://chromestatus.com/features#component%3ABlink%3ENFC&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;NFC&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/nfc/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Big thanks to the &lt;a href=&quot;https://github.com/w3c/web-nfc/graphs/contributors&quot; rel=&quot;noopener&quot;&gt;folks at Intel&lt;/a&gt; for implementing Web NFC. Google Chrome
depends on a community of committers working together to move the Chromium
project forward. Not every Chromium committer is a Googler, and these
contributors deserve special recognition!&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Sensors for the web</title>
    <link href="https://web.dev/generic-sensor/"/>
    <updated>2017-09-18T00:00:00Z</updated>
    <id>https://web.dev/generic-sensor/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Today, sensor data is used in many platform-specific applications to enable use cases such as
immersive gaming, fitness tracking, and augmented or virtual reality. Wouldn&#39;t it be cool to bridge
the gap between platform-specific and web applications? Enter the
&lt;a href=&quot;https://www.w3.org/TR/generic-sensor/&quot; rel=&quot;noopener&quot;&gt;Generic Sensor API&lt;/a&gt;, for the web!&lt;/p&gt;
&lt;h2 id=&quot;what-is-generic-sensor-api&quot;&gt;What is the Generic Sensor API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#what-is-generic-sensor-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/generic-sensor/&quot; rel=&quot;noopener&quot;&gt;Generic Sensor API&lt;/a&gt; is a set of interfaces which expose
sensor devices to the web platform. The API consists of the base
&lt;a href=&quot;https://w3c.github.io/sensors/#the-sensor-interface&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Sensor&lt;/code&gt;&lt;/a&gt; interface and a set of concrete
sensor classes built on top. Having a base interface simplifies the implementation and specification
process for the concrete sensor classes. For instance, take a look at the
&lt;a href=&quot;https://w3c.github.io/gyroscope/#gyroscope-interface&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/a&gt; class. It is super tiny! The
core functionality is specified by the base interface, and &lt;code&gt;Gyroscope&lt;/code&gt; merely extends it with three
attributes representing angular velocity.&lt;/p&gt;
&lt;p&gt;Some sensor classes interface to actual hardware sensors such as, for example, the accelerometer or
gyroscope classes. These are referred to as low-level sensors. Other sensors, referred to as
&lt;a href=&quot;https://w3c.github.io/sensors/#sensor-fusion&quot; rel=&quot;noopener&quot;&gt;fusion sensors&lt;/a&gt;, merge data from several low level
sensors to expose information a script would otherwise need to calculate. For example, the
&lt;a href=&quot;https://www.w3.org/TR/orientation-sensor/#absoluteorientationsensor&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;AbsoluteOrientation&lt;/code&gt;&lt;/a&gt; sensor
provides a ready-to-use four-by-four rotation matrix based on the data obtained from the
accelerometer, gyroscope, and magnetometer.&lt;/p&gt;
&lt;p&gt;You might think that the web platform already provides sensor data and you are absolutely right! For
instance, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DeviceMotion&lt;/code&gt;&lt;/a&gt; and
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DeviceOrientation&lt;/code&gt;&lt;/a&gt;
events expose motion sensor data. So why do we need a new API?&lt;/p&gt;
&lt;p&gt;Comparing to the existing interfaces, Generic Sensor API provides a great number of advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generic Sensor API is a sensor framework that can be easily extended with new sensor classes and
each of these classes will keep the generic interface. The client code written for one sensor type
can be reused for another one with very few modifications!&lt;/li&gt;
&lt;li&gt;You can configure the sensor. For example, you can set the sampling frequency suitable for your
application needs.&lt;/li&gt;
&lt;li&gt;You can detect whether a sensor is available on the platform.&lt;/li&gt;
&lt;li&gt;Sensor readings have high precision timestamps, enabling better synchronization with other
activities in your application.&lt;/li&gt;
&lt;li&gt;Sensor data models and coordinate systems are clearly defined, allowing browser vendors to
implement interoperable solutions.&lt;/li&gt;
&lt;li&gt;The Generic Sensor based interfaces are not bound to the DOM (meaning they are neither &lt;code&gt;navigator&lt;/code&gt;
nor &lt;code&gt;window&lt;/code&gt; objects), and this opens up future opportunities for using the API within service
workers or implementing it in headless JavaScript runtimes, such as embedded
devices.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/generic-sensor/#privacy-and-security&quot;&gt;Security and privacy&lt;/a&gt; aspects are the top priority for the Generic Sensor
API and provide much better security as compared to older sensor APIs. There is integration with
the Permissions API.&lt;/li&gt;
&lt;li&gt;Automatic &lt;a href=&quot;https://web.dev/generic-sensor/#synchronization-with-screen-coordinates&quot;&gt;synchronization with screen coordinates&lt;/a&gt; is
available for &lt;code&gt;Accelerometer&lt;/code&gt;, &lt;code&gt;Gyroscope&lt;/code&gt;, &lt;code&gt;LinearAccelerationSensor&lt;/code&gt;,
&lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt;, &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; and &lt;code&gt;Magnetometer&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Generic Sensor API is supported by Google Chrome as of version 67. Most Chromium-derived
browsers like Microsoft Edge, Opera, or Samsung Internet support this API as well. For other
browsers, see &lt;a href=&quot;https://caniuse.com/mdn-api_sensor&quot; rel=&quot;noopener&quot;&gt;Can I use&lt;/a&gt;. Note that the Generic Sensor API can
be &lt;a href=&quot;https://web.dev/generic-sensor/#polyfill&quot;&gt;polyfilled&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;available-generic-sensor-apis&quot;&gt;Available generic sensor APIs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#available-generic-sensor-apis&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At the time of writing, there are several sensors that you can experiment with.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Motion sensors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Accelerometer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RelativeOrientationSensor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GravitySensor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Environmental sensors:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AmbientLightSensor&lt;/code&gt; (Behind the &lt;code&gt;#enable-generic-sensor-extra-classes&lt;/code&gt; flag in Chromium.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Magnetometer&lt;/code&gt; (Behind the &lt;code&gt;#enable-generic-sensor-extra-classes&lt;/code&gt; flag in Chromium.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Feature detection of hardware APIs is tricky, since you need to detect both whether the browser
supports the interface in question, &lt;em&gt;and&lt;/em&gt; whether the device has the corresponding sensor. Checking
whether the browser supports an interface is straightforward. (Replace &lt;code&gt;Accelerometer&lt;/code&gt; with any of
the other interfaces mentioned &lt;a href=&quot;https://web.dev/generic-sensor/#available-generic-sensor-apis&quot;&gt;above&lt;/a&gt;.)&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Accelerometer&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The `Accelerometer` interface is supported by the browser.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Does the device have an accelerometer, though?&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For an actually meaningful feature detection result, you need to try to connect to the sensor, too.
This example illustrates how to do that.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; accelerometer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  accelerometer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Accelerometer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  accelerometer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Handle runtime errors.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;NotAllowedError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Permission to access sensor was denied.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;NotReadableError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Cannot connect to the sensor.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  accelerometer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  accelerometer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Handle construction errors.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;SecurityError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Sensor construction was blocked by the Permissions Policy.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ReferenceError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Sensor is not supported by the User Agent.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;polyfill&quot;&gt;Polyfill &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#polyfill&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For browsers that do not support the Generic Sensor API, a
&lt;a href=&quot;https://github.com/kenchris/sensor-polyfills&quot; rel=&quot;noopener&quot;&gt;polyfill&lt;/a&gt; is available. The polyfill allows you to
load only the relevant sensors&#39; implementations.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Import the objects you need.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Gyroscope&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; AbsoluteOrientationSensor &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./src/motion-sensors.js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// And they&#39;re ready for use!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; gyroscope &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Gyroscope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; orientation &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbsoluteOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;what-are-sensors-how-to-use-them&quot;&gt;What are all these sensors? How can I use them? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#what-are-sensors-how-to-use-them&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sensors is an area that might need a brief introduction. If you are familiar with sensors, you can
jump right to the &lt;a href=&quot;https://web.dev/generic-sensor/#lets-code&quot;&gt;hands-on coding section&lt;/a&gt;. Otherwise, let&#39;s look at each supported
sensor in detail.&lt;/p&gt;
&lt;h3 id=&quot;acceleration-and-linear-accelerometer-sensor&quot;&gt;Accelerometer and linear acceleration sensor &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#acceleration-and-linear-accelerometer-sensor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
 &lt;figure class=&quot;w-figure&quot;&gt;
 &lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;800&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/FCf9iuCaNASEB3V0x8Ld.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Accelerometer sensor measurements
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Accelerometer&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Accelerometer&lt;/code&gt;&lt;/a&gt; sensor
measures acceleration of a device hosting the sensor on three axes (X, Y, and Z). This sensor is an
inertial sensor, meaning that when the device is in linear free fall, the total measured
acceleration would be 0 m/s&lt;sup&gt;2&lt;/sup&gt;, and when a device lying flat on a table, the acceleration
in upwards direction (Z axis) will be equal to the Earth&#39;s gravity, i.e. g ≈ +9.8 m/s&lt;sup&gt;2&lt;/sup&gt; as
it is measuring the force of the table pushing the device upwards. If you push the device to the
right, acceleration on the X axis would be positive, or negative if the device is accelerated from
the right toward the left.&lt;/p&gt;
&lt;p&gt;Accelerometers can be used for things like: step counting, motion sensing, or simple device
orientation. Quite often, accelerometer measurements are combined with data from other sources to
create fusion sensors, such as, orientation sensors.&lt;/p&gt;
&lt;p&gt;The
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LinearAccelerationSensor&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;&lt;/a&gt;
measures acceleration that is applied to the device hosting the sensor, excluding the contribution
of gravity. When a device is at rest, for instance lying flat on the table, the sensor would measure
≈ 0 m/s&lt;sup&gt;2&lt;/sup&gt; acceleration on three axes.&lt;/p&gt;
&lt;h3 id=&quot;gravity-sensor&quot;&gt;Gravity sensor &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#gravity-sensor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is already possible for users to manually derive readings close to those of a gravity sensor by
manually inspecting &lt;code&gt;Accelerometer&lt;/code&gt; and &lt;code&gt;LinearAccelerometer&lt;/code&gt; readings, but this can be cumbersome
and depend on the accuracy of the values provided by those sensors. Platforms such as Android can
provide gravity readings as part of the operating system, which should be cheaper in terms of
computation, provide more accurate values depending on the user&#39;s hardware, and be easier to use in
terms of API ergonomics. The
&lt;a href=&quot;https://w3c.github.io/accelerometer/#gravitysensor-interface&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;GravitySensor&lt;/code&gt;&lt;/a&gt; returns the effect
of acceleration along the device&#39;s X, Y, and Z axis due to gravity.&lt;/p&gt;
&lt;h3 id=&quot;gyroscope-sensor&quot;&gt;Gyroscope &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#gyroscope-sensor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
 &lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;800&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/7VItzZMC9Rb2QglsE3s5.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Gyroscope sensor measurements
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gyroscope&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/a&gt; sensor measures
angular velocity in radians per second around the device&#39;s local X, Y, and Z axis. Most consumer
devices have mechanical (&lt;a href=&quot;https://en.wikipedia.org/wiki/Microelectromechanical_systems&quot; rel=&quot;noopener&quot;&gt;MEMS&lt;/a&gt;)
gyroscopes, which are inertial sensors that measure rotation rate based on
&lt;a href=&quot;https://en.wikipedia.org/wiki/Coriolis_force&quot; rel=&quot;noopener&quot;&gt;inertial Coriolis force&lt;/a&gt;. MEMS gyroscopes are prone
to drift that is caused by the sensor&#39;s gravitational sensitivity which deforms the sensor&#39;s
internal mechanical system. Gyroscopes oscillate at relative high frequencies, e.g., 10s of kHz, and
therefore, might consume more power compared to other sensors.&lt;/p&gt;
&lt;h3 id=&quot;orientation-sensors&quot;&gt;Orientation sensors &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#orientation-sensors&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;800&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/rhpW784mCvR78nwg6rd1.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Absolute orientation sensor measurements
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AbsoluteOrientationSensor&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt;&lt;/a&gt;
is a fusion sensor that measures rotation of a device in relation to the Earth&#39;s coordinate system,
while the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RelativeOrientationSensor&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;RelativeOrientationSensor&lt;/code&gt;&lt;/a&gt;
provides data representing rotation of a device hosting motion sensors in relation to a stationary
reference coordinate system.&lt;/p&gt;
&lt;p&gt;All modern 3D JavaScript frameworks support &lt;a href=&quot;https://en.wikipedia.org/wiki/Quaternion&quot; rel=&quot;noopener&quot;&gt;quaternions&lt;/a&gt;
and &lt;a href=&quot;https://en.wikipedia.org/wiki/Rotation_matrix&quot; rel=&quot;noopener&quot;&gt;rotation matrices&lt;/a&gt; to represent rotation;
however, if you use WebGL directly, the &lt;code&gt;OrientationSensor&lt;/code&gt; conveniently has both a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OrientationSensor/quaternion&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;quaternion&lt;/code&gt; property&lt;/a&gt;
and a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OrientationSensor/populateMatrix&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;populateMatrix()&lt;/code&gt; method&lt;/a&gt;.
Here are few snippets:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://threejs.org/docs/index.html#api/core/Object3D.quaternion&quot; rel=&quot;noopener&quot;&gt;three.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; torusGeometry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;THREE&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TorusGeometry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; material &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;THREE&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x0071c5&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; torus &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;THREE&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mesh&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torusGeometry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; material&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;scene&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torus&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Update mesh rotation using quaternion.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorAbs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbsoluteOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; torus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quaternion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quaternion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Update mesh rotation using rotation matrix.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorRel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RelativeOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; rotationMatrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Float32Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensor_rel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  sensorRel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;populateMatrix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rotationMatrix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  torus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;matrix&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rotationMatrix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorRel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://doc.babylonjs.com/classes/3.0/abstractmesh#rotationquaternion-quaternion-classes-3-0-quaternion-&quot; rel=&quot;noopener&quot;&gt;BABYLON&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mesh &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BABYLON&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Mesh&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CreateCylinder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;mesh&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scene&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorRel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RelativeOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorRel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; mesh&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rotationQuaternion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sensorRel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quaternion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorRel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.khronos.org/registry/webgl/specs/latest/2.0/&quot; rel=&quot;noopener&quot;&gt;WebGL&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Initialize sensor and update model matrix when new reading is available.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; modMatrix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Float32Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorAbs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbsoluteOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;populateMatrix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;modMatrix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;sensorAbs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Somewhere in rendering code, update vertex shader attribute for the model&lt;/span&gt;&lt;br /&gt;gl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;uniformMatrix4fv&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;modMatrixAttr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; modMatrix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Orientation sensors enable various use cases, such as immersive gaming, augmented and virtual
reality.&lt;/p&gt;
&lt;p&gt;For more information about motion sensors, advanced use cases, and requirements, check out the
&lt;a href=&quot;https://w3c.github.io/motion-sensors/&quot; rel=&quot;noopener&quot;&gt;motion sensors explainer&lt;/a&gt; document.&lt;/p&gt;
&lt;h2 id=&quot;synchronization-with-screen-coordinates&quot;&gt;Synchronization with screen coordinates &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#synchronization-with-screen-coordinates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default, &lt;a href=&quot;https://w3c.github.io/sensors/#spatial-sensor&quot; rel=&quot;noopener&quot;&gt;spatial sensors&#39;&lt;/a&gt; readings are resolved
in a local coordinate system that is bound to the device and does not take screen orientation into
account.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Device coordinate system&quot; decoding=&quot;async&quot; height=&quot;520&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/xI2V6To5gx5WbXunpOBh.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Device coordinate system&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;However, many use cases like games or augmented and virtual reality require sensor readings to be
resolved in a coordinate system that is instead bound to the screen orientation.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screen coordinate system&quot; decoding=&quot;async&quot; height=&quot;520&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/x1PUlYnAXb9QkqwLV04g.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Screen coordinate system&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Previously, remapping of sensor readings to screen coordinates had to be implemented in JavaScript.
This approach is inefficient and it also quite significantly increases the complexity of the web
application code; the web application must watch screen orientation changes and perform coordinates
transformations for sensor readings, which is not a trivial thing to do for Euler angles or
quaternions.&lt;/p&gt;
&lt;p&gt;The Generic Sensor API provides a much simpler and reliable solution! The local coordinate system is
configurable for all defined spatial sensor classes: &lt;code&gt;Accelerometer&lt;/code&gt;, &lt;code&gt;Gyroscope&lt;/code&gt;,
&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;, &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt;, &lt;code&gt;RelativeOrientationSensor&lt;/code&gt;, and
&lt;code&gt;Magnetometer&lt;/code&gt;. By passing the &lt;code&gt;referenceFrame&lt;/code&gt; option to the sensor object constructor, the user
defines whether the returned readings will be resolved in
&lt;a href=&quot;https://w3c.github.io/accelerometer/#device-coordinate-system&quot; rel=&quot;noopener&quot;&gt;device&lt;/a&gt; or
&lt;a href=&quot;https://w3c.github.io/accelerometer/#screen-coordinate-system&quot; rel=&quot;noopener&quot;&gt;screen&lt;/a&gt; coordinates.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Sensor readings are resolved in the Device coordinate system by default.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Alternatively, could be RelativeOrientationSensor({referenceFrame: &quot;device&quot;}).&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorRelDevice &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RelativeOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Sensor readings are resolved in the Screen coordinate system. No manual remapping is required!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sensorRelScreen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RelativeOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; referenceFrame&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;screen&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;lets-code&quot;&gt;Let&#39;s code! &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#lets-code&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Generic Sensor API is very simple and easy-to-use! The Sensor interface has
&lt;a href=&quot;https://w3c.github.io/sensors/#sensor-start&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; and
&lt;a href=&quot;https://w3c.github.io/sensors/#sensor-stop&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; methods to control sensor state and several
event handlers for receiving notifications about sensor activation, errors and newly available
readings. The concrete sensor classes usually add their specific reading attributes to the base
class.&lt;/p&gt;
&lt;h3 id=&quot;development-environment&quot;&gt;Development environment &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#development-environment&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;During development you&#39;ll be able to use sensors through &lt;code&gt;localhost&lt;/code&gt;. If you are developing for
mobile devices, set up
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/remote-debugging/local-server&quot; rel=&quot;noopener&quot;&gt;port forwarding&lt;/a&gt;
for your local server, and you are ready to rock!&lt;/p&gt;
&lt;p&gt;When your code is ready, deploy it on a server that supports HTTPS.
&lt;a href=&quot;https://pages.github.com/&quot; rel=&quot;noopener&quot;&gt;GitHub Pages&lt;/a&gt; are served over HTTPS, making it a great place to share
your demos.&lt;/p&gt;
&lt;h3 id=&quot;3d-model-rotation&quot;&gt;3D model rotation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#3d-model-rotation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this simple example, we use the data from an absolute orientation sensor to modify the rotation
quaternion of a 3D model. The &lt;code&gt;model&lt;/code&gt; is a three.js
&lt;a href=&quot;https://threejs.org/docs/index.html#api/core/Object3D&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Object3D&lt;/code&gt;&lt;/a&gt; class instance that has a
&lt;a href=&quot;https://threejs.org/docs/index.html#api/core/Object3D.quaternion&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;quaternion&lt;/code&gt;&lt;/a&gt; property. The
following code snippet from the
&lt;a href=&quot;https://github.com/intel/generic-sensor-demos/tree/master/orientation-phone&quot; rel=&quot;noopener&quot;&gt;orientation phone&lt;/a&gt;
demo, illustrates how the absolute orientation sensor can be used to rotate a 3D model.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;initSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  sensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbsoluteOrientationSensor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; frequency&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  sensor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quaternion&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sensor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quaternion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  sensor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;NotReadableError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Sensor is not available.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  sensor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The device&#39;s orientation will be reflected in 3D &lt;code&gt;model&lt;/code&gt; rotation within the WebGL scene.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Sensor updates 3D model&amp;#x27;s orientation&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 338px) 338px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/CdYXzmhv0ZNBvETuC6SX.png?auto=format&amp;w=676 676w&quot; width=&quot;338&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Sensor updates orientation of a 3D model&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;punchmeter&quot;&gt;Punchmeter &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#punchmeter&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet is extracted from the
&lt;a href=&quot;https://github.com/intel/generic-sensor-demos/tree/master/punchmeter&quot; rel=&quot;noopener&quot;&gt;punchmeter demo&lt;/a&gt;,
illustrating how the linear acceleration sensor can be used to calculate the maximum velocity of a
device under the assumption that it is initially laying still.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;maxSpeed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vx &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;t &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* … */&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onreading&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; dt &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timestamp &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;t&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.001&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// In seconds.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vx &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; dt&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; speed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vx&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;maxSpeed &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; speed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;maxSpeed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; speed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;t &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;timestamp&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The current velocity is calculated as an approximation to the integral of the acceleration function.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Demo web application for punch speed measurement&quot; decoding=&quot;async&quot; height=&quot;347&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 338px) 338px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/37a9DYv1huOcraAMfXpO.png?auto=format&amp;w=676 676w&quot; width=&quot;338&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Measurement of a punch speed&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;debugging-and-sensor-overriding-with-chrome-devtools&quot;&gt;Debugging and sensor overriding with Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#debugging-and-sensor-overriding-with-chrome-devtools&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In some cases you don&#39;t need a physical device to play with the Generic Sensor API. Chrome DevTools
has great support for
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode/orientation&quot; rel=&quot;noopener&quot;&gt;simulating device orientation&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome DevTools used to override the custom orientation data of a virtual phone&quot; decoding=&quot;async&quot; height=&quot;648&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/OWhCoZXMZllhI7fN7BMR.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Simulating device orientation with Chrome DevTools&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;privacy-and-security&quot;&gt;Privacy and security &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#privacy-and-security&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sensor readings are sensitive data which can be subject to various attacks from malicious web pages.
Implementations of Generic Sensor APIs enforce a few limitations to mitigate the possible security
and privacy risks. These limitations must be taken into account by developers who intend to use the
API, so let&#39;s briefly list them.&lt;/p&gt;
&lt;h3 id=&quot;only-https&quot;&gt;Only HTTPS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#only-https&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Because Generic Sensor API is a powerful feature, the browser only allows it on secure contexts. In
practice it means that to use Generic Sensor API you&#39;ll need to access your page through HTTPS.
During development you can do so via &lt;a href=&quot;http://localhost/&quot; rel=&quot;noopener&quot;&gt;http://localhost&lt;/a&gt; but for production you&#39;ll
need to have HTTPS on your server. See the &lt;a href=&quot;https://web.dev/secure/&quot;&gt;Safe and secure&lt;/a&gt; collection for best practices
and guidelines.&lt;/p&gt;
&lt;h3 id=&quot;permissions-policy-integration&quot;&gt;Permissions Policy integration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#permissions-policy-integration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/webappsec-permissions-policy/&quot; rel=&quot;noopener&quot;&gt;Permissions Policy integration&lt;/a&gt; in Generic
Sensor API controls access to sensors data for a frame.&lt;/p&gt;
&lt;p&gt;By default the &lt;code&gt;Sensor&lt;/code&gt; objects can be created only within a main frame or same-origin subframes,
thus preventing cross-origin iframes from unsanctioned reading of sensor data. This default behavior
can be modified by explicitly enabling or disabling of the corresponding
&lt;a href=&quot;https://w3c.github.io/webappsec-permissions-policy/#features&quot; rel=&quot;noopener&quot;&gt;policy-controlled features&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The snippet below illustrates granting accelerometer data access to a cross-origin iframe, meaning
that now &lt;code&gt;Accelerometer&lt;/code&gt; or &lt;code&gt;LinearAccelerationSensor&lt;/code&gt; objects can be created there.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://third-party.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;accelerometer&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;sensor-readings-delivery-can-be-suspended&quot;&gt;Sensor readings delivery can be suspended &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#sensor-readings-delivery-can-be-suspended&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sensor readings are only accessible by a visible web page, i.e., when the user is actually
interacting with it. Moreover, sensor data would not be provided to the parent frame if the user
focus changes to a cross-origin subframe. This prevents the parent frame infering user input.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What&#39;s next? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#whats-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a set of already specified sensor classes to be implemented in the near future such as
&lt;a href=&quot;https://w3c.github.io/ambient-light/&quot; rel=&quot;noopener&quot;&gt;Ambient Light Sensor&lt;/a&gt; or
&lt;a href=&quot;https://w3c.github.io/proximity/&quot; rel=&quot;noopener&quot;&gt;Proximity Sensor&lt;/a&gt;; however, thanks to the great extensibility of
Generic Sensor framework we can anticipate appearance of even more new classes representing various
sensor types.&lt;/p&gt;
&lt;p&gt;Another important area for future work is improving the Generic Sensor API itself, the Generic
Sensor specification is currently a Candidate Recommendation, which means that there is still time
to make fixes and bring new functionality that developers need.&lt;/p&gt;
&lt;h2 id=&quot;you-can-help!&quot;&gt;You can help! &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#you-can-help!&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The sensor specifications reached
&lt;a href=&quot;https://www.w3.org/Consortium/Process/Process-19991111/tr.html#RecsCR&quot; rel=&quot;noopener&quot;&gt;Candidate Recommendation&lt;/a&gt;
maturity level, hence, the feedback from web and browser developers is highly appreciated. Let us
know what features would be great to add or if there is something you would like to modify in the
current API.&lt;/p&gt;
&lt;p&gt;Please feel free to file &lt;a href=&quot;https://github.com/w3c/sensors/issues/new&quot; rel=&quot;noopener&quot;&gt;specification issues&lt;/a&gt; as well
as &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry&quot; rel=&quot;noopener&quot;&gt;bugs&lt;/a&gt; for the Chrome implementation.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Demo projects:
&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/&quot; rel=&quot;noopener&quot;&gt;https://intel.github.io/generic-sensor-demos/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Generic Sensor API specification: &lt;a href=&quot;https://w3c.github.io/sensors/&quot; rel=&quot;noopener&quot;&gt;https://w3c.github.io/sensors/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Specification issues:
&lt;a href=&quot;https://github.com/w3c/sensors/issues&quot; rel=&quot;noopener&quot;&gt;https://github.com/w3c/sensors/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;W3C working group mailing list: &lt;a href=&quot;mailto:public-device-apis@w3.org&quot; rel=&quot;noopener&quot;&gt;public-device-apis@w3.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome Feature Status:
&lt;a href=&quot;https://www.chromestatus.com/feature/5698781827825664&quot; rel=&quot;noopener&quot;&gt;https://www.chromestatus.com/feature/5698781827825664&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implementation bugs:
&lt;a href=&quot;http://crbug.com/?q=component:Blink%3ESensor&quot; rel=&quot;noopener&quot;&gt;http://crbug.com?q=component:Blink&amp;gt;Sensor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/generic-sensor/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; and
&lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt;. Hero image by
&lt;a href=&quot;https://www.flickr.com/photos/msk13/&quot; rel=&quot;noopener&quot;&gt;Misko&lt;/a&gt; via
&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Simple_Gyroscope.jpg&quot; rel=&quot;noopener&quot;&gt;Wikimedia Commons&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Alex Shalamov</name>
    </author><author>
      <name>Mikhail Pozdnyakov</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Accessing hardware devices on the web</title>
    <link href="https://web.dev/devices-introduction/"/>
    <updated>2021-02-12T00:00:00Z</updated>
    <id>https://web.dev/devices-introduction/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The goal of this guide is to help you pick the best API to communicate with a
hardware device (e.g. webcam, microphone, etc.) on the web. By &amp;quot;best&amp;quot; I mean it
gives you everything you need with the shortest amount of work. In other words,
you know the general use case you want to solve (e.g. accessing video) but you
don&#39;t know what API to use or wonder if there&#39;s another way to achieve it.&lt;/p&gt;
&lt;p&gt;One problem that I commonly see web developers fall into is jumping into
low-level APIs without learning about the higher-level APIs that are easier to
implement and provide a better UX. Therefore, this guide starts by recommending
higher-level APIs first, but also mentions lower-level APIs in case you have
determined that the higher-level API doesn&#39;t meet your needs.&lt;/p&gt;
&lt;h2 id=&quot;input&quot;&gt;🕹 Receive input events from this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#input&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Try listening for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent&quot; rel=&quot;noopener&quot;&gt;Keyboard&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events&quot; rel=&quot;noopener&quot;&gt;Pointer&lt;/a&gt; events. If this device is a game
controller, use the &lt;a href=&quot;https://web.dev/gamepad/&quot;&gt;Gamepad API&lt;/a&gt; to know which buttons are being pressed and
which axes moved.&lt;/p&gt;
&lt;p&gt;If none of these options work for you, a low-level API may be the solution.
Check out &lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;audio-video&quot;&gt;📸 Access audio and video from this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#audio-video&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia&quot; rel=&quot;noopener&quot;&gt;MediaDevices.getUserMedia()&lt;/a&gt; to get live audio and video streams from this
device and learn about &lt;a href=&quot;https://www.html5rocks.com/en/tutorials/getusermedia/intro/&quot; rel=&quot;noopener&quot;&gt;capturing audio and video&lt;/a&gt;. You can also &lt;a href=&quot;https://web.dev/camera-pan-tilt-zoom/&quot;&gt;control the
camera&#39;s pan, tilt, and zoom&lt;/a&gt;, and other camera settings such as &lt;a href=&quot;https://developers.google.com/web/updates/2016/12/imagecapture&quot; rel=&quot;noopener&quot;&gt;brightness and
contrast&lt;/a&gt;, and even &lt;a href=&quot;https://beaufortfrancois.github.io/sandbox/image-capture/playground&quot; rel=&quot;noopener&quot;&gt;take still images&lt;/a&gt;. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API&quot; rel=&quot;noopener&quot;&gt;Web Audio&lt;/a&gt; can be used to add effects
to audio, create audio visualizations, or apply spatial effects (such as
panning). Check out &lt;a href=&quot;https://web.dev/profiling-web-audio-apps-in-chrome/&quot;&gt;how to profile the performance of Web Audio apps&lt;/a&gt; in Chrome
as well.&lt;/p&gt;
&lt;p&gt;If none of these options work for you, a low-level API may be the solution.
Check out &lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;print&quot;&gt;🖨 Print to this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#print&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/print&quot; rel=&quot;noopener&quot;&gt;window.print()&lt;/a&gt; to open a browser dialog that lets the user pick this
device as a destination to print the current document.&lt;/p&gt;
&lt;p&gt;If this doesn&#39;t work for you, a low-level API may be the solution. Check out
&lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;auth&quot;&gt;🔐 Authenticate with this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#auth&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https://webauthn.io/&quot; rel=&quot;noopener&quot;&gt;WebAuthn&lt;/a&gt; to create a strong, attested, and origin-scoped public-key
credential with this hardware security device to authenticate users. It supports
the use of Bluetooth, NFC, and USB-roaming U2F or FIDO2 authenticators —also
known as security keys— as well as a platform authenticator, which lets users
authenticate with their fingerprints or screen locks. Check out &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/webauthn-reauth/&quot; rel=&quot;noopener&quot;&gt;Build your
first WebAuthn app&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If this device is another type of hardware security device (e.g. a
cryptocurrency wallet), a low-level API may be the solution. Check out &lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover
how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;files&quot;&gt;🗄 Access files on this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt; to read from and save changes directly to files
and folders on the user&#39;s device. If not available, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications&quot; rel=&quot;noopener&quot;&gt;File API&lt;/a&gt; to ask
the user to select local files from a browser dialog and then read the contents
of those files.&lt;/p&gt;
&lt;p&gt;If none of these options work for you, a low-level API may be the solution.
Check out &lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;sensors&quot;&gt;🧲 Access sensors on this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#sensors&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://web.dev/generic-sensor/&quot;&gt;Generic Sensor API&lt;/a&gt; to read raw sensor values from motion sensors (e.g.
accelerometer or gyroscope) and environmental sensors (e.g. ambient light,
magnetometer). If not available, use the &lt;a href=&quot;https://developers.google.com/web/fundamentals/native-hardware/device-orientation&quot; rel=&quot;noopener&quot;&gt;DeviceMotion and DeviceOrientation&lt;/a&gt;
events to get access to the built-in accelerometer, gyroscope, and compass in
mobile devices.&lt;/p&gt;
&lt;p&gt;If it doesn&#39;t work for you, a low-level API may be the solution. Check out
&lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;gps&quot;&gt;🛰 Access GPS coordinates on this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#gps&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://developers.google.com/web/fundamentals/native-hardware/user-location&quot; rel=&quot;noopener&quot;&gt;Geolocation API&lt;/a&gt; to get the latitude and longitude of the user&#39;s
current position on this device.&lt;/p&gt;
&lt;p&gt;If it doesn&#39;t work for you, a low-level API may be the solution. Check out
&lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;battery&quot;&gt;🔋 Check the battery on this device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#battery&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Battery_Status_API&quot; rel=&quot;noopener&quot;&gt;Battery API&lt;/a&gt; to get host information about the battery charge level and
be notified when the battery level or charging status change.&lt;/p&gt;
&lt;p&gt;If it doesn&#39;t work for you, a low-level API may be the solution. Check out
&lt;a href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;Discover how to communicate with your device&lt;/a&gt; to start your journey.&lt;/p&gt;
&lt;h2 id=&quot;network&quot;&gt;📞 Communicate with this device over the network &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#network&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the local network, use the &lt;a href=&quot;https://www.chromestatus.com/feature/5778318691401728&quot; rel=&quot;noopener&quot;&gt;Remote Playback API&lt;/a&gt; to broadcast audio and/or
video on a remote playback device (e.g. a smart TV or a wireless speaker) or use
the &lt;a href=&quot;https://developers.google.com/web/updates/2018/04/present-web-pages-to-secondary-attached-displays&quot; rel=&quot;noopener&quot;&gt;Presentation API&lt;/a&gt; to render a web page on a second screen (e.g. a secondary
display connected with an HDMI cable or a smart TV connected wirelessly).&lt;/p&gt;
&lt;p&gt;If this device exposes a web server, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot; rel=&quot;noopener&quot;&gt;Fetch API&lt;/a&gt; and/or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API&quot; rel=&quot;noopener&quot;&gt;WebSockets&lt;/a&gt; to
fetch some data from this device by hitting appropriate endpoints. While TCP and
UDP sockets are not available on the web, check out &lt;a href=&quot;https://web.dev/webtransport/&quot;&gt;WebTransport&lt;/a&gt; to handle
interactive, bidirectional, and multiplexed network connections. Note that
&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot;&gt;WebRTC&lt;/a&gt; can also be used to communicate data in real-time with other browsers
using a peer-to-peer protocol.&lt;/p&gt;
&lt;h2 id=&quot;discover&quot;&gt;🧱 Discover how to communicate with your device &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#discover&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The decision of what low-level API you should use is determined by the nature of
your physical connection to the device. If it is wireless, check out Web NFC for
very short-range wireless connections and Web Bluetooth for nearby wireless
devices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With &lt;a href=&quot;https://web.dev/nfc&quot;&gt;Web NFC&lt;/a&gt;, read and write to this device when it&#39;s in close proximity to
the user&#39;s device (usually 5–10 cm, 2–4 inches). Tools like &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.nxp.taginfolite&quot; rel=&quot;noopener&quot;&gt;NFC TagInfo by
NXP&lt;/a&gt; allow you to browse the content of this device for reverse-engineering
purposes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;a href=&quot;https://web.dev/bluetooth/&quot;&gt;Web Bluetooth&lt;/a&gt;, connect to this device over a Bluetooth Low Energy
connection. It should be pretty easy to communicate with when it uses
standardized Bluetooth GATT services (such as the battery service) as their
behavior is &lt;a href=&quot;https://www.bluetooth.com/specifications/gatt/&quot; rel=&quot;noopener&quot;&gt;well-documented&lt;/a&gt;. If not, at this point, you either have to find
some hardware documentation for this device or reverse-engineer it. You can
use external tools like &lt;a href=&quot;https://play.google.com/store/apps/details?id=no.nordicsemi.android.mcp&quot; rel=&quot;noopener&quot;&gt;nRF Connect for Mobile&lt;/a&gt; and built-in browser tools
such as the internal page &lt;code&gt;about://bluetooth-internals&lt;/code&gt; in Chromium-based
browsers for that. Check out &lt;a href=&quot;https://urish.medium.com/reverse-engineering-a-bluetooth-lightbulb-56580fcb7546&quot; rel=&quot;noopener&quot;&gt;Reverse-Engineering a Bluetooth Lightbulb&lt;/a&gt; from
Uri Shaked. Note that Bluetooth devices may also speak the HID or serial
protocols.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If wired, check out these APIs in this specific order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;With &lt;a href=&quot;https://web.dev/hid/&quot;&gt;WebHID&lt;/a&gt;, understanding HID reports and report descriptors through
&lt;a href=&quot;https://webhid-collections.glitch.me/&quot; rel=&quot;noopener&quot;&gt;collections&lt;/a&gt; is key to your comprehension of this device. This can be
challenging without vendor documentation for this device. Tools like
&lt;a href=&quot;https://gitlab.com/wireshark/wireshark/-/wikis/CaptureSetup/USB&quot; rel=&quot;noopener&quot;&gt;Wireshark&lt;/a&gt; can help you reverse-engineering it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;a href=&quot;https://web.dev/serial/&quot;&gt;Web Serial&lt;/a&gt;, without vendor documentation for this device and what
commands this device supports, it&#39;s hard but still possible with lucky
guessing. Reverse-engineering this device can be done by capturing raw USB
traffic with tools like &lt;a href=&quot;https://gitlab.com/wireshark/wireshark/-/wikis/CaptureSetup/USB&quot; rel=&quot;noopener&quot;&gt;Wireshark&lt;/a&gt;. You can also use the &lt;a href=&quot;https://googlechromelabs.github.io/serial-terminal/&quot; rel=&quot;noopener&quot;&gt;Serial Terminal
web app&lt;/a&gt; to experiment with this device if it uses a human-readable protocol.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;a href=&quot;https://web.dev/usb/&quot;&gt;WebUSB&lt;/a&gt;, without clear documentation for this device and what USB
commands this device supports, it&#39;s hard but still possible with lucky
guessing. Watch &lt;a href=&quot;https://www.youtube.com/watch?v=IpfZ8Nj3uiE&quot; rel=&quot;noopener&quot;&gt;Exploring WebUSB and its exciting potential&lt;/a&gt; from Suz
Hinton. You can also reverse-engineer this device by capturing raw USB
traffic and inspecting &lt;a href=&quot;https://www.beyondlogic.org/usbnutshell/usb5.shtml&quot; rel=&quot;noopener&quot;&gt;USB descriptors&lt;/a&gt; with external tools like Wireshark
and built-in browser tools such as the internal page &lt;code&gt;about://usb-internals&lt;/code&gt;
in Chromium-based browsers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/devices-introduction/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/reillyeon&quot; rel=&quot;noopener&quot;&gt;Reilly Grant&lt;/a&gt;, &lt;a href=&quot;https://web.dev/authors/thomassteiner/&quot;&gt;Thomas Steiner&lt;/a&gt;, and &lt;a href=&quot;https://web.dev/authors/kaycebasques/&quot;&gt;Kayce Basques&lt;/a&gt; for reviewing this article.&lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@darya_tryfanava&quot; rel=&quot;noopener&quot;&gt;Darya Tryfanava&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/uZBGDkYkvhM&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Human interface devices on the web: a few quick examples</title>
    <link href="https://web.dev/hid-examples/"/>
    <updated>2020-07-22T00:00:00Z</updated>
    <id>https://web.dev/hid-examples/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID API&lt;/a&gt;, part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;,
launched in Chrome 89.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the WebHID API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is a long tail of human interface devices (HIDs) that are too new, too
old, or too uncommon to be accessible by systems&#39; device drivers. The &lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID
API&lt;/a&gt; solves this by providing a way to implement device-specific logic in
JavaScript.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the WebHID API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An HID takes input from or provides output to humans. Examples of devices
include keyboards, pointing devices (mice, touchscreens, etc.), and gamepads.
The &lt;a href=&quot;https://www.usb.org/hid&quot; rel=&quot;noopener&quot;&gt;HID protocol&lt;/a&gt; makes it possible to access these
devices on desktop computers using operating system drivers. The web platform
supports HIDs by relying on these drivers.&lt;/p&gt;
&lt;p&gt;The inability to access uncommon HID devices is particularly painful when it
comes to gamepad support. Gamepads designed for PC often use HID for gamepad
inputs (buttons, joysticks, triggers) and outputs (LEDs, rumble). However,
gamepad inputs and outputs are not well standardized and web browsers often
require custom logic for specific devices. This is unsustainable and results in
poor support for the long tail of older and uncommon devices. It also causes the
browser to depend on quirks present in the behavior of specific devices.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos, demos, demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re curious about how any of these samples work, the source code for all
of them is available on GitHub. &lt;a href=&quot;https://github.com/WICG/webhid/blob/master/EXPLAINER.md#example&quot; rel=&quot;noopener&quot;&gt;There&#39;s a barebones code example&lt;/a&gt; in
the explainer.&lt;/p&gt;
&lt;h3 id=&quot;macbook-pro-keyboard-backlight&quot;&gt;MacBook Pro keyboard backlight &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#macbook-pro-keyboard-backlight&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The biggest barrier to trying out any of these demos is lack of access to the
device. Fortunately, if you have a MacBook Pro with a TouchBar, you don&#39;t need
to buy anything. This demo lets you use the API right from your laptop. It also
shows how WebHID can be used to unlock functionality of built-in devices, not
just peripherals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; FWeinb&lt;br /&gt;
&lt;strong&gt;Demo/Source:&lt;/strong&gt; &lt;a href=&quot;https://codesandbox.io/s/webhid-demo-keyboard-backlight-qlq95&quot; rel=&quot;noopener&quot;&gt;Keyboard Backlight&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;game-controllers&quot;&gt;Game controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#game-controllers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;playstation-4-wireless-controller&quot;&gt;PlayStation 4 Wireless controller &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#playstation-4-wireless-controller&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next up is something fewer of you are likely to have. Sony&#39;s DualShock 4 is a
wireless controller for PlayStation 4 game consoles.&lt;/p&gt;
&lt;p&gt;The DualShock 4 Demo uses WebHID to receive the raw input reports from the
DualShock 4 and provides a high-level API to access the controller&#39;s gyroscope,
accelerometer, touchpad, button, and thumbstick inputs. It also supports rumble
and setting the color of an RGB LED housed within the controller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; TheBITLINK&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://thebitlink.github.io/WebHID-DS4/&quot; rel=&quot;noopener&quot;&gt;DualShock 4 Demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/TheBITLINK/WebHID-DS4&quot; rel=&quot;noopener&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;nintendo-switch-joy-con-controllers&quot;&gt;Nintendo Switch Joy-Con controllers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#nintendo-switch-joy-con-controllers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Play the Chrome dino 🦖 offline game by actually jumping with a Nintendo Switch Joy-Con
controller in your pants pockets. This demo is powered by
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;Joy-Con WebHID&lt;/a&gt;, a WebHID driver for the
Nintendo Switch Joy-Con controllers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; &lt;a href=&quot;https://web.dev/authors/thomassteiner/&quot;&gt;Thomas Steiner&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://tomayac.github.io/chrome-dino-webhid/&quot; rel=&quot;noopener&quot;&gt;Chrome Dino WebHID&lt;/a&gt;
(&lt;a href=&quot;https://github.com/tomayac/chrome-dino-webhid&quot; rel=&quot;noopener&quot;&gt;demo source&lt;/a&gt;,
&lt;a href=&quot;https://github.com/tomayac/joy-con-webhid&quot; rel=&quot;noopener&quot;&gt;driver source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;the-blinkstick-strip&quot;&gt;The BlinkStick Strip &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#the-blinkstick-strip&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BlinkStick Strip is a HID-compliant light strip with 8 RGB LEDs. The demo allows
the user to select from several blink patterns including chase, blink, and
Larson scanner (aka Cylon).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Robat Williams&lt;br /&gt;
&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href=&quot;https://robatwilliams.github.io/webhid-demos/blinkstick-strip/&quot; rel=&quot;noopener&quot;&gt;blinkstick-strip&lt;/a&gt; (&lt;a href=&quot;https://github.com/robatwilliams/webhid-demos&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;blink-blink-blink&quot;&gt;Blink, blink, blink &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#blink-blink-blink&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What does this demo do? (Wait for it.) It blinks. Actually it&#39;s three demos that
use the blink(1) USB notification light.&lt;/p&gt;
&lt;p&gt;blink(1) is simple and well-documented, which makes it a great option for
getting started with HID.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; Tod E. Kurt&lt;br /&gt;
&lt;strong&gt;Demos:&lt;/strong&gt; &lt;a href=&quot;https://blink1.thingm.com/&quot; rel=&quot;noopener&quot;&gt;blink(1)&lt;/a&gt; (&lt;a href=&quot;https://github.com/todbot/blink1-webhid&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hid-examples/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thank you to &lt;a href=&quot;https://web.dev/authors/petelepage/&quot;&gt;Pete LePage&lt;/a&gt; and &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce
Basques&lt;/a&gt; for reviews of this article.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ugur?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Ugur
Akdemir&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/game-controllers?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</content>
    <author>
      <name>Joe Medley</name>
    </author><author>
      <name>Matt Reynolds</name>
    </author>
  </entry>
  
  <entry>
    <title>Building a device for WebUSB</title>
    <link href="https://web.dev/build-for-webusb/"/>
    <updated>2018-12-20T00:00:00Z</updated>
    <id>https://web.dev/build-for-webusb/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This article explains how to build a device to take full advantage of the
&lt;a href=&quot;https://wicg.github.io/webusb&quot; rel=&quot;noopener&quot;&gt;WebUSB API&lt;/a&gt;. For a brief introduction to the API itself, see &lt;a href=&quot;https://web.dev/usb&quot;&gt;Access USB Devices
on the Web&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;background&quot;&gt;Background &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#background&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Universal Serial Bus (USB) has become the most common physical interface for
connecting peripherals to desktop and mobile computing devices. In addition to
defining the electrical characteristics of the bus and a general model for
communicating with a device, USB specifications include a set of device class
specifications. These are general models for particular classes of devices such
as storage, audio, video, networking, etc. that device manufacturers can
implement. The advantage of these device class specifications is that an
operating system vendor can implement a single driver based on the class
specification (a &amp;quot;class driver&amp;quot;) and any device implementing that class will be
supported. This was a great improvement over every manufacturer needing to write
their own device drivers.&lt;/p&gt;
&lt;p&gt;Some devices however don&#39;t fit into one of these standardized device classes. A
manufacturer may instead choose to label their device as implementing the
vendor-specific class. In this case the operating system chooses which device
driver to load based on information provided in the vendor&#39;s driver package,
typically a set of vendor and product IDs which are known to implement a
particular vendor-specific protocol.&lt;/p&gt;
&lt;p&gt;Another feature of the USB is that devices may provide multiple interfaces to
the host they are connected to. Each interface can implement either a
standardized class or be vendor-specific. When an operating system chooses the
right drivers to handle the device each interface can be claimed by a different
driver. For example, a USB webcam typically provides two interfaces, one
implementing the USB video class (for the camera) and one implementing the USB
audio class (for the microphone). The operating system does not load a single
&amp;quot;webcam driver&amp;quot; but instead loads independent video and audio class drivers
which take responsibility for the separate functions of the device. This
composition of interface classes provides for greater flexibility.&lt;/p&gt;
&lt;h2 id=&quot;api-basics&quot;&gt;API basics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#api-basics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many of the standard USB classes have corresponding web APIs. For example, a
page can capture video from a video class device using &lt;a href=&quot;https://html5rocks.com/en/tutorials/getusermedia/intro/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;
or receive input events from a human interface (HID) class device by listening
for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent&quot; rel=&quot;noopener&quot;&gt;KeyboardEvents&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events&quot; rel=&quot;noopener&quot;&gt;PointerEvents&lt;/a&gt;, or by using the &lt;a href=&quot;https://web.dev/gamepad&quot;&gt;Gamepad&lt;/a&gt; or the
&lt;a href=&quot;https://web.dev/hid&quot;&gt;WebHID&lt;/a&gt; API.
Just as not all devices implement a standardized class definition, not all
devices implement features that correspond to existing web platform APIs. When
this is the case the WebUSB API can fill that gap by providing a way for sites
to claim a vendor-specific interface and implement support for it from directly
within their page.&lt;/p&gt;
&lt;p&gt;The specific requirements for a device to be accessible via WebUSB vary slightly
from platform to platform due to differences in how operating systems manage USB
devices but the basic requirement is that a device should not already have a
driver claiming the interface the page wants to control. This could be either a
generic class driver provided by the OS vendor or a device driver provided by
the vendor. As USB devices can provide multiple interfaces, each of which may
have its own driver, it is possible to build a device for which some interfaces
are claimed by a driver and others are left accessible to the browser.&lt;/p&gt;
&lt;p&gt;For example, a high-end USB keyboard may provide an HID class interface that
will be claimed by the operating system&#39;s input subsystem and a vendor-specific
interface that remains available to WebUSB for use by a configuration tool. This
tool can be served on the manufacturer&#39;s website allowing the user to change
aspects of the device&#39;s behavior such as macro keys and lighting effects without
installing any platform-specific software. Such a device&#39;s configuration descriptor would
look something like this:&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Values in this and other tables in this document are presented in hexadecimal or
binary, whichever is more readable. The USB is a little-endian bus and so any
integer value larger than 1 byte should be sent least-significant byte first.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th&gt;Value&lt;/th&gt;
    &lt;th&gt;Field&lt;/th&gt;
    &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Configuration descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x09&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x02&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Configuration descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0039&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wTotalLength&lt;/td&gt;
    &lt;td&gt;Total length of this series of descriptors&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x02&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bNumInterfaces&lt;/td&gt;
    &lt;td&gt;Number of interfaces&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bConfigurationValue&lt;/td&gt;
    &lt;td&gt;Configuration 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;iConfiguration&lt;/td&gt;
    &lt;td&gt;Configuration name (none)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b1010000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bmAttributes&lt;/td&gt;
    &lt;td&gt;Self-powered device with remote wakeup&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x32&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bMaxPower&lt;/td&gt;
    &lt;td&gt;Max Power is expressed in 2 mA increments&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Interface descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x09&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x04&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Interface descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceNumber&lt;/td&gt;
    &lt;td&gt;Interface 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bAlternateSetting&lt;/td&gt;
    &lt;td&gt;Alternate setting 0 (default)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bNumEndpoints&lt;/td&gt;
    &lt;td&gt;1 endpoint&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x03&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceClass&lt;/td&gt;
    &lt;td&gt;HID interface class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceSubClass&lt;/td&gt;
    &lt;td&gt;Boot interface subclass&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceProtocol&lt;/td&gt;
    &lt;td&gt;Keyboard&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;iInterface&lt;/td&gt;
    &lt;td&gt;Interface name (none)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;HID descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x09&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x21&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;HID descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0101&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bcdHID&lt;/td&gt;
    &lt;td&gt;HID version 1.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bCountryCode&lt;/td&gt;
    &lt;td&gt;Hardware target country&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bNumDescriptors&lt;/td&gt;
    &lt;td&gt;Number of HID class descriptors to follow&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x22&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Report descriptor type&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x003F&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorLength&lt;/td&gt;
    &lt;td&gt;Total length of the Report descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x07&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b10000001&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bEndpointAddress&lt;/td&gt;
    &lt;td&gt;Endpoint 1 (IN)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b00000011&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bmAttributes&lt;/td&gt;
    &lt;td&gt;Interrupt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0008&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wMaxPacketSize&lt;/td&gt;
    &lt;td&gt;8 byte packets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0A&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterval&lt;/td&gt;
    &lt;td&gt;10ms interval&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Interface descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x09&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x04&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Interface descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceNumber&lt;/td&gt;
    &lt;td&gt;Interface 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bAlternateSetting&lt;/td&gt;
    &lt;td&gt;Alternate setting 0 (default)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x02&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bNumEndpoints&lt;/td&gt;
    &lt;td&gt;2 endpoints&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0xFF&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceClass&lt;/td&gt;
    &lt;td&gt;Vendor-specific interface class&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceSubClass&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterfaceProtocol&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;iInterface&lt;/td&gt;
    &lt;td&gt;Interface name (none)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x07&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b10000010&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bEndpointAddress&lt;/td&gt;
    &lt;td&gt;Endpoint 1 (IN)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b00000010&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bmAttributes&lt;/td&gt;
    &lt;td&gt;Bulk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0040&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wMaxPacketSize&lt;/td&gt;
    &lt;td&gt;64 byte packets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterval&lt;/td&gt;
    &lt;td&gt;N/A for bulk endpoints&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x07&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Endpoint descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b00000011&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bEndpointAddress&lt;/td&gt;
    &lt;td&gt;Endpoint 3 (OUT)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b00000010&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bmAttributes&lt;/td&gt;
    &lt;td&gt;Bulk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0040&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wMaxPacketSize&lt;/td&gt;
    &lt;td&gt;64 byte packets&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bInterval&lt;/td&gt;
    &lt;td&gt;N/A for bulk endpoints&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;The configuration descriptor consists of multiple descriptors concatenated
together. Each begins with &lt;code&gt;bLength&lt;/code&gt; and &lt;code&gt;bDescriptorType&lt;/code&gt; fields so that they
can be identified. The first interface is an HID interface with an associated
HID descriptor and a single endpoint used to deliver input events to the
operating system. The second interface is a vendor-specific interface with two
endpoints that can be used to send commands to the device and receive responses
in return.&lt;/p&gt;
&lt;h2 id=&quot;webusb-descriptors&quot;&gt;WebUSB descriptors &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#webusb-descriptors&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While WebUSB can work with many devices without firmware modifications,
additional functionality is enabled by marking the device with specific
descriptors indicating support for WebUSB. For example, you can specify a
landing page URL that the browser can direct the user to when your device is
plugged in.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the WebUSB notification in Chrome&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/KBZaQNlDcishHiu3XkPU.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;WebUSB notification.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The Binary device Object Store (BOS) is a concept introduced in USB 3.0 but has
also been backported to USB 2.0 devices as part of version 2.1. Declaring
support for WebUSB starts with including the following Platform Capability
Descriptor in the BOS descriptor:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Value&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Field&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Binary device Object Store descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0F&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Binary device Object Store descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x001D&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wTotalLength&lt;/td&gt;
    &lt;td&gt;Total length of this series of descriptors&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bNumDeviceCaps&lt;/td&gt;
    &lt;td&gt;Number of device capability descriptors in the BOS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;WebUSB platform capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x18&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x10&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Device capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDevCapabilityType&lt;/td&gt;
    &lt;td&gt;Platform capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bReserved&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;{0x38, 0xB6, 0x08, 0x34, 0xA9, 0x09, 0xA0, 0x47, 0x8B, 0xFD, 0xA0, 0x76, 0x88, 0x15, 0xB6, 0x65}&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;PlatformCapablityUUID&lt;/td&gt;
    &lt;td&gt;WebUSB platform capability descriptor GUID in little-endian format&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0100&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bcdVersion&lt;/td&gt;
    &lt;td&gt;WebUSB descriptor version 1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bVendorCode&lt;/td&gt;
    &lt;td&gt;bRequest value for WebUSB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;iLandingPage&lt;/td&gt;
    &lt;td&gt;URL for landing page&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The UUID above would be written as &lt;code&gt;{3408b638-09a9-47a0-8bfd-a0768815b665}&lt;/code&gt;;
however, when sent as part of a USB descriptor its component fields must be sent
in little-endian order. This transformation is complex so the proper encoding is
given here for reference. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4122&quot; rel=&quot;noopener&quot;&gt;RFC4122&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The platform capability UUID identifies this as a &lt;a href=&quot;https://wicg.github.io/webusb/#webusb-platform-capability-descriptor&quot; rel=&quot;noopener&quot;&gt;WebUSB Platform Capability
descriptor&lt;/a&gt;, which provides basic information about the device. For the browser
to fetch more information about the device it uses the &lt;code&gt;bVendorCode&lt;/code&gt; value to
issue additional requests to the device. The only request currently specified is
&lt;code&gt;GET_URL&lt;/code&gt; which returns a &lt;a href=&quot;https://wicg.github.io/webusb/#url-descriptor&quot; rel=&quot;noopener&quot;&gt;URL descriptor&lt;/a&gt;. These are similar to string
descriptors but are designed to encode URLs in the fewest bytes. A URL
descriptor for &lt;code&gt;&amp;quot;https://google.com&amp;quot;&lt;/code&gt; would look like this:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th&gt;Value&lt;/th&gt;
    &lt;th&gt;Field&lt;/th&gt;
    &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;URL descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0D&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x03&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;URL descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bScheme&lt;/td&gt;
    &lt;td&gt;https://&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;&quot;google.com&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;URL&lt;/td&gt;
    &lt;td&gt;UTF-8 encoded URL content&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;When your device is first plugged in the browser reads the BOS descriptor by
issuing this standard &lt;code&gt;GET_DESCRIPTOR&lt;/code&gt; control transfer:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th&gt;bmRequestType&lt;/th&gt;
    &lt;th&gt;bRequest&lt;/th&gt;
    &lt;th&gt;wValue&lt;/th&gt;
    &lt;th&gt;wIndex&lt;/th&gt;
    &lt;th&gt;wLength&lt;/th&gt;
    &lt;th&gt;Data (response)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b10000000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x06&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0F00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;*&lt;/td&gt;
    &lt;td&gt;The BOS descriptor&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;This request is usually made twice, the first time with a large enough &lt;code&gt;wLength&lt;/code&gt;
so that the host finds out the value of the &lt;code&gt;wTotalLength&lt;/code&gt; field without
committing to a large transfer and then again when the full descriptor length is
known.&lt;/p&gt;
&lt;p&gt;If the WebUSB Platform Capability descriptor has the &lt;code&gt;iLandingPage&lt;/code&gt; field set to
a non-zero value the browser then performs a WebUSB-specific &lt;code&gt;GET_URL&lt;/code&gt; request
by issuing a control transfer with the &lt;code&gt;bRequest&lt;/code&gt; set to the &lt;code&gt;bVendorCode&lt;/code&gt; value
from the platform capability descriptor and &lt;code&gt;wValue&lt;/code&gt; set to the &lt;code&gt;iLandingPage&lt;/code&gt;
value. The request code for &lt;code&gt;GET_URL&lt;/code&gt; (&lt;code&gt;0x02&lt;/code&gt;) goes in &lt;code&gt;wIndex&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th&gt;bmRequestType&lt;/th&gt;
    &lt;th&gt;bRequest&lt;/th&gt;
    &lt;th&gt;wValue&lt;/th&gt;
    &lt;th&gt;wIndex&lt;/th&gt;
    &lt;th&gt;wLength&lt;/th&gt;
    &lt;th&gt;Data (response)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b11000000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0001&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0002&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;*&lt;/td&gt;
    &lt;td&gt;The URL descriptor&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Again, this request may be issued twice in order to first probe for the length
of the descriptor being read.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Support for displaying a notification when a USB device is plugged in is not
available yet on Android.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;platform-specific-considerations&quot;&gt;Platform-specific considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#platform-specific-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While the WebUSB API attempts to provide a consistent interface for accessing
USB devices developers should still be aware of requirements imposed on
applications such as a web browsers requirements in order to access devices.&lt;/p&gt;
&lt;h3 id=&quot;macos&quot;&gt;macOS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#macos&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nothing special is necessary for macOS. A website using WebUSB can connect to
the device and claim any interfaces that aren&#39;t claimed by a kernel driver or
another application.&lt;/p&gt;
&lt;h3 id=&quot;linux&quot;&gt;Linux &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#linux&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux is like macOS but by default most distributions do not set up user
accounts with permission to open USB devices. A system daemon called udev is
responsible for assigning the user and group allowed to access a device. A rule
such as this will assign ownership of a device matching the given vendor and
product IDs to the &lt;code&gt;plugdev&lt;/code&gt; group which is a common group for users with access
to peripherals:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;SUBSYSTEM&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;usb&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ATTR&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;idVendor&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;XXXX&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ATTR&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;idProduct&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;XXXX&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; GROUP&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;plugdev&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;XXXX&lt;/code&gt; with the hexadecimal vendor and product IDs for your device,
e.g. &lt;code&gt;ATTR{idVendor}==&amp;quot;18d1&amp;quot;, ATTR{idProduct}==&amp;quot;4e11&amp;quot;&lt;/code&gt; would match a Nexus One
phone. These must be written without the usual &amp;quot;0x&amp;quot; prefix and all lowercase
to be recognized correctly. To find the IDs for your device run the command line
tool &lt;code&gt;lsusb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This rule should be placed in a file in the &lt;code&gt;/etc/udev/rules.d&lt;/code&gt; directory and
takes effect as soon as the device is plugged in. There is no need to restart
udev.&lt;/p&gt;
&lt;h3 id=&quot;android&quot;&gt;Android &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#android&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Android platform is based on Linux but does not require any modification to
system configuration. By default any device that does not have a driver built
into the operating system is available to the browser. Developers should be
aware however that users will encounter an additional step when connecting to
the device. Once a user selects a device in response to a call to
&lt;a href=&quot;https://wicg.github.io/webusb/#dom-usb-requestdevice&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;requestDevice()&lt;/code&gt;&lt;/a&gt;, Android will display a prompt asking whether to allow
Chrome to access it. This prompt also reappears if a user returns to a website
that already has permission to connect to a device and the website calls
&lt;a href=&quot;https://wicg.github.io/webusb/#dom-usbdevice-open&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In addition more devices will be accessible on Android than on desktop Linux
because fewer drivers are included by default. A notable omission, for example,
is the USB CDC-ACM class commonly implemented by USB-to-serial adapters as there
is no API in the Android SDK for communicating with a serial device.&lt;/p&gt;
&lt;h3 id=&quot;chrome-os&quot;&gt;Chrome OS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#chrome-os&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome OS is based on Linux as well and also does not require any modification
to system configuration. The permission_broker service controls access to USB
devices and will allow the browser to access them as long as there is at least
one unclaimed interface.&lt;/p&gt;
&lt;h3 id=&quot;windows&quot;&gt;Windows &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#windows&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Windows driver model introduces an additional requirement. Unlike the
platforms above the ability to open a USB device from a user application is not
the default, even if there is no driver loaded. Instead there is a special
driver, WinUSB, that needs to be loaded in order to provide the interface
applications use to access the device. This can be done with either a custom
driver information file (INF) installed on the system or by modifying the device
firmware to provide the Microsoft OS Compatibility Descriptors during
enumeration.&lt;/p&gt;
&lt;h4 id=&quot;driver-information-file-(inf)&quot;&gt;Driver Information File (INF) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#driver-information-file-(inf)&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A driver information file tells Windows what to do when encountering a device
for the first time. Since the user&#39;s system already includes the WinUSB driver
all that&#39;s necessary is for the INF file to associate your vendor and product ID
with this new installation rule. The file below is a basic example. Save it to a
file with the &lt;code&gt;.inf&lt;/code&gt; extension, change the sections marked with &amp;quot;X&amp;quot;, then right
click on it and choose &amp;quot;Install&amp;quot; from the context menu.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-ini&quot;&gt;&lt;code class=&quot;language-ini&quot;&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Signature&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;&quot;&lt;span class=&quot;token inner-value&quot;&gt;$Windows NT$&lt;/span&gt;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Class&lt;/span&gt;       &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;USBDevice&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;ClassGUID&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;{88BAE032-5A81-49f0-BC3D-A4FF138216D6}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Provider&lt;/span&gt;    &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;%ManufacturerName%&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;CatalogFile&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;WinUSBInstallation.cat&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;DriverVer&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;09/04/2012,13.54.20.543&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;; ========== Manufacturer/Models sections ===========&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;%ManufacturerName%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;Standard,NTx86,NTia64,NTamd64&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Standard.NTx86&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;%USB\MyCustomDevice.DeviceDesc%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;USB_Install,USB\VID_XXXX&amp;amp;PID_XXXX&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Standard.NTia64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;%USB\MyCustomDevice.DeviceDesc%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;USB_Install,USB\VID_XXXX&amp;amp;PID_XXXX&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Standard.NTamd64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;%USB\MyCustomDevice.DeviceDesc%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;USB_Install,USB\VID_XXXX&amp;amp;PID_XXXX&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;; ========== Class definition ===========&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;ClassInstall32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;AddReg&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;ClassInstall_AddReg&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;ClassInstall_AddReg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;HKR,,,,%ClassName%&lt;br /&gt;HKR,,NoInstallClass,,1&lt;br /&gt;HKR,,IconPath,%REG_MULTI_SZ%,&quot;%systemroot%\system32\setupapi.dll,-20&quot;&lt;br /&gt;HKR,,LowerLogoVersion,,5.2&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;; =================== Installation ===================&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;USB_Install&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Include&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;winusb.inf&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Needs&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;WINUSB.NT&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;USB_Install.Services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Include&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;winusb.inf&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;Needs&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;WINUSB.NT.Services&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;USB_Install.HW&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;AddReg&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;Dev_AddReg&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Dev_AddReg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;HKR,,DeviceInterfaceGUIDs,0x10000,&quot;{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}&quot;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;; =================== Strings ===================&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token header&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token section-name selector&quot;&gt;Strings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;ManufacturerName&lt;/span&gt;              &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;&quot;&lt;span class=&quot;token inner-value&quot;&gt;Your Company Name Here&lt;/span&gt;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;ClassName&lt;/span&gt;                     &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;&quot;&lt;span class=&quot;token inner-value&quot;&gt;Your Company Devices&lt;/span&gt;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key attr-name&quot;&gt;USB\MyCustomDevice.DeviceDesc&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token value attr-value&quot;&gt;&quot;&lt;span class=&quot;token inner-value&quot;&gt;Your Device Name Here&lt;/span&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;[Dev_AddReg]&lt;/code&gt; section configures the set of DeviceInterfaceGUIDs for the
device. Every device interface must have a GUID in order for an application to
find and connect to it through the Windows API. Use the &lt;code&gt;New-Guid&lt;/code&gt; PowerShell
cmdlet or an online tool to generate a random GUID.&lt;/p&gt;
&lt;p&gt;For development purposes the &lt;a href=&quot;https://zadig.akeo.ie/&quot; rel=&quot;noopener&quot;&gt;Zadig tool&lt;/a&gt; provides an easy interface for
replacing the driver loaded for a USB interface with the WinUSB driver.&lt;/p&gt;
&lt;h4 id=&quot;microsoft-os-compatibility-descriptors&quot;&gt;Microsoft OS compatibility descriptors &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#microsoft-os-compatibility-descriptors&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The INF file approach above is cumbersome because it requires configuring every
user&#39;s machine ahead of time. Windows 8.1 and higher offers an alternative
through the use of custom USB descriptors. These descriptors provide information
to the Windows operating system when the device is first plugged in that would
normally be included in the INF file.&lt;/p&gt;
&lt;p&gt;Once you have WebUSB descriptors set up it is easy to add Microsoft&#39;s OS
compatibility descriptors as well. First extend the BOS descriptor with this
additional platform capability descriptor. Make sure to update &lt;code&gt;wTotalLength&lt;/code&gt;
and &lt;code&gt;bNumDeviceCaps&lt;/code&gt; to account for it.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Value&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Field&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 platform capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x1C&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x10&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDescriptorType&lt;/td&gt;
    &lt;td&gt;Device capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x05&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bDevCapabilityType&lt;/td&gt;
    &lt;td&gt;Platform capability descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bReserved&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;{0xDF, 0x60, 0xDD, 0xD8, 0x89, 0x45, 0xC7, 0x4C, 0x9C, 0xD2, 0x65, 0x9D, 0x9E, 0x64, 0x8A, 0x9F}&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;PlatformCapablityUUID&lt;/td&gt;
    &lt;td&gt;Microsoft OS 2.0 platform compatibility descriptor GUID in little-endian format&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x06030000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;dwWindowsVersion&lt;/td&gt;
    &lt;td&gt;Minimum compatible Windows version (Windows 8.1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00B2&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wMSOSDescriptorSetTotalLength&lt;/td&gt;
    &lt;td&gt;Total length of the descriptor set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x02&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bMS_VendorCode&lt;/td&gt;
    &lt;td&gt;bRequest value for retrieving further Microsoft descriptors &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bAltEnumCode&lt;/td&gt;
    &lt;td&gt;Device does not support alternate enumeration&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;As with the WebUSB descriptors you have to pick a &lt;code&gt;bRequest&lt;/code&gt; value to be used by
control transfers related to these descriptors. In this example I&#39;ve picked
&lt;code&gt;0x02&lt;/code&gt;. &lt;code&gt;0x07&lt;/code&gt;, placed in &lt;code&gt;wIndex&lt;/code&gt;, is the command to retrieve the Microsoft OS
2.0 Descriptor Set from the device.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th&gt;bmRequestType&lt;/th&gt;
    &lt;th&gt;bRequest&lt;/th&gt;
    &lt;th&gt;wValue&lt;/th&gt;
    &lt;th&gt;wIndex&lt;/th&gt;
    &lt;th&gt;wLength&lt;/th&gt;
    &lt;th&gt;Data (response)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0b11000000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x02&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0x0007&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;*&lt;/td&gt;
    &lt;td&gt;MS OS 2.0 Descriptor Set&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;A USB device can have multiple functions and so the first part of the descriptor
set describes which function the properties that follow are associated with. The
example below configures interface 1 of a composite device. The descriptor gives
the OS two important pieces of information about this interface. The compatible
ID descriptor tells Windows that this device is compatible with the WinUSB
driver. The registry property descriptor functions similarly to the
&lt;code&gt;[Dev_AddReg]&lt;/code&gt; section of the INF example above, setting a registry property to
assign this function a device interface GUID.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Value&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Field&lt;/th&gt;
    &lt;th style=&quot;width: 33%&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 descriptor set header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x000A&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorType&lt;/td&gt;
    &lt;td&gt;Descriptor set header descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x06030000&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;dwWindowsVersion&lt;/td&gt;
    &lt;td&gt;Minimum compatible Windows version (Windows 8.1)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00B2&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wTotalLength&lt;/td&gt;
    &lt;td&gt;Total length of the descriptor set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 configuration subset header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0008&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0001&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorType&lt;/td&gt;
    &lt;td&gt;Configuration subset header desc.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bConfigurationValue&lt;/td&gt;
    &lt;td&gt;
      Applies to configuration 1 (indexed from 0 despite configurations
      normally indexed from 1)
    &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bReserved&lt;/td&gt;
    &lt;td&gt;Must be set to 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00A8&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wTotalLength&lt;/td&gt;
    &lt;td&gt;Total length of the subset including this header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 function subset header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0008&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0002&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorType&lt;/td&gt;
    &lt;td&gt;Function subset header descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x01&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bFirstInterface&lt;/td&gt;
    &lt;td&gt;First interface of the function&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;bReserved&lt;/td&gt;
    &lt;td&gt;Must be set to 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x00A0&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wSubsetLength&lt;/td&gt;
    &lt;td&gt;Total length of the subset including this header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 compatible ID descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0014&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0003&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorType&lt;/td&gt;
    &lt;td&gt;Compatible ID descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;&quot;WINUSB\0\0&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;CompatibileID&lt;/td&gt;
    &lt;td&gt;ASCII string padded to 8 bytes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;&quot;\0\0\0\0\0\0\0\0&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;SubCompatibleID&lt;/td&gt;
    &lt;td&gt;ASCII string padded to 8 bytes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot;&gt;Microsoft OS 2.0 registry property descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0084&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wLength&lt;/td&gt;
    &lt;td&gt;Size of this descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0004&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wDescriptorType&lt;/td&gt;
    &lt;td&gt;Registry property descriptor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0007&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wPropertyDataType&lt;/td&gt;
    &lt;td&gt;REG_MULTI_SZ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x002A&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wPropertyNameLength&lt;/td&gt;
    &lt;td&gt;Length of the property name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;&quot;DeviceInterfaceGUIDs\0&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;PropertyName&lt;/td&gt;
    &lt;td&gt;Property name with null terminator encoded in UTF-16LE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;0x0050&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;wPropertyDataLength&lt;/td&gt;
    &lt;td&gt;Length of the property value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;&lt;code&gt;&quot;{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\0\0&quot;&lt;/code&gt;&lt;/td&gt;
    &lt;td&gt;PropertyData&lt;/td&gt;
    &lt;td&gt;GUID plus two null terminators encoded in UTF-16LE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Windows will only query the device for this information once. If the device does
not respond with valid descriptors it will not ask again the next time the
device is connected. Microsoft has provided &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-device-specific-registry-settings&quot; rel=&quot;noopener&quot;&gt;a list of USB Device Registry
Entries&lt;/a&gt; describing the registry entries created when enumerating a device. When
testing delete the entries created for a device for force Windows to try to read
the descriptors again.&lt;/p&gt;
&lt;p&gt;For more information check out Microsoft&#39;s &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-usb-blog/how-to-install-winusb-sys-without-a-custom-inf/ba-p/270769&quot; rel=&quot;noopener&quot;&gt;blog post&lt;/a&gt; on how to use these
descriptors.&lt;/p&gt;
&lt;h2 id=&quot;examples&quot;&gt;Examples &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/build-for-webusb/#examples&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Example code implementing WebUSB-aware devices that include both WebUSB
descriptors and Microsoft OS descriptors can be found in these projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sowbug/weblight&quot; rel=&quot;noopener&quot;&gt;WebLight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webusb/arduino&quot; rel=&quot;noopener&quot;&gt;WebUSB Arduino Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Reilly Grant</name>
    </author>
  </entry>
  
  <entry>
    <title>Disable mouse acceleration to provide a better FPS gaming experience</title>
    <link href="https://web.dev/disable-mouse-acceleration/"/>
    <updated>2020-11-26T00:00:00Z</updated>
    <id>https://web.dev/disable-mouse-acceleration/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Accelerated movement is an ergonomic feature when using a mouse or trackpad to
move the pointer on screen. It allows precise movement by moving slowly while
also allowing the pointer to cross the entire screen with a quick short motion.
Specifically, for the same physical distance that you move the mouse, the
pointer on screen travels further if the distance was traveled faster.&lt;/p&gt;
&lt;p&gt;Operating systems enable mouse acceleration by default. For some &lt;a href=&quot;https://en.wikipedia.org/wiki/First-person_(video_games)&quot; rel=&quot;noopener&quot;&gt;first-party
perspective&lt;/a&gt; games, commonly first party shooters (FPS), raw mouse input data is
used to control camera rotation without an acceleration adjustment. The same
physical motion, slow or fast, results in the same rotation. This results in a
better gaming experience and higher accuracy according to professional gamers.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the pointer motion control in Windows 10 settings.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;260&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/4x9YZ7nC3SJMN9FI46zN.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Pointer motion control in Windows 10 settings.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Starting in Chrome 88, web apps can switch back and forth between accelerated
and non-accelerated mouse movement data thanks to the &lt;a href=&quot;https://github.com/w3c/pointerlock/pull/49&quot; rel=&quot;noopener&quot;&gt;updated Pointer Lock
API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Web-based gaming platforms such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Stadia&quot; rel=&quot;noopener&quot;&gt;Google Stadia&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/GeForce_Now&quot; rel=&quot;noopener&quot;&gt;Nvidia GeForce Now&lt;/a&gt;
already use these new capabilities to please FPS gamers.&lt;/p&gt;
&lt;h2 id=&quot;use&quot;&gt;Using the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;request&quot;&gt;Request a pointer lock &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#request&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A pointer lock is the canonical term for when a desktop application hides the
pointer icon and interprets mouse motion for something else, e.g. looking around
in a 3D world.&lt;/p&gt;
&lt;p&gt;The  &lt;code&gt;movementX&lt;/code&gt; and &lt;code&gt;movementY&lt;/code&gt; attributes from the &lt;code&gt;mousemove&lt;/code&gt; document events
tell you how much the mouse pointer moved since the last move event. However,
those are not updated when the pointer moves outside of the web page.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;mousemove&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;movementX: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movementX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; movementY: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movementY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Capturing the mouse pointer (or requesting a pointer lock) allows you to not
worry about the pointer moving outside anymore. This is especially useful for
immersive web games. When the pointer is locked, all mouse events go to the
target element of the pointer lock.&lt;/p&gt;
&lt;p&gt;Call &lt;code&gt;requestPointerLock()&lt;/code&gt; on the target element to request a pointer lock, and
listen to &lt;code&gt;pointerlockchange&lt;/code&gt; and &lt;code&gt;pointerlockerror&lt;/code&gt; events to monitor pointer
lock changes.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; myTargetElement &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Call this function to request a pointer lock.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointerlockchange&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pointerLockElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;pointer is locked on &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pointerLockElement&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer is unlocked&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointerlockerror&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer lock error&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;disable-mouse-acceleration&quot;&gt;Disable mouse acceleration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#disable-mouse-acceleration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Call &lt;code&gt;requestPointerLock()&lt;/code&gt; with  &lt;code&gt;{ unadjustedMovement: true }&lt;/code&gt; to disable
OS-level adjustment for mouse acceleration, and access raw mouse input.
This way, mouse movement data from &lt;code&gt;mousemove&lt;/code&gt; events won&#39;t include mouse
acceleration when the pointer is locked.&lt;/p&gt;
&lt;p&gt;Use the new returned promise from &lt;code&gt;requestPointerLock()&lt;/code&gt; to know if the request
was successful.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestPointerLockWithUnadjustedMovement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; promise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    unadjustedMovement&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;promise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;disabling mouse acceleration is not supported&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; promise&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pointer is locked&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;NotSupportedError&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Some platforms may not support unadjusted movement.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// You can request again a regular pointer lock.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; myTargetElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPointerLock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It is possible to toggle between accelerated and non-accelerated mouse movement
data without releasing the pointer lock. Simply request the pointer lock again
with the desired option. If that request fails, the original lock will remain
intact and the returned promise will reject. No pointer lock events will fire
for a failed change request.&lt;/p&gt;
&lt;h3 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Pointer Lock API is &lt;a href=&quot;https://caniuse.com/?search=pointerlock&quot; rel=&quot;noopener&quot;&gt;well supported across browsers&lt;/a&gt;. However Chromium-based
browsers (e.g. Chrome, Edge, etc.) are the only ones to support disabling
OS-level adjustment for mouse acceleration as of October 2020.
See MDN&#39;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser compatibility&lt;/a&gt; table for updates.&lt;/p&gt;
&lt;h3 id=&quot;os-support&quot;&gt;Operating system support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#os-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Disabling OS-level adjustment for mouse acceleration is supported on Chrome OS,
macOS Catalina 10.15.1, and Windows. Linux will follow.&lt;/p&gt;
&lt;h2 id=&quot;sample&quot;&gt;Sample  &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#sample&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can play with the Pointer Lock API by running the &lt;a href=&quot;https://unadjusted-movement.glitch.me/&quot; rel=&quot;noopener&quot;&gt;sample&lt;/a&gt; on Glitch. Be
sure to &lt;a href=&quot;https://glitch.com/edit/#!/unadjusted-movement?path=script.js&quot; rel=&quot;noopener&quot;&gt;check out the source code&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/unadjusted-movement?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;unadjusted-movement on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/slightlyoff/unadjusted_pointer_lock_explainer&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/pointerlock/pull/49&quot; rel=&quot;noopener&quot;&gt;Specification PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/pointerlock&quot; rel=&quot;noopener&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5723553087356928&quot; rel=&quot;noopener&quot;&gt;ChromeStatus entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=982379&quot; rel=&quot;noopener&quot;&gt;Chrome tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/d/msg/blink-dev/cQn7OwcMQ64/OWmA9KMKBQAJ&quot; rel=&quot;noopener&quot;&gt;Intent to ship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/448&quot; rel=&quot;noopener&quot;&gt;Mozilla&#39;s position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2020-October/031473.html&quot; rel=&quot;noopener&quot;&gt;WebKit&#39;s position&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/disable-mouse-acceleration/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/jameshollyergoogle&quot; rel=&quot;noopener&quot;&gt;James Hollyer&lt;/a&gt;, &lt;a href=&quot;https://github.com/tomayac&quot; rel=&quot;noopener&quot;&gt;Thomas Steiner&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/scheib&quot; rel=&quot;noopener&quot;&gt;Vincent Scheib&lt;/a&gt; for their reviews of this article.&lt;/p&gt;
</content>
    <author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Play the Chrome dino game with your gamepad</title>
    <link href="https://web.dev/gamepad/"/>
    <updated>2020-11-03T00:00:00Z</updated>
    <id>https://web.dev/gamepad/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Chrome&#39;s offline page easter egg is one of the worst-kept secrets in history
(&lt;code&gt;[citation needed]&lt;/code&gt;, but claim made for the dramatic effect).
If you press the &lt;kbd&gt;space&lt;/kbd&gt; key or, on mobile devices, tap the dinosaur,
the offline page becomes a playable arcade game.
You might be aware that you do not actually have to go offline
when you feel like playing: in Chrome, you can just navigate to &lt;code&gt;about://dino&lt;/code&gt;, or,
for the geek in you, browse to
&lt;code&gt;about://network-error/-106&lt;/code&gt;.
But did you know that there are currently
&lt;a href=&quot;https://www.blog.google/products/chrome/chrome-dino#jump-content:~:text=There%20are%20currently%20270%20million%20games%20played%20every%20month&quot; rel=&quot;noopener&quot;&gt;270 million Chrome dino games played every month&lt;/a&gt;?&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome&amp;#x27;s offline page with the Chrome dino game.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;647&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BQ9zVNGfI0PjH6LTwxj5.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Press the space bar to play!
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Another fact that arguably is more useful to know and that you might not be aware of
is that in arcade mode you can play the game with a gamepad.
Gamepad support was added roughly one year ago as of the time of this writing in a
&lt;a href=&quot;https://github.com/chromium/chromium/commit/fcafd36b23c535e307da4213b7d639f8c13b8da2&quot; rel=&quot;noopener&quot;&gt;commit&lt;/a&gt;
by &lt;a href=&quot;https://github.com/reillyeon&quot; rel=&quot;noopener&quot;&gt;Reilly Grant&lt;/a&gt;.
As you can see, the game, just like the rest of the Chromium project,
is fully
&lt;a href=&quot;https://github.com/chromium/chromium/tree/master/components/neterror/resources&quot; rel=&quot;noopener&quot;&gt;open source&lt;/a&gt;.
In this post, I want to show you how to use the Gamepad API.&lt;/p&gt;
&lt;h2 id=&quot;using-the-gamepad-api&quot;&gt;Using the Gamepad API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#using-the-gamepad-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://w3c.github.io/gamepad/&quot; rel=&quot;noopener&quot;&gt;Gamepad API&lt;/a&gt; has been around for a long time.
This post disregards all the legacy features and vendor prefixes.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;feature-detection-and-browser-support&quot;&gt;Feature detection and browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#feature-detection-and-browser-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Gamepad API has universally great &lt;a href=&quot;https://caniuse.com/gamepad&quot; rel=&quot;noopener&quot;&gt;browser support&lt;/a&gt;
across both desktop and mobile.
You can detect if the Gamepad API is supported using the snippet below:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;getGamepads&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The API is supported!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;how-the-browser-represents-a-gamepad&quot;&gt;How the browser represents a gamepad &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#how-the-browser-represents-a-gamepad&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The browser represents gamepads as &lt;code&gt;Gamepad&lt;/code&gt; objects.
A &lt;code&gt;Gamepad&lt;/code&gt; has the following fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;:
An identification string for the gamepad.
This string identifies the brand or style of connected gamepad device.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt;:
The index of the gamepad in the navigator.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connected&lt;/code&gt;:
Indicates whether the gamepad is still connected to the system.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: The last time the data for this gamepad was updated.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mapping&lt;/code&gt;: The button and axes mapping in use for this device. Currently the only mapping is &lt;code&gt;&amp;quot;standard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axes&lt;/code&gt;: An array of values for all axes of the gamepad, linearly normalized to the range of
&lt;code&gt;-1.0&lt;/code&gt;–&lt;code&gt;1.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buttons&lt;/code&gt;: An array of button states for all buttons of the gamepad.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that buttons can be digital (pressed or not pressed) or analog (for example, 78% pressed).
This is why buttons are reported as &lt;code&gt;GamepadButton&lt;/code&gt; objects, with the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pressed&lt;/code&gt;: The pressed state of the button (&lt;code&gt;true&lt;/code&gt; if the button is currently pressed,
and &lt;code&gt;false&lt;/code&gt; if it is not pressed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touched&lt;/code&gt;: The touched state of the button. If the button is capable of detecting touch,
this property is &lt;code&gt;true&lt;/code&gt; if the button is currently being touched, and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: For buttons that have an analog sensor, this property represents the amount by
which the button has been pressed, linearly normalized to the range of &lt;code&gt;0.0&lt;/code&gt;–&lt;code&gt;1.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One additional thing that you might encounter, depending on your browser and the gamepad you have,
is a &lt;code&gt;vibrationActuator&lt;/code&gt; property.
This field is currently implemented in Chrome and earmarked for
&lt;a href=&quot;https://github.com/w3c/gamepad/pull/68&quot; rel=&quot;noopener&quot;&gt;merging&lt;/a&gt; into the
&lt;a href=&quot;https://w3c.github.io/gamepad/extensions.html&quot; rel=&quot;noopener&quot;&gt;Gamepad Extensions&lt;/a&gt; spec.&lt;/p&gt;
&lt;p&gt;The schematic overview below, taken
&lt;a href=&quot;https://w3c.github.io/gamepad/#fig-visual-representation-of-a-standard-gamepad-layout:~:text=Figure%201%20Visual%20representation%20of%20a%20standard%20gamepad%20layout.&quot; rel=&quot;noopener&quot;&gt;straight from the spec&lt;/a&gt;,
shows the mapping and the arrangement of the buttons and axes on a generic gamepad.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Schematic overview of the button and axes mappings of a common gamepad.&quot; decoding=&quot;async&quot; height=&quot;566&quot; loading=&quot;lazy&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/qy6OxKmPAE5dpfLCMhZt.svg&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Visual representation of a standard gamepad layout
    (&lt;a href=&quot;https://w3c.github.io/gamepad/#fig-visual-representation-of-a-standard-gamepad-layout:~:text=Figure%201%20Visual%20representation%20of%20a%20standard%20gamepad%20layout.&quot;&gt;Source&lt;/a&gt;).
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;being-notified-when-a-gamepad-gets-connected&quot;&gt;Being notified when a gamepad gets connected &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#being-notified-when-a-gamepad-gets-connected&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To learn when a gamepad is connected, listen for the &lt;code&gt;gamepadconnected&lt;/code&gt;
event that triggers on the &lt;code&gt;window&lt;/code&gt; object.
When the user connects a gamepad, which can either happen via USB or via Bluetooth,
a &lt;code&gt;GamepadEvent&lt;/code&gt; is fired that has the gamepad&#39;s details in an aptly named &lt;code&gt;gamepad&lt;/code&gt; property.
Below, you can see an example from an Xbox 360 controller that I had lying around
(yes, I am into retro gaming).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;gamepadconnected&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;✅ 🎮 A gamepad was connected:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/*&lt;br /&gt;    gamepad: Gamepad&lt;br /&gt;    axes: (4) [0, 0, 0, 0]&lt;br /&gt;    buttons: (17) [GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton]&lt;br /&gt;    connected: true&lt;br /&gt;    id: &quot;Xbox 360 Controller (STANDARD GAMEPAD Vendor: 045e Product: 028e)&quot;&lt;br /&gt;    index: 0&lt;br /&gt;    mapping: &quot;standard&quot;&lt;br /&gt;    timestamp: 6563054.284999998&lt;br /&gt;    vibrationActuator: GamepadHapticActuator {type: &quot;dual-rumble&quot;}&lt;br /&gt;  */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;being-notified-when-a-gamepad-gets-disconnected&quot;&gt;Being notified when a gamepad gets disconnected &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#being-notified-when-a-gamepad-gets-disconnected&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Being notified of gamepad disconnects happens analogously to the way connections are detected.
This time the app listens for the &lt;code&gt;gamepaddisconnected&lt;/code&gt; event.
Note how in the example below &lt;code&gt;connected&lt;/code&gt; is now &lt;code&gt;false&lt;/code&gt;
when I unplug the Xbox 360 controller.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;gamepaddisconnected&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;❌ 🎮 A gamepad was disconnected:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/*&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    gamepad: Gamepad&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    axes: (4) [0, 0, 0, 0]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    buttons: (17) [GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton, GamepadButton]&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    connected: false&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    id: &quot;Xbox 360 Controller (STANDARD GAMEPAD Vendor: 045e Product: 028e)&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    index: 0&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    mapping: &quot;standard&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    timestamp: 6563054.284999998&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    vibrationActuator: null&lt;/span&gt;&lt;br /&gt;  */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-gamepad-in-your-game-loop&quot;&gt;The gamepad in your game loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#the-gamepad-in-your-game-loop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Getting a hold of a gamepad starts with a call to &lt;code&gt;navigator.getGamepads()&lt;/code&gt;,
which returns a &lt;code&gt;GamepadList&lt;/code&gt; object with &lt;code&gt;Gamepad&lt;/code&gt; items.
The &lt;code&gt;GamepadList&lt;/code&gt; object in Chrome &lt;em&gt;always&lt;/em&gt; has a fixed length of four items.
If zero or less than four gamepads are connected, an item may just be &lt;code&gt;null&lt;/code&gt;.
Always be sure to check all items of the &lt;code&gt;GamepadList&lt;/code&gt; and be aware that
gamepads &amp;quot;remember&amp;quot; their slot and may not always be present at the first available slot.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// When no gamepads are connected:&lt;/span&gt;&lt;br /&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getGamepads&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// GamepadList {0: null, 1: null, 2: null, 3: null, length: 4}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If one or several gamepads are connected,
but &lt;code&gt;navigator.getGamepads()&lt;/code&gt; still reports &lt;code&gt;null&lt;/code&gt; items,
you may need to &amp;quot;wake&amp;quot; each gamepad by pressing any of its buttons.
You can then poll the gamepad states in your game loop as shown below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;pollGamepad&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Always call `navigator.getGamepads()` inside of&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// the game loop, not outside.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; gamepads &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getGamepads&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; gamepad &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; gamepads&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Disregard empty slots.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Process the gamepad state.&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Call yourself upon the next animation frame.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// (Typically this happens every 60 times per second.)&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pollGamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Kick off the initial game loop iteration.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;pollGamepad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;Do not store a lasting reference to the &lt;code&gt;GamepadList&lt;/code&gt; result &lt;em&gt;outside&lt;/em&gt; of the game loop,
since the method returns a static snapshot, not a live object.
Call &lt;code&gt;navigator.getGamepads()&lt;/code&gt; each time anew &lt;em&gt;in your game loop&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;making-use-of-the-vibration-actuator&quot;&gt;Making use of the vibration actuator &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#making-use-of-the-vibration-actuator&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;vibrationActuator&lt;/code&gt; property returns a &lt;code&gt;GamepadHapticActuator&lt;/code&gt;
object, which corresponds to a configuration of motors or other actuators
that can apply a force for the purposes of haptic feedback.
Haptic effects can be played by calling &lt;code&gt;Gamepad.vibrationActuator.playEffect()&lt;/code&gt;.
The only currently valid effect type is &lt;code&gt;&#39;dual-rumble&#39;&lt;/code&gt;.
Dual-rumble describes a haptic configuration with an eccentric rotating mass vibration motor
in each handle of a standard gamepad.
In this configuration, either motor is capable of vibrating the whole gamepad.
The two masses are unequal so that the effects of each can be combined
to create more complex haptic effects.
Dual-rumble effects are defined by four parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt;:
Sets the duration of the vibration effect in milliseconds.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;startDelay&lt;/code&gt;:
Sets the duration of the delay until the vibration is started.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strongMagnitude&lt;/code&gt; and &lt;code&gt;weakMagnitude&lt;/code&gt;:
Set the vibration intensity levels for the heavier and lighter eccentric rotating mass
motors, normalized to the range &lt;code&gt;0.0&lt;/code&gt;–&lt;code&gt;1.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// This assumes a `Gamepad` as the value of the `gamepad` variable.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;vibrate&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; delay &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; duration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weak &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; strong &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;vibrationActuator&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; gamepad&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  gamepad&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;vibrationActuator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;playEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;dual-rumble&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Start delay in ms.&lt;/span&gt;&lt;br /&gt;    startDelay&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; delay&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Duration is ms.&lt;/span&gt;&lt;br /&gt;    duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; duration&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// The magnitude of the weak actuator (between 0 and 1).&lt;/span&gt;&lt;br /&gt;    weakMagnitude&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; weak&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// The magnitude of the strong actuator (between 0 and 1).&lt;/span&gt;&lt;br /&gt;    strongMagnitude&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; strong&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;integration-with-permissions-policy&quot;&gt;Integration with Permissions Policy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#integration-with-permissions-policy&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Gamepad API spec defines a
&lt;a href=&quot;https://w3c.github.io/webappsec-permissions-policy/&quot; rel=&quot;noopener&quot;&gt;policy-controlled feature&lt;/a&gt;
identified by the string &lt;code&gt;&amp;quot;gamepad&amp;quot;&lt;/code&gt;. Its default &lt;code&gt;allowlist&lt;/code&gt; is &lt;code&gt;&amp;quot;self&amp;quot;&lt;/code&gt;.
A document&#39;s permissions policy determines whether any content in that document is allowed
to access &lt;code&gt;navigator.getGamepads()&lt;/code&gt;.
If disabled in any document, no content in the document will be allowed to use
&lt;code&gt;navigator.getGamepads()&lt;/code&gt;, nor will the &lt;code&gt;gamepadconnected&lt;/code&gt; and
&lt;code&gt;gamepaddisconnected&lt;/code&gt; events fire.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;gamepad&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A simple &lt;a href=&quot;https://gamepad-demo.glitch.me/&quot; rel=&quot;noopener&quot;&gt;gamepad tester demo&lt;/a&gt; is embedded below.
The source code is available &lt;a href=&quot;https://glitch.com/edit/#!/gamepad-demo&quot; rel=&quot;noopener&quot;&gt;on Glitch&lt;/a&gt;.
Try the demo by connecting a gamepad via USB or Bluetooth and pressing any of its buttons
or moving any of its axis.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 1000px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi; gamepad&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/gamepad-demo?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;gamepad-demo on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;bonus:-play-chrome-dino-on-web.dev&quot;&gt;Bonus: play Chrome dino on web.dev &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#bonus:-play-chrome-dino-on-web.dev&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can play
&lt;a href=&quot;https://tomayac.github.io/chrome-dino-gamepad/&quot; rel=&quot;noopener&quot;&gt;Chrome dino&lt;/a&gt;
with your gamepad on this very site.
The source code is available
&lt;a href=&quot;https://github.com/tomayac/chrome-dino-gamepad&quot; rel=&quot;noopener&quot;&gt;on GitHub&lt;/a&gt;.
Check out the gamepad polling implementation in
&lt;a href=&quot;https://github.com/tomayac/chrome-dino-gamepad/blob/885eb6134805345bf31eeb9971830adeb84747ab/trex-runner.js#L529-L571&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;trex-runner.js&lt;/code&gt;&lt;/a&gt;
and note how it is emulating key presses.&lt;/p&gt;
&lt;div style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://tomayac.github.io/chrome-dino-gamepad/&quot; title=&quot;Chrome dino gamepad&quot; allow=&quot;gamepad; fullscreen&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; loading=&quot;lazy&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;For the &lt;a href=&quot;https://tomayac.github.io/chrome-dino-gamepad/&quot; rel=&quot;noopener&quot;&gt;Chrome dino gamepad&lt;/a&gt; demo to work,
I have ripped out the Chrome dino game from the core Chromium project
(updating an &lt;a href=&quot;https://github.com/arnellebalane/trex-runner&quot; rel=&quot;noopener&quot;&gt;earlier effort&lt;/a&gt; by
&lt;a href=&quot;https://arnellebalane.com/&quot; rel=&quot;noopener&quot;&gt;Arnelle Ballane&lt;/a&gt;),
placed it on a standalone site, extended the existing gamepad API implementation by adding ducking
and vibration effects, created a full screen mode,
and &lt;a href=&quot;https://github.com/mehulsatardekar&quot; rel=&quot;noopener&quot;&gt;Mehul Satardekar&lt;/a&gt;
contributed a dark mode implementation.
Happy gaming!&lt;/p&gt;
&lt;h2 id=&quot;useful-links&quot;&gt;Useful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#useful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/gamepad/&quot; rel=&quot;noopener&quot;&gt;Gamepad API spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/gamepad/extensions.html&quot; rel=&quot;noopener&quot;&gt;Gamepad API extensions spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/gamepad/&quot; rel=&quot;noopener&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/gamepad/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by &lt;a href=&quot;https://github.com/beaufortfrancois&quot; rel=&quot;noopener&quot;&gt;François Beaufort&lt;/a&gt;
and &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.
The Gamepad API spec is currently edited by
&lt;a href=&quot;https://github.com/sagoston&quot; rel=&quot;noopener&quot;&gt;Steve Agoston&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/james-hollyer-981110a3/&quot; rel=&quot;noopener&quot;&gt;James Hollyer&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/nondebug&quot; rel=&quot;noopener&quot;&gt;Matt Reynolds&lt;/a&gt;. The former spec editors are
&lt;a href=&quot;https://blog.tojicode.com/&quot; rel=&quot;noopener&quot;&gt;Brandon Jones&lt;/a&gt;,
&lt;a href=&quot;https://h4ck3r.net/&quot; rel=&quot;noopener&quot;&gt;Scott Graham&lt;/a&gt;, and
&lt;a href=&quot;http://ted.mielczarek.org/&quot; rel=&quot;noopener&quot;&gt;Ted Mielczarek&lt;/a&gt;.
The Gamepad Extensions spec is edited by &lt;a href=&quot;https://blog.tojicode.com/&quot; rel=&quot;noopener&quot;&gt;Brandon Jones&lt;/a&gt;.
Hero image by Laura Torrent Puig.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
</feed>
