<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Animations on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/animations/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Animations on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about Animations.</subtitle>
  
  
  <entry>
    <title>Examples of high-performance CSS animations</title>
    <link href="https://web.dev/animations-examples/"/>
    <updated>2020-10-23T00:00:00Z</updated>
    <id>https://web.dev/animations-examples/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this post find out how some popular animations found on CodePen have been created.
These animations all use the performant techniques discussed in other articles in this section.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/animations-overview/&quot;&gt;Why are some animations slow?&lt;/a&gt; to learn the theory behind
these recommendations, and the &lt;a href=&quot;https://web.dev/animations-guide&quot;&gt;Animations Guide&lt;/a&gt; for practical tips.&lt;/p&gt;
&lt;h2 id=&quot;wizard-loading-animation&quot;&gt;Wizard loading animation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#wizard-loading-animation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;&quot; loading=&quot;lazy&quot; src=&quot;https://codepen.io/Craaftx/embed/ExyYRMK?height=458&amp;theme-id=light&amp;default-tab=result&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;Only CSS Loader - Wizard by Guilmain Dorian&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/Craaftx/full/ExyYRMK&quot; rel=&quot;noopener&quot;&gt;View Wizard loading animation on CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This loading animation is built entirely with CSS.
The image plus all of the animation has been created in CSS and HTML,
no images or JavaScript.
To understand how it was created and how well it performs you can use Chrome DevTools.&lt;/p&gt;
&lt;h3 id=&quot;inspect-the-animation-with-chrome-devtools&quot;&gt;Inspect the animation with Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#inspect-the-animation-with-chrome-devtools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With the animation running, open the Performance tab in Chrome DevTools and record a few seconds of the animation.
You should see in the Summary that the browser is not doing any Layout or Paint operations when running this animation.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Summary in DevTools&quot; decoding=&quot;async&quot; height=&quot;416&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 724px) 724px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/r1h4gb24ZiYXAfI7Mskh.jpg?auto=format&amp;w=1448 1448w&quot; width=&quot;724&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The summary after profiling the wizard animation.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To find out how this animation was achieved without causing layout and paint,
inspect any of the moving elements in Chrome DevTools.
You can use the &lt;strong&gt;Animations Panel&lt;/strong&gt; to locate the various animated elements,
clicking on any element will highlight it in the DOM.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Animations Panel showing the various parts of our animation.&quot; decoding=&quot;async&quot; height=&quot;349&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/sPoemcfld1jfUkSFhv3o.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Viewing and selecting items in the Chrome DevTools Animation Panel.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For example select the triangle,
and watch how the box of the element transforms during its journey into the air,
as it spins, and then returns to the start position.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/STzIqse0ekWT49oJbwX5.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Video showing how we can track the path of the triangle in Chrome DevTools.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;With the element still selected look at the Styles Panel.
There you can see the CSS which draws the shape of the triangle,
and the animation being used.&lt;/p&gt;
&lt;h3 id=&quot;how-it-works&quot;&gt;How it works &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#how-it-works&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The triangle is created by using the &lt;code&gt;::after&lt;/code&gt; pseudo-element to add generated content,
using borders to create the shape.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.triangle&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -62px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 110px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 110px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.triangle::after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; solid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 28px 48px 28px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transparent transparent #89beb3 transparent&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can find out more about making shapes with borders and generated content in
&lt;a href=&quot;https://css-tricks.com/the-shapes-of-css/&quot; rel=&quot;noopener&quot;&gt;The Shapes of CSS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The animation is added with the following line of CSS,&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; path_triangle 10s ease-in-out infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Staying in Chrome DevTools you can find the keyframes by scrolling down the Style Panel.
There you will find that the animation is created by using &lt;code&gt;transform&lt;/code&gt; to change the position of the element and rotate it.
The &lt;code&gt;transform&lt;/code&gt; property is one of the properties described in the &lt;a href=&quot;https://web.dev/animations-guide&quot;&gt;Animations Guide&lt;/a&gt;,
which does not cause the browser to do layout or paint operations (which are the main causes of slow animations).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; path_triangle&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;10%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-172px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translatex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-10deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;55%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-172px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translatex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-365deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;58%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-172px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translatex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-365deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;63%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-360deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/animation-breakdown1-2?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;animation-breakdown1-2 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Each of the different moving parts of this animation uses similar techniques.
The result is a complex animation which runs smoothly.&lt;/p&gt;
&lt;h2 id=&quot;pulsating-circle&quot;&gt;Pulsating Circle &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#pulsating-circle&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div style=&quot;height: 500px; width: 100%;&quot;&gt;
&lt;iframe allow=&quot;&quot; loading=&quot;lazy&quot; src=&quot;https://codepen.io/peeke/embed/BjxXZa?height=458&amp;theme-id=light&amp;default-tab=result&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;Pulsating Circle by Peeke&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/peeke/full/BjxXZa&quot; rel=&quot;noopener&quot;&gt;View Pulsating Circle on CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This type of animation is sometimes used to draw attention to something on a page.
To understand the animation you can use Firefox DevTools.&lt;/p&gt;
&lt;h3 id=&quot;inspect-the-animation-with-firefox-devtools&quot;&gt;Inspect the animation with Firefox DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#inspect-the-animation-with-firefox-devtools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With the animation running, open the Performance tab in Firefox DevTools and record a few seconds of the animation.
Stop the recording,
in the waterfall you should see that there are no entries for &lt;strong&gt;Recalculate Style&lt;/strong&gt;.
You now know that this animation does not cause style recalculation,
and therefore layout and paint operations.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;details of the animation in the Firefox Waterfall&quot; decoding=&quot;async&quot; height=&quot;354&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/68jWlrbNhgmS07vrXMCO.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Firefox DevTools Waterfall.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Staying in Firefox DevTools inspect the circle to see how this animation works.
The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a class of &lt;code&gt;pulsating-circle&lt;/code&gt; marks the position of the circle,
however it does not draw a circle itself.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.pulsating-circle&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 30px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 30px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The visible circle and animations are achieved using the &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt; pseudo-elements.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;::before&lt;/code&gt; element creates the opaque ring that extends outside of the white circle,
using an animation called &lt;code&gt;pulse-ring&lt;/code&gt;,
which animates &lt;code&gt;transform: scale&lt;/code&gt;, and &lt;code&gt;opacity&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.pulsating-circle::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; border-box&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 45px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #01a4e9&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pulse-ring 1.25s &lt;span class=&quot;token function&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.215&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.61&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.355&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; pulse-ring&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.33&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;80%, 100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Another way to see which properties are being animated is to select the &lt;strong&gt;Animations&lt;/strong&gt; panel in Firefox DevTools.
You will then see a visualization of the animations being used,
and the properties that are being animated.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/FuxnywlwqojS8YVMCmKC.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    With the ::before pseudo-element selected we can see which properties are animating.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The white circle itself is created and animated using the &lt;code&gt;::after&lt;/code&gt; pseudo-element.
The animation &lt;code&gt;pulse-dot&lt;/code&gt; uses &lt;code&gt;transform: scale&lt;/code&gt; to grow and shrink the dot during the animation.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.pulsating-circle::after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; white&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 15px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 0 8px &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pulse-dot 1.25s &lt;span class=&quot;token function&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.455&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.03&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.515&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.955&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; -0.4s infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; pulse-dot&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;An animation like this could be used in various places in your application,
it&#39;s important that these small touches don&#39;t impact the overall performance of your app.&lt;/p&gt;
&lt;h2 id=&quot;pure-css-3d-sphere&quot;&gt;Pure CSS 3D Sphere &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#pure-css-3d-sphere&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div style=&quot;height: 500px; width: 100%;&quot;&gt;
&lt;iframe allow=&quot;&quot; loading=&quot;lazy&quot; src=&quot;https://codepen.io/iamlark/embed/jYzYJg?height=458&amp;theme-id=light&amp;default-tab=result&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;Pure CSS 3d Sphere&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/iamlark/full/jYzYJg&quot; rel=&quot;noopener&quot;&gt;View Pure CSS 3D Sphere on CodePen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This animation seems incredibly complicated,
however it uses techniques that we have already seen in the previous examples.
The complexity comes from animating a large number of elements.&lt;/p&gt;
&lt;p&gt;Open Chrome DevTools and select one of the elements with a class of &lt;code&gt;plane&lt;/code&gt;.
The sphere is made up of a set of rotating planes and spokes.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/8lA3linRM6SqufzlUlJR.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The plane appears to be rotating.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/dom#search&quot; rel=&quot;noopener&quot;&gt;DOM Search Tool&lt;/a&gt;
in Chrome DevTools can make it easier to find an element that you want to inspect.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;These planes and spokes are inside a wrapper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;,
and it is this element which is rotating using &lt;code&gt;transform: rotate3d&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.sphere-wrapper&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;transform-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; preserve-3d&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; rotate3d 10s linear infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; rotate3d&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate3d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;25%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate3d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 90deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate3d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 180deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;75%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate3d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 270deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate3d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 360deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The dots can be found nested inside the &lt;code&gt;plane&lt;/code&gt; and &lt;code&gt;spoke&lt;/code&gt; elements,
they use an animation which uses transform to scale and translate them.
This creates the pulsing effect.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/JoLi8L3VW9nUG25sEvkZ.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The dot rotates with the sphere and pulses.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.spoke-15 .dot,&lt;br /&gt;.spoke-21 .dot&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pulsate 0.5s infinite 0.83333333s alternate both&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #55ffee&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@-webkit-keyframes&lt;/span&gt; pulsate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateZ&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;20px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateZ&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The work involved in creating this animation has been to get the timing right,
to create the turning and pulsing effect.
The animations themselves are quite straightforward,
and use methods which perform very well.&lt;/p&gt;
&lt;p&gt;You can see how this animation performs by opening Chrome DevTools and recording Performance while it is running.
After the initial load, the animation is not triggering Layout or Paint,
and runs smoothly.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-examples/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;From these examples you can see how animating a few properties using performant methods can create some very cool animations.
By defaulting to the performant methods described in the &lt;a href=&quot;https://web.dev/animations-guide&quot;&gt;Animations guide&lt;/a&gt;
you can spend your time creating the effect you want, with fewer concerns about making the page slow.&lt;/p&gt;
</content>
    <author>
      <name>Rachel Andrew</name>
    </author>
  </entry>
  
  <entry>
    <title>How to create high-performance CSS animations</title>
    <link href="https://web.dev/animations-guide/"/>
    <updated>2020-10-06T00:00:00Z</updated>
    <id>https://web.dev/animations-guide/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This guide teaches you how to create high-performance CSS animations.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/animations-overview/&quot;&gt;Why are some animations slow?&lt;/a&gt; to learn the theory behind
these recommendations.&lt;/p&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All of the CSS properties that this guide recommends have good cross-browser support.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/will-change#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;will-change&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;move&quot;&gt;Move an element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#move&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To move an element, use the &lt;code&gt;translate&lt;/code&gt; or &lt;code&gt;rotation&lt;/code&gt; keyword values of the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; property.&lt;/p&gt;
&lt;p&gt;For example to slide an item into view, use &lt;code&gt;translate&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.animate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; slide-in 0.7s both&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; slide-in&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-1000px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/animation-slide-in?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;animation-slide-in on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Items can also be rotated, in the example below 360 degrees.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.animate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; rotate 0.7s ease-in-out both&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; rotate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;360deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/animation-rotate?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;animation-rotate on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;resize&quot;&gt;Resize an element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#resize&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To resize an element, use the &lt;code&gt;scale&lt;/code&gt; keyword value of the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; property.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.animate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; scale 1.5s both&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; scale&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.5&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/animation-scale?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;animation-scale on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;visibility&quot;&gt;Change an element&#39;s visibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#visibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To show or hide an element, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.animate&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; opacity 2.5s both&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; opacity&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/animation-opacity?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;animation-opacity on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Find copy and paste examples of various animations at &lt;a href=&quot;https://animista.net/&quot; rel=&quot;noopener&quot;&gt;Animista&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;triggers&quot;&gt;Avoid properties that trigger layout or paint &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#triggers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before using any CSS property for animation (other than &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt;), go to
&lt;a href=&quot;https://csstriggers.com/&quot; rel=&quot;noopener&quot;&gt;CSS Triggers&lt;/a&gt; to determine the property&#39;s impact on the
&lt;a href=&quot;https://web.dev/animations-overview/#pipeline&quot;&gt;rendering pipeline&lt;/a&gt;. Avoid any property
that triggers layout or paint unless absolutely necessary.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The top property detailed on CSS Triggers&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;432&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/lo6imreXGzuZzsHVWUFf.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
If you must use a property
that triggers layout or paint, it is unlikely that you will be able to make the animation
smooth and high-performance.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;force&quot;&gt;Force layer creation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#force&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As explained in &lt;a href=&quot;https://web.dev/animations-overview&quot;&gt;Why are some animations slow?&lt;/a&gt;,
by placing elements on a new layer they can be repainted without also requiring the rest of the layout to be repainted.&lt;/p&gt;
&lt;p&gt;Browsers will often make good decisions about which items should be placed on a new layer,
but you can manually force layer creation with the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/will-change&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;will-change&lt;/code&gt;&lt;/a&gt; property.
As the name suggests, this property tells the browser that this element is going to be changed in some way.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
As layer creation can cause other performance issues,
this property should not be used as a premature optimization.
Instead, you should only use it when you are seeing jank and think that promoting
the element to a new layer may help.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In CSS this property can be applied to any selector:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body &gt; .sidebar&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;will-change&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;However, &lt;a href=&quot;https://drafts.csswg.org/css-will-change/&quot; rel=&quot;noopener&quot;&gt;the specification&lt;/a&gt;
suggests this approach should only be taken for elements that are always about to change.
If the above example was a sidebar the user could slide in and out, that might be the case.
Some items on your page may not frequently change,
and so it would be better to apply &lt;code&gt;will-change&lt;/code&gt; using JavaScript
at a point where it becomes likely the change will occur.
You&#39;ll need to make sure to give the browser enough time to perform the optimizations needed
and then remove the property once the changing has stopped.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For more information and examples of correct use of &lt;code&gt;will-change&lt;/code&gt; read
&lt;a href=&quot;https://dev.opera.com/articles/css-will-change-property/&quot; rel=&quot;noopener&quot;&gt;Everything You Need To Know About The CSS &lt;code&gt;will-change&lt;/code&gt; Property&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you need a way to force layer creation in one of the rare browsers that doesn&#39;t support
&lt;code&gt;will-change&lt;/code&gt; (most likely Internet Explorer at this point),
you can set &lt;code&gt;transform: translateZ(0)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;debug&quot;&gt;Debug slow or janky animations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#debug&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome DevTools and Firefox DevTools have lots of tools to help you figure out why
your animations are slow or janky.&lt;/p&gt;
&lt;h3 id=&quot;layout&quot;&gt;Check if an animation triggers layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#layout&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An animation that moves an element using something other than &lt;code&gt;transform&lt;/code&gt;, is likely to be slow.
In the following example, I have achieved the same visual result animating &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;, and using &lt;code&gt;transform&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; move 3s ease infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; move&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;     &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90vh - 160px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;     &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90vw - 200px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; move 3s ease infinite&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; move&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token selector&quot;&gt;50%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;     &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90vw - 200px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90vh - 160px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;You can test this in the following two Glitch examples,
and explore performance using DevTools.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://glitch.com/~animation-with-top-left&quot; rel=&quot;noopener&quot;&gt;Before&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://glitch.com/~animation-with-transform&quot; rel=&quot;noopener&quot;&gt;After&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;layout-chrome&quot;&gt;Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#layout-chrome&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;strong&gt;Performance&lt;/strong&gt; panel.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#record-runtime&quot; rel=&quot;noopener&quot;&gt;Record runtime performance&lt;/a&gt;
while your animation is happening.&lt;/li&gt;
&lt;li&gt;Inspect the &lt;strong&gt;Summary&lt;/strong&gt; tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you see a nonzero value for &lt;strong&gt;Rendering&lt;/strong&gt; in the &lt;strong&gt;Summary&lt;/strong&gt; tab, it may mean that your
animation is causing the browser to do layout work.&lt;/p&gt;
&lt;figure&gt;
  &lt;img alt=&quot;The Summary panel shows 37ms for rendering and 79ms for painting.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;699&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/cMNQR2jBEwa6ku5POXtZ.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-top-left.glitch.me/&quot;&gt;animation-with-top-left&lt;/a&gt;
    example causes rendering work.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img alt=&quot;The Summary panel show zero values for rendering and painting.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;639&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/3bn44P9h6lR93uBNRXY3.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-transform.glitch.me/&quot;&gt;animation-with-transform&lt;/a&gt;
    example does not cause rendering work.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;layout-firefox&quot;&gt;Firefox DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#layout-firefox&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In Firefox DevTools the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall&quot; rel=&quot;noopener&quot;&gt;Waterfall&lt;/a&gt;
can help you to understand where the browser is spending time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;strong&gt;Performance&lt;/strong&gt; panel.&lt;/li&gt;
&lt;li&gt;In the panel Start Recording Performance while your animation is happening.&lt;/li&gt;
&lt;li&gt;Stop the recording and inspect the &lt;strong&gt;Waterfall&lt;/strong&gt; tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you see entries for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Scenarios/Animating_CSS_properties&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Recalculate Style&lt;/strong&gt;&lt;/a&gt;
then the browser is having to begin at the start of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Scenarios/Animating_CSS_properties&quot; rel=&quot;noopener&quot;&gt;rendering waterfall&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
  &lt;img class=&quot;w-screenshot w-screenshot--filled&quot; src=&quot;https://web.dev/animations-guide/waterfall-before.jpg&quot; alt=&quot;The Waterfall panel shows many entries for Recalculate Style.&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-top-left.glitch.me/&quot;&gt;animation-with-top-left&lt;/a&gt;
    example causes style recalculation.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img class=&quot;w-screenshot w-screenshot--filled&quot; src=&quot;https://web.dev/animations-guide/waterfall-after.jpg&quot; alt=&quot;The Waterfall panel shows no entries for Recalculate Style.&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-transform.glitch.me/&quot;&gt;animation-with-transform&lt;/a&gt;
    example does not cause style recalculation.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;fps&quot;&gt;Check if an animation is dropping frames &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#fps&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#rendering&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Rendering&lt;/strong&gt; tab&lt;/a&gt; of Chrome DevTools.&lt;/li&gt;
&lt;li&gt;Enable the &lt;strong&gt;FPS meter&lt;/strong&gt; checkbox.&lt;/li&gt;
&lt;li&gt;Watch the values as your animation runs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At the top of the &lt;strong&gt;FPS meter&lt;/strong&gt; UI you see the label &lt;strong&gt;Frames&lt;/strong&gt;. Below
that you see a value along the lines of &lt;code&gt;50% 1 (938 m) dropped of 1878&lt;/code&gt;.
A high-performance animation will have a high percentage, e.g. &lt;code&gt;99%&lt;/code&gt;. A
high percentage means that few frames are being dropped and the animation will look smooth.&lt;/p&gt;
&lt;figure&gt;
  &lt;img alt=&quot;The fps meter shows 50% of frames were dropped&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;469&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 710px) 710px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/i9Cg7nswyO7jB768kpdQ.jpg?auto=format&amp;w=1420 1420w&quot; width=&quot;710&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-top-left.glitch.me/&quot;&gt;animation-with-top-left&lt;/a&gt;
    example causes 50% of frames to be dropped
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
  &lt;img alt=&quot;The fps meter shows only 1% of frames were dropped&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;468&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 710px) 710px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/FGROZ0i15tCAoiIOoEdG.jpg?auto=format&amp;w=1420 1420w&quot; width=&quot;710&quot; /&gt;
  &lt;figcaption&gt;
    The &lt;a href=&quot;https://animation-with-transform.glitch.me/&quot;&gt;animation-with-transform&lt;/a&gt;
    example causes only 1% of frames to be dropped.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;paint&quot;&gt;Check if an animation triggers paint &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#paint&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When it comes to painting, some things are more expensive than others.
For example, anything that involves a blur (like a shadow, for example) is going to take longer to paint than drawing a red box.
In terms of CSS, however, this isn&#39;t always obvious:
&lt;code&gt;background: red;&lt;/code&gt; and &lt;code&gt;box-shadow: 0, 4px, 4px, rgba(0,0,0,0.5);&lt;/code&gt;
don&#39;t necessarily look like they have vastly different performance characteristics, but they do.&lt;/p&gt;
&lt;p&gt;Browser DevTools can help you to identify which areas need to be repainted,
and performance issues related to painting.&lt;/p&gt;
&lt;h4 id=&quot;paint-chrome&quot;&gt;Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#paint-chrome&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#rendering&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Rendering&lt;/strong&gt; tab&lt;/a&gt; of Chrome DevTools.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Paint Flashing&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Move the pointer around the screen.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A UI element highlighted in green to demonstrate it will be repainted&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;185&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 708px) 708px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/MzAeQc5PvCltcm3gWaNV.jpg?auto=format&amp;w=1416 1416w&quot; width=&quot;708&quot; /&gt;
  &lt;figcaption&gt;In this example from Google Maps you can see the elements that will be repainted.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you see the whole screen flashing,
or areas that you don&#39;t think should change highlighted then you can do some investigation.&lt;/p&gt;
&lt;p&gt;If you need to dig into whether a particular property is causing performance issues due to painting,
the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#paint-profiler&quot; rel=&quot;noopener&quot;&gt;paint profiler&lt;/a&gt;
in Chrome DevTools can help.&lt;/p&gt;
&lt;h4 id=&quot;paint-firefox&quot;&gt;Firefox DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#paint-firefox&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Open &lt;strong&gt;Settings&lt;/strong&gt; and add a Toolbox button for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Paint_Flashing_Tool&quot; rel=&quot;noopener&quot;&gt;Toggle paint flashing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;On the page you want to inspect, toggle the button on and move your mouse or scroll to see highlighted areas.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-guide/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Where possible restrict animations to &lt;code&gt;opacity&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt;
in order to keep animations on the compositing stage of the rendering path.
Use DevTools to check which stage of the path is being affected by your animations.&lt;/p&gt;
&lt;p&gt;Use the paint profiler to see if any paint operations are particularly expensive.
If you find anything,
see if a different CSS property will give the same look and feel with better performance.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;will-change&lt;/code&gt; property sparingly,
and only if you encounter a performance issue.&lt;/p&gt;
</content>
    <author>
      <name>Rachel Andrew</name>
    </author><author>
      <name>Kayce Basques</name>
    </author>
  </entry>
  
  <entry>
    <title>Why are some animations slow?</title>
    <link href="https://web.dev/animations-overview/"/>
    <updated>2020-10-06T00:00:00Z</updated>
    <id>https://web.dev/animations-overview/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Modern browsers can animate two CSS properties cheaply: &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt;.
If you animate anything else,
the chances are you&#39;re not going to hit a silky smooth 60 frames per second (FPS).
This post explains why this is the case.&lt;/p&gt;
&lt;h2 id=&quot;fps&quot;&gt;Animation performance and frame rate &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#fps&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is widely accepted that a frame rate of 60 FPS is the target when animating anything on the web.
This frame rate will ensure that your animations look smooth.
On the web a frame is the time that it takes to do all of the work required to update and repaint the screen.
If each frame does not complete within 16.7ms (1000ms / 60 ≈ 16.7),
then users will perceive the delay.&lt;/p&gt;
&lt;h2 id=&quot;pipeline&quot;&gt;The rendering pipeline &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#pipeline&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To display something on a webpage the browser has to go through the following sequential steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Style&lt;/strong&gt;: Calculate the styles that apply to the elements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Layout&lt;/strong&gt;: Generate the geometry and position for each element.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Paint&lt;/strong&gt;: Fill out the pixels for each element into &lt;a href=&quot;https://web.dev/animations-overview/#layers&quot;&gt;layers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Composite&lt;/strong&gt;: Draw the layers to the screen.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These four steps are known as the browser&#39;s &lt;strong&gt;rendering pipeline&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;When you animate something on a page that has already loaded
these steps have to happen again.
This process begins from the step that has to be changed in order to allow the animation to take place.&lt;/p&gt;
&lt;p&gt;As mentioned before, these steps are &lt;strong&gt;sequential&lt;/strong&gt;.
For example, if you animate something that changes layout, the paint and composite
steps also have to run again. Animating something that changes layout
is therefore more expensive than animating something that only changes compositing.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For an in-depth look at exactly how this process happens in the browser
read &lt;a href=&quot;https://alistapart.com/article/braces-to-pixels/&quot; rel=&quot;noopener&quot;&gt;From Braces to Pixels&lt;/a&gt; and
&lt;a href=&quot;https://developers.google.com/web/updates/2018/09/inside-browser-part3&quot; rel=&quot;noopener&quot;&gt;Inside look at modern browser browser&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;layout&quot;&gt;Animating layout properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#layout&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Layout changes involve calculating the geometry (position and size) of all the elements affected by the change.
If you change one element,
the geometry of other elements may need to be recalculated.
For example, if you change the width of the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element any of its children may be affected.
Due to the way elements overflow and affect one another,
changes further down the tree can sometimes result in layout calculations all the way back up to the top.&lt;/p&gt;
&lt;p&gt;The larger the tree of visible elements,
the longer it takes to perform layout calculations.&lt;/p&gt;
&lt;h3 id=&quot;paint&quot;&gt;Animating paint properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#paint&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/09/inside-browser-part3#paint&quot; rel=&quot;noopener&quot;&gt;Paint&lt;/a&gt;
is the process of determining in what order elements should be painted to the screen.
It is often the longest-running of all tasks in the pipeline.&lt;/p&gt;
&lt;p&gt;The majority of painting in modern browsers is done in
&lt;a href=&quot;https://software.intel.com/content/www/us/en/develop/articles/software-vs-gpu-rasterization-in-chromium.html&quot; rel=&quot;noopener&quot;&gt;software rasterizers&lt;/a&gt;.
Depending on how the elements in your app are grouped into layers,
other elements besides the one that changed may also need to be painted.&lt;/p&gt;
&lt;h3 id=&quot;composite&quot;&gt;Animating composite properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#composite&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/09/inside-browser-part3#what_is_compositing&quot; rel=&quot;noopener&quot;&gt;Compositing&lt;/a&gt;
is the process of separating the page into layers, converting the information about how the page should look
into pixels (rasterization), and putting the layers together to create a page (compositing).&lt;/p&gt;
&lt;p&gt;This is why the &lt;code&gt;opacity&lt;/code&gt; property is included in the list of things which are cheap to animate.
As long as this property is in its own layer, changes to it can be handled by the GPU during the compositing step.
Chromium-based browsers and WebKit create a new layer for any element which has a CSS transition or animation on &lt;code&gt;opacity&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For an in-depth look at compositing see the article
&lt;a href=&quot;https://www.smashingmagazine.com/2016/12/gpu-animation-doing-it-right/&quot; rel=&quot;noopener&quot;&gt;GPU Animation: Doing It Right&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;layers&quot;&gt;What is a layer? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#layers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By placing the things that will be animated or transitioned onto a new layer,
the browser only needs to repaint those items and not everything else.
You may be familiar with Photoshop&#39;s concept of a layer which contains a bunch of elements that can be moved together.
Browser rendering layers are similar to that idea.&lt;/p&gt;
&lt;p&gt;While the browser does a good job of making decisions about what elements should be on a new layer,
if it misses one there are ways to force layer creation.
You can find out about that in &lt;a href=&quot;https://web.dev/animations-guide&quot;&gt;How to create high-performance animations&lt;/a&gt;.
However, creating new layers should be done with care because each layer uses memory.
On devices with limited memory creating new layers may cause more of a performance problem than the one you are trying to solve.
In addition, each layer&#39;s textures need to be uploaded to the GPU.
Therefore you may well hit constraints of bandwidth between the CPU and GPU.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can read a good explanation of layers, and how to create them in
&lt;a href=&quot;https://dassur.ma/things/forcing-layers/&quot; rel=&quot;noopener&quot;&gt;Layers and how to force them&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;css-js&quot;&gt;CSS vs JavaScript performance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/animations-overview/#css-js&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You might wonder: is it better from a performance perspective to use CSS or JavaScript for animations?&lt;/p&gt;
&lt;p&gt;CSS-based animations, and &lt;a href=&quot;https://web.dev/web-animations/&quot;&gt;Web Animations&lt;/a&gt; (in the browsers that support the API),
are typically handled on a thread known as the &lt;em&gt;compositor thread&lt;/em&gt;.
This is different from the browser&#39;s &lt;em&gt;main thread&lt;/em&gt;, where styling, layout, painting, and JavaScript are executed.
This means that if the browser is running some expensive tasks on the main thread,
these animations can keep going without being interrupted.&lt;/p&gt;
&lt;p&gt;As explained in this article,
other changes to transforms and opacity can, in many cases, also be handled by the compositor thread.&lt;/p&gt;
&lt;p&gt;If any animation triggers paint, layout, or both,
the main thread will be required to do work.
This is true for both CSS and JavaScript animations,
and the overhead of layout or paint will likely dwarf any work associated with CSS or JavaScript execution,
rendering the question moot.&lt;/p&gt;
</content>
    <author>
      <name>Rachel Andrew</name>
    </author>
  </entry>
  
  <entry>
    <title>Measure performance with the RAIL model</title>
    <link href="https://web.dev/rail/"/>
    <updated>2020-06-10T00:00:00Z</updated>
    <id>https://web.dev/rail/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;&lt;strong&gt;RAIL&lt;/strong&gt; is a &lt;strong&gt;user-centric&lt;/strong&gt; performance model that provides a structure for
thinking about performance. The model breaks down the user&#39;s experience into key
actions (for example, tap, scroll, load) and helps you define performance goals
for each of them.&lt;/p&gt;
&lt;p&gt;RAIL stands for four distinct aspects of web app life cycle: response,
animation, idle, and load. Users have different performance expectations for
each of these contexts, so performance goals are defined based on the context
and &lt;a href=&quot;https://www.nngroup.com/articles/response-times-3-important-limits/&quot; rel=&quot;noopener&quot;&gt;UX research on how users perceive
delays&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The 4 parts of the RAIL performance model: response, animation, idle, and load.&quot; decoding=&quot;async&quot; height=&quot;290&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The 4 parts of the RAIL performance model
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;focus-on-the-user&quot;&gt;Focus on the user &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#focus-on-the-user&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make users the focal point of your performance effort. The table below describes
key metrics of how users perceive performance delays:&lt;/p&gt;
&lt;table class=&quot;w-table-wrapper&quot;&gt;
  &lt;thead&gt;
  User perception of performance delays
  &lt;/thead&gt;
  &lt;tr&gt;
    &lt;td&gt;0&amp;nbsp;to&amp;nbsp;16&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Users are exceptionally good at tracking motion, and they dislike it when animations aren&#39;t smooth. They perceive animations as smooth so long as 60 new frames are rendered every second. That&#39;s 16&amp;nbsp;ms per frame, including the time it takes for the browser to paint the new frame to the screen, leaving an app about 10&amp;nbsp;ms to produce a frame.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;0&amp;nbsp;to&amp;nbsp;100&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Respond to user actions within this time window and users feel like the result is immediate. Any longer, and the connection between action and reaction is broken.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;100&amp;nbsp;to&amp;nbsp;1000&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Within this window, things feel part of a natural and continuous progression of tasks. For most users on the web, loading pages or changing views represents a task.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;1000&amp;nbsp;ms&amp;nbsp;or&amp;nbsp;more&lt;/td&gt;
    &lt;td&gt;Beyond 1000 milliseconds (1 second), users lose focus on the task they are performing.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;10000&amp;nbsp;ms or more&lt;/td&gt;
    &lt;td&gt;Beyond 10000 milliseconds (10 seconds), users are frustrated and are likely to abandon tasks. They may or may not come back later.&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Users perceive performance delays differently, depending on network
conditions and hardware. For example, loading sites on a powerful desktop
machine over a fast Wi-Fi connection commonly happens in under 1 s and
users have grown accustomed to that. Loading sites on mobile devices with slow
3G connections takes more time, so mobile users are generally more patient and
loading in 5 s on mobile is a more realistic goal. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;goals-and-guidelines&quot;&gt;Goals and guidelines &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#goals-and-guidelines&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the context of RAIL, the terms &lt;strong&gt;goals&lt;/strong&gt; and &lt;strong&gt;guidelines&lt;/strong&gt; have specific
meanings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;. Key performance metrics related to user experience. For example,
tap to paint in under 100 milliseconds. Since human perception is relatively
constant, these goals are unlikely to change any time soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;. Recommendations that help you achieve goals. These may be
specific to current hardware and network connection conditions, and therefore
may change over time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;response:-process-events-in-under-50ms&quot;&gt;Response: process events in under 50ms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#response:-process-events-in-under-50ms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Complete a transition initiated by user input within 100 ms, so
users feel like the interactions are instantaneous.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To ensure a visible response within 100 ms, process user input events
within 50 ms. This applies to most inputs, such as clicking buttons,
toggling form controls, or starting animations. This does not apply to touch
drags or scrolls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Though it may sound counterintuitive, it&#39;s not always the right call to
respond to user input immediately. You can use this 100 ms window to do
other expensive work, but be careful not to block the user. If possible, do
work in the background.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For actions that take longer than 50 ms to complete, always provide
feedback.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;50-ms-or-100-ms&quot;&gt;50 ms or 100 ms? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#50-ms-or-100-ms&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The goal is to respond to input in under 100 ms, so why is our budget only
50 ms? This is because there is generally other work being done in addition
to input handling, and that work takes up part of the time available for
acceptable input response. If an application is performing work in the
recommended 50 ms chunks during idle time, that means input can be queued
for up to 50 ms if it occurs during one of those chunks of work. Accounting
for this, it&#39;s safe to assume only the remaining 50 ms is available for
actual input handling. This effect is visualized in the diagram below which
shows how input received during an idle task is queued, reducing the available
processing time:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing how input received during an idle task is queued, reducing available input processing time to 50ms&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;How idle tasks affect input response budget.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;animation:-produce-a-frame-in-10-ms&quot;&gt;Animation: produce a frame in 10 ms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#animation:-produce-a-frame-in-10-ms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Produce each frame in an animation in 10 ms or less. Technically, the
maximum budget for each frame is 16 ms (1000 ms / 60 frames per
second ≈ 16 ms), but browsers need about 6 ms to render each frame,
hence the guideline of 10 ms per frame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aim for visual smoothness. Users notice when frame rates vary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In high pressure points like animations, the key is to do nothing where you
can, and the absolute minimum where you can&#39;t. Whenever possible, make use of
the 100 ms response to pre-calculate expensive work so that you maximize
your chances of hitting 60 fps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rendering&quot; rel=&quot;noopener&quot;&gt;Rendering
Performance&lt;/a&gt;
for various animation optimization strategies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Recognize all the types of animations. Animations aren&#39;t just fancy
UI effects. Each of these interactions are considered animations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual animations, such as entrances and exits,
&lt;a href=&quot;https://www.webopedia.com/TERM/T/tweening.html&quot; rel=&quot;noopener&quot;&gt;tweens&lt;/a&gt;, and loading
indicators.&lt;/li&gt;
&lt;li&gt;Scrolling. This includes flinging, which is when the user starts scrolling,
then lets go, and the page continues scrolling.&lt;/li&gt;
&lt;li&gt;Dragging. Animations often follow user interactions, such as panning a map or
pinching to zoom. &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id=&quot;idle:-maximize-idle-time&quot;&gt;Idle: maximize idle time &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#idle:-maximize-idle-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Maximize idle time to increase the odds that the page responds to user
input within 50 ms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use idle time to complete deferred work. For example, for the initial page
load, load as little data as possible, then use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback&quot; rel=&quot;noopener&quot;&gt;idle
time&lt;/a&gt;
to load the rest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perform work during idle time in 50 ms or less. Any longer, and you risk
interfering with the app&#39;s ability to respond to user input within 50 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a user interacts with a page during idle time work, the user interaction
should always take the highest priority and interrupt the idle time work.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;load:-deliver-content-and-become-interactive-in-under-5-seconds&quot;&gt;Load: deliver content and become interactive in under 5 seconds &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#load:-deliver-content-and-become-interactive-in-under-5-seconds&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When pages load slowly, user attention wanders, and users perceive the task as
broken. Sites that load quickly have &lt;a href=&quot;https://www.thinkwithgoogle.com/intl/en-154/insights-inspiration/research-data/need-mobile-speed-how-mobile-latency-impacts-publisher-revenue/&quot; rel=&quot;noopener&quot;&gt;longer average sessions, lower bounce
rates, and higher ad
viewability&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Optimize for fast loading performance relative to the device and network
capabilities of your users. Currently, a good target for first loads is to
load the page and be &lt;a href=&quot;https://web.dev/interactive/&quot;&gt;interactive&lt;/a&gt; in &lt;a href=&quot;https://web.dev/performance-budgets-101/#establish-a-baseline&quot;&gt;5 seconds
or less on mid-range mobile devices with slow 3G
connections&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For subsequent loads, a good target is to load the page in under 2 seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Be aware that these targets may change over time.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Test your load performance on the mobile devices and network connections that
are common among your users. You can use &lt;a href=&quot;https://web.dev/chrome-ux-report/&quot;&gt;Chrome User Experience
Report&lt;/a&gt; to find out the &lt;a href=&quot;https://web.dev/chrome-ux-report-data-studio-dashboard/#using-the-dashboard&quot;&gt;connection
distribution&lt;/a&gt;
of your users. If the data is not available for your site, &lt;a href=&quot;https://www.gsma.com/mobileeconomy/&quot; rel=&quot;noopener&quot;&gt;The Mobile Economy
2019&lt;/a&gt; suggests that a good global
baseline is a mid-range Android phone, such as a Moto G4, and a slow 3G
network (defined as 400 ms RTT and 400 kbps transfer speed). This
combination is available on &lt;a href=&quot;https://www.webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep in mind that although your typical mobile user&#39;s device might claim that
it&#39;s on a 2G, 3G, or 4G connection, in reality the &lt;a href=&quot;https://web.dev/adaptive-serving-based-on-network-quality/#how-it-works&quot;&gt;effective connection
speed&lt;/a&gt;
is often significantly slower, due to packet loss and network variance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;Eliminate render blocking
resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You don&#39;t have to load everything in under 5 seconds to produce the perception
of a complete load. Consider &lt;a href=&quot;https://web.dev/browser-level-image-lazy-loading/&quot;&gt;lazy-loading
images&lt;/a&gt;, &lt;a href=&quot;https://web.dev/reduce-javascript-payloads-with-code-splitting/&quot;&gt;code-splitting JavaScript
bundles&lt;/a&gt;, and
other &lt;a href=&quot;https://web.dev/fast/&quot;&gt;optimizations suggested on web.dev&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Recognize the factors that affect page load performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Network speed and latency&lt;/li&gt;
&lt;li&gt;Hardware (slower CPUs, for example)&lt;/li&gt;
&lt;li&gt;Cache eviction&lt;/li&gt;
&lt;li&gt;Differences in L2/L3 caching&lt;/li&gt;
&lt;li&gt;Parsing JavaScript &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id=&quot;tools-for-measuring-rail&quot;&gt;Tools for measuring RAIL &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#tools-for-measuring-rail&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few tools to help you automate your RAIL measurements. Which one you
use depends on what type of information you need, and what type of workflow you
prefer.&lt;/p&gt;
&lt;h3 id=&quot;chrome-devtools&quot;&gt;Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#chrome-devtools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;
provides in-depth analysis on everything that happens while your page loads or
runs. See &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance&quot; rel=&quot;noopener&quot;&gt;Get Started With Analyzing Runtime
Performance&lt;/a&gt;
to get familiar with the &lt;strong&gt;Performance&lt;/strong&gt; panel UI.&lt;/p&gt;
&lt;p&gt;The following DevTools features are especially relevant:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#cpu-throttle&quot; rel=&quot;noopener&quot;&gt;Throttle your
CPU&lt;/a&gt;
to simulate a less-powerful device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#network-throttle&quot; rel=&quot;noopener&quot;&gt;Throttle the
network&lt;/a&gt;
to simulate slower connections.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#main&quot; rel=&quot;noopener&quot;&gt;View main thread
activity&lt;/a&gt;
to view every event that occurred on the main thread while you were recording.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#activities&quot; rel=&quot;noopener&quot;&gt;View main thread activities in a
table&lt;/a&gt;
to sort activities based on which ones took up the most time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#fps&quot; rel=&quot;noopener&quot;&gt;Analyze frames per second
(FPS)&lt;/a&gt;
to measure whether your animations truly run smoothly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/11/devtools-release-notes#perf-monitor&quot; rel=&quot;noopener&quot;&gt;Monitor CPU usage, JS heap size, DOM nodes, layouts per second, and
more&lt;/a&gt;
in real-time with the &lt;strong&gt;Performance Monitor&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#network&quot; rel=&quot;noopener&quot;&gt;Visualize network
requests&lt;/a&gt;
that occurred while you were recording with the &lt;strong&gt;Network&lt;/strong&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#screenshots&quot; rel=&quot;noopener&quot;&gt;Capture screenshots while
recording&lt;/a&gt;
to play back exactly how the page looked while the page loaded, or an
animation fired, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#interactions&quot; rel=&quot;noopener&quot;&gt;View
interactions&lt;/a&gt;
to quickly identify what happened on a page after a user interacted with it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#scrolling-performance-issues&quot; rel=&quot;noopener&quot;&gt;Find scroll performance issues in
real-time&lt;/a&gt;
by highlighting the page whenever a potentially problematic listener fires.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#paint-flashing&quot; rel=&quot;noopener&quot;&gt;View paint events in
real-time&lt;/a&gt;
to identify costly paint events that may be harming the performance of your
animations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lighthouse&quot;&gt;Lighthouse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#lighthouse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt; is available in
Chrome DevTools,  at &lt;a href=&quot;https://web.dev/measure/&quot;&gt;web.dev/measure&lt;/a&gt;, as a
Chrome Extension, as a Node.js module, and within WebPageTest. You give it a
URL, it simulates a mid-range device with a slow 3G connection, runs a series of
audits on the page, and then gives you a report on load performance, as well as
suggestions on how to improve.&lt;/p&gt;
&lt;p&gt;The following audits are especially relevant:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/lighthouse-max-potential-fid/&quot;&gt;Max Potential First Input
Delay&lt;/a&gt;. Estimates how long your
app will take to respond to user input, based on main thread idle time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-passive-event-listeners/&quot;&gt;Does not use passive listeners to improve scrolling
performance&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/lighthouse-total-blocking-time/&quot;&gt;Total Blocking Time&lt;/a&gt;.
Measures the total amount of time that a page is blocked from responding to
user input, such as mouse clicks, screen taps, or keyboard presses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/consistently-interactive&quot; rel=&quot;noopener&quot;&gt;Time To
Interactive&lt;/a&gt;.
Measures when a user can consistently interact with all page elements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Load&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/service-worker/&quot;&gt;Does not register a service worker that controls page and
start_url&lt;/a&gt;. A service worker can cache common
resources on a user&#39;s device, reducing time spent fetching resources over the
network.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/load-fast-enough-for-pwa/&quot;&gt;Page load is not fast enough on mobile
networks&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/blocking-resources&quot; rel=&quot;noopener&quot;&gt;Eliminate render-blocking
resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/offscreen-images/&quot;&gt;Defer offscreen images&lt;/a&gt;. Defer the loading
of offscreen images until they&#39;re needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-responsive-images/&quot;&gt;Properly size images&lt;/a&gt;. Don&#39;t serve
images that are significantly larger than the size that&#39;s rendered in the
mobile viewport.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/critical-request-chains/&quot;&gt;Avoid chaining critical requests&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-http2/&quot;&gt;Does not use HTTP/2 for all of its resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-optimized-images/&quot;&gt;Efficiently encode images&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-text-compression/&quot;&gt;Enable text compression&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/total-byte-weight/&quot;&gt;Avoid enormous network payloads&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/dom-size/&quot;&gt;Avoid an excessive DOM size&lt;/a&gt;. Reduce network bytes
by only shipping DOM nodes that are needed for rendering the page.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;webpagetest&quot;&gt;WebPageTest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#webpagetest&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebPageTest is a web performance tool that uses real browsers to access web
pages and collect timing metrics. Enter a URL at
&lt;a href=&quot;https://webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;webpagetest.org/easy&lt;/a&gt; to get a detailed report on
the page&#39;s load performance on a real Moto G4 device with a slow 3G connection.
You can also configure it to include a Lighthouse audit.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;RAIL is a lens for looking at a website&#39;s user experience as a journey composed
of distinct interactions. Understand how users perceive your site in order to
set performance goals with the greatest impact on user experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Focus on the user.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Respond to user input in under 100 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Produce a frame in under 10 ms when animating or scrolling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maximize main thread idle time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load interactive content in under 5000 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Web Animations API improvements in Chromium 84</title>
    <link href="https://web.dev/web-animations/"/>
    <updated>2020-05-27T00:00:00Z</updated>
    <id>https://web.dev/web-animations/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;When used correctly, &lt;a href=&quot;https://www.researchgate.net/publication/229351931_The_Effects_of_Animation_and_Format_on_the_Perception_and_Memory_of_Online_Advertising&quot; rel=&quot;noopener&quot;&gt;animations improve user perception and memory&lt;/a&gt; of your brand, guide user actions, and help users navigate your application—providing context in a digital space.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/web-animations-1/&quot; rel=&quot;noopener&quot;&gt;Web Animations API&lt;/a&gt; is a tool that enables developers to write &lt;a href=&quot;https://www.youtube.com/watch?v=WaNoqBAp8NI&quot; rel=&quot;noopener&quot;&gt;imperative animations with JavaScript&lt;/a&gt;. It was written to underpin both CSS animation and transition implementations and enable future effects to be developed, as well as existing effects to be composed and timed.&lt;/p&gt;
&lt;p&gt;While &lt;a href=&quot;https://platform-status.mozilla.org/#web-animations&quot; rel=&quot;noopener&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://webkit.org/status/#specification-web-animations&quot; rel=&quot;noopener&quot;&gt;Safari&lt;/a&gt; have already implemented the full set of spec &lt;a href=&quot;https://caniuse.com/#feat=web-animation&quot; rel=&quot;noopener&quot;&gt;features&lt;/a&gt;, Chromium 84 brings a slew of previously unsupported features to &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/status/webanimationsjavascriptapi/&quot; rel=&quot;noopener&quot;&gt;Chrome and Edge&lt;/a&gt; enabling cross-browser interoperability.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Web Animations API first hit Chromium in version 36, July of 2014. Now the spec is going to be complete, in version 84, launching July 2020.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;374&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mdsjLgrX6rngEnBZo5Nu.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The long history of the Web Animations API in Chromium.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;getting-started&quot;&gt;Getting started &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#getting-started&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Creating an animation via the Web Animations API should feel very familiar if you&#39;ve used &lt;code&gt;@keyframe&lt;/code&gt; rules. First you&#39;ll need to create a Keyframe Object. What might look like &lt;a href=&quot;https://codepen.io/una/pen/RwWMvPw&quot; rel=&quot;noopener&quot;&gt;this&lt;/a&gt; in CSS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; openAnimation&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;would look like &lt;a href=&quot;https://codepen.io/una/pen/abvYXJX&quot; rel=&quot;noopener&quot;&gt;this&lt;/a&gt; in JavaScript:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; openAnimation &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;scale(0)&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;scale(1)&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Where you set parameters for animation in CSS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.modal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; openAnimation 1s 1 ease-in&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;you would set in JS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.modal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    openAnimation&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 1s&lt;/span&gt;&lt;br /&gt;      iterations&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// single iteration&lt;/span&gt;&lt;br /&gt;      easing&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ease-in&#39;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// easing function&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The amount of code is about the same, but with JavaScript, you get a couple of superpowers that you don&#39;t have with CSS alone. This includes the ability to sequence effects, and an increased control of their play states.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Hyphenated property names become camel case when used in keyframes (e.g. &lt;code&gt;background-color&lt;/code&gt; to &lt;code&gt;backgroundColor&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;beyond-element.animate()&quot;&gt;Beyond &lt;code&gt;element.animate()&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#beyond-element.animate()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;However, with the update, the Web Animations API is no longer restricted to animations created via &lt;code&gt;element.animate()&lt;/code&gt;. We can manipulate CSS animations and transitions as well.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getAnimations()&lt;/code&gt; is a method that returns all animations on an element regardless of whether it was created via &lt;code&gt;element.animate()&lt;/code&gt; or via CSS rules (CSS animation or transition). Here is an example of what this looks like:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/waapi-getanimations?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;waapi-getanimations on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;You first &lt;code&gt;&amp;quot;get&amp;quot;&lt;/code&gt; the keyframes for the transition to determine where we are transitioning from. Then, you create two new opacity animations, enabling the   cross fade effect. Once the cross-fade completes, you delete the copy.&lt;/p&gt;
&lt;h2 id=&quot;orchestrating-animations-with-promises&quot;&gt;Orchestrating animations with promises &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#orchestrating-animations-with-promises&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In Chromium 84, you now have two methods that can be used with promises: &lt;code&gt;animation.ready&lt;/code&gt; and &lt;code&gt;animation.finished&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;animation.ready&lt;/code&gt; enables you to wait for pending changes to take effect (i.e. switching between playback control methods such as play and pause).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animation.finished&lt;/code&gt; provides a means of executing custom JavaScript code when an animation is complete.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&#39;s continue with our example, and create an orchestrated animation chain with &lt;code&gt;animation.finished&lt;/code&gt;. Here, you have a vertical transformation (&lt;code&gt;scaleY&lt;/code&gt;), followed by a horizontal transformation (&lt;code&gt;scaleX&lt;/code&gt;), followed by an opacity change on a child element:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/modal-open.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Applying transformations and opacity to an opening modal element. &lt;a href=&quot;https://codepen.io/una/pen/dyYKJMz&quot;&gt;See Demo on Codepen&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; transformAnimation &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; modal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;openModal&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; openModalSettings&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;transformAnimation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;finished&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fadeIn&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fadeInSettings&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;We&#39;ve chained these animations using &lt;code&gt;animation.finished.then()&lt;/code&gt; prior to executing the next animation set in the chain. This way, the animations appear in order, and you are even applying effects to different target elements with different options set (such as speed and ease).&lt;/p&gt;
&lt;p&gt;Within CSS, this would be cumbersome to recreate, especially when applying unique, yet sequenced animations to multiple elements. You&#39;d have to use a &lt;code&gt;@keyframe&lt;/code&gt;, sort out the correct timing percentages to place the animations, and use &lt;code&gt;animation-delay&lt;/code&gt; prior to triggering the animations in the sequence.&lt;/p&gt;
&lt;h3 id=&quot;example:-play-pause-and-reverse&quot;&gt;Example: Play, pause, and reverse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#example:-play-pause-and-reverse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What can open, should close! Luckily, since &lt;a href=&quot;https://developers.google.com/web/updates/2014/12/web-animation-playback&quot; rel=&quot;noopener&quot;&gt;Chromium 39&lt;/a&gt;, the Web Animations API has provided us the ability to play, pause, and reverse our animations.&lt;/p&gt;
&lt;p&gt;You can take the above animation, and give it a smooth, reversed animation when clicking the button again using &lt;code&gt;.reverse()&lt;/code&gt;. This way, you can create a smoother and more contextual interaction for our modal.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/modal-reverse.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    An example of a modal opening and closing upon button click. &lt;a href=&quot;https://glitch.com/~waapi-promises&quot;&gt;See Demo on Glitch &lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/waapi-promises?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=script.js&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;waapi-promises on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;What you can do is create two play-pending animations (&lt;code&gt;openModal&lt;/code&gt;, and an inline opacity transformation), and then pause one of the animations, delaying it until the other is finished. You can then use promises to wait for each to be finished before playing. Finally, you can check to see if a flag is set, and then reverse each animation.&lt;/p&gt;
&lt;h3 id=&quot;example:-dynamic-interactions-with-partial-keyframes&quot;&gt;Example: Dynamic interactions with partial keyframes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#example:-dynamic-interactions-with-partial-keyframes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/retargetting.mp4&quot; /&gt;
  &lt;/video&gt;  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Retargeting example, where a mouse click adjusts the animation to a new location. &lt;a href=&quot;https://glitch.com/~waapi-retargetting&quot;&gt;See Demo on Glitch &lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;selector&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;translate(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;x&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px, &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;y&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;forwards&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In this example, there is only one keyframe, and no specified start position. This is an example of using &lt;strong&gt;partial keyframes&lt;/strong&gt;. The mouse handler does a few things here: it sets a new end location and triggers a new animation. The new start position is inferred from the current underlying position.&lt;/p&gt;
&lt;p&gt;New transitions can be triggered while existing ones are still running. This means that the current transition is interrupted, and a new one is created.&lt;/p&gt;
&lt;h2 id=&quot;performance-improvements-with-replaceable-animations&quot;&gt;Performance improvements with replaceable animations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#performance-improvements-with-replaceable-animations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When creating animations based on events, such as on &lt;code&gt;&#39;mousemove&#39;&lt;/code&gt;, a new animation is created each time, which can quickly consume memory and degrade performance.  To address this problem, replaceable animations were introduced in Chromium 83, enabling automated cleanup, where finished animations are flagged as replaceable and automatically removed if replaced by another finished animation. Consider the following example:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/comet-trail.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
  A comet trail animates when the mouse moves. &lt;a href=&quot;https://glitch.com/~waapi-replaced&quot;&gt;See Demo on Glitch&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt; rectangle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;px&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;forwards&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each time the mouse moves, the browser re-calculates the position for each ball in the comet trail and creates an animation to this new point. The browser now knows to remove old animations (enabling replacement) when:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The animation is finished.&lt;/li&gt;
&lt;li&gt;There is one or more animations higher in composite ordering that are also finished.&lt;/li&gt;
&lt;li&gt;The new animations are animating the same properties.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can see exactly how many animations are being replaced by tallying up a counter with each removed animation, using &lt;code&gt;anim.onremove&lt;/code&gt; to trigger the counter.&lt;/p&gt;
&lt;p&gt;There are a few additional methods to take your animation control even further:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;animation.replaceState()&lt;/code&gt; provides a means of tracking whether an animation is active, persisted, or removed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animation.commitStyles()&lt;/code&gt; updates the style of an element based on the underlying style along with all animations on the element in the composite order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animation.persist()&lt;/code&gt; marks an animation as non-replaceable.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;code&gt;animation.commitStyles()&lt;/code&gt; and &lt;code&gt;animation.persist()&lt;/code&gt; are commonly used with compositing modes, such as &amp;quot;add&amp;quot;. Check out the composite modes demo below to see them in action.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;smoother-animations-with-composite-modes&quot;&gt;Smoother animations with composite modes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#smoother-animations-with-composite-modes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the Web Animations API, you can now set the composite mode of your animations, meaning they can be additive or accumulative, in addition to the default mode of &amp;quot;replace&amp;quot;. &lt;a href=&quot;https://css-tricks.com/additive-animation-web-animations-api/&quot; rel=&quot;noopener&quot;&gt;Composite modes&lt;/a&gt; allow developers to write distinct animations and have control over how effects are combined. Three composite modes are now supported: &lt;code&gt;&#39;replace&#39;&lt;/code&gt; (the default mode), &lt;code&gt;&#39;add&#39;&lt;/code&gt;, and &lt;code&gt;&#39;accumulate&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When you composite animations, a developer can write short, distinct effects and see them combined together. In the example below, we are applying a rotation and scale keyframe to each box, with the only adjustment being the composite mode, added as an option:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/replace-add-accumulate.mp4&quot; /&gt;
  &lt;/video&gt;  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A demo showing the default, add, and accumulate composite modes. &lt;a href=&quot;https://glitch.com/~waapi-composite-demos&quot;&gt;See Demo on Glitch&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In the default &lt;code&gt;&#39;replace&#39;&lt;/code&gt; composite mode, the final animation replaces the transform property and ends up at &lt;code&gt;rotate(360deg) scale(1.4)&lt;/code&gt;. For &lt;code&gt;&#39;add&#39;&lt;/code&gt;, composite adds the rotation and multiplies the scale, resulting in a final state of &lt;code&gt;rotate(720deg) scale(1.96)&lt;/code&gt;. &lt;code&gt;&#39;accumulate&#39;&lt;/code&gt; combines the transformations, resulting in &lt;code&gt;rotate(720deg) scale(1.8)&lt;/code&gt;. For more on the intricacies of these composite modes, check out &lt;a href=&quot;https://www.w3.org/TR/web-animations-1/#the-compositeoperation-enumeration&quot; rel=&quot;noopener&quot;&gt;The CompositeOperation and CompositeOperationOrAuto enumerations&lt;/a&gt; from the Web Animations spec.&lt;/p&gt;
&lt;p&gt;Let&#39;s take a look at a UI element example:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/web-animations/dropdown.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
  A bouncy dropdown menu which has two composited animations applied to it. &lt;a href=&quot;https://glitch.com/~waapi-composited&quot;&gt;See Demo on Glitch&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Here, two &lt;code&gt;top&lt;/code&gt; animations are composited. The first is a macro-animation, which moves the dropdown by the full height of the menu itself as a slide-in effect from the top of the page, and the second, a micro-animation, applies a little bounce as it hits the bottom. Using the &lt;code&gt;&#39;add&#39;&lt;/code&gt; composite mode enables a smoother transition.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; dropDown &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; menu&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;menuHeight&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; easing&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ease-in&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;forwards&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  dropDown&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;finished&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; bounce &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; menu&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;0px&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; easing&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ease-in&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;10px&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; easing&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ease-out&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; composite&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;add&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;what&#39;s-next-for-the-web-animations-api&quot;&gt;What&#39;s next for the Web Animations API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/web-animations/#what&#39;s-next-for-the-web-animations-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These are all exciting additions to animations capabilities in today&#39;s browsers, and even more additions are coming down the pipeline. Check out these future specifications for some further reading on what&#39;s coming next:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/css-animation-worklet-1/#scroll-timeline&quot; rel=&quot;noopener&quot;&gt;Scroll-linked animations with the Houdini API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/web-animations-2/#setting-the-timeline&quot; rel=&quot;noopener&quot;&gt;Mutable timelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/web-animations-2/#grouping-and-synchronization&quot; rel=&quot;noopener&quot;&gt;Group Effect and Synchronization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Una Kravets</name>
    </author><author>
      <name>Kevin Ellis</name>
    </author>
  </entry>
</feed>
