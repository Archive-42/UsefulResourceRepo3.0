<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Tools on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/tools/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Tools on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about Tools.</subtitle>
  
  
  <entry>
    <title>Find your way with field data in the Web Vitals extension update</title>
    <link href="https://web.dev/field-data-in-the-web-vitals-extension/"/>
    <updated>2021-07-02T00:00:00Z</updated>
    <id>https://web.dev/field-data-in-the-web-vitals-extension/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;&lt;a href=&quot;https://web.dev/vitals&quot;&gt;Core Web Vitals&lt;/a&gt; are the most important metrics to measure to
understand your users&#39; experiences, because when users have good experiences,
&lt;a href=&quot;https://wpostats.com/&quot; rel=&quot;noopener&quot;&gt;good things happen&lt;/a&gt;! The &lt;a href=&quot;https://chrome.google.com/webstore/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?hl=en&quot; rel=&quot;noopener&quot;&gt;Web Vitals extension&lt;/a&gt;
for Chrome is one tool in the &lt;a href=&quot;https://web.dev/vitals-tools/&quot;&gt;Web Vitals toolbox&lt;/a&gt; that shows you
performance data about the pages you visit as you browse the web.&lt;/p&gt;
&lt;p&gt;Page performance depends on many factors, including hardware and network quality. How
you experience a page on your machine may be very different from how the majority of users
experience it. That&#39;s why version 1.0 of the Web Vitals extension includes a new feature
that integrates real-user data from the &lt;a href=&quot;https://web.dev/chrome-ux-report/&quot;&gt;Chrome UX Report&lt;/a&gt; (CrUX)
with your local Core Web Vitals measurements. This feature displays your local measurements
in the context of how other users have experienced the same pages. It comes with
a sparkly new UI and I&#39;m excited to show you how it works.&lt;/p&gt;
&lt;p&gt;&lt;video class=&quot;w-screenshot&quot; controls=&quot;&quot; height=&quot;493&quot; loop=&quot;&quot; muted=&quot;&quot; preload=&quot;auto&quot; width=&quot;800&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/STd8eW8CSiNp5B1bX0R6Dww2eH32/EFeVK6dAwBZWzKhqBd1Y.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;field-data-from-crux&quot;&gt;Field data from CrUX &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#field-data-from-crux&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CrUX is a public dataset of real-user experiences in Chrome. It powers some of the critical tools
in the Core Web Vitals workflow like &lt;a href=&quot;https://support.google.com/webmasters/answer/9205520#about_data&quot; rel=&quot;noopener&quot;&gt;Search Console&lt;/a&gt;
and &lt;a href=&quot;https://developers.google.com/speed/docs/insights/v5/about#crux&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;.
The raw data for millions of websites is also publicly queryable in the &lt;a href=&quot;https://web.dev/chrome-ux-report-bigquery&quot;&gt;CrUX dataset on BigQuery&lt;/a&gt;
and the &lt;a href=&quot;https://web.dev/chrome-ux-report-api&quot;&gt;CrUX API&lt;/a&gt;. This Web Vitals extension update
integrates the page and origin-level desktop data from the CrUX API.&lt;/p&gt;
&lt;p&gt;User experience data is broken down into three qualitative ratings: good, needs improvement, and poor.
The thresholds used for each rating are documented in the guides for each of the Core Web Vitals
metrics: &lt;a href=&quot;https://web.dev/lcp/#what-is-lcp&quot;&gt;LCP&lt;/a&gt;, &lt;a href=&quot;https://web.dev/fid/#what-is-fid&quot;&gt;FID&lt;/a&gt;, and
&lt;a href=&quot;https://web.dev/cls/#what-is-a-good-cls-score&quot;&gt;CLS&lt;/a&gt;. So for example, the CrUX API can tell you that
16% of real-user experiences on a given page are evaluated as having good
&lt;span style=&quot;white-space: nowrap;&quot;&gt;LCP under 2.5&lt;/span&gt; seconds.&lt;/p&gt;
&lt;h2 id=&quot;new-extension-ui&quot;&gt;New extension UI &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#new-extension-ui&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;img alt=&quot;Screenshot of the Web Vitals extension showing an explanation of how the local LCP experience relates to real-user desktop data from the field.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;549&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/EaVNEuQ6gxVLtHYNkSZj.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Screenshot of the Web Vitals extension showing an explanation of how the local LCP experience
    relates to real-user desktop data from the field.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In the new Web Vitals extension interface, your local experience is layered on
top of the broader distribution of real-user experiences. It&#39;s like when you&#39;re in an expansive
place like a shopping mall and there&#39;s a big map with all of the stores and a pin labeled
&amp;quot;YOU ARE HERE&amp;quot; to help you orient yourself and find where you&#39;re going.&lt;/p&gt;
&lt;p&gt;The distributions of real-user data from CrUX are laid out on a horizontal bar for each metric.
Your local experiences are displayed as single points on those horizontal bars. The position of
your local experience on the horizontal bar indicates where that experience falls relative to the
real-user distributions. This should make it immediately apparent when your local
experience is very different from other users&#39;. For example, if you have a slow LCP experience and
only 1% of users have similar experiences, something unusual must have happened.&lt;/p&gt;
&lt;h2 id=&quot;falling-back-to-origin-level-data&quot;&gt;Falling back to origin-level data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#falling-back-to-origin-level-data&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;img alt=&quot;Screenshot of the Web Vitals extension showing origin-level desktop field data with &amp;quot;Waiting for inputâ€¦&amp;quot; for the FID results.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;552&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/t5SmXUJqJadNsyOi26bb.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Screenshot of the Web Vitals extension showing origin-level desktop field data with
    &quot;Waiting for inputâ€¦&quot; for the FID results.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Some pages don&#39;t have URL-level data in the CrUX dataset. This can happen
because the page is so new that it hasn&#39;t been picked up yet or because the page has insufficient
traffic to be included in the dataset. In cases like these, Web Vitals extension falls back to more
granular origin-level data whenever possible. This data represents the aggregate user experiences
on all pages of the website, so while it may not be immediately relevant to your particular page
experience, it should still offer some insight into how users experience the site as a whole.&lt;/p&gt;
&lt;p&gt;Another common case is to see a &amp;quot;Waiting for inputâ€¦&amp;quot; message. This is because FID is the only
Core Web Vital that requires user interaction to be measured, so the extension won&#39;t have any local FID data
to show until you interact with the page.&lt;/p&gt;
&lt;h2 id=&quot;edge-cases&quot;&gt;Edge cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#edge-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;img alt=&quot;Screenshot of the Web Vitals extension showing only local data; field data is unavailable.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;548&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/qt6fmKIjPNrUsckKiUfS.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Screenshot of the Web Vitals extension showing only local data; field data is unavailable.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;There are some less common edge cases that you may run into while using the extension.&lt;/p&gt;
&lt;p&gt;It can happen that entire origins have insufficient data. In that case, the extension will just show you
how your local experiences performed.&lt;/p&gt;
&lt;p&gt;How you interact with the page may also affect the relevance of the data. For example, loading the
page in a background tab will count against the LCP metric the entire time until you foreground the page.
If it takes you 90 seconds to switch to the tab, the LCP might appear as 91.5 seconds. When this happens, a little
warning icon will appear next to your LCP value to warn you of the artificial inflation. Note that
these kinds of irrelevant LCP values are ignored in the CrUX dataset.&lt;/p&gt;
&lt;p&gt;One last edge case to be aware of is specific to FID. Because it depends on user interactions, that makes it
less likely to be available in the dataset for pages and websites with fewer page views. So if you&#39;re
visiting a page like that, you may only see field data for LCP and CLS. It&#39;s worth noting for the
sake of completeness that the same could happen for LCP or CLS in extremely rare situations, but
this issue is predominantly affected by FID.&lt;/p&gt;
&lt;h2 id=&quot;comparing-field-data-from-phones&quot;&gt;Comparing field data from phones &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#comparing-field-data-from-phones&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
&lt;img alt=&quot;Screenshot of the Web Vitals extension showing local metrics compared to phone field data.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;556&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/STd8eW8CSiNp5B1bX0R6Dww2eH32/0K0g0TD22jdNZpSe3s3p.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Screenshot of the Web Vitals extension showing local metrics compared to phone field data.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;By default, all of the data in the Web Vitals extension corresponds to real desktop users&#39;
experiences from the field. After all, this extension is only available on desktop versions of
Chrome, so it&#39;d be most relevant to see how users under similar conditions experience the
page or origin.&lt;/p&gt;
&lt;p&gt;It&#39;s important to understand phone users&#39; experiences too, so the extension has an advanced setting on
the Options page that lets you see how your local experience compares to phone data from the field.&lt;/p&gt;
&lt;p&gt;To enable phone data in the extension, follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right click on the extension icon in the toolbar and select &lt;strong&gt;Options&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Check the &lt;strong&gt;Compare local experiences to phone field data&lt;/strong&gt; option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The UI will update in a few places to indicate which mode you&#39;re in. Be aware that real phone
users&#39; experiences can be &lt;em&gt;very different&lt;/em&gt; from that of desktop users, so use this feature with discretion.&lt;/p&gt;
&lt;h2 id=&quot;get-the-web-vitals-extension&quot;&gt;Get the Web Vitals extension &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/field-data-in-the-web-vitals-extension/#get-the-web-vitals-extension&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To start using the latest version of the Web Vitals extension, head over to the
&lt;a href=&quot;https://chrome.google.com/webstore/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?hl=en&quot; rel=&quot;noopener&quot;&gt;Chrome Web Store&lt;/a&gt;
to install it. Or if you&#39;re an existing user of the extension, you should be upgraded to
version 1.0 automatically. If you have any feedback about your experience with the extension
(feature requests, bug reports, anything), let us know in the
&lt;a href=&quot;https://github.com/GoogleChrome/web-vitals-extension&quot; rel=&quot;noopener&quot;&gt;open-source repository&lt;/a&gt; on GitHub.
I hope it helps you better understand where your local experiences are in relation to other
real users from the field!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Image credit: Mark Garlick/Science Photo Library/Getty Images&lt;/em&gt;&lt;/p&gt;
</content>
    <author>
      <name>Rick Viscomi</name>
    </author>
  </entry>
  
  <entry>
    <title>Introducing libSquoosh</title>
    <link href="https://web.dev/introducing-libsquoosh/"/>
    <updated>2021-06-08T00:00:00Z</updated>
    <id>https://web.dev/introducing-libsquoosh/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;&lt;strong&gt;We are happy to introduce &lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/tree/dev/libsquoosh&quot; rel=&quot;noopener&quot;&gt;libSquoosh&lt;/a&gt;, an experimental Node library on top of which the Squoosh CLI is built, giving you all the capabilities for the Squoosh CLI with a JavaScript-idiomatic interface.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Squoosh.app is a PWA that compresses images for you in the browser. It supports many old and new image formats and processes them client-side in the browser through WebAssembly. This means your pictures stay safely on your own computer rather than being sent to a server somewhere, and that Squoosh works even when offline.&lt;/p&gt;
&lt;p&gt;At Chrome DevSummit 2020 &lt;a href=&quot;https://web.dev/squoosh-v2/&quot;&gt;we announced Squoosh v2&lt;/a&gt;, together with the Squoosh CLI to bring all the codecs of Squoosh to the command-line using Node and WebAssembly. This allows you to compress entire folders with one command and make use of the &lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/tree/dev/cli#auto-optimizer&quot; rel=&quot;noopener&quot;&gt;CLI&#39;s&lt;/a&gt; to let it choose the codec parameters for you.&lt;/p&gt;
&lt;p&gt;The CLI enables a lot of automation and so it&#39;s only natural that developers began asking for a more idiomatic interface than programmatically invoking the Squoosh CLI via the shell. &lt;a href=&quot;https://github.com/atjn&quot; rel=&quot;noopener&quot;&gt;Anton (@atjn on GitHub)&lt;/a&gt; stepped up to the task and separated the Squoosh CLI code into two parts: The command line interface code and the underlying core functionality.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; ImagePool &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;@squoosh/lib&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// libSquoosh uses a worker-pool under the hood&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// to parallelize all image processing.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; imagePool &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ImagePool&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Accepts both file paths and Buffers/TypedArrays.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; imagePool&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ingestImage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./squoosh.jpeg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Optional.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// await image.preprocess({&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;//   resize: {&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;//     enabled: true,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;//     width: 128,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;//   },&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// });&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; image&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// All codecs are initialized with default values&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// that can be individually overwritten.&lt;/span&gt;&lt;br /&gt;  mozjpeg&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    quality&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  avif&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cqLevel&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  jxl&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; extension&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; binary &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; image&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encodedWith&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mozjpeg&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;output.&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;extension&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; binary&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// ... same for other encoders ...&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; imagePool&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Our goal is to make image compression more accessible to tooling authors. We hope to see integration into Webpack, Rollup and other build tools to make sure your images are appropriately optimized for the web.&lt;/p&gt;
&lt;p&gt;I&#39;d like to express a huge &amp;quot;thank you&amp;quot; to Anton for the time he has committed to Squoosh!&lt;/p&gt;
&lt;p&gt;It&#39;s still early for the Squoosh CLI and libSquoosh and we have many more ideas and plans that we&#39;d like to implement. In the meanwhile, try libSquoosh! However, be mindful that this is an early, experimental release and that there is a good chance you will run into some bugs. If you find some or have questions, please open an &lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/issues/new/choose&quot; rel=&quot;noopener&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in contributing to Squooshâ€”for example contributing to the extremely sparse documentation around libSquoosh or help with any of the other parts of the appâ€”we are starting a mentorship program to help you get started. If you want to know more, check out our &lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/issues/1020&quot; rel=&quot;noopener&quot;&gt;tracking issue&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Surma</name>
    </author>
  </entry>
  
  <entry>
    <title>Automating audits with AutoWebPerf</title>
    <link href="https://web.dev/autowebperf/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/autowebperf/</id>
    <content type="text/html" mode="escaped">&lt;h2 id=&quot;what-is-autowebperf-(awp)&quot;&gt;What is AutoWebPerf (AWP)? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#what-is-autowebperf-(awp)&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf&quot; rel=&quot;noopener&quot;&gt;AutoWebPerf&lt;/a&gt; (AWP) is a
modular tool that enables automatic gathering of performance data from multiple
sources. Currently there are &lt;a href=&quot;https://web.dev/vitals-tools/&quot;&gt;many tools
available&lt;/a&gt; to measure website performance for
different scopes (&lt;a href=&quot;https://web.dev/how-to-measure-speed/#lab-data-vs-field-data&quot;&gt;lab and
field&lt;/a&gt;), such as
Chrome UX Report, PageSpeed Insights, or WebPageTest. AWP offers integration
with various audit tools with a simple setup so you can continuously monitor the
site performance in one place.&lt;/p&gt;
&lt;p&gt;The release of &lt;a href=&quot;https://web.dev/vitals/&quot;&gt;Web Vitals&lt;/a&gt; guidance means that close
and active monitoring of web pages is becoming increasingly important. The
engineers behind this tool have been doing performance audits for years and they
created AWP to automate a manual, recurring, and time consuming part of their
daily activities. Today, AWP has reached a level of maturity and it&#39;s ready to
be shared broadly so anyone can benefit from the automation it brings.&lt;/p&gt;
&lt;p&gt;The tool is accessible on the
&lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf&quot; rel=&quot;noopener&quot;&gt;AutoWebPerf&lt;/a&gt; public repository
on GitHub.&lt;/p&gt;
&lt;h2 id=&quot;what-is-awp-for&quot;&gt;What is AWP for? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#what-is-awp-for&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Although several tools and APIs are available to monitor the performance of web
pages, most of them expose data measured at a specific time. To adequately
monitor a website and maintain good performance of key pages, it&#39;s recommended
to continuously take measurements of &lt;a href=&quot;https://web.dev/vitals/#core-web-vitals&quot;&gt;Core Web
Vitals&lt;/a&gt; over time and observe trends.&lt;/p&gt;
&lt;p&gt;AWP makes that easier by providing an engine and pre-built API integrations
which can be programmatically configured to automate recurrent queries to
various performance monitoring APIs.&lt;/p&gt;
&lt;p&gt;For example, with AWP, you can set a daily test on your home page to capture the
field data from &lt;a href=&quot;https://web.dev/chrome-ux-report-api/&quot;&gt;CrUX API&lt;/a&gt; and lab data
from a
&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;Lighthouse report from PageSpeed Insights&lt;/a&gt;.
This data can be written and stored over time, for example, in &lt;a href=&quot;https://www.google.co.uk/sheets/about/&quot; rel=&quot;noopener&quot;&gt;Google
Sheets&lt;/a&gt; and then visualised in the
&lt;a href=&quot;https://datastudio.google.com/c/u/0/navigation/reporting&quot; rel=&quot;noopener&quot;&gt;Data Studio dashboard&lt;/a&gt;.
AWP automates the heavy-lifting part of the entire process, making it a great
solution to follow lab and field trends over time. See &lt;a href=&quot;https://web.dev/autowebperf/#data-studio&quot;&gt;Visualising audit
results in Data Studio&lt;/a&gt; below for more details).&lt;/p&gt;
&lt;h2 id=&quot;architecture-overview&quot;&gt;Architecture overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#architecture-overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;AWP is a modular-based library with three different types of modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;engine&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connector&lt;/strong&gt; modules&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gatherer&lt;/strong&gt; modules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The engine takes a list of tests from a connector (for example, from a
local CSV file), runs performance audits through selected gatherers (such as
PageSpeed Insights), and writes results to the output connector (for example,
Google Sheets).&lt;/p&gt;
&lt;img alt=&quot;A diagram of AWP&amp;#x27;s architecture.&quot; decoding=&quot;async&quot; height=&quot;439&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/GqufPfzbuslrT4st1FmP.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;AWP comes with a number of pre-implemented gatherers and connectors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pre-implemented gatherers:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/chrome-ux-report-api/&quot;&gt;CrUX API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/chrome-ux-report-bigquery/&quot;&gt;CrUX BigQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/docs/insights/v5/get-started&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webpagetest.org/getkey.php&quot; rel=&quot;noopener&quot;&gt;WebPageTest API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pre-implemented connectors:
&lt;ul&gt;
&lt;li&gt;Google Sheets&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;automating-audits-with-awp&quot;&gt;Automating audits with AWP &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#automating-audits-with-awp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;AWP automates the performance audits via your preferred audit platforms such as
&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;noopener&quot;&gt;PageSpeed Insights&lt;/a&gt;,
&lt;a href=&quot;https://webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;, or
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/api/reference&quot; rel=&quot;noopener&quot;&gt;CrUX API&lt;/a&gt;.
AWP offers the flexibility to choose where to load the list of tests, and where
to write the results to.&lt;/p&gt;
&lt;p&gt;For example, you can run audits for a list of tests stored in a Google Sheet,
and write the results to a CSV file, with the command below:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;PSI_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;SHEETS_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; ./awp run sheets:&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SheetID&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; csv:output.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;recurring-audits&quot;&gt;Recurring audits &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#recurring-audits&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can run recurring audits in daily, weekly, or monthly frequency. For
example, you can run daily audits for a list of tests defined in a local JSON
like below:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;tests&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web.dev&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://web.dev&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;gatherer&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;psi&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The command below reads the list of audit tests from the local JSON file, runs
audits on a local machine, then outputs results to a local CSV file:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;PSI_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; ./awp run json:tests.json csv:output.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To run audits every day as a background service continuously, you can use the
command below instead:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;PSI_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; ./awp &lt;span class=&quot;token builtin class-name&quot;&gt;continue&lt;/span&gt; json:tests.json csv:output.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Alternatively, you can set up the
&lt;a href=&quot;https://www.geeksforgeeks.org/how-to-setup-cron-jobs-in-ubuntu/&quot; rel=&quot;noopener&quot;&gt;crontab&lt;/a&gt; in a
Unix-like environment to run AWP as a daily cron job:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; * * * &lt;span class=&quot;token assign-left variable&quot;&gt;PSI_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; ./awp run json:tests.json csv:output.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can find more ways to automate daily audits and result collection in the
&lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf&quot; rel=&quot;noopener&quot;&gt;AWP GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;data-studio&quot;&gt;Visualising audit results in Data Studio &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#data-studio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Along with continuously measuring Core Web Vitals, it is important to be able to
evaluate the trends and discover potential regressions with real user metrics
(RUM) or the Chrome UX Report (CrUX) data collected by AWP. Note that
Chrome UX Report (CrUX) is a 28-day moving aggregation, hence it is recommended
to also use your own RUM data along with CrUX so you can spot regressions
sooner.&lt;/p&gt;
&lt;p&gt;Data Studio is a free visualization tool that you can easily load performance
metrics into and draw trends as charts. For example, the time series charts
below show Core Web Vitals based on Chrome UX Report data. One of the charts
shows increasing Cumulative Layout Shift in recent weeks, which means
regressions in the layout stability for certain pages. In this scenario, you
would want to prioritize the efforts to analyze the underlying issues of these
pages.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of Core Web Vitals results in Data Studio.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;904&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Cpi7NkLvKyvf2xYzFwAn.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;To simplify the end-to-end process from data collection to visualization, you
can run AWP with a list of URLs to automatically export results to Google Sheets
with the following command:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;PSI_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;SHEETS_APIKEY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;YOUR_KEY&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; ./awp run sheets:&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SheetID&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; csv:output.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;After collecting daily metrics in a spreadsheet, you can create a Data Studio
dashboard that loads the data directly from the spreadsheet, and plots the
trends into a time series chart. Check out &lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf/blob/stable/docs/sheets-connector.md&quot; rel=&quot;noopener&quot;&gt;Google Spreadsheets API
Connector&lt;/a&gt;
for detailed steps about how to set up AWP with spreadsheets as a data source to
visualize on Data Studio.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-next&quot;&gt;What&#39;s next? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/autowebperf/#what&#39;s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;AWP provides a simple and integrated way to minimize the efforts to set up a
continuous monitoring pipeline to measure Core Web Vitals and other performance
metrics. As for now, AWP covers the most common use cases and will continue to
provide more features to address other use cases in the future.&lt;/p&gt;
&lt;p&gt;Learn more in the &lt;a href=&quot;https://github.com/GoogleChromeLabs/AutoWebPerf&quot; rel=&quot;noopener&quot;&gt;AutoWebPerf&lt;/a&gt; repository.&lt;/p&gt;
</content>
    <author>
      <name>Jonathan Chen</name>
    </author><author>
      <name>Gilberto Cocchi</name>
    </author><author>
      <name>Antoine Bisch</name>
    </author>
  </entry>
  
  <entry>
    <title>Announcing Squoosh v2</title>
    <link href="https://web.dev/squoosh-v2/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/squoosh-v2/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;&lt;a href=&quot;https://squoosh.app/&quot; rel=&quot;noopener&quot;&gt;Squoosh&lt;/a&gt; is an image compression app our team built and &lt;a href=&quot;https://youtu.be/ipNW6lJHVEs&quot; rel=&quot;noopener&quot;&gt;debuted at Chrome
Dev Summit 2018&lt;/a&gt;. We built it to make it easy to experiment with
different image codecs, and to showcase the capabilities of the modern web.&lt;/p&gt;
&lt;p&gt;Today, we are releasing a major update to the app with more codecs support, a new design, and a
new way to use Squoosh on your command line called Squoosh CLI.&lt;/p&gt;
&lt;h2 id=&quot;new-codecs-support&quot;&gt;New codecs support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/squoosh-v2/#new-codecs-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We now support OxiPNG, MozJPEG, WebP, and AVIF, in addition to codecs natively supported in your
browser.  A new codec was made possible again with the use of WebAssembly. By compiling a codec
encoder and decoder as WebAssembly module users can access and experiment with newer codecs even
if their preferred browser does not support them.&lt;/p&gt;
&lt;h2 id=&quot;launching-a-command-line-squoosh!&quot;&gt;Launching a command line Squoosh! &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/squoosh-v2/#launching-a-command-line-squoosh!&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ever since the original launch in 2018, common user request was to interact with Squoosh
programmatically without UI. We felt a bit conflicted about this path since our app was a UI on
top of command-line-based codec tools. However we do understand the desire to interact with the
whole package of codecs instead of multiple tools. Squoosh CLI does just that.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;FUqn8eOxCP4&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;You can install the beta version of the Squoosh CLI by running &lt;code&gt;npm -i @squoosh/cli&lt;/code&gt; or run it
directly using &lt;code&gt;npx @squoosh/cli [parameters]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Squoosh CLI is written in Node and makes use of the exact same WebAssembly modules the PWA
uses. Through extensive use of workers, all images are decoded, processed and encoded in parallel.
We also use Rollup to bundle everything into one JavaScript file to make sure installation via
&lt;code&gt;npx&lt;/code&gt; is quick and seamless. The CLI also offers auto compression, where it tries to reduce the
quality of an image as much as possible without degrading the visual fidelity
(using the &lt;a href=&quot;https://github.com/google/butteraugli&quot; rel=&quot;noopener&quot;&gt;Butteraugli metric&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;With the Squoosh CLI you can compress the images in your web app to multiple formats and use the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element&lt;/a&gt;
to let the browser choose the best version. We also plan to build
plugins for Webpack, Rollup, and other build tools to make image compression
an automatic part of your build process.&lt;/p&gt;
&lt;h2 id=&quot;build-process-change-from-webpack-to-rollup&quot;&gt;Build process change from Webpack to Rollup &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/squoosh-v2/#build-process-change-from-webpack-to-rollup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The same team that built Squoosh has spent a significant amount of time looking at build tooling
this year for &lt;a href=&quot;https://bundlers.tooling.report/&quot; rel=&quot;noopener&quot;&gt;Tooling Report&lt;/a&gt;, and decided to switch our build
process from Webpack to Rollup.&lt;/p&gt;
&lt;p&gt;The project was initially started with Webpack because we wanted to try it as a team, and at the
time in 2018 Webpack was the only tool that gave us enough control to set up the project the way
we wanted. Over time, we&#39;ve found Rollup&#39;s easy plugin system and simplicity with ESM made it a
natural choice for this project.&lt;/p&gt;
&lt;h2 id=&quot;updated-ui-design&quot;&gt;Updated UI design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/squoosh-v2/#updated-ui-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We&#39;ve also updated the UI design of the app featuring &lt;code&gt;blobs&lt;/code&gt; as a visual element.  It is a little
pun on how we treat data in our code. Squoosh passes image data around as a blob, so it felt
natural to include some blobs in the design (get it?).&lt;/p&gt;
&lt;p&gt;Color usage was honed in as well, so that color was more than an accent but additionally a vector
to distinguish and reinforce which image is in context for the options. All in all, the homepage
is a bit more vibrant and the tool itself is a bit more clear and concise.&lt;/p&gt;
&lt;h2 id=&quot;what&#39;s-next&quot;&gt;What&#39;s next ? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/squoosh-v2/#what&#39;s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We plan to keep working on Squoosh. As the new image format gets released, we want our users to
have a place where they can play with the codec without heavy lifting. We also hope to expand use
of Squoosh CLI and integrate more into the build process of a web application.&lt;/p&gt;
&lt;p&gt;Squoosh has always been open source but we&#39;ve never had focus on growing the community. In 2021,
we plan to expand our contributor base and have a better onboarding process to the project.&lt;/p&gt;
&lt;p&gt;Do you have any ideas for Squoosh? Please let us know on our
&lt;a href=&quot;https://github.com/GoogleChromeLabs/squoosh/issues&quot; rel=&quot;noopener&quot;&gt;issue tracker&lt;/a&gt;.
The team is headed to extended winter vacation but we promise to get
back to you in the new year.&lt;/p&gt;
</content>
    <author>
      <name>Mariko Kosaka</name>
    </author>
  </entry>
  
  <entry>
    <title>Choose the best build tool for your project with tooling.report</title>
    <link href="https://web.dev/introducing-tooling-report/"/>
    <updated>2020-06-29T00:00:00Z</updated>
    <id>https://web.dev/introducing-tooling-report/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;vsMJiNtQWvw&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;Today web.dev is launching a new initiative called &lt;a href=&quot;https://tooling.report/&quot; rel=&quot;noopener&quot;&gt;tooling.report&lt;/a&gt;. It&#39;s a
website that gives web developers an overview of the features supported across a selection of
popular build tools. We built this site to help you choose the right build tool for your next
project, decide if migrating from one tool to another is worth it, or figure out how to incorporate
best practices into your tooling configuration and code base. Tools have different focus areas and
cater to a different set of needs, which means selecting and configuring tools involves making
tradeoffs. With tooling.report, we aim to explain these tradeoffs and document how to follow best
practices with any given build tool.&lt;/p&gt;
&lt;p&gt;Sounds exciting? Visit tooling.report to start exploring, or read on to learn more about why and how
we developed this site.&lt;/p&gt;
&lt;h2 id=&quot;build-tools-often-get-in-our-way&quot;&gt;Build tools often get in our way &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-tooling-report/#build-tools-often-get-in-our-way&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Over at &lt;a href=&quot;https://github.com/GoogleChromeLabs&quot; rel=&quot;noopener&quot;&gt;GoogleChromeLabs&lt;/a&gt;, we&#39;ve built web apps like
&lt;a href=&quot;https://squoosh.app/&quot; rel=&quot;noopener&quot;&gt;Squoosh&lt;/a&gt; and &lt;a href=&quot;https://proxx.app/&quot; rel=&quot;noopener&quot;&gt;Proxx&lt;/a&gt;, as well as websites like the one
for &lt;a href=&quot;https://developer.chrome.com/devsummit/&quot; rel=&quot;noopener&quot;&gt;Chrome Dev Summit 2019&lt;/a&gt;. As with any web development
project, we generally start by discussing project infrastructure like the hosting environment,
frameworks, and our build tool setup.  That infrastructure is updated as the project progresses: new
plugins are added in order to accommodate frameworks or techniques we adopt, or the way we write
code is changed so that our build tools better understand what we are trying to achieve. Throughout
this process, we have often found that the tools we select end up getting in our way.&lt;/p&gt;
&lt;p&gt;Our team is focused on providing the best web experience to users, which often results in
fine-tuning how our frontend assets are assembled and delivered. For example, if a main thread
script and web worker script have shared dependencies, we would like to download the dependencies
once instead of bundling it twice for each script. Some tools support this out of the box, some need
significant customization effort to change default behaviors, and for others it&#39;s outright
impossible.&lt;/p&gt;
&lt;p&gt;This experience led us to investigate what different build tools can and cannot do. Our hope was to
create a checklist for features so that next time we start a new project, we can evaluate and choose
which tool is best suited for our project.&lt;/p&gt;
&lt;h2 id=&quot;our-approach&quot;&gt;Our approach &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-tooling-report/#our-approach&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;How can we evaluate and compare different build tools in one place? We approached it by writing test
cases.&lt;/p&gt;
&lt;p&gt;Our team discussed and designed test criteria that we believe represent best practices for web
development. We specifically focused on how to deliver fast, responsive, and smooth user
experiences, intentionally excluding tests related to developer experience in order to avoid
measuring two incomparable outcomes.&lt;/p&gt;
&lt;p&gt;Once the test list was created, we went ahead and wrote a build script for each tool to check if the
tool can fulfil the test&#39;s success criteria. As an initial set, we decided to investigate webpack
v4, Rollup v2, and Parcel v2. We also tested Browserify + Gulp since a large number of projects
still use this setup. For a test to pass, only publicly documented features of the tool or a plugin
for the tool can be used. After the initial set of tests were written, we worked with the build tool
authors to make sure we used their tools correctly and represented them fairly.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of tooling.report.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;394&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0OauqO2tSeOTDpDGutmk.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;we-only-use-dollartool_name-should-i-still-care&quot;&gt;We only use ${tool_name}, should I still care? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-tooling-report/#we-only-use-dollartool_name-should-i-still-care&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In many teams, there are people dedicated to maintaining the build infrastructure, and other members
of the team might never get to make a choice when it comes to build tools. We hope this site is
still useful for you too, as a way to set expectations for the tools you rely on. For each test,
we&#39;ve included an explanation of why the test is important along with additional resources. And if
you want to adopt a best practice with the tool of your choice, the test setup in our repository
contains the configuration files necessary to do so.&lt;/p&gt;
&lt;h2 id=&quot;can-i-contribute-to-the-site&quot;&gt;Can I contribute to the site? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/introducing-tooling-report/#can-i-contribute-to-the-site&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you think a certain feature should be tested that is currently missing, please &lt;a href=&quot;https://github.com/GoogleChromeLabs/tooling.report/issues/new&quot; rel=&quot;noopener&quot;&gt;propose it in a
GitHub issue&lt;/a&gt; to start the
discussion. We aim to encapsulate real-world use cases, and any additional tests that better assess
these outcomes are welcome.&lt;/p&gt;
&lt;p&gt;If you want to write tests for tools we did not include in the initial set, we welcome that too!
Please see
&lt;a href=&quot;https://github.com/GoogleChromeLabs/tooling.report/blob/dev/CONTRIBUTING.md&quot; rel=&quot;noopener&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for
more information.&lt;/p&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Ready Player Web</title>
    <link href="https://web.dev/ready-player-web/"/>
    <updated>2019-08-21T00:00:00Z</updated>
    <id>https://web.dev/ready-player-web/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Good game developers know that to capitalise on the opportunity of a particular platform it&#39;s important to embrace the unique characteristics of that platform. So what are the unique characteristics of the web? And what defines a web game?&lt;/p&gt;
&lt;p&gt;At Google I/O 2019 I presented my thoughts on the state of the web games ecosystem, the current best practices for modern web game development, and where the industry is heading. In this blog post, I&#39;ll summarise some of the key points from my talk which you can watch in full on YouTube:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;aVTYxHL45SA&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;the-challenges-of-web-games&quot;&gt;The challenges of web games &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#the-challenges-of-web-games&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before joining Google I created a mobile game known as &lt;a href=&quot;https://www.duetgame.com/&quot; rel=&quot;noopener&quot;&gt;Duet&lt;/a&gt; which was downloaded nearly 20 million times. Through that experience I learned that the three essential ingredients to building a successful business out of a game are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A functional game&lt;/li&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;A way to monetize users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Without these three elements, a game developer cannot succeed. Nowadays, these last two points are the most critical. Closed HTML5 ecosystems such as WeChat, Facebook Instant Games, and more have demonstrated that building games using HTML5 is achievable.&lt;/p&gt;
&lt;h2 id=&quot;modern-best-practices&quot;&gt;Modern best practices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#modern-best-practices&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By &amp;quot;functional game&amp;quot; I refer to the three most core elements of what makes a game work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Visuals&lt;/li&gt;
&lt;li&gt;Audio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each of these areas, the web platform has made significant strides in the past few years. For CPU performance we have access to a &lt;a href=&quot;https://www.youtube.com/watch?v=njt-Qzw0mVY&quot; rel=&quot;noopener&quot;&gt;performant new standard called WebAssembly&lt;/a&gt;. From the graphics side, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API&quot; rel=&quot;noopener&quot;&gt;WebGL 1.0&lt;/a&gt; has &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API#WebGL_1&quot; rel=&quot;noopener&quot;&gt;good cross-browser support&lt;/a&gt; and future standards such as &lt;a href=&quot;https://www.youtube.com/watch?v=K2JzIUIHIhc&quot; rel=&quot;noopener&quot;&gt;WebGPU&lt;/a&gt; are positioning the web platform for an extensible future of graphics programming similar to Vulkan and Metal. Finally, for web audio we have the &lt;a href=&quot;https://www.youtube.com/watch?v=-GaD0RCp-Q0&quot; rel=&quot;noopener&quot;&gt;common Web Audio API and more recently the Audio Worklet API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recently, Unity previewed a new runtime called Project Tiny which is focused on building 2D games for HTML5-based platforms. Project Tiny applies a new modular design to the engine structure of Unity enabling the core Unity engine to be under 1 megabyte in size.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two tanks engaged in a battle.&quot; decoding=&quot;async&quot; height=&quot;449&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NAydOzjTBzlBnom2SubM.gif?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Unity&#39;s Tanks Demo exported via HTML5.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;From the technical side, there has never been a better time to embrace web game development.&lt;/p&gt;
&lt;h2 id=&quot;enter-the-loop&quot;&gt;Enter the loop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#enter-the-loop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A great game is obviously more than just good performance, graphics, and sound thoughâ€“to be great a game must be fun.&lt;/p&gt;
&lt;p&gt;Fun is a difficult element to measure in a product. When a game is fun, interesting, or innovative enough, users will want to tell their friendsâ€“in other words, they&#39;ll want to share the experience. Tapping into this opportunity and coupling it with the web is a powerful combination that unlocks a lot of potential for viral growth. And on the web in particular, without a central discovery platform, our best bet towards acquiring users is to ensure our games are as viral as possible.&lt;/p&gt;
&lt;p&gt;Good game developers know that to capitalise on a particular platformâ€“whether at a software or hardware levelâ€“it&#39;s important to embrace the unique characteristics of that platform. For example, if you&#39;re building a game for a console with motion controls, you should probably think about the best way to embrace those motion controls.&lt;/p&gt;
&lt;p&gt;In other words, you must respect the expectations of the users of the platform you&#39;re building for. What do users of the web expect? They expect web content to load fast and be interactive quickly. In my talk, I covered several examples of waysâ€“both on and off the webâ€“that games have been designed to load quickly, pull users into their game worlds, engage those users, and provide users with additional incentives to share their experiences.&lt;/p&gt;
&lt;img alt=&quot;Three games with minimalist art styles.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ppUw6LsWIqub2vRiMuaG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;I personally believe that the key to building a successful web game is to lean into this unique characteristic of the web. Specifically, the strength of the web&#39;s URL structure and the sharing loop that users can join in.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example of a web game I built using &lt;a href=&quot;http://construct.net/&quot; rel=&quot;noopener&quot;&gt;Construct 3&lt;/a&gt; that leverages the URL in a fun and engaging way.&lt;/p&gt;
&lt;img alt=&quot;A level editor interface for a game.&quot; decoding=&quot;async&quot; height=&quot;608&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/L0wolsGPYf4pQjlI4i1g.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://io-space-board.firebaseapp.com/&quot; rel=&quot;noopener&quot;&gt;Space Board&lt;/a&gt; is a very simple game that can be played on either mobile with touch controls or on desktop with keyboard input. The objective is to navigate a maze of obstacles to reach a goal at the end.&lt;/p&gt;
&lt;p&gt;How does Space Board leverage the URL in a unique fashion? By encoding the level structure into the URL itself. All levels are defined as a 10 by 10 grid of objectsâ€“e.g. walls, enemy turrets, keys, locked doors etc. The URL then lists all the individual grid positions and their contents. A wall is represented by a &lt;code&gt;W&lt;/code&gt; character. An empty space is an underscore character.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://io-space-board.firebaseapp.com/?gameWorld=_wwwwwwwwww___ww__eww_k__d___ww___ww___ww_wwwww_www_wwwww_www___ww___ww_s_ww_f_ww___ww___wwwwwwwwwwww&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It&#39;s ugly but it does the job.&lt;/p&gt;
&lt;p&gt;Upon completing a level in Space Board, the player has the opportunity to design their own level using the simple level editor shown above. By enabling players to design their own levels we are giving them the opportunity for personalisation. When a user feels a connection to a game and a sense of ownership via creation and customisation they are more likely to want to share that &#39;thing&#39; with the world.&lt;/p&gt;
&lt;p&gt;The desire to share a game is the beginning of the viral loop that we are aiming to achieve with our web games. This game design and sharing mechanism is just one example that&#39;s possible but there are many other possibilitiesâ€“I encourage you to watch my talk for further examples!&lt;/p&gt;
&lt;h2 id=&quot;return-on-investment&quot;&gt;Return on investment &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#return-on-investment&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At present, there are ultimately two schools of thought with regards to how a game developer can generate revenue through web games:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monetizing the games directly&lt;/li&gt;
&lt;li&gt;Treating them as an acquisition channel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Treating web games as an acquisition channel means leveraging the web version of your iOS/Android/desktop game as a mechanism to get your players hooked and convincing them to download your larger iOS/Android/desktop binary. You then generate revenue with the iOS/Android/desktop platform&#39;s built-in payment and billing backends.&lt;/p&gt;
&lt;p&gt;Monetization is usually a mixture of advertising and microtransactions. There is still work to be done for the web to compete with mobile platforms in game advertising. For example, formats like Rewarded Video Ads have been extremely popular for mobile games for several years and yet we&#39;re only now seeing ad networks deploy these formats on the web.&lt;/p&gt;
&lt;p&gt;Nonetheless, there are game developers who continue to be successful on the open web through advertising via traditional banner ads and interstitial video ads. Take a look at &lt;a href=&quot;https://support.google.com/adsense/answer/1705831&quot; rel=&quot;noopener&quot;&gt;Adsense for Games&lt;/a&gt; for more information on these formats.&lt;/p&gt;
&lt;p&gt;For microtransactions, the web offers complete flexibility due to the limitless number of payment methods that can be implemented. However this quality is a double-edged sword. The negative side of this is that players have less implicit trust towards a new website they discover versus the familiarity of the platform-specific mobile store payment methods.&lt;/p&gt;
&lt;p&gt;One solution that brings a more consistent payment UI to the web is the &lt;a href=&quot;https://developers.google.com/web/fundamentals/payments/&quot; rel=&quot;noopener&quot;&gt;Payment Request API&lt;/a&gt;. This API invokes a UI that is shown by the browser and streamlines the acquisition of payment details such as credit cards and billing addresses. However, acquiring payment details is just the first step of making a transaction. You need a backend billing platform as well.&lt;/p&gt;
&lt;h2 id=&quot;the-future&quot;&gt;The future &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/ready-player-web/#the-future&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We&#39;ve seen several surprisingly successful web games over the past few years. Slither.io has built a mixed web and platform-specific business that demonstrates the tremendous reach and viral growth opportunity that the web offers. Portals such as &lt;a href=&quot;https://poki.com/&quot; rel=&quot;noopener&quot;&gt;Poki.com&lt;/a&gt; are innovating in their user experience and releasing new games every day including titles that match the fidelity of their mobile counterparts, such as Subway Surfers or Crossy Road.&lt;/p&gt;
&lt;p&gt;Furthermore, if you look outside of the open web you can see that web games are already taking off. Closed ecosystems such as WeChat and LINE offer satisfying games which aren&#39;t playable on the open web but which are built on top of web technologies like HTML5 and WebViews. This is a clear sign that the web has reached a level of fidelity that&#39;s capable of rivaling platform-specific mobile gamesâ€“perhaps not in a textbook definition of fidelity but in a more important metric: player attention.&lt;/p&gt;
</content>
    <author>
      <name>Tom Greenaway</name>
    </author>
  </entry>
</feed>
