<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Thomas Steiner on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Thomas Steiner</name>
  </author>
  <link href="https://web.dev/authors/thomassteiner/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <icon>https://web-dev.imgix.net/image/admin/8PLpVmFef6mj72MVWeiN.jpg?auto=format</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Tom is a Developer Advocate</subtitle>
  
  
  <entry>
    <title>The File System Access API: simplifying access to local files</title>
    <link href="https://web.dev/file-system-access/"/>
    <updated>2019-08-20T00:00:00Z</updated>
    <id>https://web.dev/file-system-access/</id>
    <content type="text/html" mode="escaped">&lt;h2 id=&quot;what-is-it&quot;&gt;What is the File System Access API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#what-is-it&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://wicg.github.io/file-system-access/&quot; rel=&quot;noopener&quot;&gt;File System Access API&lt;/a&gt; (formerly known as Native File System API and prior to that it
was called Writeable Files API) enables developers to build powerful web apps that interact with
files on the user&#39;s local device, like IDEs, photo and video editors, text editors, and more. After
a user grants a web app access, this API allows them to read or save changes directly to files and
folders on the user&#39;s device. Beyond reading and writing files, the File System Access API provides
the ability to open a directory and enumerate its contents.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The File System Access API—despite the similar name—is distinct from the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; interface exposed by the
&lt;a href=&quot;https://wicg.github.io/entries-api/#api-domfilesystem&quot; rel=&quot;noopener&quot;&gt;File and Directory Entries API&lt;/a&gt;, which
documents the types and operations made available by browsers to script when a hierarchy of files
and directories are dragged and dropped onto a page or selected using form elements or equivalent
user actions.&lt;/p&gt;
&lt;p&gt;It is likewise distinct from the deprecated
&lt;a href=&quot;https://www.w3.org/TR/file-system-api/&quot; rel=&quot;noopener&quot;&gt;File API: Directories and System&lt;/a&gt; specification, which
defines an API to navigate file system hierarchies and a means by which browsers may expose
sandboxed sections of a user&#39;s local filesystem to web applications. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;If you&#39;ve worked with reading and writing files before, much of what I&#39;m about to share will be
familiar to you. I encourage you to read it anyway, because not all systems are alike.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;We&#39;ve put a lot of thought into the design and implementation of the File System Access
API to ensure that people can easily manage their files. See the
&lt;a href=&quot;https://web.dev/file-system-access/#security-considerations&quot;&gt;security and permissions&lt;/a&gt; section for more information. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/file-system-access/blob/main/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://wicg.github.io/file-system-access/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://wicg.github.io/file-system-access/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5. Launch&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Complete&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;During the origin trial phase, there was a universal method named
&lt;code&gt;Window.chooseFileSystemEntries()&lt;/code&gt; that has been replaced with the three specialized methods
&lt;code&gt;Window.showOpenFilePicker()&lt;/code&gt;, &lt;code&gt;Window.showSaveFilePicker()&lt;/code&gt;, and &lt;code&gt;Window.showDirectoryPicker()&lt;/code&gt;.
There were a number of other
&lt;a href=&quot;https://github.com/WICG/file-system-access/blob/main/changes.md&quot; rel=&quot;noopener&quot;&gt;changes&lt;/a&gt; that you can read up
on. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The File System Access API is currently supported on most Chromium browsers on Windows, macOS,
Chrome OS, and Linux. A notable exception is Brave
(&lt;a href=&quot;https://github.com/brave/brave-browser/issues/11407&quot; rel=&quot;noopener&quot;&gt;brave/brave-browser#11407&lt;/a&gt;).
Android support is planned; you can track progress by starring
&lt;a href=&quot;https://crbug.com/1011535&quot; rel=&quot;noopener&quot;&gt;crbug.com/1011535&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use&quot;&gt;Using the File System Access API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#how-to-use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To show off the power and usefulness of the File System Access API, I wrote a single file &lt;a href=&quot;https://googlechromelabs.github.io/text-editor/&quot; rel=&quot;noopener&quot;&gt;text
editor&lt;/a&gt;. It lets you open a text file, edit it, save the changes back to disk, or start
a new file and save the changes to disk. It&#39;s nothing fancy, but provides enough to help you
understand the concepts.&lt;/p&gt;
&lt;h3 id=&quot;try-it&quot;&gt;Try it &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#try-it&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;See the File System Access API in action in the
&lt;a href=&quot;https://googlechromelabs.github.io/text-editor/&quot; rel=&quot;noopener&quot;&gt;text editor&lt;/a&gt; demo.&lt;/p&gt;
&lt;h3 id=&quot;read-file&quot;&gt;Read a file from the local file system &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#read-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The first use case I wanted to tackle was to ask the user to choose a file, then open and read that
file from disk.&lt;/p&gt;
&lt;h4 id=&quot;ask-the-user-to-pick-a-file-to-read&quot;&gt;Ask the user to pick a file to read &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#ask-the-user-to-pick-a-file-to-read&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The entry point to the File System Access API is
&lt;a href=&quot;https://wicg.github.io/file-system-access/#api-showopenfilepicker&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;window.showOpenFilePicker()&lt;/code&gt;&lt;/a&gt;. When called, it shows a file picker dialog box,
and prompts the user to select a file. After they select a file, the API returns an array of file
handles. An optional &lt;code&gt;options&lt;/code&gt; parameter lets you influence the behavior of the file picker, for
example, by allowing the user to select multiple files, or directories, or different file types.
Without any options specified, the file picker allows the user to select a single file. This is
perfect for a text editor.&lt;/p&gt;
&lt;p&gt;Like many other powerful APIs, calling &lt;code&gt;showOpenFilePicker()&lt;/code&gt; must be done in a &lt;a href=&quot;https://w3c.github.io/webappsec-secure-contexts/&quot; rel=&quot;noopener&quot;&gt;secure
context&lt;/a&gt;, and must be called from within a user gesture.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;butOpenFile&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Destructure the one-element array.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Do something with the file handle.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Once the user selects a file, &lt;code&gt;showOpenFilePicker()&lt;/code&gt; returns an array of handles, in this case a
one-element array with one &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemfilehandle&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FileSystemFileHandle&lt;/code&gt;&lt;/a&gt; that contains the properties and
methods needed to interact with the file.&lt;/p&gt;
&lt;p&gt;It&#39;s helpful to keep a reference to the file handle around so that it can be used later. It&#39;ll be
needed to save changes back to the file, or to perform any other file operations.&lt;/p&gt;
&lt;h4 id=&quot;read-a-file-from-the-file-system&quot;&gt;Read a file from the file system &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#read-a-file-from-the-file-system&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now that you have a handle to a file, you can get the file&#39;s properties, or access the file itself.
For now, I&#39;ll simply read its contents. Calling &lt;code&gt;handle.getFile()&lt;/code&gt; returns a &lt;a href=&quot;https://w3c.github.io/FileAPI/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;
object, which contains a blob. To get the data from the blob, call one of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob&quot; rel=&quot;noopener&quot;&gt;its
methods&lt;/a&gt;, (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob/stream&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob/text&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;text()&lt;/code&gt;&lt;/a&gt;, or
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;arrayBuffer()&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; contents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For the majority of use cases, you can read files in &lt;em&gt;sequential&lt;/em&gt; order with the
&lt;code&gt;stream()&lt;/code&gt;, &lt;code&gt;text()&lt;/code&gt;, or &lt;code&gt;arrayBuffer()&lt;/code&gt; methods. For getting &lt;em&gt;random access&lt;/em&gt; to a file&#39;s contents,
use the &lt;code&gt;slice()&lt;/code&gt; method. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;File&lt;/code&gt; object returned by &lt;code&gt;FileSystemFileHandle.getFile()&lt;/code&gt; is only readable as long as the
underlying file on disk hasn&#39;t changed. If the file on disk is modified, the &lt;code&gt;File&lt;/code&gt; object becomes
unreadable and you&#39;ll need to call &lt;code&gt;getFile()&lt;/code&gt; again to get a new &lt;code&gt;File&lt;/code&gt; object to read the changed
data.&lt;/p&gt;
&lt;h4 id=&quot;putting-it-all-together&quot;&gt;Putting it all together &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#putting-it-all-together&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;When users click the Open button, the browser shows a file picker. Once they&#39;ve selected a file, the
app reads the contents and puts them into a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;butOpenFile&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; contents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  textArea&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; contents&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;write-file&quot;&gt;Write the file to the local file system &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#write-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the text editor, there are two ways to save a file: &lt;strong&gt;Save&lt;/strong&gt;, and &lt;strong&gt;Save As&lt;/strong&gt;. &lt;strong&gt;Save&lt;/strong&gt; simply
writes the changes back to the original file using the file handle retrieved earlier. But &lt;strong&gt;Save
As&lt;/strong&gt; creates a new file, and thus requires a new file handle.&lt;/p&gt;
&lt;h4 id=&quot;create-a-new-file&quot;&gt;Create a new file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#create-a-new-file&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To save a file, call &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-showsavefilepicker&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;showSaveFilePicker()&lt;/code&gt;&lt;/a&gt;, which will show the file picker
in &amp;quot;save&amp;quot; mode, allowing the user to pick a new file they want to use for saving. For the text
editor, I also wanted it to automatically add a &lt;code&gt;.txt&lt;/code&gt; extension, so I provided some additional
parameters.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getNewFileHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    types&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Text Files&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        accept&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showSaveFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; handle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotcha&quot;&gt;
&lt;p&gt;undefined  Sometimes processing the to-be-saved data takes some time after the user clicks
the &lt;strong&gt;Save&lt;/strong&gt; button in your app. A common gotcha is to do this work &lt;em&gt;before&lt;/em&gt; the
&lt;code&gt;showSaveFilePicker()&lt;/code&gt; code has run, resulting in a
&lt;code&gt;SecurityError Failed to execute &#39;showSaveFilePicker&#39; on &#39;Window&#39;: Must be handling a user gesture to show a file picker.&lt;/code&gt;.
Instead, get the file handle first, and only &lt;em&gt;after&lt;/em&gt; obtaining the file handle start processing the
data. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4 id=&quot;save-to-disk&quot;&gt;Save changes to disk &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#save-to-disk&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You can find all the code for saving changes to a file in my &lt;a href=&quot;https://googlechromelabs.github.io/text-editor/&quot; rel=&quot;noopener&quot;&gt;text editor&lt;/a&gt; demo on
&lt;a href=&quot;https://github.com/GoogleChromeLabs/text-editor/&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;. The core file system interactions are in
&lt;a href=&quot;https://github.com/GoogleChromeLabs/text-editor/blob/main/src/inline-scripts/fs-helpers.js&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;fs-helpers.js&lt;/code&gt;&lt;/a&gt;. At its simplest, the process looks like the code below.
I&#39;ll walk through each step and explain it.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; contents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create a FileSystemWritableFileStream to write to.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writable &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createWritable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Write the contents of the file to the stream.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;contents&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Close the file and write the contents to disk.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Writing data to disk uses a &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemwritablefilestream&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FileSystemWritableFileStream&lt;/code&gt;&lt;/a&gt; object, essentially
a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WritableStream&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;. Create the stream by calling &lt;code&gt;createWritable()&lt;/code&gt; on the file
handle object. When &lt;code&gt;createWritable()&lt;/code&gt; is called, the browser first checks if the user has granted
write permission to the file. If permission to write hasn&#39;t been granted, the browser will prompt
the user for permission. If permission isn&#39;t granted, &lt;code&gt;createWritable()&lt;/code&gt; will throw a
&lt;code&gt;DOMException&lt;/code&gt;, and the app will not be able to write to the file. In the text editor, these
&lt;code&gt;DOMException&lt;/code&gt;s are handled in the &lt;a href=&quot;https://github.com/GoogleChromeLabs/text-editor/blob/main/src/inline-scripts/app.js&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;saveFile()&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;write()&lt;/code&gt; method takes a string, which is what&#39;s needed for a text editor. But it can also take
a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BufferSource&quot; rel=&quot;noopener&quot;&gt;BufferSource&lt;/a&gt;, or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob&quot; rel=&quot;noopener&quot;&gt;Blob&lt;/a&gt;. For example, you can pipe a stream directly to
it:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;writeURLToFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Create a FileSystemWritableFileStream to write to.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writable &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createWritable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Make an HTTP request for the contents.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Stream the response into the file.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pipeTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;writable&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// pipeTo() closes the destination pipe by default, no need to close it.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemwritablefilestream-seek&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemwritablefilestream-truncate&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; within the stream to update the
file at a specific position, or resize the file.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:  Changes are &lt;strong&gt;not&lt;/strong&gt; written to disk until the stream is closed, either by
calling &lt;code&gt;close()&lt;/code&gt; or when the stream is automatically closed by the pipe. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;specifying-a-suggested-file-name-and-start-directory&quot;&gt;Specifying a suggested file name and start directory &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#specifying-a-suggested-file-name-and-start-directory&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In many cases you may want your app to suggest a default file name or location. For example, a text
editor might want to suggest a default file name of &lt;code&gt;Untitled Text.txt&lt;/code&gt; rather than &lt;code&gt;Untitled&lt;/code&gt;. You
can achieve this by passing a &lt;code&gt;suggestedName&lt;/code&gt; property as part of the &lt;code&gt;showSaveFilePicker&lt;/code&gt; options.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showSaveFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  suggestedName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Untitled Text.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  types&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Text documents&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    accept&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The same goes for the default start directory. If you&#39;re building a text editor, you may want to
start the file save or file open dialog in the default &lt;code&gt;documents&lt;/code&gt; folder, whereas for an image
editor, may want to start in the default &lt;code&gt;pictures&lt;/code&gt; folder. You can suggest a default start
directory by passing a &lt;code&gt;startIn&lt;/code&gt; property to the &lt;code&gt;showSaveFilePicker&lt;/code&gt;, &lt;code&gt;showDirectoryPicker()&lt;/code&gt;, or
&lt;code&gt;showOpenFilePicker&lt;/code&gt; methods like so.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  startIn&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;pictures&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The list of the well-known system directories is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: The user&#39;s desktop directory, if such a thing exists.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;documents&lt;/code&gt;: Directory in which documents created by the user would typically be stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;downloads&lt;/code&gt;: Directory where downloaded files would typically be stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;music&lt;/code&gt;: Directory where audio files would typically be stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pictures&lt;/code&gt;: Directory where photos and other still images would typically be stored.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;videos&lt;/code&gt;: Directory where videos/movies would typically be stored.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apart from well-known system directories, you can also pass an existing file or directory handle as
a value for &lt;code&gt;startIn&lt;/code&gt;. The dialog would then open in the same directory.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Assume `directoryHandle` were a handle to a previously opened directory.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  startIn&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; directoryHandle&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;specifying-the-purpose-of-different-file-pickers&quot;&gt;Specifying the purpose of different file pickers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#specifying-the-purpose-of-different-file-pickers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sometimes applications have different pickers for different purposes. For example, a rich text
editor may allow the user to open text files, but also to import images. By default, each file
picker would open at the last-remembered location. You can circumvent this by storing &lt;code&gt;id&lt;/code&gt; values
for each type of picker. If an &lt;code&gt;id&lt;/code&gt; is specified, the file picker implementation will remember a
separate last-used directory for pickers with that same &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showSaveFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;openText&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showSaveFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;importImage&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;storing-file-handles-or-directory-handles-in-indexeddb&quot;&gt;Storing file handles or directory handles in IndexedDB &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#storing-file-handles-or-directory-handles-in-indexeddb&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;File handles and directory handles are serializable, which means that you can save a file or
directory handle to IndexedDB, or call &lt;code&gt;postMessage()&lt;/code&gt; to send them between the same top-level
origin.&lt;/p&gt;
&lt;p&gt;Saving file or directory handles to IndexedDB means that you can store state, or remember which
files or directories a user was working on. This makes it possible to keep a list of recently opened
or edited files, offer to re-open the last file when the app is opened, restore the previous working
directory, and more. In the text editor, I store a list of the five most recent files the user has
opened, making it easy to access those files again.&lt;/p&gt;
&lt;p&gt;The code example below shows storing and retrieving a file handle and a directory handle. You can
&lt;a href=&quot;https://filehandle-directoryhandle-indexeddb.glitch.me/&quot; rel=&quot;noopener&quot;&gt;see this in action&lt;/a&gt; over on Glitch (I use
the &lt;a href=&quot;https://www.npmjs.com/package/idb-keyval&quot; rel=&quot;noopener&quot;&gt;idb-keyval&lt;/a&gt; library for brevity).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; get&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; set &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://unpkg.com/idb-keyval@5.0.2/dist/esm/index.js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pre1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pre.file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pre2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pre.directory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; button1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;button.file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; button2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;button.directory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// File handle&lt;/span&gt;&lt;br /&gt;button1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandleOrUndefined &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fileHandleOrUndefined&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      pre1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Retrieved file handle &quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;fileHandleOrUndefined&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; from IndexedDB.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    pre1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Stored file handle for &quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; in IndexedDB.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Directory handle&lt;/span&gt;&lt;br /&gt;button2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; directoryHandleOrUndefined &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;directory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;directoryHandleOrUndefined&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      pre2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Retrieved directroy handle &quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;directoryHandleOrUndefined&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; from IndexedDB.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; directoryHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showDirectoryPicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;directory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; directoryHandle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    pre2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Stored directory handle for &quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;directoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; in IndexedDB.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;stored-file-or-directory-handles-and-permissions&quot;&gt;Stored file or directory handles and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#stored-file-or-directory-handles-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since permissions currently are not persisted between sessions, you should verify whether the user
has granted permission to the file or directory using &lt;code&gt;queryPermission()&lt;/code&gt;. If they haven&#39;t, use
&lt;code&gt;requestPermission()&lt;/code&gt; to (re-)request it. This works the same for file and directory handles. You
need to run &lt;code&gt;fileOrDirectoryHandle.requestPermission(descriptor)&lt;/code&gt; or
&lt;code&gt;fileOrDirectoryHandle.queryPermission(descriptor)&lt;/code&gt; respectively.&lt;/p&gt;
&lt;p&gt;In the text editor, I created a &lt;code&gt;verifyPermission()&lt;/code&gt; method that checks if the user has already
granted permission, and if required, makes the request.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;verifyPermission&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; readWrite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readWrite&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mode &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;readwrite&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Check if permission was already granted. If so, return true.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;queryPermission&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Request permission. If the user grants permission, return true.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestPermission&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// The user didn&#39;t grant permission, so return false.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;By requesting write permission with the read request, I reduced the number of permission prompts:
the user sees one prompt when opening the file, and grants permission to both read and write to it.&lt;/p&gt;
&lt;h3 id=&quot;opening-a-directory-and-enumerating-its-contents&quot;&gt;Opening a directory and enumerating its contents &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#opening-a-directory-and-enumerating-its-contents&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To enumerate all files in a directory, call &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-showdirectorypicker&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;showDirectoryPicker()&lt;/code&gt;&lt;/a&gt;. The user
selects a directory in a picker, after which a &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FileSystemDirectoryHandle&lt;/code&gt;&lt;/a&gt; is
returned, which lets you enumerate and access the directory&#39;s files.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; butDir &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;butDirectory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;butDir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; dirHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showDirectoryPicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; dirHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;kind&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;creating-or-accessing-files-and-folders-in-a-directory&quot;&gt;Creating or accessing files and folders in a directory &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#creating-or-accessing-files-and-folders-in-a-directory&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;From a directory, you can create or access files and folders using the
&lt;a href=&quot;https://wicg.github.io/file-system-access/#dom-filesystemdirectoryhandle-getfilehandle&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getFileHandle()&lt;/code&gt;&lt;/a&gt; or respectively the &lt;a href=&quot;https://wicg.github.io/file-system-access/#dom-filesystemdirectoryhandle-getdirectoryhandle&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getDirectoryHandle()&lt;/code&gt;&lt;/a&gt;
method. By passing in an optional &lt;code&gt;options&lt;/code&gt; object with a key of &lt;code&gt;create&lt;/code&gt; and a boolean value of
&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, you can determine if a new file or folder should be created if it doesn&#39;t exist.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// In an existing directory, create a new directory named &quot;My Documents&quot;.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newDirectoryHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; existingDirectoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDirectoryHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;My Documents&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  create&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// In this new directory, create a file named &quot;My Notes.txt&quot;.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newFileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; newDirectoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFileHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;My Notes.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; create&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;resolving-the-path-of-an-item-in-a-directory&quot;&gt;Resolving the path of an item in a directory &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#resolving-the-path-of-an-item-in-a-directory&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When working with files or folders in a directory, it can be useful to resolve the path of the item
in question. This can be done with the aptly named &lt;a href=&quot;https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle-resolve&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;resolve()&lt;/code&gt;&lt;/a&gt; method. For resolving, the
item can be a direct or indirect child of the directory.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Resolve the path of the previously created file called &quot;My Notes.txt&quot;.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; newDirectoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newFileHandle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// `path` is now [&quot;My Documents&quot;, &quot;My Notes.txt&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;deleting-files-and-folders-in-a-directory&quot;&gt;Deleting files and folders in a directory &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#deleting-files-and-folders-in-a-directory&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you have obtained access to a directory, you can delete the contained files and folders with the
&lt;a href=&quot;https://wicg.github.io/file-system-access/#dom-filesystemdirectoryhandle-removeentry&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;removeEntry()&lt;/code&gt;&lt;/a&gt; method. For folders, deletion can optionally be recursive and include
all subfolders and the therein contained files.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Delete a file.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; directoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Abandoned Projects.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Recursively delete a folder.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; directoryHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Old Stuff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; recursive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;drag-and-drop-integration&quot;&gt;Drag and drop integration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#drag-and-drop-integration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API&quot; rel=&quot;noopener&quot;&gt;HTML Drag and Drop interfaces&lt;/a&gt;
enable web applications to accept
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop&quot; rel=&quot;noopener&quot;&gt;dragged and dropped files&lt;/a&gt;
on a web page. During a drag and drop operation, dragged file and directory items are associated
with file entries and directory entries respectively. The &lt;code&gt;DataTransferItem.getAsFileSystemHandle()&lt;/code&gt;
method returns a promise with a &lt;code&gt;FileSystemFileHandle&lt;/code&gt; object if the dragged item is a file, and a
promise with a &lt;code&gt;FileSystemDirectoryHandle&lt;/code&gt; object if the dragged item is a directory. The listing
below shows this in action. Note that the Drag and Drop interface&#39;s
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/kind&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DataTransferItem.kind&lt;/code&gt;&lt;/a&gt;
will be &lt;code&gt;&amp;quot;file&amp;quot;&lt;/code&gt; for both files &lt;em&gt;and&lt;/em&gt; directories, whereas the File System Access API&#39;s
&lt;a href=&quot;https://wicg.github.io/file-system-access/#dom-filesystemhandle-kind&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FileSystemHandle.kind&lt;/code&gt;&lt;/a&gt; will
be &lt;code&gt;&amp;quot;file&amp;quot;&lt;/code&gt; for files and &lt;code&gt;&amp;quot;directory&amp;quot;&lt;/code&gt; for directories.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;dragover&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Prevent navigation.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;drop&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Prevent navigation.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token comment&quot;&gt;// Process all of the items.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataTransfer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// Careful: `kind` will be &#39;file&#39; for both file&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// _and_ directory entries.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;kind &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; entry &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsFileSystemHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;kind &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;directory&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token function&quot;&gt;handleDirectoryEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;        &lt;span class=&quot;token function&quot;&gt;handleFileEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;accessing-the-origin-private-file-system&quot;&gt;Accessing the origin private file system &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#accessing-the-origin-private-file-system&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The origin private file system is a storage endpoint that, as the name suggests, is private to the
origin of the page. While browsers will typically implement this by persisting the contents of this
origin private file system to disk somewhere, it is &lt;em&gt;not&lt;/em&gt; intended that the contents be easily user
accessible. Similarly, there is &lt;em&gt;no&lt;/em&gt; expectation that files or directories with names matching the
names of children of the origin private file system exist. While the browser might make it seem that
there are files, internally—since this is an origin private file system—the browser might store
these &amp;quot;files&amp;quot; in a database or any other data structure. Essentially: what you create with this API,
do &lt;em&gt;not&lt;/em&gt; expect to find it 1:1 somewhere on the hard disk. You can operate as usual on the origin
private file system once you have access to the root &lt;code&gt;FileSystemDirectoryHandle&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; root &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;storage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDirectory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Create a new file handle.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; root&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFileHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Untitled.txt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; create&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Create a new directory handle.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; dirHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; root&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDirectoryHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;New Folder&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; create&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Recursively remove a directory.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; root&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeEntry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Old Stuff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; recursive&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;polyfilling&quot;&gt;Polyfilling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#polyfilling&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is not possible to completely polyfill the File System Access API methods.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;showOpenFilePicker()&lt;/code&gt; method can be approximated with an &lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;showSaveFilePicker()&lt;/code&gt; method can be simulated with a &lt;code&gt;&amp;lt;a download=&amp;quot;file_name&amp;quot;&amp;gt;&lt;/code&gt; element,
albeit this will trigger a programmatic download and not allow for overwriting existing files.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;showDirectoryPicker()&lt;/code&gt; method can be somewhat emulated with the non-standard
&lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot; webkitdirectory&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have developed a library called &lt;a href=&quot;https://web.dev/browser-fs-access/&quot;&gt;browser-fs-access&lt;/a&gt; that uses the File
System Access API wherever possible and that falls back to these next best options in all other
cases.&lt;/p&gt;
&lt;h2 id=&quot;security-considerations&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#security-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the File System Access API using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control and transparency, and user ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;opening-a-file-or-saving-a-new-file&quot;&gt;Opening a file or saving a new file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#opening-a-file-or-saving-a-new-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&quot;&gt;&lt;img alt=&quot;File picker to open a file for reading&quot; decoding=&quot;async&quot; height=&quot;577&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/BtrU36qfJoC5M9AgRumF.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A file picker used to open an existing file for reading.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;When opening a file, the user provides permission to read a file or directory via the file picker.
The open file picker can only be shown via a user gesture when served from a &lt;a href=&quot;https://w3c.github.io/webappsec-secure-contexts/&quot; rel=&quot;noopener&quot;&gt;secure
context&lt;/a&gt;. If users change their minds, they can cancel the selection in the file
picker and the site does not get access to anything. This is the same behavior as that of the
&lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;figure class=&quot;w-figure w-figure--inline-left&quot;&gt;
  &lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&quot;&gt;&lt;img alt=&quot;File picker to save a file to disk.&quot; decoding=&quot;async&quot; height=&quot;577&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/DZFcgVmVFVyfddL8PdSx.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A file picker used to save a file to disk.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Similarly, when a web app wants to save a new file, the browser will show the save file picker,
allowing the user to specify the name and location of the new file. Since they are saving a new file
to the device (versus overwriting an existing file), the file picker grants the app permission to
write to the file.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h4 id=&quot;restricted-folders&quot;&gt;Restricted folders &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#restricted-folders&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To help protect users and their data, the browser may limit the user&#39;s ability to save to certain
folders, for example, core operating system folders like Windows, the macOS Library folders, etc.
When this happens, the browser will show a modal prompt and ask the user to choose a different
folder.&lt;/p&gt;
&lt;h3 id=&quot;modifying-an-existing-file-or-directory&quot;&gt;Modifying an existing file or directory &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#modifying-an-existing-file-or-directory&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A web app cannot modify a file on disk without getting explicit permission from the user.&lt;/p&gt;
&lt;h4 id=&quot;permission-prompt&quot;&gt;Permission prompt &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#permission-prompt&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&quot;&gt;&lt;img alt=&quot;Permission prompt shown prior to saving a file.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;281&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1Ycrs0DnLzZY2egNYzk2.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;&lt;/a&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Prompt shown to users before the browser is granted write
    permission on an existing file.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If a person wants to save changes to a file that they previously granted read access to, the browser
will show a modal permission prompt, requesting permission for the site to write changes to disk.
The permission request can only be triggered by a user gesture, for example, by clicking a Save
button.&lt;/p&gt;
&lt;p&gt;Alternatively, a web app that edits multiple files, like an IDE, can also ask for permission to save
changes at the time of opening.&lt;/p&gt;
&lt;p&gt;If the user chooses Cancel, and does not grant write access, the web app cannot save changes to the
local file. It should provide an alternative method to allow the user to save their data, for
example by providing a way to &lt;a href=&quot;https://developers.google.com/web/updates/2011/08/Downloading-resources-in-HTML5-a-download&quot; rel=&quot;noopener&quot;&gt;&amp;quot;download&amp;quot; the file&lt;/a&gt;, saving data to the cloud, etc.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;a href=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&quot;&gt;&lt;img alt=&quot;Omnibox icon&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;162&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 282px) 282px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/14mRo309FodD4T3OL0J6.jpg?auto=format&amp;w=564 564w&quot; width=&quot;282&quot; /&gt;&lt;/a&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Omnibox icon indicating the user has granted the website permission to
    save to a local file.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Once a user has granted permission to a web app to save a local file, the browser will show an icon
in the URL bar. Clicking on the icon opens a pop-over showing the list of files the user has given
access to. The user can easily revoke that access if they choose.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&lt;/div&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The web app can continue to save changes to the file without prompting until all tabs for that
origin are closed. Once a tab is closed, the site loses all access. The next time the user uses the
web app, they will be re-prompted for access to the files.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We want to hear about your experiences with the File System Access API.&lt;/p&gt;
&lt;h3 class=&quot;hide-from-toc&quot; id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a spec issue on the &lt;a href=&quot;https://github.com/wicg/file-system-access/issues/&quot; rel=&quot;noopener&quot;&gt;WICG File System Access GitHub repo&lt;/a&gt;, or add your thoughts
to an existing issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;hide-from-toc&quot; id=&quot;problem-with-the-implementation&quot;&gt;Problem with the implementation? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a bug at &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3EStorage%3EFileSystem&quot; rel=&quot;noopener&quot;&gt;https://new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and set &lt;em&gt;Components&lt;/em&gt; to &lt;code&gt;Blink&amp;gt;Storage&amp;gt;FileSystem&lt;/code&gt;.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;hide-from-toc&quot; id=&quot;planning-to-use-the-api&quot;&gt;Planning to use the API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#planning-to-use-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Planning to use the File System Access API on your site? Your public support helps us to prioritize
features, and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share how you plan to use it on the &lt;a href=&quot;https://discourse.wicg.io/t/writable-file-api/1433&quot; rel=&quot;noopener&quot;&gt;WICG Discourse thread&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/chromiumdev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23FileSystemAccess&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#FileSystemAccess&lt;/code&gt;&lt;/a&gt; and
let us know where and how you&#39;re using it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/file-system-access/blob/main/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/file-system-access/&quot; rel=&quot;noopener&quot;&gt;File System Access specification&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://w3c.github.io/FileAPI/&quot; rel=&quot;noopener&quot;&gt;File specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/853326&quot; rel=&quot;noopener&quot;&gt;Tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/6284708426022912&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request an &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;origin trial token&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@types/wicg-file-system-access&quot; rel=&quot;noopener&quot;&gt;TypeScript definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1NJFd-EWdUlQ7wVzjqcgXewqC5nzv_qII4OvlDtK6SE8/edit&quot; rel=&quot;noopener&quot;&gt;File System Access API - Chromium Security Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;code&gt;Blink&amp;gt;Storage&amp;gt;FileSystem&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-system-access/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The File System Access API spec was written by
&lt;a href=&quot;https://github.com/mkruisselbrink&quot; rel=&quot;noopener&quot;&gt;Marijn Kruisselbrink&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Pete LePage</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Customize the window controls overlay of your PWA&#39;s title bar</title>
    <link href="https://web.dev/window-controls-overlay/"/>
    <updated>2021-04-22T00:00:00Z</updated>
    <id>https://web.dev/window-controls-overlay/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;If you remember my article &lt;a href=&quot;https://web.dev/app-like-pwas/&quot;&gt;Make your PWA feel more like an app&lt;/a&gt;, you may recall
how I mentioned &lt;a href=&quot;https://web.dev/app-like-pwas/#customized-title-bar&quot;&gt;customizing the title bar of your app&lt;/a&gt; as a
strategy for creating a more app-like experience. Here is an example of how this can look like
showing the macOS Podcasts app.&lt;/p&gt;
&lt;img alt=&quot;macOS Podcasts app title bar showing media control buttons and metadata about the currently playing podcast.&quot; decoding=&quot;async&quot; height=&quot;63&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/o5gZ3GSKyUZOPhFxX7js.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Now you may be tempted to object by saying that Podcasts is a platform-specific macOS app that does
not run in a browser and therefore can do what it wants without having to play by the browser&#39;s
rules. True, but the good news is that the Window Controls Overlay feature, which is the topic of
this very article, soon lets you create similar user interfaces for your PWA.&lt;/p&gt;
&lt;h2 id=&quot;window-controls-overlay-components&quot;&gt;Window Controls Overlay components &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#window-controls-overlay-components&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Window Controls Overlay consists of four sub-features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;&amp;quot;window-controls-overlay&amp;quot;&lt;/code&gt; value for the &lt;a href=&quot;https://web.dev/display-override/&quot;&gt;&lt;code&gt;&amp;quot;display_override&amp;quot;&lt;/code&gt;&lt;/a&gt; field in
the web app manifest.&lt;/li&gt;
&lt;li&gt;The CSS environment variables &lt;code&gt;titlebar-area-x&lt;/code&gt;, &lt;code&gt;titlebar-area-y&lt;/code&gt;, &lt;code&gt;titlebar-area-width&lt;/code&gt;, and
&lt;code&gt;titlebar-area-height&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The standardization of the previously proprietary CSS property &lt;code&gt;-webkit-app-region&lt;/code&gt; as the
&lt;code&gt;app-region&lt;/code&gt; property to define draggable regions in web content.&lt;/li&gt;
&lt;li&gt;A mechanism to query for and work around the window controls region via the
&lt;code&gt;windowControlsOverlay&lt;/code&gt; member of &lt;code&gt;window.navigator&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;what-is-window-controls-overlay&quot;&gt;What is Window Controls Overlay &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#what-is-window-controls-overlay&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The title bar area refers to the space to the left or right of the window controls (that is, the
buttons to minimize, maximize, close, etc.) and often contains the title of the application. Window
Controls Overlay lets progressive web applications (PWAs) provide a more app-like feel by swapping
the existing full-width title bar for a small overlay containing the window controls. This allows
developers to place custom content in what was previously the browser-controlled title bar area.&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/window-controls-overlay/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/window-controls-overlay/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. &lt;strong&gt;Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-9105152546636300287&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;In progress&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with Window Controls Overlay locally, without an origin trial token, enable the
&lt;code&gt;#enable-desktop-pwas-window-controls-overlay&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chrome 93, Window Controls Overlay will be available as an origin trial in Chrome.
The origin trial is expected to end in Chrome 95 (expected in November 10, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-9105152546636300287&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;how-to-use-window-controls-overlay&quot;&gt;How to use Window Controls Overlay &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#how-to-use-window-controls-overlay&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;adding-window-controls-overlay-to-the-web-app-manifest&quot;&gt;Adding &lt;code&gt;window-controls-overlay&lt;/code&gt; to the web app manifest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#adding-window-controls-overlay-to-the-web-app-manifest&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A progressive web app can opt-in to the window controls overlay by adding
&lt;code&gt;&amp;quot;window-controls-overlay&amp;quot;&lt;/code&gt; as the primary &lt;code&gt;&amp;quot;display_override&amp;quot;&lt;/code&gt; member in the web app manifest:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display_override&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;window-controls-overlay&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The window controls overlay will be visible only when all of the following conditions are satisfied:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The app is &lt;em&gt;not&lt;/em&gt; opened in the browser, but in a separate PWA window.&lt;/li&gt;
&lt;li&gt;The manifest includes &lt;code&gt;&amp;quot;display_override&amp;quot;: [&amp;quot;window-controls-overlay&amp;quot;]&lt;/code&gt;. (Other values are
allowed thereafter.)&lt;/li&gt;
&lt;li&gt;The PWA is running on a desktop operating system.&lt;/li&gt;
&lt;li&gt;The current origin matches the origin for which the PWA was installed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The result of this is an empty title bar area with the regular window controls on the left or the
right, depending on the operating system.&lt;/p&gt;
&lt;img alt=&quot;App window with an empty titlebar with the window controls on the right.&quot; decoding=&quot;async&quot; height=&quot;112&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/7slf2HkHYGyhhLzdBz9Q.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h3 id=&quot;moving-content-into-the-title-bar&quot;&gt;Moving content into the title bar &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#moving-content-into-the-title-bar&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that there is space in the title bar, you can move something there. For this article, I have
built a Chuck Norris jokes PWA. A useful feature for this app may be a search for words in jokes.
Fun fact: Chuck Norris has installed this PWA on his iPhone and has let me know he loves the push
notifications he receives whenever a new joke is submitted. The HTML for the search feature looks
like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;search&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;chuck-norris.png&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Chuck Norris&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;32&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;32&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;search&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    Search words in jokes&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To move this &lt;code&gt;div&lt;/code&gt; up into the title bar, some CSS is needed:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.search&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Make sure the `div` stays there, even when scrolling. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; fixed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/**&lt;br /&gt;   * Gradient, because why not. Endless opportunities.&lt;br /&gt;   * The gradient ends in maroon, which happens to be the app&#39;s&lt;br /&gt;   * `&amp;lt;meta name=&quot;theme-color&quot; content=&quot;maroon&quot;&gt;`.&lt;br /&gt;   */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90deg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; #131313&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 33%&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maroon&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Use the environment variable for the left anchoring with a fallback. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;titlebar-area-x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Use the environment variable for the top anchoring with a fallback. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;titlebar-area-y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Use the environment variable for setting the width with a fallback. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;titlebar-area-width&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Use the environment variable for setting the height with a fallback. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;titlebar-area-height&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 33px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can see the effect of this code in the screenshot below. The title bar is fully responsive. When
you resize the PWA window, the title bar reacts as if it were composed of regular HTML content,
which, in fact, it is.&lt;/p&gt;
&lt;img alt=&quot;App window with a search bar in the title bar.&quot; decoding=&quot;async&quot; height=&quot;112&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/5dc2j3CfrKczvTaASvKE.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h3 id=&quot;determining-which-parts-of-the-title-bar-are-draggable&quot;&gt;Determining which parts of the title bar are draggable &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#determining-which-parts-of-the-title-bar-are-draggable&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While the screenshot above suggests that you are done, you are not done quite yet. The PWA window is
no longer draggable (apart from a very small area), since the window controls buttons are no drag
areas, and the rest of the title bar consists of the search widget. This can be fixed by leveraging
the &lt;code&gt;app-region&lt;/code&gt; CSS property with a value of &lt;code&gt;drag&lt;/code&gt;. In the concrete case, it is fine to make
everything besides the &lt;code&gt;input&lt;/code&gt; element draggable.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* The entire search `div` is draggable… */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.search&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;-webkit-app-region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; drag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;app-region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; drag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* …except for the `input`. */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;-webkit-app-region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-drag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;app-region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-drag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For now, &lt;code&gt;app-region&lt;/code&gt; has not been standardized yet, so the plan is to continue using the prefixed
&lt;code&gt;-webkit-app-region&lt;/code&gt; until &lt;code&gt;app-region&lt;/code&gt; is standardized. Currently, only &lt;code&gt;-webkit-app-region&lt;/code&gt; is
supported in the browser.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;With this CSS in place, the user can drag the app window as usual by dragging the &lt;code&gt;div&lt;/code&gt;, the &lt;code&gt;img&lt;/code&gt;,
or the &lt;code&gt;label&lt;/code&gt;. Only the &lt;code&gt;input&lt;/code&gt; element is interactive so the search query can be entered.&lt;/p&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Support for Window Controls Overlay can be detected by testing for the existence of
&lt;code&gt;windowControlsOverlay&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;windowControlsOverlay&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Window Controls Overlay is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;querying-the-window-controls-region-with-windowcontrolsoverlay&quot;&gt;Querying the window controls region with &lt;code&gt;windowControlsOverlay&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#querying-the-window-controls-region-with-windowcontrolsoverlay&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The code so far has only one problem: on some platforms the window controls are on the right, on
others they are on the left. To make matters worse, the &amp;quot;three dots&amp;quot; Chrome menu will change
position, too, based on the platform. This means that the linear gradient background image needs to
be dynamically adapted to run from &lt;code&gt;#131313&lt;/code&gt;→&lt;code&gt;maroon&lt;/code&gt; or &lt;code&gt;maroon&lt;/code&gt;→&lt;code&gt;#131313&lt;/code&gt;→&lt;code&gt;maroon&lt;/code&gt;, so that it
blends in with the title bar&#39;s &lt;code&gt;maroon&lt;/code&gt; background color that is determined by
&lt;code&gt;&amp;lt;meta name=&amp;quot;theme-color&amp;quot; content=&amp;quot;maroon&amp;quot;&amp;gt;&lt;/code&gt;. This can be achieved by querying the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getBoundingClientRect()&lt;/code&gt;&lt;/a&gt;
API on the &lt;code&gt;navigator.windowControlsOverlay&lt;/code&gt; property.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;windowControlsOverlay&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; x &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;windowControlsOverlay&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Window controls are on the right (like on Windows).&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Chrome menu is left of the window controls.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// [ windowControlsOverlay___________________ […] [_] [■] [X] ]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    div&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;search-controls-right&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Window controls are on the left (like on macOS).&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Chrome menu is right of the window controls overlay.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// [ [X] [_] [■] ___________________windowControlsOverlay [⋮] ]&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    div&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;search-controls-left&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// When running in a non-supporting browser tab.&lt;/span&gt;&lt;br /&gt;  div&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;search-controls-right&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Rather than having the background image in the &lt;code&gt;.search&lt;/code&gt; class CSS rules directly (as before), the
modified code now uses two classes that the code above sets dynamically.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* For macOS: */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.search-controls-left&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90deg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maroon&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 45%&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; #131313&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 90%&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maroon&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* For Windows: */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.search-controls-right&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90deg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; #131313&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 33%&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; maroon&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;determining-if-the-window-controls-overlay-is-visible&quot;&gt;Determining if the window controls overlay is visible &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#determining-if-the-window-controls-overlay-is-visible&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The window controls overlay will not be visible in the title bar area in all circumstances. While it
will naturally not be there on browsers that do not support the Window Controls Overlay feature, it
will also not be there when the PWA in question runs in a tab. To detect this situation, you can
query the &lt;code&gt;visible&lt;/code&gt; property of the &lt;code&gt;windowControlsOverlay&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;windowControlsOverlay&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visible&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The window controls overlay is visible in the title bar area.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The window controls overlay visibility is not to be confused with the visibility in the
CSS sense of whatever HTML content you place next to the window controls overlay. Even if you set
&lt;code&gt;display: none&lt;/code&gt; on the &lt;code&gt;div&lt;/code&gt; placed into the window controls overlay, the &lt;code&gt;visible&lt;/code&gt; property of the
window controls overlay would still report &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;being-notified-of-geometry-changes&quot;&gt;Being notified of geometry changes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#being-notified-of-geometry-changes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Querying the window controls overlay area with &lt;code&gt;getBoundingClientRect()&lt;/code&gt; can suffice for one-off
things like setting the correct background image based on where the window controls are, but in
other cases, more fine-grained control is necessary. For example, a possible use case could be to
adapt the window controls overlay based on the available space and to add a joke right in the window
control overlay when there is enough space.&lt;/p&gt;
&lt;img alt=&quot;Window controls overlay area on wide window displaying an additional joke (which reads Chuck Norris can find a word that rhymes with orange.)&quot; decoding=&quot;async&quot; height=&quot;73&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Unm5S2dB3szfFF2YCcFO.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;You can be notified of geometry changes by subscribing to
&lt;code&gt;navigator.windowControlsOverlay.ongeometrychange&lt;/code&gt; or by setting up an event listener for the
&lt;code&gt;geometrychange&lt;/code&gt; event. This event will only fire when the window controls overlay is visible, that
is, when &lt;code&gt;navigator.windowControlsOverlay.visible&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Since this event fires frequently (comparable to how a scroll listener fires), I always
recommend you use a
&lt;a href=&quot;https://css-tricks.com/the-difference-between-throttling-and-debouncing/#debouncing-enforces-that-a-function-not-be-called-again-until-a-certain-amount-of-time-has-passed-without-it-being-called-as-in-execute-this-function-only-if-100-milliseconds-have-passed-witho&quot; rel=&quot;noopener&quot;&gt;debounce function&lt;/a&gt;
so the event does not fire too often. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;debounce&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;func&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; timeout&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;executedFunction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;args&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;later&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    timeout &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;later&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; wait&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;windowControlsOverlay&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;windowControlsOverlay&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ongeometrychange &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    span&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hidden &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boundingRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Rather than assigning a function to &lt;code&gt;ongeometrychange&lt;/code&gt;, you can also add an event listener to
&lt;code&gt;windowControlsOverlay&lt;/code&gt; like below. You can read up on the difference between the two on
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Event_handlers&quot; rel=&quot;noopener&quot;&gt;MDN&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;windowControlsOverlay&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;geometrychange&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    span&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hidden &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boundingRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;compatibility-when-running-in-a-tab-and-on-non-supporting-browsers&quot;&gt;Compatibility when running in a tab and on non-supporting browsers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#compatibility-when-running-in-a-tab-and-on-non-supporting-browsers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are two possible cases to consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The case where an app is running in a browser that &lt;em&gt;does&lt;/em&gt; support Window Controls Overlay, but
where the app is used in a browser tab.&lt;/li&gt;
&lt;li&gt;The case where an app is running in a browser that &lt;em&gt;does not&lt;/em&gt; support Window Controls Overlay.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In both cases, by default the HTML the developer has determined to be placed in the window controls
overlay will display inline like regular HTML content and the &lt;code&gt;env()&lt;/code&gt; variables&#39; fallback values
will kick in for the positioning. On supporting browsers, you can also decide to not display the
HTML designated for the window controls overlay by checking the overlay&#39;s &lt;code&gt;visible&lt;/code&gt; property, and if
it reports &lt;code&gt;false&lt;/code&gt;, then hiding that HTML content.&lt;/p&gt;
&lt;img alt=&quot;PWA running in a browser tab with the window controls overlay displayed in the body.&quot; decoding=&quot;async&quot; height=&quot;118&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/jgS3hkEbaJ8bU2Jl9Pdz.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;As a reminder, non-supporting browsers will either not consider the
&lt;a href=&quot;https://web.dev/display-override/&quot;&gt;&lt;code&gt;&amp;quot;display_override&amp;quot;&lt;/code&gt;&lt;/a&gt; web app manifest property at all, or not recognize the
&lt;code&gt;&amp;quot;window-controls-overlay&amp;quot;&lt;/code&gt; and thus use the next possible value according to the fallback chain,
for example, &lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;PWA running in standalone mode with the window controls overlay displayed in the body.&quot; decoding=&quot;async&quot; height=&quot;99&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/MMgzCRS0207kFpQnNwgb.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have created a &lt;a href=&quot;https://window-controls-overlay.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; that you can play with in
different supporting and non-supporting browsers and in the installed and non-installed state. For
the actual Window Controls Overlay experience, you need to install the app and set the
&lt;a href=&quot;https://web.dev/window-controls-overlay/#enabling-via-chrome:flags&quot;&gt;flag&lt;/a&gt;. You can see two screenshots of what to expect below. The
&lt;a href=&quot;https://glitch.com/edit/#!/window-controls-overlay&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt; of the app is available on Glitch.&lt;/p&gt;
&lt;img alt=&quot;Chuck Norris jokes demo app with Window Controls Overlay.&quot; decoding=&quot;async&quot; height=&quot;312&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lbwvSfjfLzPUSCDfDFDE.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
&lt;p&gt;The search feature in the window controls overlay is fully functional:&lt;/p&gt;
&lt;img alt=&quot;Chuck Norris jokes demo app with Window Controls Overlay and active search for the term &amp;#x27;canyon&amp;#x27; highlighting one of the jokes with the matched term.&quot; decoding=&quot;async&quot; height=&quot;312&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/KpJcvlSpdiVw4wG9zPt3.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
&lt;h2 id=&quot;security-considerations&quot;&gt;Security considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#security-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented the Window Controls Overlay API using the core
principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;,
including user control, transparency, and ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;spoofing&quot;&gt;Spoofing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#spoofing&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Giving sites partial control of the title bar leaves room for developers to spoof content in what
was previously a trusted, browser-controlled region. Currently, in Chromium browsers, standalone
mode includes a title bar which on initial launch displays the title of the webpage on the left, and
the origin of the page on the right (followed by the &amp;quot;settings and more&amp;quot; button and the window
controls). After a few seconds, the origin text disappears. If the browser is set to a right-to-left
(RTL) language, this layout is flipped such that the origin text is on the left. This opens the
window controls overlay to spoof the origin if there is insufficient padding between the origin and
the right edge of the overlay. For example, the origin &amp;quot;evil.ltd&amp;quot; could be appended with a trusted
site &amp;quot;google.com&amp;quot;, leading users to believe that the source is trustworthy. The plan is to keep this
origin text so that users know what the origin of the app is and can ensure that it matches their
expectations. For RTL configured browsers, there must be enough padding to the right of the origin
text to prevent a malicious website from appending the unsafe origin with a trusted origin.&lt;/p&gt;
&lt;h3 id=&quot;fingerprinting&quot;&gt;Fingerprinting &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#fingerprinting&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Enabling the window controls overlay and draggable regions do not pose considerable privacy concerns
other than feature detection. However, due to differing sizes and positions of the window controls
buttons across operating systems, the JavaScript API for
&lt;code&gt;navigator.&lt;wbr /&gt;windowControlsOverlay.&lt;wbr /&gt;getBoundingClientRect()&lt;/code&gt; will return a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMRect&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;DOMRect&lt;/code&gt;&lt;/a&gt; whose position and dimensions
will reveal information about the operating system upon which the browser is running. Currently,
developers can already discover the OS from the user agent string, but due to fingerprinting
concerns, there is discussion about freezing the UA string and unifying OS versions. There is an
ongoing effort with the community to understand how frequently the size of the window controls
overlay changes across platforms, as the current assumption is that these are fairly stable across
OS versions and thus would not be useful for observing minor OS versions. Although this is a
potential fingerprinting issue, it only applies to installed PWAs that use the custom title bar
feature and does not apply to general browser usage. Additionally, the
&lt;code&gt;navigator.&lt;wbr /&gt;windowControlsOverlay&lt;/code&gt; API will not be available to iframes embedded
inside of a PWA.&lt;/p&gt;
&lt;h3 id=&quot;navigation&quot;&gt;Navigation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#navigation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Navigating to a different origin within the PWA will cause it to fall back to the normal standalone
title bar, even if it meets the above criteria and is launched with the window controls overlay.
This is to accommodate the black bar that appears on navigation to a different origin. After
navigating back to the original origin, the window controls overlay will be used again.&lt;/p&gt;
&lt;img alt=&quot;Black URL bar for out-of-origin navigation.&quot; decoding=&quot;async&quot; height=&quot;169&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/8Yn3rH0FirYKgiHKUCA7.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with the Window Controls Overlay API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/window-controls-overlay/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt;
box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Window Controls Overlay API? Your public support helps the Chromium team
to prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a Tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; with the
&lt;a href=&quot;https://twitter.com/search?q=%23WindowControlsOverlay&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WindowControlsOverlay&lt;/code&gt;&lt;/a&gt;
hashtag and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/window-controls-overlay/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/937121&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5741247866077184&quot; rel=&quot;noopener&quot;&gt;Chrome Platform Status entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/481&quot; rel=&quot;noopener&quot;&gt;TAG review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/experimental-features/#window-controls-overlay-for-installed-desktop-web-apps&quot; rel=&quot;noopener&quot;&gt;Microsoft Edge&#39;s related docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/window-controls-overlay/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Window Controls Overlay was implemented and specified by
&lt;a href=&quot;https://www.linkedin.com/in/amanda-baker-20a2b962/&quot; rel=&quot;noopener&quot;&gt;Amanda Baker&lt;/a&gt; from the Microsoft Edge team.
This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; and &lt;a href=&quot;https://github.com/kenchris&quot; rel=&quot;noopener&quot;&gt;Kenneth Rohde Christiansen&lt;/a&gt;.
Hero image by &lt;a href=&quot;https://unsplash.com/@sigmund&quot; rel=&quot;noopener&quot;&gt;Sigmund&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/OV44gxH71DU&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author><author>
      <name>Amanda Baker</name>
    </author>
  </entry>
  
  <entry>
    <title>PWAs as URL Handlers</title>
    <link href="https://web.dev/pwa-url-handler/"/>
    <updated>2021-06-03T00:00:00Z</updated>
    <id>https://web.dev/pwa-url-handler/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;PWAs as URL Handlers is part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt;
and is currently in development. This post will be updated as the implementation progresses.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is PWAs as URL Handlers? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Imagine you are chatting with a friend using an instant messenger application like Messages on macOS
and you are talking about music. Further imagine you both have the &lt;code&gt;music.example.com&lt;/code&gt; PWA installed
on your devices. If you want to share your favorite track for your friend to enjoy, you can send
them a deep link like &lt;code&gt;https://music.example.com/rick-astley/never-gonna-give-you-up&lt;/code&gt;. Since this
link is pretty long, the developers of &lt;code&gt;music.example.com&lt;/code&gt; may have decided to add an additional
short link to each track, like, for example, &lt;code&gt;https://🎵.example.com/r-a/n-g-g-y-u&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;PWA as URL Handlers allows apps like &lt;code&gt;music.example.com&lt;/code&gt; to register themselves as URL handlers for
URLs that match patterns like &lt;code&gt;https://music.example.com&lt;/code&gt;, &lt;code&gt;https://*.music.example.com&lt;/code&gt;, or
&lt;code&gt;https://🎵.example.com&lt;/code&gt;, so
that links from outside of the PWA, for example, from an instant messenger application or an email
client, open in the installed PWA rather than in a browser tab.&lt;/p&gt;
&lt;p&gt;PWA as URL Handlers consists of two additions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;&amp;quot;url_handlers&amp;quot;&lt;/code&gt; web app manifest member.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;web-app-origin-association&lt;/code&gt; file format for validating in- and out-of-scope URL associations.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for PWAs as URL Handlers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examples of sites that may use this API include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Music or video streaming sites so track links or playlist links open in the player experience of
the app.&lt;/li&gt;
&lt;li&gt;News or RSS readers so followed or subscribed-to sites open in the app&#39;s reader mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/pwa-url-handler/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/pwa-url-handler/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use PWAs as URL Handlers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with PWAs as URL Handlers locally, without an origin trial token, enable the
&lt;code&gt;#enable-desktop-pwas-url-handling&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Support for the PWAs as URL Handlers feature is limited to desktop operating systems
like Windows, macOS, and Linux. On Android, Chromium browsers install PWAs by generating a
&lt;a href=&quot;https://developers.google.com/web/fundamentals/integration/webapks&quot; rel=&quot;noopener&quot;&gt;WebAPK&lt;/a&gt;, which can register a
set of intent filters for all URLs within the scope of the app. This means that PWAs already handle
associated URLs on Android at the operating system level using intent filters. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-&amp;quot;url_handlers&amp;quot;-web-app-manifest-member&quot;&gt;The &lt;code&gt;&amp;quot;url_handlers&amp;quot;&lt;/code&gt; web app manifest member &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#the-%22url_handlers%22-web-app-manifest-member&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To associate an installed PWA with URL patterns, these patterns need to be specified in the web app
manifest. This happens through the &lt;code&gt;&amp;quot;url_handlers&amp;quot;&lt;/code&gt; member. It accepts an array of objects with an
&lt;code&gt;origin&lt;/code&gt; property, which is a required &lt;code&gt;string&lt;/code&gt; that is a pattern for matching origins. These
patterns are allowed to have a wildcard (&lt;code&gt;*&lt;/code&gt;) prefix in order to include multiple sub-domains (like
&lt;code&gt;https://*.example.com&lt;/code&gt;). URLs that match these origins could be handled by this web app. The scheme is
always assumed to be &lt;code&gt;https://&lt;/code&gt;, but it needs to be explicitly mentioned.&lt;/p&gt;
&lt;p&gt;The excerpt of a web app manifest below shows how the music PWA example from the introductory
paragraph could set this up. The second entry with the wildcard (&lt;code&gt;&amp;quot;https://*.music.example.com&amp;quot;&lt;/code&gt;) makes sure
that the app also gets activated for &lt;code&gt;https://www.music.example.com&lt;/code&gt; or potential other examples like
&lt;code&gt;https://marketing-activity.music.example.com&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;url_handlers&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;origin&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://music.example.com&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;origin&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://*.music.example.com&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;origin&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://🎵.example.com&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While in an online scenario, short links from &lt;code&gt;https://🎵.example.com&lt;/code&gt; would typically be
redirected to &lt;code&gt;https://music.example.com&lt;/code&gt;. Such navigation redirection is not a good alternative with
respect to offline scenarios. Therefore the app needs to register for both origins. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-web-app-origin-association-file&quot;&gt;The &lt;code&gt;web-app-origin-association&lt;/code&gt; file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#the-web-app-origin-association-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since the PWA lives on a different origin (&lt;code&gt;music.example.com&lt;/code&gt;) than some of the URLs it needs to
handle (e.g., &lt;code&gt;https://🎵.example.com&lt;/code&gt;), the app needs to verify ownership of these other origins. This
happens in a &lt;code&gt;web-app-origin-association&lt;/code&gt; file hosted on the other origins.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Apps that want to handle URLs that live on the &lt;em&gt;same&lt;/em&gt; origin as the PWA likewise need to
specify the handling rules in a &lt;code&gt;web-app-origin-association&lt;/code&gt; file hosted on said origin. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;This file must contain valid JSON. The top-level structure is an object, with a member named
&lt;code&gt;&amp;quot;web_apps&amp;quot;&lt;/code&gt;. This member is an array of objects and each object represents an entry for a unique
web app. Each object contains:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;manifest&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(Required) URL string of the web app manifest of the associated PWA&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;details&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(Optional) An object that contains arrays of included and excluded URL patterns&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;Each &lt;code&gt;&amp;quot;details&amp;quot;&lt;/code&gt; object contains:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;paths&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(Optional) Array of allowed path strings&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;exclude_paths&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;(Optional) Array of disallowed path strings&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p&gt;An example &lt;code&gt;web-app-origin-association&lt;/code&gt; file for the music PWA example from above is given below. It
would be hosted on the origin &lt;code&gt;🎵.example.com&lt;/code&gt; and establishes the association with the
&lt;code&gt;music.example.com&lt;/code&gt; PWA, identified by its web app manifest URL.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;web_apps&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;manifest&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://music.example.com/manifest.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;details&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;paths&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;exclude_paths&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/internal/*&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;code&gt;web-app-origin-association&lt;/code&gt; file is similar to
&lt;a href=&quot;https://developer.apple.com/documentation/safariservices/supporting_associated_domains_in_your_app#3001215&quot; rel=&quot;noopener&quot;&gt;Apple&#39;s associated domain file&lt;/a&gt;,
&lt;a href=&quot;https://developer.android.com/training/app-links/verify-site-associations&quot; rel=&quot;noopener&quot;&gt;Android&#39;s &lt;code&gt;assetlinks.json&lt;/code&gt; file&lt;/a&gt;,
and
&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/launch-resume/web-to-app-linking#associate-your-app-and-website-with-a-json-file&quot; rel=&quot;noopener&quot;&gt;Windows&#39; &lt;code&gt;windows-app-web-link&lt;/code&gt; file&lt;/a&gt;.
What differs is that the &lt;code&gt;web-app-origin-association&lt;/code&gt; file does not reference PWAs using a
platform-specific app ID, but by their web app manifest URL. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4 id=&quot;when-does-a-url-match&quot;&gt;When does a URL match? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#when-does-a-url-match&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A PWA matches a URL for handling if both of the following conditions are fulfilled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The URL matches one of the origin strings in &lt;code&gt;&amp;quot;url_handlers&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The browser is able to validate via the respective &lt;code&gt;web-app-origin-association&lt;/code&gt; file that each
origin agrees to let this app handle such a URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;regarding-web-app-origin-association-file-discovery&quot;&gt;Regarding &lt;code&gt;web-app-origin-association&lt;/code&gt; file discovery &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#regarding-web-app-origin-association-file-discovery&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For the browser to discover the &lt;code&gt;web-app-origin-association&lt;/code&gt; file, developers need to
place the &lt;code&gt;web-app-origin-association&lt;/code&gt; file in the
&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8615&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;/.well-known/&lt;/code&gt;&lt;/a&gt; folder at the root of the app.
For this to work, the file name must exactly be &lt;code&gt;web-app-origin-association&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To test PWAs as URL Handlers, be sure to &lt;a href=&quot;https://web.dev/pwa-url-handler/#enabling-via-about:flags&quot;&gt;set the browser flag&lt;/a&gt; as
outlined above and then install the PWA at
&lt;a href=&quot;https://mandymsft.github.io/pwa/&quot; rel=&quot;noopener&quot;&gt;https://mandymsft.github.io/pwa/&lt;/a&gt;. By looking at its
&lt;a href=&quot;https://github.com/mandymsft/pwa/blob/main/manifest.json&quot; rel=&quot;noopener&quot;&gt;web app manifest&lt;/a&gt;, you can see that it
handles URLs with the following URL patterns: &lt;code&gt;https://mandymsft.github.io&lt;/code&gt; and
&lt;code&gt;https://luhuangmsft.github.io&lt;/code&gt;. Since the latter is on a different origin (&lt;code&gt;luhuangmsft.github.io&lt;/code&gt;)
than the PWA, the PWA on &lt;code&gt;mandymsft.github.io&lt;/code&gt; needs to prove ownership, which happens via the
&lt;code&gt;web-app-origin-association&lt;/code&gt; file hosted at
&lt;a href=&quot;https://luhuangmsft.github.io/.well-known/web-app-origin-association&quot; rel=&quot;noopener&quot;&gt;https://luhuangmsft.github.io/.well-known/web-app-origin-association&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To test that it is indeed working, send yourself a test message using an instant messaging app of
your choice or an email viewed in an email client that is not web-based like Mail on macOS. The
email or text message should contain either of the links &lt;code&gt;https://mandymsft.github.io&lt;/code&gt; or
&lt;code&gt;https://luhuangmsft.github.io&lt;/code&gt;. Both should open in the installed PWA.&lt;/p&gt;
&lt;img alt=&quot;The Windows Skype instant messenger app next to the installed demo PWA, which is opened in standalone mode after clicking a link handled by it in a Skype chat message.&quot; decoding=&quot;async&quot; height=&quot;498&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/EjFQNwv2IfINKykzsxxs.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented PWAs as URL Handlers using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If more than one PWA registers as a URL handler for a given URL pattern, the user will be prompted
to choose which PWA they want to handle the pattern with—if any at all. Navigations that start in a
browser tab are not handled by this proposal, it is explicitly aimed at navigations that start
outside of the browser.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If the necessary association validation cannot be completed successfully during PWA installation for
any reason, the browser will not register the app as an active URL handler for the affected URLs.
URL handlers, if improperly implemented, can be used to hijack traffic for websites. This is why the
app association mechanism is an important part of the scheme.&lt;/p&gt;
&lt;p&gt;Platform-specific applications can already use operating system APIs to enumerate installed
applications on the user&#39;s system. For example, applications on Windows can use the
&lt;a href=&quot;https://docs.microsoft.com/en-us/uwp/api/windows.system.launcher.findappurihandlersasync&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FindAppUriHandlersAsync&lt;/code&gt;&lt;/a&gt;
API to enumerate URL handlers. If PWAs register as OS level URL handlers in Windows, their presence
would be visible to other applications.&lt;/p&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An origin could modify its associations with PWAs at any time. Browsers will regularly attempt to
revalidate the associations of installed web apps. If a URL handler registration fails to revalidate
because the association data has changed or is no longer available, the browser will remove
registrations.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with the PWAs as URL Handlers.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/pwa-url-handler/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt;
box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use PWAs as URL Handlers? Your public support helps the Chromium team prioritize
features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23URLHandlers&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#URLHandlers&lt;/code&gt;&lt;/a&gt; and let
us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/pwa-url-handler/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mandymsft.github.io/pwa/&quot; rel=&quot;noopener&quot;&gt;Demo&lt;/a&gt; | &lt;a href=&quot;https://github.com/mandymsft/pwa/&quot; rel=&quot;noopener&quot;&gt;Demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1072058&quot; rel=&quot;noopener&quot;&gt;Chromium tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5739732661174272&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/list?q=component:UI%3EBrowser%3EWebAppInstalls&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/552&quot; rel=&quot;noopener&quot;&gt;TAG Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/experimental-features/#url-link-handling&quot; rel=&quot;noopener&quot;&gt;Microsoft documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/pwa-url-handler/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;PWAs as URL Handlers was specified and implemented by &lt;a href=&quot;https://github.com/LuHuangMSFT&quot; rel=&quot;noopener&quot;&gt;Lu Huang&lt;/a&gt; and &lt;a href=&quot;https://github.com/mandymsft&quot; rel=&quot;noopener&quot;&gt;Mandy Chen&lt;/a&gt; from the Microsoft Edge team.
This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.
Hero image by &lt;a href=&quot;https://unsplash.com/@trhammerhead&quot; rel=&quot;noopener&quot;&gt;Bryson Hammer&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/JZ8AHFr2aEg&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>User preference media features client hints headers</title>
    <link href="https://web.dev/user-preference-media-features-headers/"/>
    <updated>2021-08-02T00:00:00Z</updated>
    <id>https://web.dev/user-preference-media-features-headers/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;CSS media queries, and specifically
&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences&quot; rel=&quot;noopener&quot;&gt;user preference media features&lt;/a&gt; like
&lt;a href=&quot;https://web.dev/prefers-color-scheme/&quot;&gt;&lt;code&gt;prefers-color-scheme&lt;/code&gt;&lt;/a&gt; or
&lt;a href=&quot;https://web.dev/prefers-reduced-motion/&quot;&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt;, have a potentially
&lt;a href=&quot;https://webkit.org/blog/8892/dark-mode-in-web-inspector/#:~:text=Implementing%20Dark%20Mode%20took%20over%201%2C000%20lines%20of%20CSS.&quot; rel=&quot;noopener&quot;&gt;significant impact&lt;/a&gt;
on the amount of CSS that needs to be delivered by a page, and on the experience the user is going
to have when the page loads.&lt;/p&gt;
&lt;p&gt;Focusing on &lt;code&gt;prefers-color-scheme&lt;/code&gt;—but highlighting that the reasoning applies to other user
preference media features as well—it is a best practice to not load CSS for the particular
non-matching color scheme in the critical rendering path, and instead to initially only load the
currently relevant CSS. One way of doing so is
&lt;a href=&quot;https://web.dev/prefers-color-scheme/#loading-strategy&quot;&gt;via &lt;code&gt;&amp;lt;link media&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, high-traffic sites like &lt;a href=&quot;https://www.google.com/&quot; rel=&quot;noopener&quot;&gt;Google Search&lt;/a&gt; that wish to honor user
preference media features like &lt;code&gt;prefers-color-scheme&lt;/code&gt; and that inline CSS for performance reasons,
need to know about the preferred color scheme (or other user preference media features respectively)
ideally at request time, so that the initial HTML payload already has the right CSS inlined.&lt;/p&gt;
&lt;p&gt;Additionally, and specifically for &lt;code&gt;prefers-color-scheme&lt;/code&gt;, sites by all means want to avoid a
&lt;a href=&quot;https://css-tricks.com/flash-of-inaccurate-color-theme-fart/&quot; rel=&quot;noopener&quot;&gt;flash of inaccurate color theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; client hint header is the first of a
&lt;a href=&quot;https://wicg.github.io/user-preference-media-features-headers/&quot; rel=&quot;noopener&quot;&gt;series of user preference media features client hints headers&lt;/a&gt;
that aims to solve this issue.&lt;/p&gt;
&lt;h3 id=&quot;background-on-client-hints&quot;&gt;Background on client hints &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#background-on-client-hints&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8942&quot; rel=&quot;noopener&quot;&gt;HTTP Client Hints&lt;/a&gt; defines an &lt;code&gt;Accept-CH&lt;/code&gt; response
header that servers can use to advertise their use of request headers for proactive content
negotiation, colloquially referred to as client hints. The
&lt;a href=&quot;https://wicg.github.io/user-preference-media-features-headers/&quot; rel=&quot;noopener&quot;&gt;User Preference Media Features Client Hints Headers&lt;/a&gt;
proposal defines a set of client hints aimed at conveying user preference media features. These
client hints are named after the corresponding user preference media feature that they report on.
For example, the currently preferred color scheme as per &lt;code&gt;prefers-color-scheme&lt;/code&gt; is reported via the
aptly named &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; client hint.&lt;/p&gt;
&lt;h3 id=&quot;background-on-critical-client-hints&quot;&gt;Background on critical client hints &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#background-on-critical-client-hints&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The client hints proposed in
&lt;a href=&quot;https://wicg.github.io/user-preference-media-features-headers/&quot; rel=&quot;noopener&quot;&gt;User Preference Media Features Client Hints Headers&lt;/a&gt;
will presumably most commonly be used as
&lt;a href=&quot;https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-02&quot; rel=&quot;noopener&quot;&gt;Critical Client Hints&lt;/a&gt;.
Critical Client Hints are Client Hints which meaningfully change the resulting resource. Such a
resource should be fetched consistently across page loads (including the &lt;em&gt;initial&lt;/em&gt; page load) to
avoid jarring user-visible switches.&lt;/p&gt;
&lt;h3 id=&quot;client-hint-syntax&quot;&gt;Client hint syntax &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#client-hint-syntax&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;User preference media features consist of a name (like &lt;code&gt;prefers-reduced-motion&lt;/code&gt;) and allowed values
(like &lt;code&gt;no-preference&lt;/code&gt; or &lt;code&gt;reduce&lt;/code&gt;. Each client hint header field is represented as
&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-header-structure-15&quot; rel=&quot;noopener&quot;&gt;Structured Headers for HTTP&lt;/a&gt;
object containing an
&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-header-structure-15#section-3.3&quot; rel=&quot;noopener&quot;&gt;item&lt;/a&gt; whose value
is a &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-header-structure-15#section-3.3.3&quot; rel=&quot;noopener&quot;&gt;string&lt;/a&gt;. For
example, to convey that the user prefers a dark theme and reduced motion, the client hints look like
in the example below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;GET / HTTP/2&lt;br /&gt;Host: example.com&lt;br /&gt;Sec-CH-Prefers-Color-Scheme: &lt;span class=&quot;token string&quot;&gt;&quot;dark&quot;&lt;/span&gt;&lt;br /&gt;Sec-CH-Prefers-Reduced-Motion: &lt;span class=&quot;token string&quot;&gt;&quot;reduce&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The CSS equivalent of the information conveyed in the above client hints is
&lt;code&gt;@media (prefers-color-scheme: dark) {}&lt;/code&gt; and &lt;code&gt;@media (prefers-reduced-motion: reduce) {}&lt;/code&gt;
respectively.&lt;/p&gt;
&lt;h2 id=&quot;complete-list-of-the-client-hints&quot;&gt;Complete list of the client hints &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#complete-list-of-the-client-hints&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While the
&lt;a href=&quot;https://wicg.github.io/user-preference-media-features-headers/&quot; rel=&quot;noopener&quot;&gt;User Preference Media Features Client Hints Headers&lt;/a&gt;
proposal defines a set of client hints, Chromium at the time of writing only supports
&lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt;. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The list of the client hints is modeled after the
&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences&quot; rel=&quot;noopener&quot;&gt;user preference media features&lt;/a&gt; in
&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#descdef-media-prefers-color-scheme&quot; rel=&quot;noopener&quot;&gt;Media Queries Level 5&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Client Hint&lt;/th&gt;
&lt;th&gt;Allowed Values&lt;/th&gt;
&lt;th&gt;Corresponding User Preference Media Feature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Prefers-Reduced-Motion&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-motion-no-preference&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;no-preference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-motion-reduce&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-motion&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Prefers-Reduced-Transparency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-transparency-no-preference&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;no-preference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-transparency-reduce&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-transparency&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-reduced-transparency&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Prefers-Contrast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-contrast-no-preference&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;no-preference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-contrast-less&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;less&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-contrast-more&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;more&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-contrast-custom&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;custom&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-contrast&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-contrast&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Forced-Colors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-forced-colors-active&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-forced-colors-none&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#forced-colors&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;forced-colors&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-color-scheme-light&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;light&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-color-scheme-dark&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;dark&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-color-scheme&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-color-scheme&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Sec-CH-Prefers-Reduced-Data&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-data-no-preference&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;no-preference&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#valdef-media-prefers-reduced-data-reduce&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-data&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-reduced-data&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;h2 id=&quot;browser-support&quot;&gt;Browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; client hint header is supported on Chromium 93.
Other vendors&#39; feedback, namely &lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2021-May/031856.html&quot; rel=&quot;noopener&quot;&gt;WebKit&#39;s&lt;/a&gt;
and &lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/526&quot; rel=&quot;noopener&quot;&gt;Mozilla&#39;s&lt;/a&gt;, is pending.&lt;/p&gt;
&lt;h2 id=&quot;demo-of-sec-ch-prefers-color-scheme&quot;&gt;Demo of &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#demo-of-sec-ch-prefers-color-scheme&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Try the &lt;a href=&quot;https://sec-ch-prefers-color-scheme.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; in Chromium 93 and notice how
the inlined CSS changes according to the user&#39;s preferred color scheme.&lt;/p&gt;
&lt;img alt=&quot;Sec-CH-Prefers-Color-Scheme: dark&quot; decoding=&quot;async&quot; height=&quot;541&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/pKAKyrN18CjhAYUNpJyk.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;img alt=&quot;Sec-CH-Prefers-Color-Scheme: light&quot; decoding=&quot;async&quot; height=&quot;541&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/6Xujcgyveo0QY0E3LQOF.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How it works &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#how-it-works&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The client makes an initial request to the server.&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;GET / HTTP/2&lt;br /&gt;Host: example.com&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;The server responds, telling the client via &lt;code&gt;Accept-CH&lt;/code&gt; that it accepts the
&lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; and the &lt;code&gt;Sec-CH-Prefers-Contrast&lt;/code&gt; Client Hints, out of which as per
&lt;code&gt;Critical-CH&lt;/code&gt; it considers &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; a Critical Client Hint that it also
varies the response on as conveyed by &lt;code&gt;Vary&lt;/code&gt;.&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;HTTP/2 &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt; OK&lt;br /&gt;Content-Type: text/html&lt;br /&gt;Accept-CH: Sec-CH-Prefers-Color-Scheme, Sec-CH-Prefers-Contrast&lt;br /&gt;Vary: Sec-CH-Prefers-Color-Scheme&lt;br /&gt;Critical-CH: Sec-CH-Prefers-Color-Scheme&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;The client then retries the request, telling the server via &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; that it
has a user preference for dark-schemed content.&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;GET / HTTP/2&lt;br /&gt;Host: example.com&lt;br /&gt;Sec-CH-Prefers-Color-Scheme: &lt;span class=&quot;token string&quot;&gt;&quot;dark&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;The server can then tailor the response to the client&#39;s preferences accordingly and, for example,
inline the CSS responsible for the dark theme into the response body.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;node.js-example&quot;&gt;Node.js example &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#node.js-example&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Node.js example below, written for the popular Express.js framework, shows how
dealing with the &lt;code&gt;Sec-CH-Prefers-Color-Scheme&lt;/code&gt; client hint header could look like in practice.
This code is what actually powers the &lt;a href=&quot;https://web.dev/user-preference-media-features-headers/#demo-of-sec-ch-prefers-color-scheme&quot;&gt;demo&lt;/a&gt; above.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Tell the client the server accepts the `Sec-CH-Prefers-Color-Scheme` client hint…&lt;/span&gt;&lt;br /&gt;  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Accept-CH&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sec-CH-Prefers-Color-Scheme&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// …and that the server&#39;s response will vary based on its value…&lt;/span&gt;&lt;br /&gt;  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Vary&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sec-CH-Prefers-Color-Scheme&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// …and that the server considers this client hint a _critical_ client hint.&lt;/span&gt;&lt;br /&gt;  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Critical-CH&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sec-CH-Prefers-Color-Scheme&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Read the user&#39;s preferred color scheme from the headers…&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; prefersColorScheme &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;sec-ch-prefers-color-scheme&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// …and send the adequate HTML response with the right CSS inlined.&lt;/span&gt;&lt;br /&gt;  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHTML&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prefersColorScheme&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;privacy-and-security-considerations&quot;&gt;Privacy and security considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#privacy-and-security-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented User Preference Media Features Client Hints Headers
using the core principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform
Features&lt;/a&gt;, including user control, transparency, and ergonomics.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8942#section-4&quot; rel=&quot;noopener&quot;&gt;Security Considerations&lt;/a&gt; of HTTP
Client Hints and the
&lt;a href=&quot;https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-02#section-5&quot; rel=&quot;noopener&quot;&gt;Security Considerations&lt;/a&gt;
of Client Hint Reliability likewise apply to this proposal.&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#references&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/user-preference-media-features-headers/&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/user-preference-media-features-headers#readme&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5642300464037888&quot; rel=&quot;noopener&quot;&gt;Chrome Status entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/1207897&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2021-May/031856.html&quot; rel=&quot;noopener&quot;&gt;WebKit thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/526&quot; rel=&quot;noopener&quot;&gt;Mozilla Standards Position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8942&quot; rel=&quot;noopener&quot;&gt;Client Hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-02&quot; rel=&quot;noopener&quot;&gt;Client Hint Reliability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#descdef-media-prefers-color-scheme&quot; rel=&quot;noopener&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-header-structure-19&quot; rel=&quot;noopener&quot;&gt;Structured Headers for HTTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/user-preference-media-features-headers/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many thanks for valuable feedback and advice from
&lt;a href=&quot;https://github.com/yoavweiss&quot; rel=&quot;noopener&quot;&gt;Yoav Weiss&lt;/a&gt;.
Hero image by &lt;a href=&quot;https://commons.wikimedia.org/wiki/User:Tdadamemd&quot; rel=&quot;noopener&quot;&gt;Tdadamemd&lt;/a&gt; on
&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Sun%26Moon_apparent_sizes_(min-max_halved).jpg&quot; rel=&quot;noopener&quot;&gt;Wikimedia Commons&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author><author>
      <name>François Beaufort</name>
    </author>
  </entry>
  
  <entry>
    <title>Use advanced typography with local fonts</title>
    <link href="https://web.dev/local-fonts/"/>
    <updated>2020-08-24T00:00:00Z</updated>
    <id>https://web.dev/local-fonts/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Local Font Access API is part of the
&lt;a href=&quot;https://developers.google.com/web/updates/capabilities&quot; rel=&quot;noopener&quot;&gt;capabilities project&lt;/a&gt; and is currently in
development. This post will be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;web-safe-fonts&quot;&gt;Web safe fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#web-safe-fonts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have been doing web development long enough, you may remember the so-called
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals#Web_safe_fonts&quot; rel=&quot;noopener&quot;&gt;web safe fonts&lt;/a&gt;.
These fonts are known to be available on nearly all instances of the most used operating systems
(namely Windows, macOS, the most common Linux distributions, Android, and iOS). In the early 2000s,
Microsoft even spearheaded an
&lt;a href=&quot;https://web.archive.org/web/20020124085641/http://www.microsoft.com/typography/fontpack/default.htm&quot; rel=&quot;noopener&quot;&gt;initiative&lt;/a&gt;
called &lt;em&gt;TrueType core fonts for the Web&lt;/em&gt; that provided these fonts for free download with the
objective that &lt;em&gt;&amp;quot;whenever you visit a Web site that specifies them, you&#39;ll see pages exactly as the
site designer intended&amp;quot;&lt;/em&gt;. Yes, this included sites set in
&lt;a href=&quot;https://docs.microsoft.com/en-us/typography/font-list/comic-sans-ms&quot; rel=&quot;noopener&quot;&gt;Comic Sans MS&lt;/a&gt;. Here is a
classic web safe font stack (with the ultimate fallback of whatever
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#%3Cgeneric-name%3E:~:text=sans%2Dserif,-Glyphs&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;sans-serif&lt;/code&gt;&lt;/a&gt;
font) might look like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Helvetica&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Arial&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sans-serif&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;web-fonts&quot;&gt;Web fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#web-fonts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The days where web safe fonts really mattered are long gone. Today, we have
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Web_fonts&quot; rel=&quot;noopener&quot;&gt;web fonts&lt;/a&gt;, some of
which are even &lt;a href=&quot;https://web.dev/variable-fonts/&quot;&gt;variable fonts&lt;/a&gt; that we can tweak further by changing the values
for the various exposed axes. You can use web fonts by declaring an
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; block at the start of
the CSS, which specifies the font file(s) to download:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;flamboyant.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;After this, you can then use the custom web font by specifying the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-family&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt;, as normal:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;local-fonts-as-fingerprint-vector&quot;&gt;Local fonts as fingerprint vector &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#local-fonts-as-fingerprint-vector&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most web fonts come from, well, the web. An interesting fact, though, is that the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/a&gt; property in the
&lt;code&gt;@font-face&lt;/code&gt; declaration, apart from the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src#Values:~:text=%3Curl%3E%20%5B%20format(%20%3Cstring%3E%23%20)%20%5D%3F,-Specifies&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;url()&lt;/code&gt;&lt;/a&gt;
function, also accepts a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src#format():~:text=downloaded.-,%3Cfont%2Dface%2Dname%3E&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;local()&lt;/code&gt;&lt;/a&gt;
function. This allows custom fonts to be loaded (surprise!) locally. If the user happens to have
&lt;em&gt;FlamboyantSansSerif&lt;/em&gt; installed on their operating system, the local copy will be used rather than
it being downloaded:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;flamboyant.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This approach provides a nice fallback mechanism that potentially saves bandwidth. On the Internet,
unfortunately, we cannot have nice things. The problem with the &lt;code&gt;local()&lt;/code&gt; function is that it can be
abused for browser fingerprinting. Turns out, the list of fonts a user has installed can be pretty
identifying. A lot of companies have their own corporate fonts that are installed on employees&#39;
laptops. For example, Google has a corporate font called &lt;em&gt;Google Sans&lt;/em&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The macOS Font Book app showing a preview of the Google Sans font.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;420&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google Sans font installed on a Google employee&#39;s laptop.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;An attacker can try to determine what company someone works for by testing for the existence of a
large number of known corporate fonts like &lt;em&gt;Google Sans&lt;/em&gt;. The attacker would attempt rendering text
set in these fonts on a canvas and measure the glyphs. If the glyphs match the known shape of the
corporate font, the attacker has a hit. If the glyphs do not match, the attacker knows that a
default replacement font was used since the corporate font was not installed. For full details on
this and other browser fingerprinting attacks, read the
&lt;a href=&quot;http://www-sop.inria.fr/members/Nataliia.Bielova/papers/Lape-etal-20-TWEB.pdf&quot; rel=&quot;noopener&quot;&gt;survey paper&lt;/a&gt; by
Laperdix &lt;em&gt;et al.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Company fonts apart, even just the list of installed fonts can be identifying. The situation with
this attack vector has become so bad that recently the WebKit team
&lt;a href=&quot;https://webkit.org/tracking-prevention/#table-of-contents-toggle:~:text=Changed%20font%20availability%20to%20web%20content,but%20not%20locally%20user%2Dinstalled%20fonts&quot; rel=&quot;noopener&quot;&gt;decided&lt;/a&gt;
to &lt;em&gt;&amp;quot;only include [in the list available fonts] web fonts and fonts that come with the operating
system, but not locally user-installed fonts&amp;quot;&lt;/em&gt;. (And here I am, with an article on granting access
to local fonts.)&lt;/p&gt;
&lt;h2 id=&quot;the-local-font-access-api&quot;&gt;The Local Font Access API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#the-local-font-access-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The beginning of this article may have put you in a negative mood. Can we really not have nice
things? Fret not. We think we can, and maybe
&lt;a href=&quot;http://hyperboleandahalf.blogspot.com/2013/05/depression-part-two.html#Blog1:~:text=like-,hopeless&quot; rel=&quot;noopener&quot;&gt;everything is not hopeless&lt;/a&gt;.
But first, let me answer a question that you might be asking yourself.&lt;/p&gt;
&lt;h3 id=&quot;why-do-we-need-the-local-font-access-api-when-there-are-web-fonts&quot;&gt;Why do we need the Local Font Access API when there are web fonts? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#why-do-we-need-the-local-font-access-api-when-there-are-web-fonts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Professional-quality design and graphics tools have historically been difficult to deliver on the
web. One stumbling block has been an inability to access and use the full variety of professionally
constructed and hinted fonts that designers have locally installed. Web fonts enable some publishing
use-cases, but fail to enable programmatic access to the vector glyph shapes and font tables used by
rasterizers to render the glyph outlines. There is likewise no way to access a web font&#39;s binary
data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Design tools need access to font bytes to do their own OpenType layout implementation and allow
design tools to hook in at lower levels, for actions such as performing vector filters or
transforms on the glyph shapes.&lt;/li&gt;
&lt;li&gt;Developers may have legacy font stacks for their applications that they are bringing to the web.
To use these stacks, they usually require direct access to font data, something web fonts do not
provide.&lt;/li&gt;
&lt;li&gt;Some fonts may not be licensed for delivery over the web. For example, Linotype has a license for
some fonts that only includes &lt;a href=&quot;https://www.linotype.com/25/font-licensing.html&quot; rel=&quot;noopener&quot;&gt;desktop use&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Local Font Access API is an attempt at solving these challenges. It consists of two parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;font enumeration API&lt;/strong&gt;, which allows users to grant access to the full set of available system
fonts.&lt;/li&gt;
&lt;li&gt;From each enumeration result, the ability to request low-level (byte-oriented) &lt;strong&gt;SFNT container
access&lt;/strong&gt; that includes the full font data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#status&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://wicg.github.io/local-font-access/&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. &lt;strong&gt;Gather feedback &amp;amp; iterate on design&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/local-fonts/#feedback&quot;&gt;&lt;strong&gt;In progress&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;how-to-use-the-local-font-access-api&quot;&gt;How to use the Local Font Access API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#how-to-use-the-local-font-access-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To experiment with the Local Font Access API locally, enable the &lt;code&gt;#font-access&lt;/code&gt; flag in
&lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To check if the Local Font Access API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fonts&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The Local Font Access API is supported&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;asking-for-permission&quot;&gt;Asking for permission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#asking-for-permission&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Access to a user&#39;s local fonts is gated behind the &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission, which you can request
with
&lt;a href=&quot;https://w3c.github.io/permissions/#requesting-more-permission&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;navigator.permissions.request()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Ask for permission to use the API&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; status &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;local-fonts&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;status&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Permission to access local fonts not granted.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// A `TypeError` indicates the &#39;local-fonts&#39;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// permission is not yet implemented, so&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// only `throw` if this is _not_ the problem.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;TypeError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;enumerating-local-fonts&quot;&gt;Enumerating local fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#enumerating-local-fonts&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once the permission has been granted, you can then, from the &lt;code&gt;FontManager&lt;/code&gt; interface that is exposed
on &lt;code&gt;navigator.fonts&lt;/code&gt;, call &lt;code&gt;query()&lt;/code&gt; to ask the browser for the locally installed fonts, which it
will display in a picker for the user to select all or a subset from to be shared with the page.
This results in an array that you can loop over. Each font is represented as a &lt;code&gt;FontMetadata&lt;/code&gt; object
with the properties &lt;code&gt;family&lt;/code&gt; (for example, &lt;code&gt;&amp;quot;Comic Sans MS&amp;quot;&lt;/code&gt;), &lt;code&gt;fullName&lt;/code&gt; (for example,
&lt;code&gt;&amp;quot;Comic Sans MS&amp;quot;&lt;/code&gt;), and &lt;code&gt;postscriptName&lt;/code&gt; (for example, &lt;code&gt;&amp;quot;ComicSansMS&amp;quot;&lt;/code&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Query for all available fonts and log metadata.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pickedFonts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fonts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; metadata &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; pickedFonts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;postscriptName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fullName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;family&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;accessing-sfnt-data&quot;&gt;Accessing SFNT data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#accessing-sfnt-data&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Full &lt;a href=&quot;https://en.wikipedia.org/wiki/SFNT&quot; rel=&quot;noopener&quot;&gt;SFNT&lt;/a&gt; access is available via the &lt;code&gt;blob()&lt;/code&gt; method of the
&lt;code&gt;FontMetadata&lt;/code&gt; object. SFNT is a font file format which can contain other fonts, such as PostScript,
TrueType, OpenType, Web Open Font Format (WOFF) fonts and others.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pickedFonts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fonts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; metadata &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; pickedFonts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// We&#39;re only interested in a particular font.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;family &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Comic Sans MS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// `blob()` returns a Blob containing valid and complete&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// SFNT-wrapped font data.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sfnt &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sfntVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Slice out only the bytes we need: the first 4 bytes are the SFNT&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// version info.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Spec: https://docs.microsoft.com/en-us/typography/opentype/spec/otff#organization-of-an-opentype-font&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; sfnt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;UNKNOWN&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sfntVersion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;\x00\x01\x00\x00&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;typ1&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;OTTO&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Outline format:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outlineFormat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can see the Local Font Access API in action in the
&lt;a href=&quot;https://local-font-access.glitch.me/demo/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; below. Be sure to also check out the
&lt;a href=&quot;https://glitch.com/edit/#!/local-font-access?path=README.md%3A1%3A0&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt;. The demo
showcases a custom element called &lt;a href=&quot;https://github.com/tomayac/font-select&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;font-select&amp;gt;&lt;/code&gt;&lt;/a&gt; that
implements a local font picker.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://glitch.com/embed/#!/embed/local-font-access?path=index.html&amp;previewSize=100&quot; title=&quot;local-font-access on Glitch&quot; allow=&quot;local-fonts&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;privacy-considerations&quot;&gt;Privacy considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#privacy-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission appears to provide a highly fingerprintable surface. However,
browsers are free to return anything they like. For example, anonymity-focused browsers may choose
to only provide a set of default fonts built into the browser. Similarly, browsers are not required
to provide table data exactly as it appears on disk.&lt;/p&gt;
&lt;p&gt;Wherever possible, the Local Font Access API is designed to only expose exactly the information
needed to enable the mentioned use cases. System APIs may produce a list of installed fonts not in a
random or a sorted order, but in the order of font installation. Returning exactly the list of
installed fonts given by such a system API can expose additional data that may be used for
fingerprinting, and use cases we want to enable are not assisted by retaining this ordering. As a
result, this API requires that the returned data be sorted before being returned.&lt;/p&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the Local Font Access API using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Access to a user&#39;s fonts is fully under their control and will not be allowed unless the
&lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission, as listed in the
&lt;a href=&quot;https://w3c.github.io/permissions/#permission-registry&quot; rel=&quot;noopener&quot;&gt;permission registry&lt;/a&gt;, is granted.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Whether a site has been granted access to the user&#39;s local fonts will be visible in the
&lt;a href=&quot;https://support.google.com/chrome/answer/114662?hl=en&amp;amp;co=GENIE.Platform=Desktop&quot; rel=&quot;noopener&quot;&gt;site information sheet&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission will be persisted between page reloads. It can be revoked via the
&lt;em&gt;site information&lt;/em&gt; sheet.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with the Local Font Access API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/local-font-access/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;Blink&amp;gt;Storage&amp;gt;FontAccess&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt; box.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Local Font Access API? Your public support helps the Chrome team to
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23LocalFontAccess&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#LocalFontAccess&lt;/code&gt;&lt;/a&gt; and let
us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful-links&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#helpful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/local-font-access/&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=535764&quot; rel=&quot;noopener&quot;&gt;Chromium bug for font enumeration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/982054&quot; rel=&quot;noopener&quot;&gt;Chromium bug for font table access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/6234451761692672&quot; rel=&quot;noopener&quot;&gt;ChromeStatus entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/399&quot; rel=&quot;noopener&quot;&gt;TAG review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/401&quot; rel=&quot;noopener&quot;&gt;Mozilla standards position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.chrome.com/origintrials/#/view_trial/-7289075996899147775&quot; rel=&quot;noopener&quot;&gt;Origin Trial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Local Font Access API spec was edited by
&lt;a href=&quot;https://www.linkedin.com/in/emilaeklund/&quot; rel=&quot;noopener&quot;&gt;Emil A. Eklund&lt;/a&gt;,
&lt;a href=&quot;https://infrequently.org/&quot; rel=&quot;noopener&quot;&gt;Alex Russell&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/joshuaseanbell/&quot; rel=&quot;noopener&quot;&gt;Joshua Bell&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/oyiptong/&quot; rel=&quot;noopener&quot;&gt;Olivier Yiptong&lt;/a&gt;. This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;,
&lt;a href=&quot;https://fi.linkedin.com/in/dominik-r%C3%B6ttsches-7323684&quot; rel=&quot;noopener&quot;&gt;Dominik Röttsches&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/oyiptong/&quot; rel=&quot;noopener&quot;&gt;Olivier Yiptong&lt;/a&gt;. Hero image by
&lt;a href=&quot;https://unsplash.com/@brett_jordan&quot; rel=&quot;noopener&quot;&gt;Brett Jordan&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/qrjvkj-oS-M&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Unblocking clipboard access</title>
    <link href="https://web.dev/async-clipboard/"/>
    <updated>2020-07-31T00:00:00Z</updated>
    <id>https://web.dev/async-clipboard/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Over the past few years, browsers have used
&lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;document.execCommand()&lt;/code&gt;&lt;/a&gt;
for clipboard interactions. Though widely supported, this method of cutting and
pasting came at a cost: clipboard access was synchronous, and could only read
and write to the DOM.&lt;/p&gt;
&lt;p&gt;That&#39;s fine for small bits of text, but there are many cases where blocking the
page for clipboard transfer is a poor experience. Time consuming sanitization or
image decoding might be needed before content can be safely pasted. The browser
may need to load or inline linked resources from a pasted document. That would
block the page while waiting on the disk or network. Imagine adding permissions
into the mix, requiring that the browser block the page while requesting
clipboard access. At the same time, the permissions put in place around
&lt;code&gt;document.execCommand()&lt;/code&gt; for clipboard interaction are loosely defined and vary
between browsers.&lt;/p&gt;
&lt;p&gt;The
&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot; rel=&quot;noopener&quot;&gt;Async Clipboard API&lt;/a&gt;
addresses these issues, providing a well-defined permissions model that doesn&#39;t
block the page. Safari recently announced  &lt;a href=&quot;https://webkit.org/blog/10855/&quot; rel=&quot;noopener&quot;&gt;support for it in version
13.1&lt;/a&gt;. With that, major browsers have a basic
level of support in place. As of this writing, Firefox only supports text; and
image support is limited to PNGs in some browsers. If you&#39;re interested in using
the API,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Clipboard#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;consult a browser support table&lt;/a&gt;
before proceeding.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Async Clipboard API is limited to handling text and images. Chrome 84
introduces an experimental feature that allows the clipboard to handle any
arbitrary data type.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;copy:-writing-data-to-the-clipboard&quot;&gt;Copy: writing data to the clipboard &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#copy:-writing-data-to-the-clipboard&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;writetext()&quot;&gt;writeText() &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#writetext()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To copy text to the clipboard call &lt;code&gt;writeText()&lt;/code&gt;. Since this API is
asynchronous, the &lt;code&gt;writeText()&lt;/code&gt; function returns a Promise that resolves or
rejects depending on whether the passed text is copied successfully:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;copyPageUrl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Page URL copied to clipboard&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Failed to copy: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;write()&quot;&gt;write() &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#write()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Actually, &lt;code&gt;writeText()&lt;/code&gt; is just a convenience method for the generic &lt;code&gt;write()&lt;/code&gt;
method, which also lets you copy images to the clipboard. Like &lt;code&gt;writeText()&lt;/code&gt;, it
is asynchronous and returns a Promise.&lt;/p&gt;
&lt;p&gt;To write an image to the clipboard, you need the image as a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/blob&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;blob&lt;/code&gt;&lt;/a&gt;. One way to do
this is by requesting the image from a server using &lt;code&gt;fetch()&lt;/code&gt;, then calling
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Body/blob&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;blob()&lt;/code&gt;&lt;/a&gt; on the
response.&lt;/p&gt;
&lt;p&gt;Requesting an image from the server may not be desirable or possible for a
variety of reasons. Fortunately, you can also draw the image to a canvas and
call the canvas&#39;
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;toBlob()&lt;/code&gt;&lt;/a&gt;
method.&lt;/p&gt;
&lt;p&gt;Next, pass an array of &lt;code&gt;ClipboardItem&lt;/code&gt; objects as a parameter to the &lt;code&gt;write()&lt;/code&gt;
method. Currently you can only pass one image at a time, but we hope to add
support for multiple images in the future. &lt;code&gt;ClipboardItem&lt;/code&gt; takes an object with
the MIME type of the image as the key and the blob as the value. For Blob
objects obtained from &lt;code&gt;fetch()&lt;/code&gt; or &lt;code&gt;canvas.toBlob()&lt;/code&gt;, the &lt;code&gt;blob.type&lt;/code&gt; property
automatically contains the correct MIME type for an image.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; imgURL &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/images/generic/file.png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;imgURL&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClipboardItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; blob&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Image copied.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Safari (WebKit) treats user activation differently than Chromium (Blink)
(see &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=222262&quot; rel=&quot;noopener&quot;&gt;WebKit bug #222262&lt;/a&gt;).
For Safari, run all asynchronous operations in a promise
whose result you assign to the &lt;code&gt;ClipboardItem&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClipboardItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;foo/bar&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Prepare `blobValue` of type `foo/bar`&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;blobValue&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;foo/bar&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;the-copy-event&quot;&gt;The copy event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#the-copy-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the case where a user initiates a clipboard copy, non-textual data is
provided as a Blob for you. The
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/copy_event&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;copy&lt;/code&gt; event&lt;/a&gt;
includes a &lt;code&gt;clipboardData&lt;/code&gt; property with the items already in the right format,
eliminating the need to manually create a Blob. Call &lt;code&gt;preventDefault()&lt;/code&gt; to
prevent the default behavior in favor of your own logic, then copy contents to
the clipboard. What&#39;s not covered in this example is how to fall back to earlier
APIs when the Clipboard API isn&#39;t supported. I&#39;ll cover that under
&lt;a href=&quot;https://web.dev/async-clipboard/#feature-detection&quot;&gt;Feature detection&lt;/a&gt;, later in this article.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;copy&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; clipboardItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboardData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;image/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        clipboardItems&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClipboardItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; item&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;clipboardItems&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Image copied.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;paste:-reading-data-from-clipboard&quot;&gt;Paste: reading data from clipboard &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#paste:-reading-data-from-clipboard&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;readtext()&quot;&gt;readText() &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#readtext()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To read text from the clipboard, call &lt;code&gt;navigator.clipboard.readText()&lt;/code&gt; and wait
for the returned Promise to resolve:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getClipboardContents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Pasted content: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Failed to read clipboard contents: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;read()&quot;&gt;read() &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#read()&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;navigator.clipboard.read()&lt;/code&gt; method is also asynchronous and returns a
Promise. To read an image from the clipboard, obtain a list of
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ClipboardItem&lt;/code&gt;&lt;/a&gt;
objects, then iterate over them.&lt;/p&gt;
&lt;p&gt;Each &lt;code&gt;ClipboardItem&lt;/code&gt; can hold its contents in different types, so you&#39;ll need to
iterate over the list of types, again using a &lt;code&gt;for...of&lt;/code&gt; loop. For each type,
call the &lt;code&gt;getType()&lt;/code&gt; method with the current type as an argument to obtain the
corresponding Blob. As before, this code is not tied to images, and will
work with other future file types.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getClipboardContents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; clipboardItems &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; clipboardItem &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; clipboardItems&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; type &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; clipboardItem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;types&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; clipboardItem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;working-with-pasted-files&quot;&gt;Working with pasted files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#working-with-pasted-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is useful for users to be able to use clipboard keyboard shortcuts such as
&lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;c&lt;/kbd&gt; and &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt;.
Chromium exposes &lt;em&gt;read-only&lt;/em&gt; files on the clipboard as outlined below.
This triggers when the user hits the operating system&#39;s default paste shortcut
or when the user clicks &lt;strong&gt;Edit&lt;/strong&gt; then &lt;strong&gt;Paste&lt;/strong&gt; in the browser&#39;s menu bar.
No further plumbing code is needed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;paste&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboardData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboardData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Read the file&#39;s contents, assuming it&#39;s a text file.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// There is no way to write back to it.&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-paste-event&quot;&gt;The paste event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#the-paste-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As noted before, there are plans to introduce events to work with the Clipboard API,
but for now you can use the existing &lt;code&gt;paste&lt;/code&gt; event. It works nicely with the new
asynchronous methods for reading clipboard text. As with the &lt;code&gt;copy&lt;/code&gt; event, don&#39;t
forget to call &lt;code&gt;preventDefault()&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;paste&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Pasted text: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;As with the &lt;code&gt;copy&lt;/code&gt; event, falling back to earlier APIs when the Clipboard API
isn&#39;t supported will be covered under &lt;a href=&quot;https://web.dev/async-clipboard/#feature-detection&quot;&gt;Feature detection&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;handling-multiple-file-types&quot;&gt;Handling multiple file types &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#handling-multiple-file-types&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most implementations put multiple data formats on the clipboard for a single cut
or copy operation. There are two reasons for this: as an app developer, you have
no way of knowing the capabilities of the app that a user wants to copy text or images to,
and many applications support pasting structured data as plain text. This is
presented to users with an &lt;strong&gt;Edit&lt;/strong&gt; menu item with a name such as &lt;strong&gt;Paste and
match style&lt;/strong&gt; or &lt;strong&gt;Paste without formatting&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The following example shows how to do this. This example uses &lt;code&gt;fetch()&lt;/code&gt; to obtain
image data, but it could also come from a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;
or the &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;kitten.png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Cute sleeping kitten&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; item &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClipboardItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;image/png&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; image&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Clipboard access has always presented a security concern for browsers. Without
proper permissions, a page could silently copy all manner of malicious content
to a user&#39;s clipboard that would produce catastrophic results when pasted.
Imagine a web page that silently copies &lt;code&gt;rm -rf /&lt;/code&gt; or a
&lt;a href=&quot;http://www.aerasec.de/security/advisories/decompression-bomb-vulnerability.html&quot; rel=&quot;noopener&quot;&gt;decompression bomb image&lt;/a&gt;
to your clipboard.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Browser prompt asking the user for the clipboard permission.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;338&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Dt4QpuEuik9ja970Zos1.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The permission prompt for the Clipboard API.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Giving web pages unfettered read access to the clipboard is even more
troublesome. Users routinely copy sensitive information like passwords and
personal details to the clipboard, which could then be read by any page without
the user&#39;s knowledge.&lt;/p&gt;
&lt;p&gt;As with many new APIs, the Clipboard API is only supported for pages served over
HTTPS. To help prevent abuse, clipboard access is only allowed when a page is
the active tab. Pages in active tabs can write to the clipboard without
requesting permission, but reading from the clipboard always requires
permission.&lt;/p&gt;
&lt;p&gt;Permissions for copy and paste have been added to the
&lt;a href=&quot;https://developers.google.com/web/updates/2015/04/permissions-api-for-the-web&quot; rel=&quot;noopener&quot;&gt;Permissions API&lt;/a&gt;.
The &lt;code&gt;clipboard-write&lt;/code&gt; permission is granted automatically to pages when they are
the active tab. The &lt;code&gt;clipboard-read&lt;/code&gt; permission must be requested, which you can
do by trying to read data from the clipboard. The code below shows the latter:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; queryOpts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;clipboard-read&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; allowWithoutGesture&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; permissionStatus &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;queryOpts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Will be &#39;granted&#39;, &#39;denied&#39; or &#39;prompt&#39;:&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;permissionStatus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Listen for changes to the permission state&lt;/span&gt;&lt;br /&gt;permissionStatus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onchange&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;permissionStatus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can also control whether a user gesture is required to invoke cutting or
pasting using the &lt;code&gt;allowWithoutGesture&lt;/code&gt; option. The default for this value
varies by browser, so you should always include it.&lt;/p&gt;
&lt;p&gt;Here&#39;s where the asynchronous nature of the Clipboard API really comes in handy:
attempting to read or write clipboard data automatically prompts the user for
permission if it hasn&#39;t already been granted. Since the API is promise-based,
this is completely transparent, and a user denying clipboard permission causes
the promise to reject so the page can respond appropriately.&lt;/p&gt;
&lt;p&gt;Because Chrome only allows clipboard access when a page is the active tab,
you&#39;ll find that some of the examples here don&#39;t run if pasted directly into
DevTools, since DevTools itself is the active tab. There&#39;s a trick: defer
clipboard access using &lt;code&gt;setTimeout()&lt;/code&gt;, then quickly click inside the page to
focus it before the functions are called:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;permissions-policy-integration&quot;&gt;Permissions policy integration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#permissions-policy-integration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To use the API in iframes, you need to enable it with
&lt;a href=&quot;https://w3c.github.io/webappsec-permissions-policy/&quot; rel=&quot;noopener&quot;&gt;Permissions Policy&lt;/a&gt;,
which defines a mechanism that allows for selectively enabling and
disabling various browser features and APIs. Concretely, you need to pass either
or both of &lt;code&gt;clipboard-read&lt;/code&gt; or &lt;code&gt;clipboard-write&lt;/code&gt;, depending on the needs of your app.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token attr-name&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;clipboard-read; clipboard-write&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To use the Async Clipboard API while supporting all browsers, test for
&lt;code&gt;navigator.clipboard&lt;/code&gt; and fall back to earlier methods. For example, here&#39;s how
you might implement pasting to include other browsers.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;paste&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readText&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboardData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Got pasted text: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;That&#39;s not the whole story. Before the Async Clipboard API, there were a mix of
different copy and paste implementations across web browsers. In most browsers,
the browser&#39;s own copy and paste can be triggered using
&lt;code&gt;document.execCommand(&#39;copy&#39;)&lt;/code&gt; and &lt;code&gt;document.execCommand(&#39;paste&#39;)&lt;/code&gt;. If the text
to be copied is a string not present in the DOM, it must be injected into the
DOM and selected:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;button&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;execCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;copy&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;unsuccessful&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Failed to copy text.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In Internet Explorer, you can also access the clipboard through
&lt;code&gt;window.clipboardData&lt;/code&gt;. If accessed within a user gesture such as a click
event—part of asking permission responsibly—no permissions prompt is shown.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;Demos &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#demos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can play with the Async Clipboard API in the demos below or
&lt;a href=&quot;https://async-clipboard-api.glitch.me/&quot; rel=&quot;noopener&quot;&gt;directly on Glitch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first example demonstrates moving text on and off the clipboard.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://async-clipboard-text.glitch.me/&quot; title=&quot;async-clipboard-text on Glitch&quot; allow=&quot;clipboard-read; clipboard-write&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;To try the API with images use this demo. Recall that only PNGs are supported
and only in
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API#browser_compatibility&quot; rel=&quot;noopener&quot;&gt;a few browsers&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://async-clipboard-api.glitch.me/&quot; title=&quot;async-clipboard-api on Glitch&quot; allow=&quot;clipboard-read; clipboard-write&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#next-steps&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome is actively working on expanding the Asynchronous Clipboard API with
simplified events aligned with the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API&quot; rel=&quot;noopener&quot;&gt;Drag and Drop API&lt;/a&gt;.
Because of potential risks Chrome is
treading carefully. To stay up to date on Chrome&#39;s progress, watch this article
and our &lt;a href=&quot;https://web.dev/blog/&quot;&gt;blog&lt;/a&gt; for updates.&lt;/p&gt;
&lt;p&gt;For now, support for the Clipboard API is available in
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Clipboard#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;a number of browsers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy copying and pasting!&lt;/p&gt;
&lt;h2 id=&quot;related-links&quot;&gt;Related links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#related-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API&quot; rel=&quot;noopener&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/async-clipboard/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Asynchronous Clipboard API was implemented by &lt;a href=&quot;https://www.linkedin.com/in/darwinhuang/&quot; rel=&quot;noopener&quot;&gt;Darwin
Huang&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/garykac/&quot; rel=&quot;noopener&quot;&gt;Gary
Kačmarčík&lt;/a&gt;. Darwin also provided the demo.
Thanks to &lt;a href=&quot;https://github.com/kyarik&quot; rel=&quot;noopener&quot;&gt;Kyarik&lt;/a&gt; and again Gary Kačmarčík for
reviewing parts of this article.&lt;/p&gt;
&lt;p&gt;Hero image by &lt;a href=&quot;https://unsplash.com/@markuswinkler&quot; rel=&quot;noopener&quot;&gt;Markus Winkler&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/7iSEHWsxPLw&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Jason Miller</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Let installed web applications be file handlers</title>
    <link href="https://web.dev/file-handling/"/>
    <updated>2020-10-22T00:00:00Z</updated>
    <id>https://web.dev/file-handling/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The File Handling API is part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is
currently in development. This post will be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Now that web apps are &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;capable of reading and writing files&lt;/a&gt;, the next logical
step is to let developers declare these very web apps as file handlers for the files their apps can
create and process. The File Handling API allows you to do exactly this.
After registering a text editor app as a file handler and after installing it, you can right-click a &lt;code&gt;.txt&lt;/code&gt; file on macOS
and select &amp;quot;Get Info&amp;quot; to then instruct the OS that it should always open &lt;code&gt;.txt&lt;/code&gt; files with this app as default.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the File Handling API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examples of sites that may use this API include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Office applications like text editors, spreadsheet apps, and slideshow creators.&lt;/li&gt;
&lt;li&gt;Graphics editors and drawing tools.&lt;/li&gt;
&lt;li&gt;Video game level editor tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/file-handling/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/file-handling/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. &lt;strong&gt;Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-6682215947110973439&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use the File Handling API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with the File Handling API locally, without an origin trial token, enable the
&lt;code&gt;#file-handling-api&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chromium 92, the File Handling API will be available as an origin trial in
Chromium. The origin trial is expected to end in Chromium 94 (October 13, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-6682215947110973439&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;progressive-enhancement&quot;&gt;Progressive enhancement &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#progressive-enhancement&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The File Handling API per se cannot be polyfilled. The functionality of opening files with a web
app, however, can be achieved through two other means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Web Share Target API&lt;/a&gt; lets developers specify their app as a share target
so files can be opened from the operating system&#39;s share sheet.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt; can be integrated with file drag and drop, so
developers can handle dropped files in the already opened app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To check if the File Handling API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;launchQueue&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The File Handling API is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;File Handling is currently limited to desktop operating systems. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-declarative-part-of-the-file-handling-api&quot;&gt;The declarative part of the File Handling API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#the-declarative-part-of-the-file-handling-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a first step, web apps need to declaratively describe in their &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;web app manifest&lt;/a&gt;
what kind of files they can handle. The File Handling API extends web app manifest with a new
property called &lt;code&gt;&amp;quot;file_handlers&amp;quot;&lt;/code&gt; that accepts an array of, well, file handlers. A file handler is
an object with two properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;code&gt;&amp;quot;action&amp;quot;&lt;/code&gt; property that points to a URL within the scope of the app as its value.&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;&amp;quot;accept&amp;quot;&lt;/code&gt; property with an object of MIME-types as keys and lists of file extensions as their
values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The example below, showing only the relevant excerpt of the web app manifest, should make it
clearer:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;file_handlers&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/open-csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;text/csv&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.csv&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/open-svg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;image/svg+xml&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.svg&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/open-graf&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;application/vnd.grafr.graph&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.grafr&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.graf&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;application/vnd.alternative-graph-app.graph&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.graph&quot;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This is for a hypothetical application that handles comma-separated value (&lt;code&gt;.csv&lt;/code&gt;) files at
&lt;code&gt;/open-csv&lt;/code&gt;, scalable vector graphics (&lt;code&gt;.svg&lt;/code&gt;) files at &lt;code&gt;/open-svg&lt;/code&gt;, and a made-up Grafr file format
with any of &lt;code&gt;.grafr&lt;/code&gt;, &lt;code&gt;.graf&lt;/code&gt;, or &lt;code&gt;.graph&lt;/code&gt; as the extension at &lt;code&gt;/open-graf&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For this declaration to have any effect, the application must be installed. You can
learn more in an article series on this very site on
&lt;a href=&quot;https://web.dev/progressive-web-apps/#installable&quot;&gt;making your app installable&lt;/a&gt;. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-imperative-part-of-the-file-handling-api&quot;&gt;The imperative part of the File Handling API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#the-imperative-part-of-the-file-handling-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that the app has declared what files it can handle at which in-scope URL in theory, it needs to
imperatively do something with incoming files in practice. This is where the &lt;code&gt;launchQueue&lt;/code&gt; comes
into play. To access launched files, a site needs to specify a consumer for the &lt;code&gt;window.launchQueue&lt;/code&gt;
object. Launches are queued until they are handled by the specified consumer, which is invoked
exactly once for each launch. In this manner, every launch is handled, regardless of when the
consumer was specified.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;launchQueue&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  launchQueue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setConsumer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;launchParams&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Nothing to do when the queue is empty.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;launchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; launchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Handle the file.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;devtools-support&quot;&gt;DevTools support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#devtools-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is no DevTools support at the time of this writing, but I have filed a
&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1130552&quot; rel=&quot;noopener&quot;&gt;feature request&lt;/a&gt; for support to be
added.&lt;/p&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have added file handling support to &lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;Excalidraw&lt;/a&gt;, a cartoon-style drawing app. To test
it, you first need to install Excalidraw. When you then
create a file with it and store it somewhere on your file system, you can open the file via a
double click, or a right click and then select &amp;quot;Excalidraw&amp;quot; in the context menu. You can check
out the &lt;a href=&quot;https://github.com/excalidraw/excalidraw/search?q=launchqueue&amp;amp;type=code&quot; rel=&quot;noopener&quot;&gt;implementation&lt;/a&gt; in the source code.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The macOS finder window with an Excalidraw file.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;422&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TMh8Qev0XdwgIx7jJlP5.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
     Double click or right click a file in your operating system&#39;s file explorer.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The context menu that appears when right clicking a file with the &amp;#x27;Open with… Excalidraw&amp;#x27; item highlighted.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;266&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 488px) 488px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wCNbMl6kJ11XziG3LO65.png?auto=format&amp;w=976 976w&quot; width=&quot;488&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
     Excalidraw is the default file handler for &lt;code&gt;.excalidraw&lt;/code&gt; files.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;security&quot;&gt;Security &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#security&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the File Handling API using the core principles defined
in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user control,
transparency, and ergonomics.&lt;/p&gt;
&lt;h2 id=&quot;permissions-permissions-persistence-and-file-handler-updates&quot;&gt;Permissions, permissions persistence, and file handler updates &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#permissions-permissions-persistence-and-file-handler-updates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To ensure user trust and the safety of users&#39; files when the File Handling API is used to open a file,
a permission prompt will be shown before a PWA can view a file. This permission prompt will be shown
right after the user selects the PWA to open a file, so that the permission is tightly coupled to the
action of opening a file using the PWA, making it more understandable and relevant.&lt;/p&gt;
&lt;p&gt;This permission will show every time until the user clicks to &lt;strong&gt;Allow&lt;/strong&gt; or &lt;strong&gt;Block&lt;/strong&gt; file handling
for the site, or ignores the prompt three times (after which Chromium will embargo and block this
permission). The selected setting will persist across the PWA closing and reopening.&lt;/p&gt;
&lt;p&gt;When the manifest updates and changes in the &lt;code&gt;&amp;quot;file_handlers&amp;quot;&lt;/code&gt; section are detected, the permissions
will be reset.&lt;/p&gt;
&lt;h3 id=&quot;file-related-challenges&quot;&gt;File-related challenges &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#file-related-challenges&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is a large category of attack vectors that are opened by allowing websites access to files.
These are outlined in the
&lt;a href=&quot;https://web.dev/file-system-access/#security-considerations&quot;&gt;article on the File System Access API&lt;/a&gt;. The
additional security-pertinent capability that the File Handling API provides over the File System
Access API is the ability to grant access to certain files through the operating system&#39;s built-in
UI, as opposed to through a file picker shown by a web application.&lt;/p&gt;
&lt;p&gt;There is still a risk that users may unintentionally grant a web application access to a file by
opening it. However, it is generally understood that opening a file allows the application it is
opened with to read and/or manipulate that file. Therefore, a user&#39;s explicit choice to open a file
in an installed application, such as via an &amp;quot;Open with…&amp;quot; context menu, can be read as a sufficient
signal of trust in the application.&lt;/p&gt;
&lt;h3 id=&quot;default-handler-challenges&quot;&gt;Default handler challenges &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#default-handler-challenges&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The exception to this is when there are no applications on the host system for a given file type. In
this case, some host operating systems may automatically promote the newly registered handler to the
default handler for that file type, silently and without any intervention by the user. This would
mean if the user double clicks a file of that type, it would automatically open in the registered
web app. On such host operating systems, when the user agent determines that there is no existing
default handler for the file type, an explicit permission prompt might be necessary to avoid
accidentally sending the contents of a file to a web application without the user&#39;s consent.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The spec states that browsers should not register every site that can handle files as a file
handler. Instead, file handling registration should be gated behind installation and never happen
without explicit user confirmation, especially if a site is to become the default handler. Rather
than hijacking existing extensions like &lt;code&gt;.json&lt;/code&gt; that the user probably already has a default handler
registered for, sites should consider crafting their own extensions.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;All operating systems allow users to change the present file associations. This is outside the scope
of the browser.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with the File Handling API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/file-handling/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an existing
issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you
can, simple instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&amp;gt;FileHandling&lt;/code&gt; in
the &lt;strong&gt;Components&lt;/strong&gt; box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy
repros.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the File Handling API? Your public support helps the Chrome team to
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share how you plan to use it on the &lt;a href=&quot;https://discourse.wicg.io/t/proposal-ability-to-register-file-handlers/3084&quot; rel=&quot;noopener&quot;&gt;WICG Discourse thread&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23FileHandling&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#FileHandling&lt;/code&gt;&lt;/a&gt; and let us
know where and how you are using it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/file-handling/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;File Handling API demo&lt;/a&gt; | &lt;a href=&quot;https://github.com/excalidraw/excalidraw/search?q=launchqueue&amp;amp;type=code&quot; rel=&quot;noopener&quot;&gt;File Handling API demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=829689&quot; rel=&quot;noopener&quot;&gt;Chromium tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5721776357113856&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/list?q=component:UI%3EBrowser%3EWebAppInstalls%3EFileHandling&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&amp;gt;FileHandling&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/371&quot; rel=&quot;noopener&quot;&gt;TAG Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/158&quot; rel=&quot;noopener&quot;&gt;Mozilla Standards Position&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/file-handling/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The File Handling API was specified by &lt;a href=&quot;https://github.com/ericwilligers&quot; rel=&quot;noopener&quot;&gt;Eric Willigers&lt;/a&gt;,
&lt;a href=&quot;https://github.com/fallaciousreasoning&quot; rel=&quot;noopener&quot;&gt;Jay Harris&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/raymeskhoury&quot; rel=&quot;noopener&quot;&gt;Raymes Khoury&lt;/a&gt;. This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Managing several displays with the Multi-Screen Window Placement API</title>
    <link href="https://web.dev/multi-screen-window-placement/"/>
    <updated>2020-09-14T00:00:00Z</updated>
    <id>https://web.dev/multi-screen-window-placement/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Multi-Screen Window Placement API is part of the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is currently in development. This post will be updated as
the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The Multi-Screen Window Placement API allows you to enumerate the displays connected to your machine
and to place windows on specific screens.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examples of sites that may use this API include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multi-window graphics editors à la
&lt;a href=&quot;https://www.gimp.org/release-notes/gimp-2.8.html#single-window-mode&quot; rel=&quot;noopener&quot;&gt;Gimp&lt;/a&gt; can place various
editing tools in accurately positioned windows.&lt;/li&gt;
&lt;li&gt;Virtual trading desks can show market trends in multiple windows any of which can be viewed in
fullscreen mode.&lt;/li&gt;
&lt;li&gt;Slideshow apps can show speaker notes on the internal primary screen and the presentation on an
external projector.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/webscreens/window-placement/blob/main/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://webscreens.github.io/window-placement/&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/multi-screen-window-placement/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. &lt;strong&gt;Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-8087339030850568191&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use the Multi-Screen Window Placement API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with the Multi-Screen Window Placement API locally, without an origin trial token,
enable the &lt;code&gt;#enable-experimental-web-platform-features&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A first origin trial ran from Chromium 86 to Chromium 88. After this origin trial, we made
some &lt;a href=&quot;https://github.com/webscreens/window-placement/blob/main/CHANGES.md&quot; rel=&quot;noopener&quot;&gt;changes&lt;/a&gt; to the API. The
article has been updated accordingly.&lt;/p&gt;
&lt;p&gt;Starting in Chromium 93, the Multi-Screen Window Placement API will again be available as an
origin trial in Chromium. This second origin trial is expected to end in Chromium 95 (November
10, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/-8087339030850568191&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;the-problem&quot;&gt;The problem &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-problem&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The time-tested approach to controlling windows,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Window.open()&lt;/code&gt;&lt;/a&gt;, is unfortunately
unaware of additional screens. While some aspects of this API seem a little archaic, such as its
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Parameters:~:text=title.-,windowFeatures&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;windowFeatures&lt;/code&gt;&lt;/a&gt;
&lt;code&gt;DOMString&lt;/code&gt; parameter, it has nevertheless served us well over the years. To specify a window&#39;s
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Position&quot; rel=&quot;noopener&quot;&gt;position&lt;/a&gt;, you can pass the
coordinates as &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; (or &lt;code&gt;screenX&lt;/code&gt; and &lt;code&gt;screenY&lt;/code&gt; respectively) and pass the desired
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Size:~:text=well.-,Size&quot; rel=&quot;noopener&quot;&gt;size&lt;/a&gt; as
&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; (or &lt;code&gt;innerWidth&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt; respectively). For example, to open a
400×300 window at 50 pixels from the left and 50 pixels from the top, this is the code that you
could use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; popup &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;https://example.com/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;My Popup&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;left=50,top=50,width=400,height=300&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can get information about the current screen by looking at the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/screen&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;window.screen&lt;/code&gt;&lt;/a&gt; property, which
returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Screen&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Screen&lt;/code&gt;&lt;/a&gt; object. This is the
output on my MacBook Pro 13″:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screen&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Output from my MacBook Pro 13″:&lt;br /&gt;  availHeight: 969&lt;br /&gt;  availLeft: 0&lt;br /&gt;  availTop: 25&lt;br /&gt;  availWidth: 1680&lt;br /&gt;  colorDepth: 30&lt;br /&gt;  height: 1050&lt;br /&gt;  id: &quot;&quot;&lt;br /&gt;  internal: false&lt;br /&gt;  isExtended: true&lt;br /&gt;  left: 0&lt;br /&gt;  onchange: null&lt;br /&gt;  orientation: ScreenOrientation {angle: 0, type: &quot;landscape-primary&quot;, onchange: null}&lt;br /&gt;  pixelDepth: 30&lt;br /&gt;  primary: false&lt;br /&gt;  scaleFactor: 2&lt;br /&gt;  top: 0&lt;br /&gt;  touchSupport: false&lt;br /&gt;  width: 1680&lt;br /&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Like most people working in tech, I have had to adapt myself to the new work reality and set up my
personal home office. Mine looks like on the photo below (if you are interested, you can read the
&lt;a href=&quot;https://blog.tomayac.com/2020/03/23/my-working-from-home-setup-during-covid-19/&quot; rel=&quot;noopener&quot;&gt;full details about my setup&lt;/a&gt;).
The iPad next to my MacBook is connected to the laptop via
&lt;a href=&quot;https://support.apple.com/en-us/HT210380&quot; rel=&quot;noopener&quot;&gt;Sidecar&lt;/a&gt;, so whenever I need to, I can quickly turn the
iPad into a second screen.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;School bench on two chairs. On top of the school bench are shoe boxes supporting a laptop and two iPads surrounding it.&quot; decoding=&quot;async&quot; height=&quot;520&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 558px) 558px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Qt3SlHOLDzxpZ3l3bN5t.jpg?auto=format&amp;w=1116 1116w&quot; width=&quot;558&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A multi-screen setup.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If I want to take advantage of the bigger screen, I can put the popup from the
&lt;a href=&quot;https://web.dev/multi-screen-window-placement/#the-problem&quot;&gt;code sample&lt;/a&gt; above on to the second screen. I do it
like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;popup&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This is a rough guess, since there is no way to know the dimensions of the second screen. The info
from &lt;code&gt;window.screen&lt;/code&gt; only covers the built-in screen, but not the iPad screen. The reported &lt;code&gt;width&lt;/code&gt;
of the built-in screen was &lt;code&gt;1680&lt;/code&gt; pixels, so moving to &lt;code&gt;2500&lt;/code&gt; pixels &lt;em&gt;might&lt;/em&gt; work to shift the
window over to the iPad, since &lt;em&gt;I&lt;/em&gt; happen to know that it is located on the right of my MacBook. How
can I do this in the general case? Turns out, there is a better way than guessing. That way is the
Multi-Screen Window Placement API.&lt;/p&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To check if the Multi-Screen Window Placement API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;getScreens&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The Multi-Screen Window Placement API is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-window-placement-permission&quot;&gt;The &lt;code&gt;window-placement&lt;/code&gt; permission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-window-placement-permission&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before I can use the Multi-Screen Window Placement API, I must ask the user for permission to do so.
The new &lt;code&gt;window-placement&lt;/code&gt; permission can be queried with the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API&quot; rel=&quot;noopener&quot;&gt;Permissions API&lt;/a&gt; like so:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; granted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; state &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;window-placement&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  granted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Nothing.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The browser
&lt;a href=&quot;https://webscreens.github.io/window-placement/#usage-overview-screen-information:~:text=This%20method%20may%20prompt%20the%20user%20for%20permission&quot; rel=&quot;noopener&quot;&gt;can&lt;/a&gt;
choose to show the permission prompt dynamically on the first attempt to use any of the methods of
the new API. Read on to learn more.&lt;/p&gt;
&lt;h3 id=&quot;the-window.screen.isextended-property&quot;&gt;The &lt;code&gt;window.screen.isExtended&lt;/code&gt; property &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-window.screen.isextended-property&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To find out if more than one screen is connected to my device, I access the
&lt;code&gt;window.screen.isExtended&lt;/code&gt; property. It returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. For my setup, it returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screen&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isExtended&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Returns `true` or `false`.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-getscreens()-method&quot;&gt;The &lt;code&gt;getScreens()&lt;/code&gt; method &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-getscreens()-method&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that I know that the current setup is multi-screen, I can obtain more information about the
second screen using &lt;code&gt;Window.getScreens()&lt;/code&gt;. Calling this function will show a permission prompt that
asks me whether the site may open and place windows on my screen. The function returns a promise
that resolves with an array of &lt;code&gt;ScreenAdvanced&lt;/code&gt; objects. On my MacBook Pro 13 with a connected iPad,
this returns an array of two &lt;code&gt;ScreenAdvanced&lt;/code&gt; objects:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getScreens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Output from my MacBook Pro 13″ with the iPad attached:&lt;br /&gt;{&lt;br /&gt;  currentScreen: ScreenAdvanced {left: 0, top: 0, isPrimary: true, isInternal: true, devicePixelRatio: 2, …}&lt;br /&gt;  oncurrentscreenchange: null&lt;br /&gt;  onscreenschange: null&lt;br /&gt;  screens: [{&lt;br /&gt;    // The MacBook Pro&lt;br /&gt;    availHeight: 969&lt;br /&gt;    availLeft: 0&lt;br /&gt;    availTop: 25&lt;br /&gt;    availWidth: 1680&lt;br /&gt;    colorDepth: 30&lt;br /&gt;    devicePixelRatio: 2&lt;br /&gt;    height: 1050&lt;br /&gt;    id: &quot;&quot;&lt;br /&gt;    internal: false&lt;br /&gt;    isExtended: true&lt;br /&gt;    isInternal: true&lt;br /&gt;    isPrimary: true&lt;br /&gt;    label: &quot;&quot;&lt;br /&gt;    left: 0&lt;br /&gt;    onchange: null&lt;br /&gt;    orientation: ScreenOrientation {angle: 0, type: &quot;landscape-primary&quot;, onchange: null}&lt;br /&gt;    pixelDepth: 30&lt;br /&gt;    pointerTypes: []&lt;br /&gt;    primary: false&lt;br /&gt;    scaleFactor: 2&lt;br /&gt;    top: 0&lt;br /&gt;    touchSupport: false&lt;br /&gt;    width: 1680&lt;br /&gt;  },&lt;br /&gt;  {&lt;br /&gt;    // The iPad&lt;br /&gt;    availHeight: 999&lt;br /&gt;    availLeft: 1680&lt;br /&gt;    availTop: 25&lt;br /&gt;    availWidth: 1366&lt;br /&gt;    colorDepth: 24&lt;br /&gt;    devicePixelRatio: 2&lt;br /&gt;    height: 1024&lt;br /&gt;    id: &quot;&quot;&lt;br /&gt;    internal: false&lt;br /&gt;    isExtended: true&lt;br /&gt;    isInternal: false&lt;br /&gt;    isPrimary: false&lt;br /&gt;    label: &quot;&quot;&lt;br /&gt;    left: 1680&lt;br /&gt;    onchange: null&lt;br /&gt;    orientation: ScreenOrientation {angle: 0, type: &quot;landscape-primary&quot;, onchange: null}&lt;br /&gt;    pixelDepth: 24&lt;br /&gt;    pointerTypes: []&lt;br /&gt;    primary: false&lt;br /&gt;    scaleFactor: 2&lt;br /&gt;    top: 0&lt;br /&gt;    touchSupport: false&lt;br /&gt;  }]&lt;br /&gt;}&lt;br /&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Information about the connected screens is available in the &lt;code&gt;screens&lt;/code&gt; array. Note how the value of
&lt;code&gt;left&lt;/code&gt; for the iPad starts at &lt;code&gt;1680&lt;/code&gt;, which is exactly the &lt;code&gt;width&lt;/code&gt; of the built-in display. This
allows me to determine exactly how the screens are arranged logically (next to each other, on top of
each other, etc.). There is also data now for each screen to show whether it is an &lt;code&gt;isInternal&lt;/code&gt; one
and whether it is an &lt;code&gt;isPrimary&lt;/code&gt; one. Note that the built-in screen
&lt;a href=&quot;https://osxdaily.com/2010/04/27/set-the-primary-display-mac/#:~:text=Click%20on%20the%20Display%20icon,primary%20display%20for%20your%20Mac&quot; rel=&quot;noopener&quot;&gt;is not necessarily the primary screen&lt;/a&gt;.
Both also have a &lt;code&gt;label&lt;/code&gt; and an &lt;code&gt;id&lt;/code&gt;, which, if persisted across browser sessions, allows for window
arrangements to be restored. Information about the possible input methods are available in the
&lt;code&gt;pointerTypes&lt;/code&gt; array.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;currentScreen&lt;/code&gt; field is a live object corresponding to the current &lt;code&gt;window.screen&lt;/code&gt;. The object
is updated on cross-screen window placements or device changes.&lt;/p&gt;
&lt;h3 id=&quot;the-screenschange-event&quot;&gt;The &lt;code&gt;screenschange&lt;/code&gt; event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-screenschange-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The only thing missing now is a way to detect when my screen setup changes. A new event,
&lt;code&gt;screenschange&lt;/code&gt;, does exactly that: it fires whenever the screen constellation is modified. (Notice
that &amp;quot;screens&amp;quot; is plural in the event name.) This means the event fires whenever a new screen or an
existing screen is (physically or virtually in the case of Sidecar) plugged in or unplugged.&lt;/p&gt;
&lt;p&gt;Note that you need to look up the new screen details asynchronously, the &lt;code&gt;screenschange&lt;/code&gt; event
itself does not provide this data. To look up the screen details, use the live object from a cached
&lt;code&gt;Screens&lt;/code&gt; interface.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; screensInterface &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getScreens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; cachedScreensLength &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screens&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;screenschange&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screens&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; cachedScreensLength&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;The screen count changed from &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;cachedScreensLength&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screens&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    cachedScreensLength &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screens&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-currentscreenchange-event&quot;&gt;The &lt;code&gt;currentscreenchange&lt;/code&gt; event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-currentscreenchange-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If I am only interested in changes to the current screen (that is, the value of the live object
&lt;code&gt;currentScreen&lt;/code&gt;), I can listen for the &lt;code&gt;currentscreenchange&lt;/code&gt; event.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; screensInterface &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getScreens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;currentscreenchange&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; details &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; screensInterface&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;currentScreen&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;The current screen has changed.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; details&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-change-event&quot;&gt;The &lt;code&gt;change&lt;/code&gt; event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#the-change-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Finally, if I am only interested in changes to a concrete screen, I can listen to that screen&#39;s
&lt;code&gt;change&lt;/code&gt; event.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstScreen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getScreens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;firstScreen&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;change&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;The first screen has changed.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; firstScreen&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;new-fullscreen-options&quot;&gt;New fullscreen options &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#new-fullscreen-options&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Until now, you could request that elements be displayed in fullscreen mode via the aptly named
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;requestFullScreen()&lt;/code&gt;&lt;/a&gt;
method. The method takes an &lt;code&gt;options&lt;/code&gt; parameter where you can pass
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FullscreenOptions&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;FullscreenOptions&lt;/code&gt;&lt;/a&gt;. So far,
its only property has been
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FullscreenOptions/navigationUI&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;navigationUI&lt;/code&gt;&lt;/a&gt;.
The Multi-Screen Window Placement API adds a new &lt;code&gt;screen&lt;/code&gt; property that allows you to determine
which screen to start the fullscreen view on. For example, if you want to make the primary screen
fullscreen:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; primaryScreen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getScreens&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; screen&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;primary&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestFullscreen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; screen&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; primaryScreen &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;polyfill&quot;&gt;Polyfill &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#polyfill&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is not possible to polyfill the Multi-Screen Window Placement API, but you can shim its shape so
you can code exclusively against the new API:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;getScreens&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Returning a one-element array with the current screen,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// noting that there might be more.&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getScreens&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screen&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Set to `false`, noting that this might be a lie.&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screen&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isExtended &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The other aspects of the API, that is, the various screen change events and the &lt;code&gt;screen&lt;/code&gt; property of
the &lt;code&gt;FullscreenOptions&lt;/code&gt;, would simply never fire or silently be ignored respectively by
non-supporting browsers.&lt;/p&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are anything like me, you keep a close eye on the development of the various
cryptocurrencies. (In reality I very much do not, but, for the sake of this article, just assume I
do.) To keep track of the cryptocurrencies that I own, I have developed a web app that allows me to
watch the markets in all life situations, such as from the comfort of my bed, where I have a decent
single-screen setup.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Massive TV screen at the end of a bed with the author&amp;#x27;s legs partly visible. On the screen, a fake crypto currency trading desk.&quot; decoding=&quot;async&quot; height=&quot;863&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/sSLkcAMHuqBaj4AmT5eP.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Relaxing and watching the markets.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This being about crypto, the markets can get hectic at any time. Should this happen, I can quickly
move over to my desk where I have a multi-screen setup. I can click on any currency&#39;s window and
quickly see the full details in a fullscreen view on the opposite screen. Below is a recent photo of
me taken during the last &lt;a href=&quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot; rel=&quot;noopener&quot;&gt;YCY bloodbath&lt;/a&gt;. It caught me
completely off-guard and left me
&lt;a href=&quot;https://www.buzzfeednews.com/article/gavon/brokers-with-hands-on-their-faces&quot; rel=&quot;noopener&quot;&gt;with my hands on my face&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The author with his hands on his panicking face staring at the fake crypto currency trading desk.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/wFu8TBzOAqaKCgcERr3z.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Panicky, witnessing the YCY bloodbath.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You can play with the &lt;a href=&quot;https://window-placement.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; embedded below, or see its &lt;a href=&quot;https://glitch.com/edit/#!/window-placement&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt; on glitch.&lt;/p&gt;
&lt;!-- Copy and Paste Me --&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 800px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://window-placement.glitch.me/&quot; title=&quot;window-placement on Glitch&quot; allow=&quot;fullscreen; window-placement&quot; sandbox=&quot;allow-modals allow-popups allow-popups-to-escape-sandbox allow-scripts&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the Multi-Screen Window Placement API using the core
principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;,
including user control, transparency, and ergonomics. The Multi-Screen Window Placement API exposes
new information about the screens connected to a device, increasing the fingerprinting surface of
users, especially those with multiple screens consistently connected to their devices. As one
mitigation of this privacy concern, the exposed screen properties are limited to the minimum needed
for common placement use cases. User permission is required for sites to get multi-screen
information and place windows on other screens.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The user is in full control of the exposure of their setup. They can accept or decline the
permission prompt, and revoke a previously granted permission via the site information feature in
the browser.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The fact whether the permission to use the Multi-Screen Window Placement API has been granted is
exposed in the browser&#39;s site information and is also queryable via the Permissions API.&lt;/p&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The browser persists permission grants. The permission can be revoked via the browser&#39;s site
information.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with the Multi-Screen Window Placement API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a spec issue on the corresponding &lt;a href=&quot;https://github.com/webscreens/window-placement/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an existing
issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you
can, simple instructions for reproducing, and enter &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/list?q=component:Blink%3EWindowDialog&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;WindowDialog&lt;/code&gt;&lt;/a&gt; in the
&lt;strong&gt;Components&lt;/strong&gt; box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Multi-Screen Window Placement API? Your public support helps the Chrome
team to prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share how you plan to use it on the &lt;a href=&quot;https://discourse.wicg.io/t/proposal-supporting-window-placement-on-multi-screen-devices/3948&quot; rel=&quot;noopener&quot;&gt;WICG Discourse thread&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23WindowPlacement&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#WindowPlacement&lt;/code&gt;&lt;/a&gt; and
let us know where and how you are using it.&lt;/li&gt;
&lt;li&gt;Ask other browser vendors to implement the API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webscreens.github.io/window-placement/&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webscreens/window-placement/blob/main/EXPLAINER.md&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://window-placement.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Multi-Screen Window Placement API demo&lt;/a&gt; | &lt;a href=&quot;https://glitch.com/edit/#!/window-placement&quot; rel=&quot;noopener&quot;&gt;Multi-Screen Window Placement API demo
source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/897300&quot; rel=&quot;noopener&quot;&gt;Chromium tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5252960583942144&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/list?q=component:Blink%3EWindowDialog&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;WindowDialog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/522&quot; rel=&quot;noopener&quot;&gt;TAG Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/C6xw8i1ZIdE/m/TJsr0zXxBwAJ&quot; rel=&quot;noopener&quot;&gt;Intent to Experiment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/multi-screen-window-placement/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Multi-Screen Window Placement API spec was edited by
&lt;a href=&quot;https://www.linkedin.com/in/pwnall&quot; rel=&quot;noopener&quot;&gt;Victor Costan&lt;/a&gt; and
&lt;a href=&quot;https://www.linkedin.com/in/joshuaseanbell&quot; rel=&quot;noopener&quot;&gt;Joshua Bell&lt;/a&gt;. The API was implemented by
&lt;a href=&quot;https://www.linkedin.com/in/mike-wasserman-9900a079/&quot; rel=&quot;noopener&quot;&gt;Mike Wasserman&lt;/a&gt; and
&lt;a href=&quot;https://github.com/quisquous&quot; rel=&quot;noopener&quot;&gt;Adrienne Walker&lt;/a&gt;. This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, &lt;a href=&quot;https://github.com/beaufortfrancois&quot; rel=&quot;noopener&quot;&gt;François Beaufort&lt;/a&gt;,
and &lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt;. Thanks to Laura Torrent Puig for the photos.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>URL protocol handler registration for PWAs</title>
    <link href="https://web.dev/url-protocol-handler/"/>
    <updated>2021-05-11T00:00:00Z</updated>
    <id>https://web.dev/url-protocol-handler/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;URL protocol handler registration for PWAs is part of the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is currently in development. This post will
be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;background-on-schemes-(aka.-protocols)&quot;&gt;Background on schemes (aka. protocols) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#background-on-schemes-(aka.-protocols)&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;Uniform Resource Identifier&lt;/em&gt; (URI) is a compact sequence of characters that identifies an
abstract or physical resource. Each URI begins with a
&lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.1&quot; rel=&quot;noopener&quot;&gt;scheme&lt;/a&gt; name that refers to a specification for
assigning identifiers within that scheme. As such, the URI syntax is a federated and extensible
naming system wherein each scheme&#39;s specification may further restrict the syntax and semantics of
identifiers using that scheme. Schemes are also known as protocols. You can see some examples of
schemes below.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;tel:+1-816-555-1212&lt;br /&gt;mailto:Jane.Doe@example.com&lt;br /&gt;news:comp.infosystems.www.servers.unix&lt;br /&gt;https://web.dev/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The term &lt;em&gt;Uniform Resource Locator&lt;/em&gt; (URL) refers to the subset of URIs that, in addition to
identifying a resource, provide a means of locating the resource by describing its primary access
mechanism (e.g., its network location).&lt;/p&gt;
&lt;h2 id=&quot;background-on-the-registerprotocolhandler()-method&quot;&gt;Background on the &lt;code&gt;registerProtocolHandler()&lt;/code&gt; method &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#background-on-the-registerprotocolhandler()-method&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The secure-content-only &lt;code&gt;Navigator&lt;/code&gt; method
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/registerProtocolHandler&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;registerProtocolHandler()&lt;/code&gt;&lt;/a&gt;
lets sites register their ability to open or handle particular URL schemes. Therefore, sites need to
call the method like so: &lt;code&gt;navigator.registerProtocolHandler(scheme, url)&lt;/code&gt;. The two parameters are
defined as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scheme&lt;/code&gt;: A string containing the protocol the site wishes to handle.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;: A string containing the URL of the handler. This URL must include &lt;code&gt;%s&lt;/code&gt;, as a placeholder
that will be replaced with the escaped URL to be handled.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The scheme must either be one of the
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/system-state.html#safelisted-scheme&quot; rel=&quot;noopener&quot;&gt;safelisted schemes&lt;/a&gt;
(for example, &lt;code&gt;mailto&lt;/code&gt;, &lt;code&gt;bitcoin&lt;/code&gt;, or &lt;code&gt;magnet&lt;/code&gt;) or begin with &lt;code&gt;web+&lt;/code&gt;, followed by at least one or
more lowercase ASCII letters after the &lt;code&gt;web+&lt;/code&gt; prefix, for instance, &lt;code&gt;web+coffee&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To make this clearer, here is a concrete example of the flow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user visits a site at &lt;code&gt;https://coffeeshop.example.com/&lt;/code&gt; that makes the following call:
&lt;code&gt;navigator.registerProtocolHandler(&#39;web+coffee&#39;, &#39;coffee?type=%s&#39;)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;At a later point, while visiting &lt;code&gt;https://randomsite.example.com/&lt;/code&gt;, the user clicks on a link
such as &lt;code&gt;&amp;lt;a href=&amp;quot;web+coffee:latte-macchiato&amp;quot;&amp;gt;All about latte macchiato&amp;lt;/a&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This causes the browser to navigate to the following URL:
&lt;code&gt;https://coffeeshop.example.com/coffee?type=web%2Bcoffee%3A%2F%2Flatte-macchiato&lt;/code&gt;. The search
string URL-decoded then reads &lt;code&gt;?type=web+coffee://latte-macchiato&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;what-this-proposal-is-about&quot;&gt;What this proposal is about &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#what-this-proposal-is-about&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The present &lt;em&gt;URL protocol handler registration for PWAs&lt;/em&gt; proposal is about offering protocol handler
registration as part of a PWA installation through its manifest. After registering a PWA as a
protocol handler, when a user clicks on a hyperlink with a specific scheme such as &lt;code&gt;mailto&lt;/code&gt; ,
&lt;code&gt;bitcoin&lt;/code&gt;, or &lt;code&gt;web+music&lt;/code&gt; from a browser or a platform-specific app, the registered PWA will open
and receive the URL. It is important to note that both the proposed manifest-based registration and
the traditional &lt;code&gt;registerProtocolHandler()&lt;/code&gt; play very similar roles in practice, while still
allowing the possibility for complementary user-experiences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Similarities include requirements around the list of schemes allowed to be registered, and the
name and format of parameters, etc.&lt;/li&gt;
&lt;li&gt;Differences in the manifest-based registration are subtle, but might be useful to enhance the
experience for PWA users. For example, manifest-based PWA registration may not require an
additional user action apart from the user-initiated installation of the PWA.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In a word processing PWA, the user in a document encounters a link to a presentation like
&lt;code&gt;web+presentations://deck2378465&lt;/code&gt;. When the user clicks on the link, the presentation PWA
automatically opens in the correct scope and shows the slide deck.&lt;/li&gt;
&lt;li&gt;In a platform-specific chat app, the user in a chat message receives a link to a &lt;code&gt;magnet&lt;/code&gt; URL.
Upon clicking the link, an installed torrent PWA launches and starts downloading.&lt;/li&gt;
&lt;li&gt;The user has a music streaming PWA installed. When a friend shares a link to a song like
&lt;code&gt;web+music://songid=1234&amp;amp;time=0:13&lt;/code&gt; and the user clicks on it, the music streaming PWA will
automatically launch in a standalone window.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/URLProtocolHandler/explainer.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/w3c/manifest/pull/972&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/url-protocol-handler/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. &lt;strong&gt;Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/1136033006004207617&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;enabling-via-about:flags-or-edge:flags&quot;&gt;Enabling via about://flags or edge://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#enabling-via-about:flags-or-edge:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with URL protocol handler registration for PWAs locally, without an origin trial
token, enable the &lt;code&gt;#enable-desktop-pwas-protocol-handling&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt; or &lt;code&gt;edge://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chromium 92, the File Handling API will be available as an origin trial in
Chromium. The origin trial is expected to end in Chromium 94 (October 13, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/url-protocol-handler/&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;how-to-use-url-protocol-handler-registration-for-pwas&quot;&gt;How to use URL protocol handler registration for PWAs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#how-to-use-url-protocol-handler-registration-for-pwas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The API for URL protocol handler registration is modeled closely on
&lt;code&gt;navigator.registerProtocolHandler()&lt;/code&gt;. Just this time the information is passed declaratively via
the web app manifest in a new property called &lt;code&gt;&amp;quot;protocol_handlers&amp;quot;&lt;/code&gt; that takes an array of
objects with the two required keys &lt;code&gt;&amp;quot;protocol&amp;quot;&lt;/code&gt; and &lt;code&gt;&amp;quot;url&amp;quot;&lt;/code&gt;. The code snippet below shows how to
register &lt;code&gt;web+tea&lt;/code&gt; and &lt;code&gt;web+coffee&lt;/code&gt;. The values are strings containing the URL of the handler with
the required &lt;code&gt;%s&lt;/code&gt; placeholder for the escaped URL.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;protocol_handlers&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;protocol&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web+tea&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/tea?type=%s&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;protocol&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web+coffee&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/coffee?type=%s&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;multiple-apps-registering-for-the-same-protocol&quot;&gt;Multiple apps registering for the same protocol &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#multiple-apps-registering-for-the-same-protocol&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If multiple applications register themselves as handlers for the same scheme, for example, the
&lt;code&gt;mailto&lt;/code&gt; protocol, the operating system will show the user a picker and let them decide which of the
registered handlers to use.&lt;/p&gt;
&lt;h3 id=&quot;the-same-app-registering-for-multiple-protocols&quot;&gt;The same app registering for multiple protocols &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#the-same-app-registering-for-multiple-protocols&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The same app can register itself for multiple protocols, as you can see in the code sample above.&lt;/p&gt;
&lt;h3 id=&quot;app-updates-and-handler-registration&quot;&gt;App updates and handler registration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#app-updates-and-handler-registration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Handler registrations are synchronized with the latest manifest version provided by the app. There
are two cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An update that adds new handlers triggers handler registration (separate from app installation).&lt;/li&gt;
&lt;li&gt;An update that removes handlers triggers handler unregistration (separate from app
uninstallation).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can see a demo of URL protocol handler registration for PWAs on Glitch.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you have not done so before, &lt;a href=&quot;https://web.dev/url-protocol-handler/#enabling-via-chrome:flags&quot;&gt;enable the flag&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://protocol-handler.glitch.me/&quot; rel=&quot;noopener&quot;&gt;https://protocol-handler.glitch.me/&lt;/a&gt;, install the
PWA, and reload the app after the installation. The browser has now registered the PWA as a
handler for the &lt;code&gt;web+coffee&lt;/code&gt; protocol with the operating system.&lt;/li&gt;
&lt;li&gt;In the installed PWA window, click on the link
&lt;a href=&quot;https://protocol-handler-link.glitch.me/&quot; rel=&quot;noopener&quot;&gt;https://protocol-handler-link.glitch.me/&lt;/a&gt;. This will
open a new browser tab with three links. Click on the first or the second (latte macchiato or
americano). The browser will now show you a prompt and ask if you are fine with the app being a
protocol handler for the &lt;code&gt;web+coffee&lt;/code&gt; protocol. If you agree, the PWA will open and show the
selected coffee.&lt;/li&gt;
&lt;li&gt;To compare with the traditional flow that uses &lt;code&gt;navigator.registerProtocolHandler()&lt;/code&gt;, click
the *&lt;em&gt;Register protocol handler&lt;/em&gt; button in the PWA. Then in the browser tab click the third link
(chai). It will likewise show a prompt, but then open the PWA in a tab, not in a browser window.&lt;/li&gt;
&lt;li&gt;Send yourself a message on a platform-specific application like Skype on Windows with a link like
&lt;code&gt;&amp;lt;a href=&amp;quot;web+coffee://americano&amp;quot;&amp;gt;Americano&amp;lt;/a&amp;gt;&lt;/code&gt; and click it. It should likewise open the
installed PWA.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;URL protocol handler demo with browser tab with links on the left, and standalone PWA window on the right.&quot; decoding=&quot;async&quot; height=&quot;461&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/lfjgVAiGjVE9VohX3EDs.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;security-considerations&quot;&gt;Security considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#security-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since PWA installation requires the context to be secure, protocol handling inherits this
constraint. The list of registered protocol handlers is not exposed to the web in any way so it
cannot be used as a fingerprinting vector.&lt;/p&gt;
&lt;h3 id=&quot;non-user-initiated-navigation-attempts&quot;&gt;Non user-initiated navigation attempts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#non-user-initiated-navigation-attempts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Navigation attempts that are not initiated by the user, but that are programmatic, may not open
apps. The custom protocol URL may only be used in top-level browsing contexts, but not, for example,
as the URL of an iframe.&lt;/p&gt;
&lt;h3 id=&quot;allowlist-of-protocols&quot;&gt;Allowlist of protocols &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#allowlist-of-protocols&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Just like with &lt;code&gt;registerProtocolHandler()&lt;/code&gt; there is an allowlist of protocols that apps can register
to handle.&lt;/p&gt;
&lt;h3 id=&quot;default-protocol-handlers&quot;&gt;Default protocol handlers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#default-protocol-handlers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Registration of PWA protocol handlers will not take over the default handler for a protocol.
Instead, the next time the protocol is invoked, an operating system disambiguation dialog will
prompt the user to either keep using the default handler or select the newly registered handler.&lt;/p&gt;
&lt;h3 id=&quot;consent-prompt&quot;&gt;Consent prompt &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#consent-prompt&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On the first launch of the PWA due to an invoked protocol, the user will be presented with a
permission dialog. This dialog will display the app name and origin of the app, and ask the user if
the app is allowed to handle links from the protocol. If a user rejects the permission dialog, the
registered protocol handler will be ignored by the operating system. To unregister the protocol
handler, the user needs to uninstall the PWA that registered it.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with URL protocol handler registration for
PWAs.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers/tree/main/URLProtocolHandler&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt;
box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use URL protocol handler registration for PWAs? Your public support helps the
Chromium team prioritize features and shows other browser vendors how critical it is to support
them.&lt;/p&gt;
&lt;p&gt;Share how you plan to use it on the &lt;a href=&quot;https://discourse.wicg.io/t/proposal-url-protocol-handler-registration-for-pwas/4276&quot; rel=&quot;noopener&quot;&gt;WICG Discourse thread&lt;/a&gt;. Send a Tweet to
&lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23ProtocolHandler&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#ProtocolHandler&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;useful-links&quot;&gt;Useful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#useful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/URLProtocolHandler/explainer.md&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/manifest/pull/972&quot; rel=&quot;noopener&quot;&gt;Spec proposal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers/tree/main/URLProtocolHandler&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5151703944921088&quot; rel=&quot;noopener&quot;&gt;ChromeStatus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/1019239&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/482&quot; rel=&quot;noopener&quot;&gt;TAG review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://discourse.wicg.io/t/proposal-url-protocol-handler-registration-for-pwas/4276&quot; rel=&quot;noopener&quot;&gt;Discourse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/url-protocol-handler/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;URL protocol handler registration for PWAs was implemented and specified by
&lt;a href=&quot;https://www.linkedin.com/in/fabiorochap/&quot; rel=&quot;noopener&quot;&gt;Fabio Rocha&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/diekus/&quot; rel=&quot;noopener&quot;&gt;Diego González&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/connor-d-moody/&quot; rel=&quot;noopener&quot;&gt;Connor Moody&lt;/a&gt;, and
&lt;a href=&quot;https://www.linkedin.com/in/tangsamuel/&quot; rel=&quot;noopener&quot;&gt;Samuel Tang&lt;/a&gt; from the Microsoft Edge team. This article
was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; and Fabio Rocha. Hero image by
&lt;a href=&quot;https://unsplash.com/@jjying&quot; rel=&quot;noopener&quot;&gt;JJ Ying&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/PDxYfXVlK2M&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>High performance storage for your app: the Storage Foundation API</title>
    <link href="https://web.dev/storage-foundation/"/>
    <updated>2021-06-16T00:00:00Z</updated>
    <id>https://web.dev/storage-foundation/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Storage Foundation API is part of the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is currently in development. This post will
be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The web platform increasingly offers developers the tools they need to build fined-tuned
high-performance applications for the web. Most notably,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot; rel=&quot;noopener&quot;&gt;WebAssembly&lt;/a&gt; (Wasm) has opened the door to
fast and powerful web applications, while technologies like &lt;a href=&quot;https://emscripten.org/&quot; rel=&quot;noopener&quot;&gt;Emscripten&lt;/a&gt;
now allow developers to reuse tried and tested code on the web. To truly leverage this potential,
developers must have the same power and flexibility when it comes to storage.&lt;/p&gt;
&lt;p&gt;This is where the Storage Foundation API comes in. The Storage Foundation API is a new fast and
unopinionated storage API that unlocks new and much-requested use cases for the web, such as
implementing performant databases and gracefully managing large temporary files. With this new
interface, developers can &amp;quot;bring their own storage&amp;quot; to the web, reducing the feature gap between web
and platform-specific code.&lt;/p&gt;
&lt;p&gt;The Storage Foundation API is designed to resemble a very basic file system so it gives developers
flexibility by providing generic, simple, and performant primitives on which they can build
higher-level components. Applications can take advantage of the best tool for their needs, finding
the right balance between usability, performance, and reliability.&lt;/p&gt;
&lt;h2 id=&quot;why-does-the-web-need-another-storage-api&quot;&gt;Why does the web need another storage API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#why-does-the-web-need-another-storage-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The web platform offers a number of storage options for developers, each of which is built with
specific use-cases in mind.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some of these options clearly do not overlap with this proposal as they only allow very small
amounts of data to be stored, like
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies&quot; rel=&quot;noopener&quot;&gt;cookies&lt;/a&gt;, or the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot; rel=&quot;noopener&quot;&gt;Web Storage API&lt;/a&gt; consisting of
the &lt;code&gt;sessionStorage&lt;/code&gt; and the &lt;code&gt;localStorage&lt;/code&gt; mechanisms.&lt;/li&gt;
&lt;li&gt;Other options are already deprecated for various reasons like the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction&quot; rel=&quot;noopener&quot;&gt;File and Directory Entries API&lt;/a&gt;
or &lt;a href=&quot;https://www.w3.org/TR/webdatabase/&quot; rel=&quot;noopener&quot;&gt;WebSQL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt; has a similar API surface, but its use is to
interface with the client&#39;s file system and provide access to data that may be outside of the
origin&#39;s or even the browser&#39;s ownership. This different focus comes with stricter security
considerations and higher performance costs.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot; rel=&quot;noopener&quot;&gt;IndexedDB API&lt;/a&gt; can be used as
a backend for some of the Storage Foundation API&#39;s use-cases. For example, Emscripten includes
&lt;a href=&quot;https://emscripten.org/docs/api_reference/Filesystem-API.html&quot; rel=&quot;noopener&quot;&gt;IDBFS&lt;/a&gt;, an IndexedDB-based
persistent file system. However, since IndexedDB is fundamentally a key-value store, it comes with
significant performance limitations. Furthermore, directly accessing subsections of a file is even
more difficult and slower under IndexedDB.&lt;/li&gt;
&lt;li&gt;Finally, the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage&quot; rel=&quot;noopener&quot;&gt;CacheStorage interface&lt;/a&gt; is widely
supported and is tuned for storing large-sized data such as web application resources, but the
values are immutable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Storage Foundation API is an attempt at closing all the gaps of the previous storage options by
allowing for the performant storage of mutable large files defined within the origin of the
application.&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the Storage Foundation API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examples of sites that may use this API include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Productivity or creativity apps that operate on large amounts of video, audio, or image data. Such
apps can offload segments to disk instead of holding them in memory.&lt;/li&gt;
&lt;li&gt;Apps that rely on a persistent file system accessible from Wasm and that need more performance
than what IDBFS can guarantee.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the Storage Foundation API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are two main parts to the API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File system calls&lt;/strong&gt;, which provide basic functionality to interact with files and file paths.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File handles&lt;/strong&gt;, which provide read and write access to an existing file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;file-system-calls&quot;&gt;File system calls &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#file-system-calls&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Storage Foundation API introduces a new object, &lt;code&gt;storageFoundation&lt;/code&gt;, that lives on the &lt;code&gt;window&lt;/code&gt;
object and that includes a number of functions:&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;We are currently exploring the tradeoffs between providing a synchronous versus an
asynchronous API. The interfaces are designed to be asynchronous as a temporary measure and will be
updated once a decision has been reached. For more background on the tradeoffs, see the
&lt;a href=&quot;https://github.com/WICG/storage-foundation-api-explainer#sync-vs-async&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.open(name)&lt;/code&gt;: Opens the file with the given name if it exists and otherwise
creates a new file. Returns a promise that resolves with the the opened file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:  File names are restricted to lowercase alphanumeric characters and underscore
(&lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;). &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;A file can only be opened once. This means concurrent access from different tabs is
currently not possible. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.delete(name)&lt;/code&gt;: Removes the file with the given name. Returns a promise that
resolves when the file is deleted.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.rename(oldName, newName)&lt;/code&gt;: Renames the file from the old name to the new name
atomically. Returns a promise that resolves when the file is renamed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.getAll()&lt;/code&gt;: Returns a promise that resolves with an array of all existing file
names.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.requestCapacity(requestedCapacity)&lt;/code&gt;: Requests new capacity (in bytes) for usage
by the current execution context. Returns a promise that resolved with the remaining amount of
capacity available.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Storage Foundation API achieves fast and predictable performance by implementing its
own quota management system. Web applications must explicitly ask for capacity before storing any
new data. This request will be granted according to the browser&#39;s quota guidelines. Anytime an
application starts a new JavaScript execution context (e.g., a new tab, a new worker, or when
reloading the page), it must make sure it owns sufficient capacity before writing any data.&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.releaseCapacity(toBeReleasedCapacity)&lt;/code&gt;: Releases the specified number of bytes
from the current execution context, and returns a promise that resolves with the remaining
capacity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storageFoundation.getRemainingCapacity()&lt;/code&gt;: Returns a promise that resolves with the capacity
available for the current execution context.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;file-handles&quot;&gt;File handles &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#file-handles&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Working with files happens via the following functions:&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Storage Foundation API used to be called NativeIO. Some references to this name
still remain and will be removed eventually. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NativeIOFile.close()&lt;/code&gt;: Closes a file, and returns a promise that resolves when the operation
completes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NativeIOFile.flush()&lt;/code&gt;: Synchronizes (that is, flushes) a file&#39;s in-memory state with the storage
device, and returns a promise that resolves when the operation completes.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;It is a known issue that &lt;code&gt;flush()&lt;/code&gt; might be slow and we are exploring whether offering a
faster, less reliable variant would be useful. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NativeIOFile.getLength()&lt;/code&gt;: Returns a promise that resolves with the length of the file in bytes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NativeIOFile.setLength(length)&lt;/code&gt;: Sets the length of the file in bytes, and returns a promise that
resolves when the operation completes. If the new length is smaller than the current length, bytes
are removed starting from the end of the file. Otherwise the file is extended with zero-valued
bytes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NativeIOFile.read(buffer, offset)&lt;/code&gt;: Reads the contents of the file at the given offset through a
buffer that is the result of transferring the given buffer, which is then left detached. Returns a
&lt;code&gt;NativeIOReadResult&lt;/code&gt; with the transferred buffer and the the number of bytes that were
successfully read.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;NativeIOReadResult&lt;/code&gt; is an object that consists of two entries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffer&lt;/code&gt;: An
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ArrayBufferView&lt;/code&gt;&lt;/a&gt;, which is
the result of transferring the buffer passed to &lt;code&gt;read()&lt;/code&gt;. It is of the same type and length as
source buffer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readBytes&lt;/code&gt;: The number of bytes that were successfully read into &lt;code&gt;buffer&lt;/code&gt;. This may be less
than the buffer size, if an error occurs or if the read range spans beyond the end of the file.
It is set to zero if the read range is beyond the end of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NativeIOFile.write(buffer, offset)&lt;/code&gt;: Writes the contents of the given buffer into the file at the
given offset. The buffer is transferred before any data is written and is therefore left detached.
Returns a &lt;code&gt;NativeIOWriteResult&lt;/code&gt; with the transferred buffer and the number of bytes that were
successfully written. The file will be extended if the write range exceeds its length.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;NativeIOWriteResult&lt;/code&gt; is an object that consists of two entries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;buffer&lt;/code&gt;: An
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ArrayBufferView&lt;/code&gt;&lt;/a&gt; which is
the result of transferring the buffer passed to &lt;code&gt;write()&lt;/code&gt;. It is of the same type and length as
the source buffer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;writtenBytes&lt;/code&gt;: The number of bytes that were successfully written into &lt;code&gt;buffer&lt;/code&gt;. This may be
less than the buffer size if an error occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Calls to &lt;code&gt;NativeIOFile.write()&lt;/code&gt; only guarantee that the data has been written to the
file, but it does not guarantee that the data has been persisted to the underlying storage. To
ensure that no data loss occurs on system crash, you must call &lt;code&gt;NativeIOFile.flush()&lt;/code&gt; and wait for
it to successfully return. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/storage-foundation-api-explainer#readme&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/storage-foundation/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. &lt;strong&gt;Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/2916080758722396161&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;There is currently an
&lt;a href=&quot;https://docs.google.com/document/d/1g7ZCqZ5NdiU7oqyCpsc2iZ7rRAY1ZXO-9VoG4LfP7fM/edit?usp=sharing&quot; rel=&quot;noopener&quot;&gt;ongoing effort&lt;/a&gt;
to augment the
&lt;a href=&quot;https://web.dev/file-system-access/#accessing-the-origin-private-file-system&quot;&gt;origin private file system&lt;/a&gt;
of the &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt; as to not introduce yet another entry point
for a storage system. This article will be updated as we make progress on this. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use the Storage Foundation API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with the Storage Foundation API locally, without an origin trial token, enable the
&lt;code&gt;#experimental-web-platform-features&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chromium 90, the Storage Foundation API is available as an origin trial in
Chromium. The origin trial is expected to end in Chromium 95 (November 10, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/2916080758722396161&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To check if the Storage Foundation API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;storageFoundation&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The Storage Foundation API is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;complete-examples&quot;&gt;Complete examples &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#complete-examples&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To make the concepts introduced above clearer, here are two complete examples that walk you through
the different stages in the lifecycle of Storage Foundation files.&lt;/p&gt;
&lt;h4 id=&quot;opening-writing-reading-closing&quot;&gt;Opening, writing, reading, closing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#opening-writing-reading-closing&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Open a file (creating it if needed).&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;test_file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Request 100 bytes of capacity for this context.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestCapacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writeBuffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Write the buffer at offset 0. After this operation, `result.buffer`&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// contains the transferred buffer and `result.writtenBytes` is 3,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// the number of bytes written. `writeBuffer` is left detached.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;writeBuffer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; readBuffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Read at offset 1. `result.buffer` contains the transferred buffer,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// `result.readBytes` is 2, the number of bytes read. `readBuffer` is left&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// detached.&lt;/span&gt;&lt;br /&gt;  result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;readBuffer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// `Uint8Array(3) [65, 66, 0]`&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;buffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;opening-listing-deleting&quot;&gt;Opening, listing, deleting &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#opening-listing-deleting&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Open three different files (creating them if needed).&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;sunrise&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;noon&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;sunset&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// List all existing files.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// `[&quot;sunset&quot;, &quot;sunrise&quot;, &quot;noon&quot;]`&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Delete one of the three files.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;noon&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// List all remaining existing files.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// `[&quot;sunrise&quot;, &quot;noon&quot;]`&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; storageFoundation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can play with the &lt;a href=&quot;https://storage-foundation.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Storage Foundation API demo&lt;/a&gt; in the embed below. Create, rename, write
into, and read from files, and see the available capacity you have requested update as you make
changes. You can find the &lt;a href=&quot;https://glitch.com/edit/#!/storage-foundation&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt; of the demo on Glitch.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/storage-foundation?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;storage-foundation on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented the Storage Foundation API using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics.&lt;/p&gt;
&lt;p&gt;Following the same pattern as other modern storage APIs on the web, access to the Storage Foundation
API is origin-bound, meaning that an origin may only access self-created data. It is also limited to
secure contexts.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Storage quota will be used to distribute access to disk space and to prevent abuse. Memory you want
to occupy needs to be requested first. Like other storage APIs, users can clear the space taken by
Storage Foundation API through their browser.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with the Storage Foundation API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/storage-foundation-api-explainer/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;Blink&amp;gt;Storage&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt; box.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Storage Foundation API? Your public support helps the Chromium team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23StorageFoundation&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#StorageFoundation&lt;/code&gt;&lt;/a&gt;
and let us know where and how you are using it. Ask a question on StackOverflow with the hashtag
&lt;a href=&quot;https://stackoverflow.com/questions/tagged/file-system-access-api&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#file-system-access-api&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/storage-foundation-api-explainer#readme&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://storage-foundation.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Storage Foundation API demo&lt;/a&gt; | &lt;a href=&quot;https://glitch.com/edit/#!/storage-foundation&quot; rel=&quot;noopener&quot;&gt;Storage Foundation API demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=914488&quot; rel=&quot;noopener&quot;&gt;Chromium tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5670244905385984&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://chromestatus.com/features#component%3ABlink%3EStorage&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Blink&amp;gt;Storage&amp;gt;NativeIO&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/566&quot; rel=&quot;noopener&quot;&gt;TAG Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/gh0gTHO18YQ&quot; rel=&quot;noopener&quot;&gt;Intent to Prototype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2021-February/031687.html&quot; rel=&quot;noopener&quot;&gt;WebKit thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/481&quot; rel=&quot;noopener&quot;&gt;Mozilla thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/storage-foundation/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Storage Foundation API was specified and implemented by
&lt;a href=&quot;https://github.com/fivedots&quot; rel=&quot;noopener&quot;&gt;Emanuel Krivoy&lt;/a&gt; and &lt;a href=&quot;https://github.com/rstz&quot; rel=&quot;noopener&quot;&gt;Richard Stotz&lt;/a&gt;. This
article was reviewed by &lt;a href=&quot;https://github.com/petele&quot; rel=&quot;noopener&quot;&gt;Pete LePage&lt;/a&gt; and
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hero image via &lt;a href=&quot;https://unsplash.com/@markusspiske&quot; rel=&quot;noopener&quot;&gt;Markus Spiske&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/iar-afB0QQw&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Add a web app manifest</title>
    <link href="https://web.dev/add-manifest/"/>
    <updated>2018-11-05T00:00:00Z</updated>
    <id>https://web.dev/add-manifest/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The web app manifest is a JSON file that tells the browser about your
Progressive Web App and how it should behave when installed on the user&#39;s
desktop or mobile device. A typical manifest file includes the app name, the
icons the app should use, and the URL that should be opened when the
app is launched.&lt;/p&gt;
&lt;p&gt;Manifest files are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Manifest#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;supported&lt;/a&gt; in Chrome, Edge, Firefox, UC Browser, Opera,
and the Samsung browser. Safari has partial support.&lt;/p&gt;
&lt;h2 id=&quot;create&quot;&gt;Create the manifest file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#create&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The manifest file can have any name, but is commonly named &lt;code&gt;manifest.json&lt;/code&gt; and
served from the root (your website&#39;s top-level directory). The specification
suggests the extension should be &lt;code&gt;.webmanifest&lt;/code&gt;, but browsers also support
&lt;code&gt;.json&lt;/code&gt; extensions, which is may be easier for developers to understand.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Weather&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Weather: Do I need an umbrella?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/icons-192.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;192x192&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/icons-512.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;512x512&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;start_url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/?source=pwa&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;background_color&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#3367D6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;theme_color&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#3367D6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;shortcuts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;How&#39;s weather today?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Today&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;View weather information for today&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/today?source=pwa&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/today.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;192x192&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;How&#39;s weather tomorrow?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Tomorrow&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;View weather information for tomorrow&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/tomorrow?source=pwa&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/tomorrow.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;192x192&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Weather forecast information&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;screenshots&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/screenshot1.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;540x720&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/images/screenshot2.jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;540x720&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;manifest-properties&quot;&gt;Key manifest properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#manifest-properties&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;name&quot;&gt;&lt;code&gt;short_name&lt;/code&gt; and/or &lt;code&gt;name&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#name&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You must provide at least the &lt;code&gt;short_name&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt; property. If both are
provided, &lt;code&gt;short_name&lt;/code&gt; is used on the user&#39;s home screen, launcher, or other
places where space may be limited. &lt;code&gt;name&lt;/code&gt; is used when the app is installed.&lt;/p&gt;
&lt;h4 id=&quot;icons&quot;&gt;&lt;code&gt;icons&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#icons&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;When a user installs your PWA, you can define a set of icons for the browser
to use on the home screen, app launcher, task switcher, splash screen, and so on.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;icons&lt;/code&gt; property is an array of image objects. Each object must
include the &lt;code&gt;src&lt;/code&gt;, a &lt;code&gt;sizes&lt;/code&gt; property, and the &lt;code&gt;type&lt;/code&gt; of image. To use
&lt;a href=&quot;https://web.dev/maskable-icon/&quot;&gt;maskable icons&lt;/a&gt;, sometimes referred to as adaptive
icons on Android, you&#39;ll also need to add &lt;code&gt;&amp;quot;purpose&amp;quot;: &amp;quot;any maskable&amp;quot;&lt;/code&gt; to the
&lt;code&gt;icon&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;For Chrome, you must provide at least a 192x192 pixel icon, and a 512x512
pixel icon. If only those two icon sizes are provided, Chrome will
automatically scale the icons to fit the device. If you&#39;d prefer to scale your
own icons, and adjust them for pixel-perfection, provide icons in increments
of 48dp.&lt;/p&gt;
&lt;h4 id=&quot;start-url&quot;&gt;&lt;code&gt;start_url&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#start-url&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;start_url&lt;/code&gt; is required and tells the browser where your application
should start when it is launched, and prevents the app from starting on
whatever page the user was on when they added your app to their home screen.&lt;/p&gt;
&lt;p&gt;Your &lt;code&gt;start_url&lt;/code&gt; should direct the user straight into your app, rather than
a product landing page. Think about what the user will want to do once
they open your app, and place them there.&lt;/p&gt;
&lt;h4 id=&quot;background-color&quot;&gt;&lt;code&gt;background_color&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#background-color&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;background_color&lt;/code&gt; property is used on the splash screen when the
application is first launched on mobile.&lt;/p&gt;
&lt;h4 id=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#display&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You can customize what browser UI is shown when your app is launched. For
example, you can hide the address bar and browser chrome. Games can even
be made to launch full screen.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table id=&quot;display-params&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
        &lt;th&gt;&lt;strong&gt;Use&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;fullscreen&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          Opens the web application without any browser UI and takes
          up the entirety of the available display area.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;standalone&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          Opens the web app to look and feel like a standalone
          app. The app runs in its own window, separate from the browser, and
          hides standard browser UI elements like the URL bar.
          &lt;figure class=&quot;w-figure&quot;&gt;
            &lt;img alt=&quot;An example of a PWA window with standalone display.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;196&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/XdBsDeRZozIyXyiXA59n.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
          &lt;/figure&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;minimal-ui&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          This mode is similar to &lt;code&gt;standalone&lt;/code&gt;, but provides the
          user a minimal set of UI elements for controlling navigation (such
          as back and reload).
          &lt;figure class=&quot;w-figure&quot;&gt;
            &lt;img alt=&quot;An example of a PWA window with minimal-ui display.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;196&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/trPwjcMio7tBKGBNoT9u.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
          &lt;/figure&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;browser&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;A standard browser experience.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&quot;display-override&quot;&gt;&lt;code&gt;display_override&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#display-override&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Web apps can choose how they are displayed by setting a &lt;code&gt;display&lt;/code&gt; mode in their manifest as
&lt;a href=&quot;https://web.dev/add-manifest/#display&quot;&gt;explained above&lt;/a&gt;. Browsers are &lt;em&gt;not&lt;/em&gt; required to support all display modes, but they
&lt;em&gt;are&lt;/em&gt; required to support the
&lt;a href=&quot;https://w3c.github.io/manifest/#dfn-fallback-display-mode&quot; rel=&quot;noopener&quot;&gt;spec-defined fallback chain&lt;/a&gt;
(&lt;code&gt;&amp;quot;fullscreen&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt;). If they don&#39;t support a given
mode, they fall back to the next display mode in the chain. This inflexible behavior can be
problematic in rare cases, for example, a developer cannot request &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; without being
forced back into the &lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt; display mode when &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; is not supported.
Another problem is that the current behavior makes it impossible to introduce new display
modes in a backward compatible way, since explorations like tabbed application mode don&#39;t have a
natural place in the fallback chain.&lt;/p&gt;
&lt;p&gt;These problems are solved by the &lt;code&gt;display_override&lt;/code&gt; property, which the browser considers &lt;em&gt;before&lt;/em&gt;
the &lt;code&gt;display&lt;/code&gt; property. Its value is a sequence of strings that are considered in the listed order, and the
first supported display mode is applied. If none are supported, the browser falls back to evaluating
the &lt;code&gt;display&lt;/code&gt; field.&lt;/p&gt;
&lt;p&gt;In the example below, the display mode fallback chain would be as follows.
(The details of &lt;code&gt;&amp;quot;window-control-overlay&amp;quot;&lt;/code&gt; are out-of-scope for this article.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;window-control-overlay&amp;quot;&lt;/code&gt; (First, look at &lt;code&gt;display_override&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; (When &lt;code&gt;display_override&lt;/code&gt; is exhausted, evaluate &lt;code&gt;display&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; (Finally, use the &lt;code&gt;display&lt;/code&gt; fallback chain.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display_override&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;window-control-overlay&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;minimal-ui&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The browser will not consider &lt;code&gt;display_override&lt;/code&gt; unless &lt;code&gt;display&lt;/code&gt; is also present.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#scope&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;scope&lt;/code&gt; defines the set of URLs that the browser considers to be within your
app, and is used to decide when the user has left the app. The &lt;code&gt;scope&lt;/code&gt;
controls the URL structure that encompasses all the entry and exit points in
your web app. Your &lt;code&gt;start_url&lt;/code&gt; must reside within the &lt;code&gt;scope&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
If the user clicks a link in your app that navigates outside of the
&lt;code&gt;scope&lt;/code&gt;, the link will open and render within the existing PWA window. If
you want the link to open in a browser tab, you must add &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt;
to the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag. On Android, links with &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt; will open in a
&lt;a href=&quot;https://developer.chrome.com/multidevice/android/customtabs&quot; rel=&quot;noopener&quot;&gt;Chrome Custom Tab&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A few other notes on &lt;code&gt;scope&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you don&#39;t include a &lt;code&gt;scope&lt;/code&gt; in your manifest, then the default implied
&lt;code&gt;scope&lt;/code&gt; is the directory that your web app manifest is served from.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;scope&lt;/code&gt; attribute can be a relative path (&lt;code&gt;../&lt;/code&gt;), or any higher level
path (&lt;code&gt;/&lt;/code&gt;) which would allow for an increase in coverage of navigations
in your web app.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;start_url&lt;/code&gt; must be in the scope.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;start_url&lt;/code&gt; is relative to the path defined in the &lt;code&gt;scope&lt;/code&gt; attribute.&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;start_url&lt;/code&gt; starting with &lt;code&gt;/&lt;/code&gt; will always be the root of the origin.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;theme-color&quot;&gt;&lt;code&gt;theme_color&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#theme-color&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;theme_color&lt;/code&gt; sets the color of the tool bar, and may be reflected in
the app&#39;s preview in task switchers. The &lt;code&gt;theme_color&lt;/code&gt; should match the
&lt;code&gt;meta&lt;/code&gt; theme color specified in your document head.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example of a PWA window with custom theme_color.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;196&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/8mkBdT3O0FZLo0PUppvv.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;As of Chromium 93 and Safari 15, you can adjust this color based on a
media query with the &lt;code&gt;media&lt;/code&gt; attribute of the &lt;code&gt;meta&lt;/code&gt; theme color element. The
first one that matches will be picked. For example, you could have one color for
light mode and another one for dark mode. At the time of writing, you can&#39;t
define those in your manifest. See &lt;a href=&quot;https://github.com/w3c/manifest/issues/975&quot; rel=&quot;noopener&quot;&gt;w3c/manifest#975 GitHub
issue&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;theme-color&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(prefers-color-scheme: light)&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;white&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;theme-color&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(prefers-color-scheme: dark)&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;black&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;shortcuts&quot;&gt;&lt;code&gt;shortcuts&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#shortcuts&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;shortcuts&lt;/code&gt; property is an array of &lt;a href=&quot;https://web.dev/app-shortcuts&quot;&gt;app shortcut&lt;/a&gt; objects
whose goal is to provide quick access to key tasks within your app. Each member
is a dictionary that contains at least a &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;description&quot;&gt;&lt;code&gt;description&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#description&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;description&lt;/code&gt; property describes the purpose of your app.&lt;/p&gt;
&lt;h4 id=&quot;screenshots&quot;&gt;&lt;code&gt;screenshots&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#screenshots&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;screenshots&lt;/code&gt; property is an array of image objects, representing your app
in common usage scenarios. Each object must include the &lt;code&gt;src&lt;/code&gt;, a &lt;code&gt;sizes&lt;/code&gt;
property, and the &lt;code&gt;type&lt;/code&gt; of image.&lt;/p&gt;
&lt;p&gt;In Chrome, the image must respond to certain criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Width and height must be at least 320px and at most 3840px.&lt;/li&gt;
&lt;li&gt;The maximum dimension can&#39;t be more than 2.3 times as long as the minimum
dimension.&lt;/li&gt;
&lt;li&gt;Screenshots must have the same aspect ratio.&lt;/li&gt;
&lt;li&gt;Only JPEG and PNG image formats are supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;The &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;screenshots&lt;/code&gt; properties are currently used only in Chrome
for Android when a user wants to install your app. The experimental flag
&lt;code&gt;about://flags/#mobile-pwa-install-use-bottom-sheet&lt;/code&gt; flag must be enabled in
Chrome 90.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;link-manifest&quot;&gt;Add the web app manifest to your pages &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#link-manifest&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After creating the manifest, add a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag to all the pages of your
Progressive Web App. For example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;manifest&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/manifest.json&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;The request for the manifest is made &lt;strong&gt;without&lt;/strong&gt; credentials (even if it&#39;s
on the same domain), thus if the manifest requires credentials, you must
include &lt;code&gt;crossorigin=&amp;quot;use-credentials&amp;quot;&lt;/code&gt; in the manifest tag.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;test-manifest&quot;&gt;Test your manifest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#test-manifest&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To verify your manifest is setup correctly, use the &lt;strong&gt;Manifest&lt;/strong&gt; pane in the
&lt;strong&gt;Application&lt;/strong&gt; panel of Chrome DevTools.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The application panel in Chrome Devtools with the manifest tab selected.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/FpIOY0Ak6FAA5xMuB9IT.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;This pane provides a human-readable version of many of your manifest&#39;s
properties, and makes it easy to verify that all of the images are loading
properly.&lt;/p&gt;
&lt;h2 id=&quot;splash-screen&quot;&gt;Splash screens on mobile &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#splash-screen&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When your app first launches on mobile, it can take a moment for the browser
to spin up, and the initial content to begin rendering. Instead of showing a
white screen that may look to the user like the app is stalled, the browser
will show a splash screen until the first paint.&lt;/p&gt;
&lt;p&gt;Chrome automatically creates the splash screen from the manifest
properties, specifically:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;background_color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icons&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;background_color&lt;/code&gt; should be the same color as the load page, to provide
a smooth transition from the splash screen to your app.&lt;/p&gt;
&lt;p&gt;Chrome will choose the icon that closely matches the device resolution for the
device. Providing 192px and 512px icons is sufficient for most cases, but
you can provide additional icons for pixel perfection.&lt;/p&gt;
&lt;div class=&quot;w-clearfix&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;h2 id=&quot;further-reading&quot;&gt;Further reading &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/add-manifest/#further-reading&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are several additional properties that can be added to the web app
manifest. Refer to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Manifest&quot; rel=&quot;noopener&quot;&gt;MDN Web App Manifest documentation&lt;/a&gt;
for more information.
You can learn more about &lt;code&gt;display_override&lt;/code&gt; in the
&lt;a href=&quot;https://github.com/WICG/display-override/blob/master/explainer.md&quot; rel=&quot;noopener&quot;&gt;explainer&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Pete LePage</name>
    </author><author>
      <name>François Beaufort</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Choose how in-scope links open your PWA with Declarative Link Capturing</title>
    <link href="https://web.dev/declarative-link-capturing/"/>
    <updated>2021-05-19T00:00:00Z</updated>
    <id>https://web.dev/declarative-link-capturing/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Declarative Link Capturing is part of the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is currently in development. This post will
be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;what&quot;&gt;What is Declarative Link Capturing? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Clicking links on the web can sometimes be a pleasant surprise. For example, clicking a web page link to YouTube on a mobile device opens the YouTube iOS or Android app, if it is installed.
But when you install the &lt;a href=&quot;https://www.youtube.com/&quot; rel=&quot;noopener&quot;&gt;YouTube PWA&lt;/a&gt; on a desktop computer and click a
link, it opens in… 🥁 a browser tab.&lt;/p&gt;
&lt;p&gt;But it gets more complex. What if the link appears not in a website, but in a chat message that you
receive in one of Google&#39;s chat apps? On desktop operating systems that have the notion of
separate app windows, if the app is open already, should a new window or tab be created for each
link click that is captured? When you think about it, there are many ways links and navigations can
be captured, including, but not limited to, the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clicked links from other web pages.&lt;/li&gt;
&lt;li&gt;URL launches from a platform-specific app in the operating system.&lt;/li&gt;
&lt;li&gt;Navigations originating from the &lt;a href=&quot;https://web.dev/app-shortcuts/&quot;&gt;App Shortcuts API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Links that go through &lt;a href=&quot;https://web.dev/url-protocol-handler/&quot;&gt;URL protocol handlers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Navigations caused by &lt;a href=&quot;https://web.dev/file-handling/&quot;&gt;file handlers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Navigations caused by the &lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Share Target API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…and others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Declarative Link Capturing is a proposal for a web app manifest property called
&lt;code&gt;&amp;quot;capture_links&amp;quot;&lt;/code&gt; that lets developers determine declaratively what should happen when the browser
is asked to navigate to a URL that is within the application&#39;s navigation scope, from a context
outside of the navigation scope. This proposal does not apply if the user is already within the
navigation scope (for instance, if the user has a browser tab open that is within scope, and clicks
an internal link).&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--key-term&quot;&gt;
&lt;p&gt;&lt;strong&gt;Key Term&lt;/strong&gt;:  The &lt;a href=&quot;https://web.dev/add-manifest/#scope&quot;&gt;navigation scope&lt;/a&gt; of a web
app manifest is the &lt;code&gt;&amp;quot;scope&amp;quot;&lt;/code&gt; item of a processed manifest. The navigation scope restricts
the set of URLs to which an application context can be navigated while the manifest is applied. If
the &lt;code&gt;&amp;quot;scope&amp;quot;&lt;/code&gt; member is not present in the manifest, it defaults to the parent path of the
&lt;code&gt;&amp;quot;start_url&amp;quot;&lt;/code&gt; member. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Some special conditions like middle-clicking a link (or right-clicking and then &amp;quot;open in new tab&amp;quot;)
would typically not trigger the link capturing behavior. Whether a link is &lt;code&gt;target=_self&lt;/code&gt; or
&lt;code&gt;target=_blank&lt;/code&gt; does not matter, so that links clicked in a browser window (or window of a different
PWA) would be opened in the PWA even if they would normally cause a navigation within the same tab.&lt;/p&gt;
&lt;h2 id=&quot;suggested-use-cases&quot;&gt;Suggested use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#suggested-use-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Examples of sites that may use this API include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PWAs that want to open a window, rather than a browser tab, when the user clicks on a link to
them. In a desktop environment, it often makes sense to have multiple application windows open at
a time.&lt;/li&gt;
&lt;li&gt;Single-window PWAs where the developer prefers to only have a single instance of the app open at
any time, with new navigations focusing the existing instance. Sub-use cases include:
&lt;ul&gt;
&lt;li&gt;Apps for which it make sense to have only one instance running (e.g., a music player, a game).&lt;/li&gt;
&lt;li&gt;Apps that include multi-document management within a single instance (e.g., an HTML-implemented
tab strip).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/w3c/manifest/issues/764&quot; rel=&quot;noopener&quot;&gt;In Progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/declarative-link-capturing/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4. Origin trial&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/4285175045443026945&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt; (on Chrome OS)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with Declarative Link Capturing locally, without an origin trial token, enable the
&lt;code&gt;#enable-desktop-pwas-link-capturing&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chromium 91, Declarative Link Capturing will be available as an origin trial in
Chromium. The origin trial is expected to end in Chromium 94 (October 13, 2021).&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:  The origin trial is initially limited to Chrome OS.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/4285175045443026945&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use Declarative Link Capturing? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Developers can declaratively determine how links should be captured by leveraging the additional web
app manifest field &lt;code&gt;&amp;quot;capture_links&amp;quot;&lt;/code&gt;. It takes a string or a an array of strings as its
value. If an array of strings is given, the user agent chooses the first supported item in the list,
defaulting to &lt;code&gt;&amp;quot;none&amp;quot;&lt;/code&gt;. The following values are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;none&amp;quot;&lt;/code&gt; (the default): No link capturing; links clicked leading to this PWA scope navigate as
normal without opening a PWA window.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;new-client&amp;quot;&lt;/code&gt;: Each clicked link opens a new PWA window at that URL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;existing-client-navigate&amp;quot;&lt;/code&gt;: The clicked link opens in an existing PWA window, if one is available, or in a new window if it is not. If more than one PWA
window exists, the browser may choose one arbitrarily. This behaves like &lt;code&gt;&amp;quot;new-client&amp;quot;&lt;/code&gt; if no
window is currently open. 🚨 Careful! This option potentially leads to data loss, as pages can be
arbitrarily navigated away from. Sites should be aware that they are opting into such behavior by
choosing this option. This option works best for &amp;quot;read-only&amp;quot; sites that do not hold user data in
memory, such as music players. If the page being navigated away from has a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;beforeunload&lt;/code&gt; event&lt;/a&gt;,
the user would see the prompt before the navigation completes.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;There is discussion about adding options that do not open
a window at all, but instead fire a &lt;code&gt;launch&lt;/code&gt; event in a chosen foreground window or the service
worker. See the &lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;launch&lt;/code&gt; event explainer&lt;/a&gt;
for details, and, more specifically, the sections on
&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md#:~:text=completes-,existing-client-event,-when&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;existing-client-event&lt;/code&gt;&lt;/a&gt;
and
&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md#:~:text=future-,serviceworker,-doesn&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;service-worker&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The demo for Declarative Link Capturing actually consists of two demos that interact together:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://continuous-harvest-tomato.glitch.me/&quot; rel=&quot;noopener&quot;&gt;https://continuous-harvest-tomato.glitch.me/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hill-glitter-tree.glitch.me/&quot; rel=&quot;noopener&quot;&gt;https://hill-glitter-tree.glitch.me/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The screencast below shows how the two interact. They show two different behaviors,
&lt;code&gt;&amp;quot;new-client&amp;quot;&lt;/code&gt; and &lt;code&gt;&amp;quot;existing-client-navigate&amp;quot;&lt;/code&gt;. Be sure to test the apps in different states,
running in a tab or as an installed PWA, to see the difference in behavior.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/pj3ehpntEg50WcnA2khM.webm&quot; type=&quot;video/webm&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented Declarative Link Capturing using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics. This API allows sites new additional control options. First,
being able to automatically open installed apps in a window. This uses existing UI but makes it
possible for the site to automatically trigger it. Second, the capability to focus an existing
window on its own domain and fire an event containing the clicked URL. This is intended to allow the
site to navigate an existing window to a new page, overriding the default HTML navigation flow.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with Declarative Link Capturing.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/sw-launch/issues/&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt;
box. &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use Declarative Link Capturing? Your public support helps the Chromium team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23DeclarativeLinkCapturing&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#DeclarativeLinkCapturing&lt;/code&gt;&lt;/a&gt;
and let us know where and how you are using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/manifest/issues/764&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/1163398&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/2ZnA1IrSpS8/m/7wx6dENTAwAJ&quot; rel=&quot;noopener&quot;&gt;Intent to Prototype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/q6ivDcvAJwQ/m/XTlva-lGBQAJ&quot; rel=&quot;noopener&quot;&gt;Intent to Experiment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5734953453092864&quot; rel=&quot;noopener&quot;&gt;ChromeStatus entry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/declarative-link-capturing/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Declarative Link Capturing was specified by &lt;a href=&quot;https://twitter.com/mgiuca&quot; rel=&quot;noopener&quot;&gt;Matt Giuca&lt;/a&gt; with input from
Alan Cutter and &lt;a href=&quot;https://twitter.com/dominickng&quot; rel=&quot;noopener&quot;&gt;Dominick Ng&lt;/a&gt;. The API was implemented by Alan
Cutter. This article was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, Matt Giuca, Alan
Cutter, and &lt;a href=&quot;https://github.com/sisidovski&quot; rel=&quot;noopener&quot;&gt;Shunya Shishido&lt;/a&gt;.
Hero image by &lt;a href=&quot;https://unsplash.com/@zulmaury&quot; rel=&quot;noopener&quot;&gt;Zulmaury Saavedra&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/zh0J32MrJfA&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Concluding thoughts about mini apps from a web developer</title>
    <link href="https://web.dev/mini-app-conclusion/"/>
    <updated>2021-03-03T00:00:00Z</updated>
    <id>https://web.dev/mini-app-conclusion/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This post is part of an article collection where each article builds upon previous articles.
If you just landed here, you may want to start reading from the &lt;a href=&quot;https://web.dev/mini-app-super-apps/&quot;&gt;beginning&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;where-does-this-leave-us&quot;&gt;Where does this leave us? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mini-app-conclusion/#where-does-this-leave-us&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Writing and researching mini apps has been quite a ride, but one that I do not regret. On the one
hand, the success and the popularity of mini apps have proven their creators right about their approach. On the other
hand, though, this success is geographically concentrated in regions where the few popular super
apps are dominant, at least at the time of writing. What is undoubtedly true is that the ecosystem
is highly fascinating and well worth a look. This collection of articles has provided deep-dives
into many of the aspects that make a difference when using and creating mini apps. From the
&lt;a href=&quot;https://web.dev/mini-app-devtools/&quot;&gt;DevTools&lt;/a&gt; experience to the
&lt;a href=&quot;https://web.dev/mini-app-markup-styling-and-scripting/#markup-languages&quot;&gt;mark-up&lt;/a&gt;,
&lt;a href=&quot;https://web.dev/mini-app-markup-styling-and-scripting/#styling&quot;&gt;styling&lt;/a&gt;, and
&lt;a href=&quot;https://web.dev/mini-app-markup-styling-and-scripting/#scripting&quot;&gt;scripting&lt;/a&gt; approaches, over to the
&lt;a href=&quot;https://web.dev/mini-app-components/&quot;&gt;component model&lt;/a&gt;, and finally to the overall
&lt;a href=&quot;https://web.dev/mini-app-project-structure-lifecycle-and-bundling/&quot;&gt;architecture&lt;/a&gt;; mini apps provide learning and
inspiration opportunities for app developers, and even so for those who purely aim for the web.&lt;/p&gt;
&lt;p&gt;My initial experiments with
&lt;a href=&quot;https://web.dev/mini-app-example-project/&quot;&gt;building a web application the mini app way&lt;/a&gt; were
successful. Future work will show to what extent this model is performant and flexible enough to
cater for the many shapes that web apps can take. My current &lt;em&gt;ad-hoc&lt;/em&gt; approach can be formalized by
packaging up the relevant pieces of code in a dedicated library, &lt;code&gt;mini-app.js&lt;/code&gt; if you will. What is
interesting is that this kind of programming goes back all the way to &lt;code&gt;frameset&lt;/code&gt;. Just that today it
is about applications and not documents.&lt;/p&gt;
&lt;p&gt;I see great potential for improvement with the entire web development experience by taking
inspiration from the various mini apps DevTools. From the easy
&lt;a href=&quot;https://web.dev/mini-app-devtools/#simulator-and-real-device-testing-and-debugging&quot;&gt;(remote) on-device testing feature&lt;/a&gt;
to the packaging and &lt;a href=&quot;https://web.dev/mini-app-project-structure-lifecycle-and-bundling/#the-build-process&quot;&gt;building&lt;/a&gt;
experience; the integration of the &lt;a href=&quot;https://web.dev/mini-app-devtools/#mini-app-ides&quot;&gt;IDE&lt;/a&gt; with the DevTools
environment offers a lot of starting points for making developers&#39; lives easier.&lt;/p&gt;
&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mini-app-conclusion/#closing-thoughts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;From a features point of view, the web is becoming more and more powerful
with each release of essentially &lt;em&gt;any&lt;/em&gt; browser. The ever-growing
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;list of capabilities&lt;/a&gt; makes use cases possible on the web that were unthinkable a
mere year ago. At the same time, the need for
&lt;a href=&quot;https://web.dev/mini-app-standardization/&quot;&gt;mini apps standardization&lt;/a&gt; shows that developers are not willing or
able to build the same mini app for each super app. On the horizon maybe there is a desire for an
abstraction layer on the browser level that allows for mini apps to run on the web, while noting that
the web is not immune from fragmentation, especially when looking at different browser vendors and
what they choose to implement and what not. Concluding, I am looking forward to seeing where all
this is headed. Thinking outside of the box and taking input and inspiration from outside of one&#39;s
own bubble can definitely help when building a better future on the web.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
Congratulations, you have reached the end of the &lt;a href=&quot;https://web.dev/mini-apps/&quot;&gt;mini apps collection&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mini-app-conclusion/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;,
&lt;a href=&quot;https://github.com/kaycebasques&quot; rel=&quot;noopener&quot;&gt;Kayce Basques&lt;/a&gt;,
&lt;a href=&quot;https://github.com/mihajlija&quot; rel=&quot;noopener&quot;&gt;Milica Mihajlija&lt;/a&gt;,
&lt;a href=&quot;https://github.com/alankent&quot; rel=&quot;noopener&quot;&gt;Alan Kent&lt;/a&gt;,
and Keith Gu.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Tabbed application mode for PWAs</title>
    <link href="https://web.dev/tabbed-application-mode/"/>
    <updated>2021-02-25T00:00:00Z</updated>
    <id>https://web.dev/tabbed-application-mode/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Tabbed application mode is part of the
&lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and is currently in development. This post
will be updated as the implementation progresses. Tabbed application mode is an early-stage
exploration of the Chrome team. It is not ready for production yet.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the world of computing, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Desktop_metaphor&quot; rel=&quot;noopener&quot;&gt;desktop metaphor&lt;/a&gt; is
an interface metaphor that is a set of unifying concepts used by graphical user interfaces (GUI) to
help users interact more easily with the computer. In keeping with the desktop metaphor, GUI tabs
are modeled after traditional card tabs inserted in books, paper files, or card indexes. A &lt;em&gt;tabbed
document interface&lt;/em&gt; (TDI) or tab is a graphical control element that allows multiple documents or
panels to be contained within a single window, using tabs as a navigational widget for switching
between sets of documents.&lt;/p&gt;
&lt;p&gt;Progressive Web Apps can run in &lt;a href=&quot;https://web.dev/add-manifest/#display&quot;&gt;various display modes&lt;/a&gt; determined by the
&lt;code&gt;display&lt;/code&gt; property in the web app manifest. Examples are &lt;code&gt;fullscreen&lt;/code&gt;, &lt;code&gt;standalone&lt;/code&gt;, &lt;code&gt;minimal-ui&lt;/code&gt;,
and &lt;code&gt;browser&lt;/code&gt;. These display modes follow a
&lt;a href=&quot;https://w3c.github.io/manifest/#dfn-fallback-display-mode&quot; rel=&quot;noopener&quot;&gt;well-defined fallback chain&lt;/a&gt;
(&lt;code&gt;&amp;quot;fullscreen&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt;). If a browser does not support a
given mode, it falls back to the next display mode in the chain.
Via the &lt;a href=&quot;https://web.dev/display-override/&quot;&gt;&lt;code&gt;&amp;quot;display_override&amp;quot;&lt;/code&gt;&lt;/a&gt; property, developers can specify their own
fallback chain if they need to.&lt;/p&gt;
&lt;h2 id=&quot;what-is-tabbed-application-mode&quot;&gt;What is tabbed application mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#what-is-tabbed-application-mode&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Something that has been missing from the platform so far is a way to let PWA developers offer their
users a tabbed document interface, for example, to enable editing different files in the same PWA
window. Tabbed application mode closes this gap.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This feature is about having a standalone app window with multiple tabs (containing
separate documents inside the app scope) inside it. It is not to be confused with
the existing &lt;code&gt;&amp;quot;display&amp;quot;: &amp;quot;browser&amp;quot;&lt;/code&gt;, which has a separate meaning (specifically, that
the app is opened in a regular browser tab).&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;suggested-use-cases-for-tabbed-application-mode&quot;&gt;Suggested use cases for tabbed application mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#suggested-use-cases-for-tabbed-application-mode&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examples of sites that may use tabbed application mode include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Productivity apps that let the user edit more than one document (or file) at the same time.&lt;/li&gt;
&lt;li&gt;Communication apps that let the user have conversations in different rooms per tab.&lt;/li&gt;
&lt;li&gt;Reading apps that open article links in new in-app tabs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;differences-to-developer-built-tabs&quot;&gt;Differences to developer-built tabs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#differences-to-developer-built-tabs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Having documents in separate browser tabs comes with resource isolation for free, which is not
possible using the web today. Developer-built tabs would not scale acceptably to hundreds of tabs
like browser tabs do. Developer-built tabs could also not be dragged out of the window to split into
a separate application window, or be dragged back in to combine them back into a single window.
Browser affordances such as navigation history, &amp;quot;Copy this page URL&amp;quot;, &amp;quot;Cast this tab&amp;quot; or &amp;quot;Open this
page in a web browser&amp;quot; would be applied to the developer-built tabbed interface page, but not the
currently selected document page.&lt;/p&gt;
&lt;h3 id=&quot;differences-to-&amp;quot;display&amp;quot;:-&amp;quot;browser&amp;quot;&quot;&gt;Differences to &lt;code&gt;&amp;quot;display&amp;quot;: &amp;quot;browser&amp;quot;&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#differences-to-%22display%22:-%22browser%22&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The current &lt;code&gt;&amp;quot;display&amp;quot;: &amp;quot;browser&amp;quot;&lt;/code&gt; already has a
&lt;a href=&quot;https://w3c.github.io/manifest/#dom-displaymodetype-browser&quot; rel=&quot;noopener&quot;&gt;specific meaning&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Opens the web application using the platform-specific convention for opening hyperlinks in the
user agent (e.g., in a browser tab or a new window).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While browsers can do whatever they want regarding UI, it would clearly be a pretty big subversion
of developer expectations if &lt;code&gt;&amp;quot;display&amp;quot;: &amp;quot;browser&amp;quot;&lt;/code&gt; suddenly meant &amp;quot;run in a separate
application-specific window with no browser affordances, but a tabbed document interface&amp;quot;.&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;&amp;quot;display&amp;quot;: &amp;quot;browser&amp;quot;&lt;/code&gt; is effectively the way you &lt;em&gt;opt out&lt;/em&gt; of being put into an application
window.&lt;/p&gt;
&lt;h2 id=&quot;current-status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#current-status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/w3c/manifest/issues/737&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/tabbed-application-mode/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;using-tabbed-application-mode&quot;&gt;Using tabbed application mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#using-tabbed-application-mode&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To use tabbed application mode, developers need to opt their apps in by setting a specific
&lt;a href=&quot;https://web.dev/display-override/&quot;&gt;&lt;code&gt;&amp;quot;display_override&amp;quot;&lt;/code&gt;&lt;/a&gt; mode value in the web app manifest.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display_override&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;tabbed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;trying-tabbed-application-mode&quot;&gt;Trying tabbed application mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#trying-tabbed-application-mode&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can try tabbed application mode on Chrome OS devices running Chrome 83 and up today:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set the &lt;code&gt;#enable-desktop-pwas-tab-strip&lt;/code&gt; flag.&lt;/li&gt;
&lt;li&gt;Install any web app that runs in &lt;code&gt;standalone&lt;/code&gt; mode, for example,
&lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;Excalidraw&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Pin the app icon to the shelf, right click the icon, and select &amp;quot;New tabbed window&amp;quot; from the
context menu.&lt;/li&gt;
&lt;li&gt;Open the app and interact with the tab strip.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The video below shows the current iteration of the feature in action. There is no need to make any
changes to the web app manifest for this to work.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/JwN0btyXFGiT9oPFh2qJ.webm&quot; type=&quot;video/webm&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with tabbed application mode.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about tabbed application mode that does not work like you expected? Comment on
the &lt;a href=&quot;https://github.com/w3c/manifest/issues/737&quot; rel=&quot;noopener&quot;&gt;web app manifest Issue&lt;/a&gt; that we have created.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? File a bug at
&lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can, simple
instructions for reproducing, and enter &lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt; box.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy reproduction cases.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use tabbed application mode? Your public support helps the Chrome team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23TabbedApplicationMode&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#TabbedApplicationMode&lt;/code&gt;&lt;/a&gt;
and let us
know where and how you are using it.&lt;/p&gt;
&lt;h2 id=&quot;useful-links&quot;&gt;Useful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#useful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/manifest/issues/737&quot; rel=&quot;noopener&quot;&gt;Web app manifest spec issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/897314&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;a href=&quot;https://chromestatus.com/features#component%3ABlink%3EUI%3EBrowser%3EWebAppInstalls&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;UI&amp;gt;Browser&amp;gt;WebAppInstalls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/tabbed-application-mode/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tabbed application mode was explored by &lt;a href=&quot;https://github.com/mgiuca&quot; rel=&quot;noopener&quot;&gt;Matt Giuca&lt;/a&gt;. The experimental
implementation in Chrome was the work of &lt;a href=&quot;https://github.com/alancutter&quot; rel=&quot;noopener&quot;&gt;Alan Cutter&lt;/a&gt;. This article
was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;. Hero image by
&lt;a href=&quot;https://commons.wikimedia.org/wiki/User:Till.niermann&quot; rel=&quot;noopener&quot;&gt;Till Niermann&lt;/a&gt; on
&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Dictionary_indents_headon.jpg&quot; rel=&quot;noopener&quot;&gt;Wikimedia Commons&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Offline UX design guidelines</title>
    <link href="https://web.dev/offline-ux-design-guidelines/"/>
    <updated>2016-11-10T00:00:00Z</updated>
    <id>https://web.dev/offline-ux-design-guidelines/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This article provides design guidelines on how to create a great experience
on both slow networks and offline.&lt;/p&gt;
&lt;p&gt;The quality of a network connection can be affected by a number of factors such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor coverage of a provider.&lt;/li&gt;
&lt;li&gt;Extreme weather conditions.&lt;/li&gt;
&lt;li&gt;Power outages.&lt;/li&gt;
&lt;li&gt;Entering into permanent &amp;quot;dead zones&amp;quot; such as buildings with walls that block network connections.&lt;/li&gt;
&lt;li&gt;Entering into temporary &amp;quot;dead zones&amp;quot; like when traveling on a train and going through a tunnel.&lt;/li&gt;
&lt;li&gt;Time-boxed internet connections such as those in airports or hotels.&lt;/li&gt;
&lt;li&gt;Cultural practices that require limited or no internet access at specific times or days.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your goal is to provide a good experience that lessens the impact of changes in connectivity.&lt;/p&gt;
&lt;h2 id=&quot;decide-what-to-show-your-users-when-they-have-a-bad-network-connection&quot;&gt;Decide what to show your users when they have a bad network connection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#decide-what-to-show-your-users-when-they-have-a-bad-network-connection&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first question that must be asked is what does success and failure of a network connection look
like? A successful connection is your app&#39;s normal online experience. The failure of a connection,
however, can be both the offline state of your app as well how the app behaves when there is a laggy
network.&lt;/p&gt;
&lt;p&gt;When thinking about the success or failure of a network connection you need to ask yourself these
important UX questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How long do you wait to determine the success or failure of a connection?&lt;/li&gt;
&lt;li&gt;What can you do while success or failure is being determined?&lt;/li&gt;
&lt;li&gt;What should you do in the event of failure?&lt;/li&gt;
&lt;li&gt;How do you inform the user of the above?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;inform-users-of-their-current-state-and-change-of-state&quot;&gt;Inform users of their current state and change of state &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-users-of-their-current-state-and-change-of-state&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Inform the user of both the actions they can still take when they have a network failure and the
current state of the application. For example, a notification could say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You seem to have a bad network connection. Not to worry! Messages will be sent when the
network is restored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;display: inline-block; max-width: 45%;&quot;&gt;
  &lt;img alt=&quot;The Emojoy emoji messaging app informing the user when a change in state occurs.&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 335px) 335px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=670 670w&quot; width=&quot;335&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Clearly inform the user when a change in state occurs as soon as possible.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;display: inline-block; max-width: 45%;&quot;&gt;
  &lt;img alt=&quot;The I/O 2016 app informing the user when a change in state occurs.&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 335px) 335px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=670 670w&quot; width=&quot;335&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google I/O app used a material design &quot;toast&quot; to let the user know when they were offline.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;inform-users-when-the-network-connection-improves-or-is-restored&quot;&gt;Inform users when the network connection improves or is restored &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-users-when-the-network-connection-improves-or-is-restored&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;How you inform the user that their network connection has improved depends
on your application. Apps such as a stock market app that prioritize current information
should auto-update and notify the user as soon as possible.&lt;/p&gt;
&lt;p&gt;It is recommended that you let the user know that your web app has been updated &amp;quot;in the background&amp;quot;
by using a visual cue such as, for example, a material design toast element. This involves detecting both the
the presence of a service worker and an update to its managed
content. You can see a code example of this &lt;a href=&quot;https://github.com/GoogleChrome/sw-precache/blob/master/demo/app/js/service-worker-registration.js#L29&quot;&gt;function
at work here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One example of this would be &lt;a href=&quot;https://chromestatus.com/&quot; rel=&quot;noopener&quot;&gt;Chrome Platform Status&lt;/a&gt;
which posts a note to the user when the app has been updated.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example weather app.&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Some apps, like the weather app, need to auto-update, as old data
    is not useful.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome Status uses a toast&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 336px) 336px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=672 672w&quot; width=&quot;336&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Apps like Chrome Status let the user know
    when content has been updated via a toast notification.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You may also show the last time the app was updated at all times in a prominent space. This would
be useful for a currency converter app, for example.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Material Money app being out-of-date.&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Material Money caches rates…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Material money has been updated&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …and notifies the user when the app has been updated.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Applications such as news apps could show a simple tap-to-update notification
informing the user of new content. Auto-updating would cause users to lose
their place.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example news app, Tailpiece in its normal state&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Tailpiece, an online newspaper, will auto-download the latest news…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Example news app, Tailpiece when its ready to be updated&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …but allow users to refresh manually so they do not lose their place in an article.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;update-the-ui-to-reflect-the-current-contextual-state&quot;&gt;Update the UI to reflect the current contextual state &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#update-the-ui-to-reflect-the-current-contextual-state&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Each bit of UI may have its own context and functionality that will change depending on if it
requires a successful connection. One example would be an e-commerce site that can be browsed
offline. The Buy button and pricing would be disabled until a connection is reestablished.&lt;/p&gt;
&lt;p&gt;Other forms of contextual states could include data. For example, the financial application
Robinhood allows users to buy stock and uses color and graphics to notify the user when the market
is open. The whole interface turns white and then grays out when the market closes. When the value
of stock increases or decreases, each individual stock widget turns green or red depending on its
state.&lt;/p&gt;
&lt;h3 id=&quot;educate-the-user-so-they-understand-what-the-offline-model-is&quot;&gt;Educate the user so they understand what the offline model is &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#educate-the-user-so-they-understand-what-the-offline-model-is&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Offline is a new mental model for everyone. You need to educate your users about what changes will
occur when they don&#39;t have a connection. Inform them of where large data is saved and give them
settings to change the default behavior. Make sure you use multiple UI design components such as
informative language, icons, notifications, color, and imagery to convey these ideas collectively
rather than relying on a single design choice, such as an icon on its own, to tell the whole story.&lt;/p&gt;
&lt;h2 id=&quot;provide-an-offline-experience-by-default&quot;&gt;Provide an offline experience by default &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#provide-an-offline-experience-by-default&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If your app doesn&#39;t require much data, then cache that data by default. Users can become
increasingly frustrated if they can only access their data with a network connection. Try to make
the experience as stable as possible. An unstable connection will make your app feel untrustworthy,
where an app that lessens the impact of a network failure will feel magical to the user.&lt;/p&gt;
&lt;p&gt;News sites could benefit from auto-downloading and auto-saving the latest news so a
user could read today&#39;s news without a connection, perhaps downloading the text without the article
images. Also, adapt to the user&#39;s behavior. For example, if the sports section is what they typically view,
make that the priority download.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Tailpiece informs the user that they are offline with various design widgets&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    If the device is offline, Tailpiece will notify the user with a status message…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Tailpiece has a visual indicator that shows what sections are ready for offline use.&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …letting them know that they can at least partially still use the app.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;When it comes to communicating an app&#39;s status, saying &amp;quot;The network is down&amp;quot; sends the message
that the app&#39;s network is experiencing problems, whereas &amp;quot;You are disconnected&amp;quot; makes it clearer
to the user that the problem is on their end.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;inform-the-user-when-the-app-is-ready-for-offline-consumption&quot;&gt;Inform the user when the app is ready for offline consumption &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-the-user-when-the-app-is-ready-for-offline-consumption&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a web app first loads you need to indicate to the user if it is ready for offline use. Do this
with a
&lt;a href=&quot;https://material.io/components/snackbars&quot; rel=&quot;noopener&quot;&gt;widget that provides brief feedback&lt;/a&gt;
about an operation through a message at the bottom of the screen such as, for example, when a section has
been synced or a data file has downloaded.&lt;/p&gt;
&lt;p&gt;Again think of the language you are using to make sure it is fit for your audience. Ensure the
messaging is given the same in all instances where it&#39;s used. The term offline is generally
misunderstood by a non-technical audience so use action-based language that your audience can relate
to.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;I/O app offline&quot; decoding=&quot;async&quot; height=&quot;664&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google I/O 2016 app notifies the user when
    the app is ready for offline use…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome Status site is offline&quot; decoding=&quot;async&quot; height=&quot;664&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …and so does the Chrome Platform Status site, which includes information about the occupied storage.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;make-&#39;save-for-offline&#39;-an-obvious-part-of-the-interface-for-data-heavy-apps&quot;&gt;Make &#39;save for offline&#39; an obvious part of the interface for data-heavy apps &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#make-&#39;save-for-offline&#39;-an-obvious-part-of-the-interface-for-data-heavy-apps&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If an application uses large amounts of data, make sure that there is a switch or pin to add an item
for offline use rather than auto-downloading, unless a user has specifically asked for this behavior
via a settings menu. Make sure that the pin or download UI is not obscured by other UI elements and
that the feature is obvious to the user.&lt;/p&gt;
&lt;p&gt;One example would be a music player that requires large data files. The user is aware of the
associated data cost, but may also want to use the player offline.
Downloading music for later use requires the user to plan ahead, so education about this may be
required during onboarding.&lt;/p&gt;
&lt;h3 id=&quot;clarify-what-is-available-offline&quot;&gt;Clarify what is available offline &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#clarify-what-is-available-offline&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Be clear as to the option you are providing. You may need to show a tab or setting that shows an
&amp;quot;offline library&amp;quot; or &lt;a href=&quot;https://web.dev/content-indexing-api/&quot;&gt;content index&lt;/a&gt;,
so the user can easily see what they have stored on their phone and what needs to
be saved. Make sure the settings are concise and be clear where the data will be stored and who has
access to it.&lt;/p&gt;
&lt;h3 id=&quot;show-the-actual-cost-of-an-action&quot;&gt;Show the actual cost of an action &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#show-the-actual-cost-of-an-action&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Many users equate offline capability with &#39;downloading&#39;. Users in countries where network
connections regularly fail or aren&#39;t available often share content with other users, or save content
for offline use when they have connectivity.&lt;/p&gt;
&lt;p&gt;Users on data plans may avoid downloading large files for fear of cost, so you may also want to
display an associated cost so users can make an active comparison for a specific file or task. For
example, if the music app above could detect if the user is on a data plan and show the file size so
that users can see the cost of a file.&lt;/p&gt;
&lt;h3 id=&quot;help-prevent-hacked-experiences&quot;&gt;Help prevent hacked experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#help-prevent-hacked-experiences&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Often users hack an experience without realizing they are doing it. For example before cloud-based
file sharing web apps, it was common for users to save large files and attach them to emails so
they could carry on editing from a different device. It is important not to be pulled into their
hacked experience but rather look at what they are trying to achieve. In other words instead of
thinking of how you can make attaching a large file more user-friendly, solve the problem of
sharing large files across multiple devices.&lt;/p&gt;
&lt;h2 id=&quot;make-experiences-transferable-from-one-device-to-another&quot;&gt;Make experiences transferable from one device to another &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#make-experiences-transferable-from-one-device-to-another&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When building for flaky networks, try to sync as soon as the connection improves
so that the experience is transferable. For example, imagine a travel app losing
a network connection mid-way through a booking. When the connection is reestablished, the app syncs
with the user&#39;s account allowing them to continue their booking on their desktop device. Not being
able to transfer experiences can be incredibly jarring to users.&lt;/p&gt;
&lt;p&gt;Inform the user of the current state of their data. For example, you could show whether the
app has synced. Educate them where possible but try not to overburden them with messaging.&lt;/p&gt;
&lt;h2 id=&quot;create-inclusive-design-experiences&quot;&gt;Create inclusive design experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#create-inclusive-design-experiences&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When designing seek to be inclusive by providing meaningful design devices, simple language,
standard iconography, and meaningful imagery that will guide the user to complete the action or task
rather than hinder their progress.&lt;/p&gt;
&lt;h3 id=&quot;use-simple-concise-language&quot;&gt;Use simple, concise language &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-simple-concise-language&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Good UX is not just about a well designed interface. It includes the path a user takes as well as
the words used in the app. Avoid tech jargon when explaining the state of the app or
individual UI components. Consider that the phrase &amp;quot;app offline&amp;quot; might not convey to the user the
current state of the app.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A service worker icon is a bad example&quot; decoding=&quot;async&quot; height=&quot;149&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 350px) 350px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=700 700w&quot; width=&quot;350&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Avoid terms that aren&#39;t intelligible to non-technical users.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A download icon is a good example&quot; decoding=&quot;async&quot; height=&quot;149&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 350px) 350px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=700 700w&quot; width=&quot;350&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use language and imagery that describes the action.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;use-multiple-design-devices-to-create-accessible-user-experiences&quot;&gt;Use multiple design devices to create accessible user experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-multiple-design-devices-to-create-accessible-user-experiences&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use language, color, and visual components to demonstrate a change of state or current status.
Solely using color to demonstrate state may not be noticed by the user and may be inaccessible to
users who suffer from visual disabilities. Also, the instinct for designers is to use grayed UI
to represent offline, but this can have a loaded meaning on the web. Grayed UI such as input elements
on a form also means that an element is disabled. This can cause confusion if you &lt;em&gt;only&lt;/em&gt;
use color to depict state.&lt;/p&gt;
&lt;p&gt;To prevent misunderstandings, express different states to the user in multiple ways, for example
with color, labels, and UI components.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A bad example only using color.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 720px) 720px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1440 1440w&quot; width=&quot;720&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use color as the sole means to describe what is happening.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A good example that uses color and text to show an error.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 720px) 720px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1440 1440w&quot; width=&quot;720&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use a mixture of design elements to convey meaning
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;use-icons-that-convey-meaning&quot;&gt;Use icons that convey meaning &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-icons-that-convey-meaning&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Make sure that information is conveyed correctly with meaningful text labels as well as icons. Icons
alone can be problematic, since the concept of offline on the web is relatively new. Users may
misunderstand icons used on their own. For example, using a floppy disc for save makes sense to an
older generation but young users who have never seen a floppy disc may be confused by the metaphor.
Likewise, the &#39;hamburger&#39; menu icon has been known to confuse users when presented without a label.&lt;/p&gt;
&lt;p&gt;When introducing an offline icon try to remain consistent with industry standard visuals (when they
exist) as well as providing a text label and description. For example, saving for offline might be
a typical download icon or perhaps if the action involves syncing it could be a syncing icon. Some
actions may be interpreted as saving for offline rather than demonstrating a network&#39;s status. Think
of the action you are trying to convey rather than presenting the user with an abstract concept. For
example, save or download data would be action-based.&lt;/p&gt;
&lt;img alt=&quot;Various icon examples that convey offline&quot; decoding=&quot;async&quot; height=&quot;299&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 700px) 700px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1400 1400w&quot; width=&quot;700&quot; /&gt;
&lt;p&gt;Offline can mean a number of things depending on the context, such as download, export, pin, etc.
For more inspiration checkout the
&lt;a href=&quot;https://material.io/resources/icons/&quot; rel=&quot;noopener&quot;&gt;Material Design icon set&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;use-skeleton-layouts-with-other-feedback-mechanisms&quot;&gt;Use skeleton layouts with other feedback mechanisms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-skeleton-layouts-with-other-feedback-mechanisms&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A skeleton layout is essentially a wireframe version of your app that displays while content is
being loaded. This helps demonstrate to the user that content is about to be loaded. Consider also
using a preloader UI as well, with a text label informing the user that the app is loading. One
example would be to pulsate the wireframe content giving the app the feeling that it is alive and
loading. This reassures the user that something is happening and helps prevent resubmissions or
refreshes of your app.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A skeleton layout example&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Skeleton placeholder layout is shown during the download of the article…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A loaded article example&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …that gets replaced with the real contents once the download finishes.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;don&#39;t-block-content&quot;&gt;Don&#39;t block content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#don&#39;t-block-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In some applications, a user might trigger an action such as creating a new document. Some apps will
try to connect to a server in order to sync the new document and to demonstrate this they display an
intrusive loading modal dialog that covers the entire screen. This may work fine if the user has a
stable network connection, but if the network is unstable they won&#39;t be able to escape from this
action and the UI effectively blocks them from doing anything else. Network requests that block
content should be avoided. Allow the user to continue to browse your app and queue tasks that will
be performed and synced once the connection has improved.&lt;/p&gt;
&lt;p&gt;Demonstrate the state of an action by providing your users with feedback. For example, if a user is
editing a doc, consider changing the feedback design so it is visibly different from when they are
online but still shows that their file was &amp;quot;saved&amp;quot; and will sync when they have a network
connection. This will educate the user about the different states available and reassure them that
their task or action has been stored. This has the added benefit of the user growing more confident
using your application.&lt;/p&gt;
&lt;h2 id=&quot;design-for-the-next-billion&quot;&gt;Design for the next billion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#design-for-the-next-billion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In many regions, low-end devices are commonplace, connectivity is unreliable and, for many users,
data is unaffordable. You will need to earn user trust by being transparent and frugal with data.
Think about ways to help users on poor connections and simplify the interface to help speed up
tasks. Always try to ask users before downloading data-heavy content.&lt;/p&gt;
&lt;p&gt;Offer low bandwidth options for users on laggy connections. So if the network connection is slow,
provide small assets. Offer an option to choose high or low quality assets.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Education is key to offline UX as users are unfamiliar with these concepts. Try to create associations
with things that are familiar, e.g downloading for later use is the same as offlining data.&lt;/p&gt;
&lt;p&gt;When designing for unstable network connections, remember these guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Think how you design for the success, failure, and instability of a network connection.&lt;/li&gt;
&lt;li&gt;Data may be expensive, so be considerate to the user.&lt;/li&gt;
&lt;li&gt;For most users globally, the tech environment is almost exclusively mobile.&lt;/li&gt;
&lt;li&gt;Low-end devices are commonplace, with limited storage, memory and processing power, and small
displays and lower touchscreen quality. Make sure performance is a part of your design process.&lt;/li&gt;
&lt;li&gt;Allow users to browse your application when they are offline.&lt;/li&gt;
&lt;li&gt;Inform users of their current state and of changes in states.&lt;/li&gt;
&lt;li&gt;Try to provide offline by default if your app doesn&#39;t require much data.&lt;/li&gt;
&lt;li&gt;If the app is data-heavy, educate users about how they can download for offline use.&lt;/li&gt;
&lt;li&gt;Make experiences transferable between devices.&lt;/li&gt;
&lt;li&gt;Utilize language, icons, imagery, typography, and color to express ideas to the user collectively.&lt;/li&gt;
&lt;li&gt;Provide reassurance and feedback to help the user.&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Mustafa Kurtuldu</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Notification Triggers</title>
    <link href="https://web.dev/notification-triggers/"/>
    <updated>2019-10-24T00:00:00Z</updated>
    <id>https://web.dev/notification-triggers/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The development of Notification Triggers API, part of Google&#39;s
&lt;a href=&quot;https://developers.google.com/web/updates/capabilities&quot; rel=&quot;noopener&quot;&gt;capabilities project&lt;/a&gt;, is currently in
development. This post will be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;what&quot;&gt;What are Notification Triggers? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web developers can display notifications using the
&lt;a href=&quot;https://www.w3.org/TR/notifications/&quot; rel=&quot;noopener&quot;&gt;Web Notifications API&lt;/a&gt;. This feature is often used with the
&lt;a href=&quot;https://w3c.github.io/push-api/&quot; rel=&quot;noopener&quot;&gt;Push API&lt;/a&gt; to inform the user of time-sensitive information, such
as breaking news events or received messages. Notifications are shown by running JavaScript on the
user&#39;s device.&lt;/p&gt;
&lt;p&gt;The problem with the Push API is that it&#39;s not reliable for triggering notifications which &lt;em&gt;must&lt;/em&gt; be
shown when a particular condition, like time or location, is met. An example of a &lt;em&gt;time-based
condition&lt;/em&gt; is a calendar notification that reminds you of an important meeting with your boss at
2 PM. An example of a &lt;em&gt;location-based condition&lt;/em&gt; is a notification that reminds you to buy milk
when you enter the vicinity of your grocery store. Network connectivity or battery-preserving
features like doze mode can delay the delivery of push based notifications.&lt;/p&gt;
&lt;p&gt;Notification triggers solve this problem by letting you schedule notifications with their triggering
condition in advance, so that the operating system will deliver the notification at the right time
even if there is no network connectivity or the device is in battery saver mode.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For now, Chrome only supports &lt;em&gt;time-based triggers&lt;/em&gt;. Additional triggers, such as
location-based triggers, may be added in the future based on developer demand. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Use cases &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Calendar applications can use time-based notification triggers to remind a user of upcoming
meetings. The default notification scheme for a calendar app could be to show a first heads-up
notification one hour before a meeting and then another more urgent notification five minutes
before.&lt;/p&gt;
&lt;p&gt;A TV network might remind users that their favorite TV show is about to start or a conference live
stream is about to begin.&lt;/p&gt;
&lt;p&gt;Time zone conversion sites can use time-based notification triggers to let their users schedule
alarms for telephone conferences or video calls.&lt;/p&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/beverloo/notification-triggers/blob/master/README.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. &lt;strong&gt;Gather feedback and iterate on design.&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://web.dev/notification-triggers/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;h2 id=&quot;use&quot;&gt;How to use notification triggers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with the Notification Triggers API locally, without an origin trial token, enable the
&lt;code&gt;#enable-experimental-web-platform-features&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Two earlier origin trials for the feature, which gave developers a chance to try out the
proposed API, ran from Chrome 80 to 83 and from Chrome 86 to 88. You can read
the summary of the
&lt;a href=&quot;https://docs.google.com/document/d/1Nl1emEqxjTzPLNIAPiS26Vtq3mBdNyCxfMY6QwaD45s/edit&quot; rel=&quot;noopener&quot;&gt;feedback obtained&lt;/a&gt;
so far. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can find out if the browser supports Notification Triggers by checking for the existence of the
&lt;code&gt;showTrigger&lt;/code&gt; property:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;showTrigger&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Notification&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prototype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Notification Triggers supported */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;scheduling-a-notification&quot;&gt;Scheduling a notification &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#scheduling-a-notification&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Scheduling a notification is similar to showing a regular push notification, except that you need to
pass a &lt;code&gt;showTrigger&lt;/code&gt; condition property with a &lt;code&gt;TimestampTrigger&lt;/code&gt; object as the value to the
notification&#39;s &lt;code&gt;options&lt;/code&gt; object.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;createScheduledNotification&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;tag&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timestamp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; registration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRegistration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showNotification&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    tag&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; tag&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    body&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;This notification was scheduled 30 seconds ago&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    showTrigger&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimestampTrigger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;timestamp &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;On desktop, notification triggers fire only if Chrome is running. On Android, they fire
regardless. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;canceling-a-scheduled-notification&quot;&gt;Canceling a scheduled notification &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#canceling-a-scheduled-notification&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To cancel scheduled notifications, first request a list of all notifications that match a certain
tag through &lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt;. Note that you need to pass the
&lt;code&gt;includeTriggered&lt;/code&gt; flag for scheduled notifications to be included in the list:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;cancelScheduledNotification&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; registration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRegistration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; notifications &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getNotifications&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    tag&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; tag&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    includeTriggered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  notifications&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; notification&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;debugging&quot;&gt;Debugging &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#debugging&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can use the &lt;a href=&quot;https://developers.google.com/web/updates/2019/07/devtools#backgroundservices&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools Notifications panel&lt;/a&gt; to debug notifications. To start
debugging, press &lt;strong&gt;Start recording events&lt;/strong&gt;
&lt;img alt=&quot;Start recording events&quot; decoding=&quot;async&quot; height=&quot;24&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 24px) 24px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=24 24w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=27 27w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=31 31w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=36 36w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=41 41w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=46 46w, https://web-dev.imgix.net/image/admin/vf1pad201b4NM9WjgNQh.png?auto=format&amp;w=48 48w&quot; width=&quot;24&quot; /&gt;
or &lt;kbd&gt;Control&lt;/kbd&gt;+&lt;kbd&gt;E&lt;/kbd&gt; (&lt;kbd&gt;Command&lt;/kbd&gt;+&lt;kbd&gt;E&lt;/kbd&gt; on Mac). Chrome DevTools records
all notification events, including scheduled, displayed, and closed notifications, for three days,
even when DevTools is closed.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;img alt=&quot;A scheduled notification event was logged to the Notifications pane of Chrome DevTools, which is located in the Application panel.&quot; decoding=&quot;async&quot; height=&quot;247&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Fcyc3iFPdNexgqh1peA8.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    A scheduled notification.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;img alt=&quot;A displayed notification event was logged to the Notifications pane of Chrome DevTools.&quot; decoding=&quot;async&quot; height=&quot;247&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7Sj2NxYKbSXv4P894aLh.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    A displayed notification.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#demo&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can see Notification Triggers in action in the &lt;a href=&quot;https://notification-triggers.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;, which allows you to schedule
notifications, list scheduled notifications, and cancel them. The source code is available on
&lt;a href=&quot;https://glitch.com/edit/#!/notification-triggers&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;img alt=&quot;A screenshot of the Notification Triggers demo web app.&quot; decoding=&quot;async&quot; height=&quot;525&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/WVlem3Tf2GEEFwNVA2L1.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Notification Triggers &lt;a href=&quot;https://notification-triggers.glitch.me/&quot;&gt;demo&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the Notification Triggers API using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics. Because this API requires service workers, it also requires a
secure context. Using the API requires the same permission as regular push notifications.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This API is only available in the context of a &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;. This implies that all
required data is stored in the same context and is automatically deleted when the service worker is
deleted or the user deletes all site data for the origin. Blocking cookies also prevents service
workers from being installed in Chrome, and therefore this API from being used. Notifications can
always be disabled by the user for the site in site settings.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unlike the Push API, this API does not depend on the network, which implies scheduled notifications
need all required data beforehand, including image resources referenced by the &lt;code&gt;badge&lt;/code&gt;, &lt;code&gt;icon&lt;/code&gt; and
&lt;code&gt;image&lt;/code&gt; attributes. This means showing a scheduled notification is not observable by the developer
and doesn&#39;t involve waking up the service worker until the user interacts with the notification.
Consequently, there is currently no known way the developer could obtain information about the user
through potentially privacy-invading approaches like IP address geolocation lookup. This design also
allows the feature to optionally tap into scheduling mechanisms provided by the operating system
like Android&#39;s &lt;a href=&quot;https://developer.android.com/reference/android/app/AlarmManager&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;AlarmManager&lt;/code&gt;&lt;/a&gt;,
which helps preserve battery.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with Notification Triggers.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the &lt;a href=&quot;https://github.com/beverloo/notification-triggers/issues&quot; rel=&quot;noopener&quot;&gt;Notification Triggers GitHub repo&lt;/a&gt;, or add your thoughts to
an existing issue.&lt;/p&gt;
&lt;h3 id=&quot;problem-with-the-implementation&quot;&gt;Problem with the implementation? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and set Components to &lt;code&gt;UI&amp;gt;Notifications&lt;/code&gt;. Glitch works great
for sharing quick and easy bug reproductions.&lt;/p&gt;
&lt;h3 id=&quot;planning-to-use-the-api&quot;&gt;Planning to use the API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#planning-to-use-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Planning to use Notification Triggers on your site? Your public support helps us to prioritize
features and shows other browser vendors how critical it is to support them. Send a tweet to
&lt;a href=&quot;https://twitter.com/chromiumdev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23NotificationTriggers&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#NotificationTriggers&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful&quot;&gt;Helpful Links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#helpful&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/beverloo/notification-triggers/blob/master/README.md&quot; rel=&quot;noopener&quot;&gt;Public explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://notification-triggers.glitch.me/&quot; rel=&quot;noopener&quot;&gt;Notification Triggers demo&lt;/a&gt; | &lt;a href=&quot;https://glitch.com/edit/#!/notification-triggers&quot; rel=&quot;noopener&quot;&gt;Notification Triggers demo source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=891339&quot; rel=&quot;noopener&quot;&gt;Tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5133150283890688&quot; rel=&quot;noopener&quot;&gt;ChromeStatus.com entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Blink Component: &lt;code&gt;UI&amp;gt;Notifications&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/notification-triggers/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Notification Triggers was implemented by &lt;a href=&quot;https://uk.linkedin.com/in/richardknoll&quot; rel=&quot;noopener&quot;&gt;Richard Knoll&lt;/a&gt;
and the explainer written by &lt;a href=&quot;https://twitter.com/beverloo?lang=en&quot; rel=&quot;noopener&quot;&gt;Peter Beverloo&lt;/a&gt;, with
contributions from Richard. The following people have reviewed the article:
&lt;a href=&quot;https://twitter.com/medleyjp&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/petele&quot; rel=&quot;noopener&quot;&gt;Pete LePage&lt;/a&gt;, as well as
Richard and Peter. &lt;a href=&quot;https://unsplash.com/photos/UAvYasdkzq8&quot; rel=&quot;noopener&quot;&gt;Hero image&lt;/a&gt; by
&lt;a href=&quot;https://unsplash.com/@goumbik&quot; rel=&quot;noopener&quot;&gt;Lukas Blazek&lt;/a&gt; on Unsplash.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Preparing for the display modes of tomorrow</title>
    <link href="https://web.dev/display-override/"/>
    <updated>2021-02-25T00:00:00Z</updated>
    <id>https://web.dev/display-override/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;A &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;web app manifest&lt;/a&gt; is a JSON file that tells the browser about your Progressive
Web App and how it should behave when installed on the user&#39;s desktop or mobile device.
Via the &lt;a href=&quot;https://web.dev/add-manifest/#display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property, you can customize what browser UI is shown when your app is launched. For example, you can hide the
address bar and browser chrome. Games can even be made to launch full screen.
As a quick recap, below are the display modes that are specified at the time this article was written.&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table id=&quot;display-params&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
        &lt;th&gt;&lt;strong&gt;Use&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;fullscreen&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          Opens the web application without any browser UI and takes
          up the entirety of the available display area.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;standalone&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          Opens the web app to look and feel like a standalone
          app. The app runs in its own window, separate from the browser, and
          hides standard browser UI elements like the URL bar.
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;minimal-ui&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;
          This mode is similar to &lt;code&gt;standalone&lt;/code&gt;, but provides the
          user a minimal set of UI elements for controlling navigation (such
          as back and reload).
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;browser&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;A standard browser experience.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;These display modes follow a &lt;a href=&quot;https://w3c.github.io/manifest/#dfn-fallback-display-mode&quot; rel=&quot;noopener&quot;&gt;well-defined fallback chain&lt;/a&gt;
(&lt;code&gt;&amp;quot;fullscreen&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; → &lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt;). If a browser does not support a given
mode, it falls back to the next display mode in the chain.&lt;/p&gt;
&lt;h2 id=&quot;shortcomings-of-the-display-property&quot;&gt;Shortcomings of the &lt;code&gt;display&lt;/code&gt; property &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/display-override/#shortcomings-of-the-display-property&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The problem with this hard-wired fallback chain approach is threefold:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A developer cannot request &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; without being forced back into the &lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt; display mode in case &lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; is not supported by a given browser.&lt;/li&gt;
&lt;li&gt;Developers have no way of handling cross-browser differences, like if the browser includes or excludes a &lt;a href=&quot;https://twitter.com/ChromiumDev/status/1012065260625383425/photo/1&quot; rel=&quot;noopener&quot;&gt;back button&lt;/a&gt; in the window for &lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; mode.&lt;/li&gt;
&lt;li&gt;The current behavior makes it impossible to introduce new display
modes in a backward compatible way, since explorations like tabbed application mode do not have a
natural place in the fallback chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-display_override-property&quot;&gt;The &lt;code&gt;display_override&lt;/code&gt; property &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/display-override/#the-display_override-property&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These problems are solved by the &lt;code&gt;display_override&lt;/code&gt; property, which the browser considers &lt;em&gt;before&lt;/em&gt;
the &lt;code&gt;display&lt;/code&gt; property. Its value is a sequence of strings that are considered in-order, and the
first supported display mode is applied. If none are supported, the browser falls back to evaluating
the &lt;code&gt;display&lt;/code&gt; field.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;code&gt;display_override&lt;/code&gt; property is meant to solve special corner cases. In almost all
circumstances the regular &lt;code&gt;display&lt;/code&gt; property is what developers should reach for.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the example below, the display mode fallback chain would be as follows.
(The details of &lt;code&gt;&amp;quot;window-controls-overlay&amp;quot;&lt;/code&gt; are out-of-scope for this article.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;window-controls-overlay&amp;quot;&lt;/code&gt; (First, look at &lt;code&gt;display_override&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;standalone&amp;quot;&lt;/code&gt; (When &lt;code&gt;display_override&lt;/code&gt; is exhausted, evaluate &lt;code&gt;display&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;minimal-ui&amp;quot;&lt;/code&gt; (Finally, use the &lt;code&gt;display&lt;/code&gt; fallback chain.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;browser&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display_override&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;window-controls-overlay&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;minimal-ui&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The browser will not consider &lt;code&gt;display_override&lt;/code&gt; unless &lt;code&gt;display&lt;/code&gt; is also present.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To remain backward compatible, any future display mode will only be acceptable as a value of
&lt;code&gt;display_override&lt;/code&gt;, but not &lt;code&gt;display&lt;/code&gt;.
Browsers that do not support &lt;code&gt;display_override&lt;/code&gt; fall back to the &lt;code&gt;display&lt;/code&gt; property and ignore
&lt;code&gt;display_override&lt;/code&gt; as an unknown web app manifest property.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;code&gt;display_override&lt;/code&gt; property is defined independently from its potential values.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/display-override/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;display_override&lt;/code&gt; property is supported as of Chromium 89. Other browsers support the
&lt;code&gt;display&lt;/code&gt; property, which caters to the majority of display mode use cases.&lt;/p&gt;
&lt;h2 id=&quot;useful-links&quot;&gt;Useful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/display-override/#useful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/display-override/blob/master/explainer.md&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/MZgYJgS4Lcs/m/NnUxG2_mAAAJ&quot; rel=&quot;noopener&quot;&gt;Intent to Ship thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1092667&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/5728570678706176&quot; rel=&quot;noopener&quot;&gt;Chrome Status entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/manifest-incubations&quot; rel=&quot;noopener&quot;&gt;Manifest Incubations repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/display-override/#acknowledgments&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;display_override&lt;/code&gt; property was formalized by
&lt;a href=&quot;https://github.com/dmurph&quot; rel=&quot;noopener&quot;&gt;Daniel Murphy&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Adaptive icon support in PWAs with maskable icons</title>
    <link href="https://web.dev/maskable-icon/"/>
    <updated>2019-12-19T00:00:00Z</updated>
    <id>https://web.dev/maskable-icon/</id>
    <content type="text/html" mode="escaped">&lt;h2 id=&quot;what&quot;&gt;What are maskable icons? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/maskable-icon/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;ve installed a Progressive Web App on a recent Android phone, you might notice the icon shows
up with a white background. Android Oreo introduced adaptive icons, which display app icons in a
variety of shapes across different device models. Icons that don&#39;t follow this new format are given
white backgrounds.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;PWA icons in white circles on Android&quot; decoding=&quot;async&quot; height=&quot;100&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/jzjx6dGkXN9EdqnUzAeg.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Transparent PWA icons appear inside white circles on Android&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Maskable icons are a new icon format that give you more control and let your Progressive Web App use
adaptive icons. If you supply a maskable icon, your icon can fill up the entire shape and look great
on all Android devices. Firefox and Chrome have recently added support for this new format, and you
can adopt it in your apps.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;PWA icons covering the entire circle on Android&quot; decoding=&quot;async&quot; height=&quot;100&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/J7gkg9ylP2ANlFawblze.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Maskable icons cover the entire circle instead&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;are-my-current-icons-ready&quot;&gt;Are my current icons ready? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/maskable-icon/#are-my-current-icons-ready&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since maskable icons need to support a variety of shapes, you supply an opaque image with some
padding that the browser can later crop into the desired shape and size. It&#39;s best not to rely on
any particular shape, since the ultimately chosen shape can vary by browser and per platform.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--inline-right&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/mx1PEstODUy6b5TXjo4S.webm&quot; type=&quot;video/webm&quot; /&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/tw7QbXq9SBjGL3UYW0Fq.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Different platform specific shapes
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Luckily, there&#39;s a well-defined and &lt;a href=&quot;https://w3c.github.io/manifest/#icon-masks&quot; rel=&quot;noopener&quot;&gt;standardized&lt;/a&gt;
&amp;quot;minimum safe zone&amp;quot; that all platforms respect. The important parts of your icon, such as your logo,
should be within a circular area in the center of the icon with a radius equal to 40% of the icon
width. The outer 10% edge may be cropped.&lt;/p&gt;
&lt;p&gt;You can check which parts of your icons land within the safe zone with Chrome DevTools. With your
Progressive Web App open, launch DevTools and navigate to the &lt;strong&gt;Application&lt;/strong&gt; panel. In the
&lt;strong&gt;Icons&lt;/strong&gt; section, you can choose to &lt;strong&gt;Show only the minimum safe area for maskable icons&lt;/strong&gt;. Your
icons will be trimmed so that only the safe area is visible. If your logo is visible within this
safe area, you&#39;re good to go.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Applications panel in DevTools displaying PWA icons with edges cropped&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;423&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 762px) 762px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/UeKTJM2SE0SQhgnnyaQG.png?auto=format&amp;w=1524 1524w&quot; width=&quot;762&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Applications panel&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To test your maskable icon with the variety of Android shapes, use the
&lt;a href=&quot;https://maskable.app/&quot; rel=&quot;noopener&quot;&gt;Maskable.app&lt;/a&gt; tool I&#39;ve created.
Open an icon, then Maskable.app will let you
try out various shapes and sizes, and you can share the preview with others on your team.&lt;/p&gt;
&lt;h2 id=&quot;how-do-i-adopt-maskable-icons&quot;&gt;How do I adopt maskable icons? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/maskable-icon/#how-do-i-adopt-maskable-icons&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you want to create a maskable icon based on your existing icon, you can use the
&lt;a href=&quot;https://maskable.app/editor&quot; rel=&quot;noopener&quot;&gt;Maskable.app Editor&lt;/a&gt;. Upload your icon, adjust the color and size,
then export the image.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Maskable.app Editor screenshot&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;569&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 670px) 670px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/MDXDwH3RWyj4po6daeXw.png?auto=format&amp;w=1340 1340w&quot; width=&quot;670&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Creating icons in Maskable.app Editor&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Once you&#39;ve created a maskable icon image and tested it out in DevTools, you&#39;ll need to update your
&lt;a href=&quot;https://developers.google.com/web/fundamentals/web-app-manifest&quot; rel=&quot;noopener&quot;&gt;web app manifest&lt;/a&gt; to point to the
new assets. The web app manifest provides information about your web app in a JSON file, and
includes an &lt;a href=&quot;https://developers.google.com/web/fundamentals/web-app-manifest#icons&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;icons&lt;/code&gt; array&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the inclusion of maskable icons, a new property value has been added for image resources listed
in a web app manifest. The &lt;code&gt;purpose&lt;/code&gt; field tells the browser how your icon should be used. By
default, icons will have a purpose of &lt;code&gt;&amp;quot;any&amp;quot;&lt;/code&gt;. These icons will be resized on top of a white
background on Android.&lt;/p&gt;
&lt;p&gt;Maskable icons should use a different purpose: &lt;code&gt;&amp;quot;maskable&amp;quot;&lt;/code&gt;. This indicates that an image is meant
to be used with icon masks, giving you more control over the result. This way, your icons will not
have a white background. You can also specify multiple space-separated purposes (for example,
&lt;code&gt;&amp;quot;any maskable&amp;quot;&lt;/code&gt;), if you want your maskable icon to be used without a mask on other devices.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While you &lt;em&gt;can&lt;/em&gt; specify multiple space-separated purposes like &lt;code&gt;&amp;quot;any maskable&amp;quot;&lt;/code&gt;, in
practice you &lt;em&gt;shouldn&#39;t&lt;/em&gt;. Using &lt;code&gt;&amp;quot;maskable&amp;quot;&lt;/code&gt; icons as &lt;code&gt;&amp;quot;any&amp;quot;&lt;/code&gt; icons is suboptimal as the icon
is going to be used as-is, resulting in excess padding and making the core icon content smaller.
Ideally, icons for the &lt;code&gt;&amp;quot;any&amp;quot;&lt;/code&gt; purpose should have transparent regions and no extra padding, like your site&#39;s favicons,
since the browser isn&#39;t going to add that for them.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    …&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path/to/regular_icon.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;196x196&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;purpose&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;any&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path/to/maskable_icon.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;196x196&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;purpose&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;maskable&quot;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &amp;lt;-- New property value `&quot;maskable&quot;`&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    …&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;With this, you can go forth and create your own maskable icons, making sure you app looks great
edge-to-edge (and for what it&#39;s worth, circle-to-circle, oval-to-oval 😄).&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/maskable-icon/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Tiger Oakes</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Create an offline fallback page</title>
    <link href="https://web.dev/offline-fallback-page/"/>
    <updated>2020-09-24T00:00:00Z</updated>
    <id>https://web.dev/offline-fallback-page/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;What do the Google Assistant app, the Slack app, the Zoom app, and almost
any other platform-specific app on your phone or computer have in common? Right, they always at least give you &lt;em&gt;something&lt;/em&gt;.
Even when you do not have a network connection, you can still open the Assistant app, or enter
Slack, or launch Zoom. You might not get anything particularly meaningful or even
be unable to achieve what you wanted to achieve, but at least you get &lt;em&gt;something&lt;/em&gt; and the app is in
control.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-apps-wrapper&quot;&gt;
  &lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-assistant&quot; style=&quot;display: inline-block&quot;&gt;
    &lt;img alt=&quot;Google Assistant mobile app while offline.&quot; decoding=&quot;async&quot; height=&quot;1344&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 621px) 621px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gr49coayhLfP1UVJ2EeR.jpg?auto=format&amp;w=1242 1242w&quot; width=&quot;621&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-assistant&quot;&gt;
      Google Assistant.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-slack&quot; style=&quot;display: inline-block&quot;&gt;
    &lt;img alt=&quot;Slack mobile app while offline.&quot; decoding=&quot;async&quot; height=&quot;1344&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 621px) 621px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D4P00CQ15IE0plUEY3di.jpg?auto=format&amp;w=1242 1242w&quot; width=&quot;621&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-slack&quot;&gt;
      Slack.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-zoom&quot; style=&quot;display: inline-block&quot;&gt;
    &lt;img alt=&quot;Zoom mobile app while offline.&quot; decoding=&quot;async&quot; height=&quot;1344&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 621px) 621px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/gw1LQG4JNYUDxQ2NOJHC.jpg?auto=format&amp;w=1242 1242w&quot; width=&quot;621&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-zoom&quot;&gt;
      Zoom.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-apps-wrapper&quot;&gt;
    With platform-specific apps, even when you do not have a network connection, you never get nothing.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In contrast, on the Web, traditionally you get nothing when you are offline. Chrome gives you
the &lt;a href=&quot;https://www.blog.google/products/chrome/chrome-dino/&quot; rel=&quot;noopener&quot;&gt;offline dino game&lt;/a&gt;, but that is it.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-offline-wrapper&quot;&gt;
  &lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-chrome-ios&quot; style=&quot;display: inline-block&quot;&gt;
    &lt;img alt=&quot;Google Chrome mobile app showing the offline dino game.&quot; decoding=&quot;async&quot; height=&quot;1731&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yEf0wzIQ1hIf85xtUwse.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-chrome-ios&quot;&gt;
      Google Chrome for iOS.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;w-figure&quot; role=&quot;group&quot; aria-labelledby=&quot;fig-chrome&quot; style=&quot;display: inline-block&quot;&gt;
    &lt;img alt=&quot;Google Chrome desktop app showing the offline dino game.&quot; decoding=&quot;async&quot; height=&quot;607&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vrqfLVP132LcydIWcYbh.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-chrome&quot;&gt;
      Google Chrome for macOS.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figcaption class=&quot;w-figcaption&quot; id=&quot;fig-offline-wrapper&quot;&gt;
    On the Web, when you do not have a network connection, by default you get nothing.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;an-offline-fallback-page-with-a-custom-service-worker&quot;&gt;An offline fallback page with a custom service worker &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#an-offline-fallback-page-with-a-custom-service-worker&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It does not have to be this way, though. Thanks to
&lt;a href=&quot;https://web.dev/service-workers-cache-storage/&quot;&gt;service workers and the Cache Storage API&lt;/a&gt;, you can provide a
customized offline experience for your users. This can be a simple branded page with the information
that the user is currently offline, but it can just as well be a more creative solution, like, for
example, the famous &lt;a href=&quot;https://www.trivago.com/offline&quot; rel=&quot;noopener&quot;&gt;trivago offline maze game&lt;/a&gt; with a manual
&lt;strong&gt;Reconnect&lt;/strong&gt; button and an automatic reconnection attempt countdown.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;The trivago offline page with the trivago offline maze.&quot; decoding=&quot;async&quot; height=&quot;616&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yvun9EV5758sRO9wSgY.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      The trivago offline maze.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;h3 id=&quot;registering-the-service-worker&quot;&gt;Registering the service worker &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#registering-the-service-worker&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The way to make this happen is through a service worker. You can register a service worker
from your main page like in the code sample below. Usually you do this once
your app has loaded.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;load&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;serviceWorker&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;serviceWorker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;service-worker.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-service-worker-code&quot;&gt;The service worker code &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#the-service-worker-code&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The contents of the actual service worker file may seem a little involved at first sight, but the
comments in the sample below should clear things up. The core idea is to pre-cache a file named
&lt;code&gt;offline.html&lt;/code&gt; that gets only served on &lt;em&gt;failing&lt;/em&gt; navigation requests, and to let the browser handle
all other cases:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/*&lt;br /&gt;Copyright 2015, 2019, 2020, 2021 Google LLC. All Rights Reserved.&lt;br /&gt; Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&lt;br /&gt; you may not use this file except in compliance with the License.&lt;br /&gt; You may obtain a copy of the License at&lt;br /&gt; http://www.apache.org/licenses/LICENSE-2.0&lt;br /&gt; Unless required by applicable law or agreed to in writing, software&lt;br /&gt; distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br /&gt; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br /&gt; See the License for the specific language governing permissions and&lt;br /&gt; limitations under the License.&lt;br /&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Incrementing OFFLINE_VERSION will kick off the install event and force&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// previously cached resources to be updated from the network.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// This variable is intentionally declared and unused.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Add a comment for your linter if you want:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// eslint-disable-next-line no-unused-vars&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OFFLINE_VERSION&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;CACHE_NAME&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;offline&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Customize this with a different URL if needed.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OFFLINE_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;offline.html&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;install&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; cache &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; caches&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Setting {cache: &#39;reload&#39;} in the new request will ensure that the&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// response isn&#39;t fulfilled from the HTTP cache; i.e., it will be from&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// the network.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; cache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;OFFLINE_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; cache&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reload&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Force the waiting service worker to become the active service worker.&lt;/span&gt;&lt;br /&gt;  self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;skipWaiting&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;activate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Enable navigation preload if it&#39;s supported.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// See https://developers.google.com/web/updates/2017/02/navigation-preload&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;navigationPreload&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;registration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;registration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;navigationPreload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Tell the active service worker to take control of the page immediately.&lt;/span&gt;&lt;br /&gt;  self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clients&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;claim&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;fetch&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// We only want to call event.respondWith() if this is a navigation request&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// for an HTML page.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mode &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;navigate&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// First, try to use the navigation preload response if it&#39;s supported.&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; preloadResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;preloadResponse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;preloadResponse&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; preloadResponse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// Always try the network first.&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; networkResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; networkResponse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// catch is only triggered if an exception is thrown, which is likely&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// due to a network error.&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// If fetch() returns a valid HTTP response with a response code in&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// the 4xx or 5xx range, the catch() will NOT be called.&lt;/span&gt;&lt;br /&gt;          console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Fetch failed; returning offline page instead.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; cache &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; caches&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; cachedResponse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; cache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;OFFLINE_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; cachedResponse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// If our if() condition is false, then this fetch handler won&#39;t intercept the&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// request. If there are any other fetch handlers registered, they will get a&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// chance to call event.respondWith(). If no fetch handlers call&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// event.respondWith(), the request will be handled by the browser as if there&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// were no service worker involvement.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;the-offline-fallback-page&quot;&gt;The offline fallback page &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#the-offline-fallback-page&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;offline.html&lt;/code&gt; file is where you can get creative and adapt it to your needs and add your
branding. The example below shows the bare minimum of what is possible.
It demonstrates both manual reload based on a button press as well as automatic reload
based on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/online_event&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;online&lt;/code&gt; event&lt;/a&gt;
and regular server polling.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;You need to cache all resources required by your offline page. One
way to deal with this is to inline everything, so the offline page is self-contained. This is what I
do in the example below. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;http-equiv&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;X-UA-Compatible&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;IE=edge&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;You are offline&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Inline the page&#39;s stylesheet. --&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;&lt;br /&gt;      &lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; helvetica&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; arial&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sans-serif&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; italic&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #373fff&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token selector&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;margin-block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token selector&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;You are offline&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Click the button below to try reloading.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;⤾ Reload&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Inline the page&#39;s JavaScript file. --&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Manual reload feature.&lt;/span&gt;&lt;br /&gt;      document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Listen to changes in the network state, reload when online.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// This handles the case when the device is completely offline.&lt;/span&gt;&lt;br /&gt;      window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;online&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Check if the server is responding and reload the page if it is.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// This handles the case when the device is online, but the server&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// is offline or misbehaving.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;checkNetworkAndReload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// Verify we get a valid response from the server&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;status &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;status &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token comment&quot;&gt;// Unable to connect to the server, ignore.&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;checkNetworkAndReload&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;checkNetworkAndReload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can see the offline fallback page in action in the
&lt;a href=&quot;https://offline-fallback-demo.glitch.me/index.html&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; embedded below. If you are
interested, you can explore the &lt;a href=&quot;https://glitch.com/edit/#!/offline-fallback-demo&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt; on
Glitch.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://glitch.com/embed/#!/embed/offline-fallback-demo?path=offline.html&amp;previewSize=100&quot; title=&quot;offline-fallback-demo on Glitch&quot; allow=&quot;geolocation; microphone; camera; midi; vr; encrypted-media&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;side-note-on-making-your-app-installable&quot;&gt;Side note on making your app installable &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#side-note-on-making-your-app-installable&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that your site has an offline fallback page, you might wonder about next steps. To make
your app installable, you need to add a &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;web app manifest&lt;/a&gt; and optionally come up
with an &lt;a href=&quot;https://web.dev/define-install-strategy/&quot;&gt;install strategy&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;side-note-on-serving-an-offline-fallback-page-with-workbox.js&quot;&gt;Side note on serving an offline fallback page with Workbox.js &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-fallback-page/#side-note-on-serving-an-offline-fallback-page-with-workbox.js&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You may have heard of &lt;a href=&quot;https://developers.google.com/web/tools/workbox&quot; rel=&quot;noopener&quot;&gt;Workbox.js&lt;/a&gt;.
Workbox.js is a set of JavaScript libraries for adding offline support to web apps. If you prefer to
write less service worker code yourself, you can use the Workbox.js recipe for an
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/guides/advanced-recipes#offline_page_only&quot; rel=&quot;noopener&quot;&gt;offline page only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Up next, learn &lt;a href=&quot;https://web.dev/define-install-strategy/&quot;&gt;how to define an install strategy&lt;/a&gt; for your app.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author><author>
      <name>Pete LePage</name>
    </author>
  </entry>
  
  <entry>
    <title>Deprecating Excalidraw Electron in favor of the web version</title>
    <link href="https://web.dev/deprecating-excalidraw-electron/"/>
    <updated>2021-01-07T00:00:00Z</updated>
    <id>https://web.dev/deprecating-excalidraw-electron/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;Excalidraw&lt;/a&gt; is a virtual collaborative whiteboard that lets you easily sketch diagrams that feel hand-drawn.
This article was cross-posted to and first appeared on the &lt;a href=&quot;https://blog.excalidraw.com/deprecating-excalidraw-electron/&quot; rel=&quot;noopener&quot;&gt;Excalidraw blog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On the &lt;a href=&quot;https://github.com/excalidraw&quot; rel=&quot;noopener&quot;&gt;Excalidraw project&lt;/a&gt;, we have decided to
deprecate &lt;a href=&quot;https://github.com/excalidraw/excalidraw-desktop&quot; rel=&quot;noopener&quot;&gt;Excalidraw Desktop&lt;/a&gt;, an
&lt;a href=&quot;https://www.electronjs.org/&quot; rel=&quot;noopener&quot;&gt;Electron&lt;/a&gt; wrapper for Excalidraw, in favor of the web version that you
can—and always could—find at &lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;excalidraw.com&lt;/a&gt;. After a careful analysis, we
have decided that &lt;a href=&quot;https://web.dev/pwa/&quot;&gt;Progressive Web App&lt;/a&gt; (PWA) is the future we want to build
upon. Read on to learn why.&lt;/p&gt;
&lt;h2 id=&quot;how-excalidraw-desktop-came-into-being&quot;&gt;How Excalidraw Desktop came into being &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#how-excalidraw-desktop-came-into-being&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Soon after &lt;a href=&quot;https://twitter.com/vjeux&quot; rel=&quot;noopener&quot;&gt;@vjeux&lt;/a&gt; created the initial version of Excalidraw in
January 2020 and &lt;a href=&quot;https://blog.excalidraw.com/reflections-on-excalidraw/&quot; rel=&quot;noopener&quot;&gt;blogged about it&lt;/a&gt;, he proposed the following in
&lt;a href=&quot;https://github.com/excalidraw/excalidraw/issues/561#issue-555138343&quot; rel=&quot;noopener&quot;&gt;Issue #561&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Would be great to wrap Excalidraw within Electron (or equivalent) and publish it as a [platform-specific]
application to the various app stores.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The immediate reaction by &lt;a href=&quot;https://github.com/voluntadpear&quot; rel=&quot;noopener&quot;&gt;@voluntadpear&lt;/a&gt; was to suggest:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What about making it a PWA instead? Android currently supports adding them to the Play Store as
Trusted Web Activities and hopefully iOS will do the same soon. On Desktop, Chrome lets you
download a desktop shortcut to a PWA.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The decision that &lt;a href=&quot;https://github.com/vjeux&quot; rel=&quot;noopener&quot;&gt;@vjeux&lt;/a&gt; took in the end was simple:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We should do both :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While work on converting the version of Excalidraw into a PWA was started by
&lt;a href=&quot;https://github.com/voluntadpear&quot; rel=&quot;noopener&quot;&gt;@voluntadpear&lt;/a&gt; and later others,
&lt;a href=&quot;https://github.com/lipis&quot; rel=&quot;noopener&quot;&gt;@lipis&lt;/a&gt; independently
&lt;a href=&quot;https://github.com/excalidraw/excalidraw/issues/561#issuecomment-579573783&quot; rel=&quot;noopener&quot;&gt;went ahead&lt;/a&gt; and created
a &lt;a href=&quot;https://github.com/excalidraw/excalidraw-desktop&quot; rel=&quot;noopener&quot;&gt;separate repo&lt;/a&gt; for Excalidraw Desktop.&lt;/p&gt;
&lt;p&gt;To this day, the initial goal set by &lt;a href=&quot;https://github.com/vjeux&quot; rel=&quot;noopener&quot;&gt;@vjeux&lt;/a&gt;, that is, to submit
Excalidraw to the various app stores, has not been reached yet. Honestly, no one has even started
the submission process to any of the stores. But why is that? Before I answer, let&#39;s
look at Electron, the platform.&lt;/p&gt;
&lt;h2 id=&quot;what-is-electron&quot;&gt;What is Electron? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#what-is-electron&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The unique selling point of &lt;a href=&quot;https://www.electronjs.org/&quot; rel=&quot;noopener&quot;&gt;Electron&lt;/a&gt; is that it allows you to &lt;em&gt;&amp;quot;build
cross-platform desktop apps with JavaScript, HTML, and CSS&amp;quot;&lt;/em&gt;. Apps built with Electron are
&lt;em&gt;&amp;quot;compatible with Mac, Windows, and Linux&amp;quot;&lt;/em&gt;, that is, &lt;em&gt;&amp;quot;Electron apps build and run on three
platforms&amp;quot;&lt;/em&gt;. According to the homepage, the hard parts that Electron makes easy are
&lt;a href=&quot;https://www.electronjs.org/docs/api/auto-updater&quot; rel=&quot;noopener&quot;&gt;automatic updates&lt;/a&gt;,
&lt;a href=&quot;https://www.electronjs.org/docs/api/menu&quot; rel=&quot;noopener&quot;&gt;system-level menus and notifications&lt;/a&gt;,
&lt;a href=&quot;https://www.electronjs.org/docs/api/crash-reporter&quot; rel=&quot;noopener&quot;&gt;crash reporting&lt;/a&gt;,
&lt;a href=&quot;https://www.electronjs.org/docs/api/content-tracing&quot; rel=&quot;noopener&quot;&gt;debugging and profiling&lt;/a&gt;, and
&lt;a href=&quot;https://www.electronjs.org/docs/api/auto-updater#windows&quot; rel=&quot;noopener&quot;&gt;Windows installers&lt;/a&gt;. Turns out, some of
the promised features need a detailed look at the small print.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For example, automatic updates &lt;em&gt;&amp;quot;are [currently] only [supported] on macOS and Windows. There is
no built-in support for auto-updater on Linux, so it is recommended to use the distribution&#39;s
package manager to update your app&amp;quot;&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developers can create system-level menus by calling &lt;code&gt;Menu.setApplicationMenu(menu)&lt;/code&gt;. On Windows and
Linux, the menu will be set as each window&#39;s top menu, while on macOS there are many
system-defined standard menus, like the
&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/1428608-servicesmenu?language=objc&quot; rel=&quot;noopener&quot;&gt;Services&lt;/a&gt;
menu. To make one&#39;s menus a standard menu, developers should set their menu&#39;s &lt;code&gt;role&lt;/code&gt; accordingly,
and Electron will recognize them and make them become standard menus. This means that a lot of
menu-related code will use the following platform check:
&lt;code&gt;const isMac = process.platform === &#39;darwin&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows installers can be made with
&lt;a href=&quot;https://github.com/electron/windows-installer&quot; rel=&quot;noopener&quot;&gt;windows-installer&lt;/a&gt;. The README of the project
highlights that &lt;em&gt;&amp;quot;for a production app you need to sign your application. Internet Explorer&#39;s
SmartScreen filter will block your app from being downloaded, and many anti-virus vendors will
consider your app as malware unless you obtain a valid cert&amp;quot;&lt;/em&gt; [sic].&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking at just these three examples, it is clear that Electron is far from &amp;quot;write once, run
everywhere&amp;quot;. Distributing an app on app stores requires
&lt;a href=&quot;https://www.electronjs.org/docs/tutorial/code-signing&quot; rel=&quot;noopener&quot;&gt;code signing&lt;/a&gt;, a security technology for
certifying app ownership. Packaging an app requires using tools like
&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot; rel=&quot;noopener&quot;&gt;electron-forge&lt;/a&gt; and thinking about where to
host packages for app updates. It gets complex relatively quickly, especially when the objective
truly is cross platform support. I want to note that it is &lt;em&gt;absolutely&lt;/em&gt; possible to create stunning
Electron apps with enough effort and dedication. For Excalidraw Desktop, we were not there.&lt;/p&gt;
&lt;h2 id=&quot;where-excalidraw-desktop-left-off&quot;&gt;Where Excalidraw Desktop left off &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#where-excalidraw-desktop-left-off&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Excalidraw Desktop so far is basically the Excalidraw web app bundled as an
&lt;a href=&quot;https://github.com/electron/asar&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;.asar&lt;/code&gt;&lt;/a&gt; file with an added &lt;strong&gt;About Excalidraw&lt;/strong&gt; window. The look
and feel of the application is almost identical to the web version.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Excalidraw Desktop application running in an Electron wrapper.&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/oR9usELiRYTSu8V7i7vj.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Excalidraw Desktop is almost indistinguishable from the web version&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Excalidraw Desktop &amp;#x27;About&amp;#x27; window displaying the version of the Electron wrapper and the web app.&quot; decoding=&quot;async&quot; height=&quot;330&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/y9d4nWR3p0VjvHcnP0iq.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The &lt;strong&gt;About Excalibur&lt;/strong&gt; menu providing insights into the versions&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;On macOS, there is now a system-level menu at the top of the application, but since none of the menu
actions—apart from &lt;strong&gt;Close Window&lt;/strong&gt; and &lt;strong&gt;About Excalidraw&lt;/strong&gt;—are hooked up to to anything, the menu
is, in its current state, pretty useless. Meanwhile, all actions can of course be performed via the
regular Excalidraw toolbars and the context menu.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Excalidraw Desktop menu bar on macOS with the &amp;#x27;File&amp;#x27;, &amp;#x27;Close Window&amp;#x27; menu item selected.&quot; decoding=&quot;async&quot; height=&quot;138&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 736px) 736px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/akQQgmMKo66quqeVDdAH.png?auto=format&amp;w=1472 1472w&quot; width=&quot;736&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The menu bar of Excalidraw Desktop on macOS&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;We use &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot; rel=&quot;noopener&quot;&gt;electron-builder&lt;/a&gt;, which supports
&lt;a href=&quot;https://www.electron.build/configuration/configuration#PlatformSpecificBuildOptions-fileAssociations&quot; rel=&quot;noopener&quot;&gt;file type associations&lt;/a&gt;.
By double-clicking an &lt;code&gt;.excalidraw&lt;/code&gt; file, ideally the Excalidraw Desktop app should open. The
relevant excerpt of our &lt;code&gt;electron-builder.json&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;fileAssociations&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;ext&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;excalidraw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Excalidraw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Excalidraw file&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;role&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Editor&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;mimeType&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Unfortunately, in practice, this does not always work as intended, since, depending on the
installation type (for the current user, for all users), apps on Windows 10 do not have the
rights to associate a file type to themselves.&lt;/p&gt;
&lt;p&gt;These shortcomings and the pending work to make the experience truly app-like on &lt;em&gt;all&lt;/em&gt; platforms
(which, again, with enough effort &lt;em&gt;is&lt;/em&gt; possible) were a strong argument for us to reconsider our
investment in Excalidraw Desktop. The way bigger argument for us, though, was that we foresee that
for &lt;em&gt;our&lt;/em&gt; use case, we do not need all the features Electron offers. The grown and still growing set
of capabilities of the web serves us equally well, if not better.&lt;/p&gt;
&lt;h2 id=&quot;how-the-web-serves-us-today-and-in-the-future&quot;&gt;How the web serves us today and in the future &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#how-the-web-serves-us-today-and-in-the-future&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Even in 2020, &lt;a href=&quot;https://jquery.com/&quot; rel=&quot;noopener&quot;&gt;jQuery&lt;/a&gt; is still
&lt;a href=&quot;https://almanac.httparchive.org/en/2020/javascript#libraries&quot; rel=&quot;noopener&quot;&gt;incredibly popular&lt;/a&gt;. For many
developers it has become a habit to use it, despite the fact that today they
&lt;a href=&quot;http://youmightnotneedjquery.com/&quot; rel=&quot;noopener&quot;&gt;might not need jQuery&lt;/a&gt;. There is a similar resource for
Electron, aptly called &lt;a href=&quot;https://youmightnotneedelectron.com/&quot; rel=&quot;noopener&quot;&gt;You Might Not Need Electron&lt;/a&gt;. Let me
outline why we think we do not need Electron.&lt;/p&gt;
&lt;h3 id=&quot;installable-progressive-web-app&quot;&gt;Installable Progressive Web App &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#installable-progressive-web-app&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw today is an &lt;a href=&quot;https://web.dev/installable/&quot;&gt;installable&lt;/a&gt; Progressive Web App with a
&lt;a href=&quot;https://excalidraw.com/service-worker.js&quot; rel=&quot;noopener&quot;&gt;service worker&lt;/a&gt; and a
&lt;a href=&quot;https://excalidraw.com/manifest.json&quot; rel=&quot;noopener&quot;&gt;web app manifest&lt;/a&gt;. It caches all its resources in two caches,
one for fonts and font-related CSS, and one for everything else.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome DevTools Application tab showing the two Excalidraw caches.&quot; decoding=&quot;async&quot; height=&quot;569&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/tTo7miHIREZRySv8aoBd.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Excalidraw&#39;s cache contents&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This means the application is fully offline-capable and can run without a network connection.
Chromium-based browsers on both desktop and mobile prompt the user to install the app.
You can see the installation prompt in the screenshot below.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Excalidraw prompting the user to install the app in Chrome on macOS.&quot; decoding=&quot;async&quot; height=&quot;258&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/be3EQLezj3776w6SHLPi.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Excalidraw install dialog in Chrome&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Excalidraw is configured to run as a standalone application, so when you install it, you get an app
that runs in its own window. It is fully integrated in the operating system&#39;s multitasking UI and
gets its own app icon on the home screen, Dock, or task bar; depending on the platform where you install
it.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Excalidraw running in its own window.&quot; decoding=&quot;async&quot; height=&quot;584&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/MbMgQlGSBeNcX7Y362jV.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Excalidraw PWA in a standalone window&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Excalidraw icon on the macOS Dock.&quot; decoding=&quot;async&quot; height=&quot;167&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/7ncf98ZQZcg4g3UP2s7F.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Excalidraw icon on the macOS Dock&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;file-system-access&quot;&gt;File system access &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#file-system-access&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw uses &lt;a href=&quot;https://github.com/GoogleChromeLabs/browser-fs-access&quot; rel=&quot;noopener&quot;&gt;browser-fs-access&lt;/a&gt; for
accessing the file system of the operating system. On supporting browsers, this allows for a true
open→edit→save workflow and actual over-saving and &amp;quot;save as&amp;quot;, with a transparent fallback for
other browsers. You can learn more about this feature in my blog post
&lt;a href=&quot;https://web.dev/browser-fs-access/&quot;&gt;Reading and writing files and directories with the browser-fs-access library&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;drag-and-drop-support&quot;&gt;Drag and drop support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#drag-and-drop-support&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Files can be dragged and dropped onto the Excalidraw window just as in platform-specific applications. On a
browser that supports the &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt;, a dropped
file can be immediately edited and the modifications be saved to the original file. This is so
intuitive that you sometimes forget that you are dealing with a web app.&lt;/p&gt;
&lt;h3 id=&quot;clipboard-access&quot;&gt;Clipboard access &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#clipboard-access&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw works well with the operating system&#39;s clipboard. Entire Excalidraw drawings or also just
individual objects can be copied and pasted in &lt;code&gt;image/png&lt;/code&gt; and &lt;code&gt;image/svg+xml&lt;/code&gt; formats, allowing for
an easy integration with other platform-specific tools like &lt;a href=&quot;https://inkscape.org/&quot; rel=&quot;noopener&quot;&gt;Inkscape&lt;/a&gt; or web-based
tools like &lt;a href=&quot;https://jakearchibald.github.io/svgomg/&quot; rel=&quot;noopener&quot;&gt;SVGOMG&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Excalidraw context menu showing the &amp;#x27;copy to clipboard as SVG&amp;#x27; and &amp;#x27;copy to clipboard as PNG&amp;#x27; menu items.&quot; decoding=&quot;async&quot; height=&quot;746&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/90gLbYTtkKtDfun4fiRM.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Excalidraw context menu offering clipboard actions&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;file-handling&quot;&gt;File handling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#file-handling&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw already supports the experimental &lt;a href=&quot;https://web.dev/file-handling/&quot;&gt;File Handling API&lt;/a&gt;,
which means &lt;code&gt;.excalidraw&lt;/code&gt; files can be double-clicked in the operating system&#39;s file manager and
open directly in the Excalidraw app, since Excalidraw registers as a file handler for &lt;code&gt;.excalidraw&lt;/code&gt;
files in the operating system.&lt;/p&gt;
&lt;h3 id=&quot;declarative-link-capturing&quot;&gt;Declarative link capturing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#declarative-link-capturing&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw drawings can be shared by link. Here is an
&lt;a href=&quot;https://excalidraw.com/#json=4646308765761536,jwZJW8JsOM75vdhqG2nBgA&quot; rel=&quot;noopener&quot;&gt;example&lt;/a&gt;. In the future, if
people have Excalidraw installed as a PWA, such links will not open in a browser tab, but launch a
new standalone window. Pending implementation, this will work thanks to
&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/master/declarative_link_capturing.md&quot; rel=&quot;noopener&quot;&gt;declarative link capturing&lt;/a&gt;,
an, at the time of writing, bleeding-edge proposal for a new web platform feature.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The web has come a long way, with more and more features landing in browsers that only a couple of
years or even months ago were unthinkable on the web and exclusive to platform-specific applications.
Excalidraw is at the forefront of what is possible in the browser, all while acknowledging that not
all browsers on all platforms support each feature we use. By betting on a progressive
enhancement strategy, we enjoy the latest and greatest wherever possible, but without leaving anyone
behind. Best viewed in &lt;em&gt;any&lt;/em&gt; browser.&lt;/p&gt;
&lt;p&gt;Electron has served us well, but in 2020 and beyond, we can live without it. Oh, and for that
objective of &lt;a href=&quot;https://github/com/vjeux&quot; rel=&quot;noopener&quot;&gt;@vjeux&lt;/a&gt;: since the Android Play Store now accepts PWAs in a
container format called &lt;a href=&quot;https://web.dev/using-a-pwa-in-your-android-app/&quot;&gt;Trusted Web Activity&lt;/a&gt; and
since the
&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/progressive-web-apps-edgehtml/microsoft-store&quot; rel=&quot;noopener&quot;&gt;Microsoft Store supports PWAs&lt;/a&gt;,
too, you can expect Excalidraw in these stores in the not too distant future. Meanwhile, you can
always use and install &lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;Excalidraw in and from the browser&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/deprecating-excalidraw-electron/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by &lt;a href=&quot;https://github.com/lipis&quot; rel=&quot;noopener&quot;&gt;@lipis&lt;/a&gt;,
&lt;a href=&quot;https://github.com/dwelle&quot; rel=&quot;noopener&quot;&gt;@dwelle&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Mainline Menswear implements PWA and sees a 55% conversion rate uplift</title>
    <link href="https://web.dev/mainline-mensware/"/>
    <updated>2021-04-20T00:00:00Z</updated>
    <id>https://web.dev/mainline-mensware/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Mainline is an online clothing retailer that offers the biggest designer brand names in fashion. The
UK-based company entrusts its team of in-house experts, blended strategically with key partners, to
provide a frictionless shopping experience for all. With market presence in over 100 countries via
seven custom-built territorial websites and an app, Mainline will continue to ensure the ecommerce
offering is rivalling the competition.&lt;/p&gt;
&lt;h2 id=&quot;challenge&quot;&gt;Challenge &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#challenge&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mainline Menswear&#39;s goal was to complement the current mobile optimized website with progressive
features that would adhere to their &#39;mobile first&#39; vision, focusing on mobile-friendly design and
functionality with a growing smartphone market in mind.&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#solution&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The objective was to build and launch a PWA that complemented the original mobile friendly version
of the Mainline Menswear website, and then compare the stats to their hybrid mobile app,
which is currently available on Android and iOS.&lt;/p&gt;
&lt;p&gt;Once the app launched and was being used by a small section of Mainline Menswear users, they were able to
determine the difference in key stats between PWA, app, and Web.&lt;/p&gt;
&lt;p&gt;The approach Mainline took when converting their website to a PWA was to make sure that
the framework they selected for their website (Nuxt.js, utilizing Vue.js) would be future-proof
and enable them to take advantage of fast moving web technology.&lt;/p&gt;
&lt;h2 id=&quot;results&quot;&gt;Results &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#results&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;139&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;More pages per session in PWA vs. web.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;161&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;Longer session durations in PWA vs. web.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;10&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;Lower bounce rate in PWA vs. web&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;12.5&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;Higher average order value in PWA vs. web&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;55&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;Higher conversion rate in PWA vs. web.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;243&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;Higher revenue per session in PWA vs. web.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;technical-deep-dive&quot;&gt;Technical deep dive &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#technical-deep-dive&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mainlinemenswear.co.uk/&quot; rel=&quot;noopener&quot;&gt;Mainline Menswear&lt;/a&gt; is using the
&lt;a href=&quot;https://nuxtjs.org/&quot; rel=&quot;noopener&quot;&gt;Nuxt.js framework&lt;/a&gt; to bundle and render their site, which is a single page
application (SPA).&lt;/p&gt;
&lt;h3 id=&quot;generating-a-service-worker-file&quot;&gt;Generating a service worker file &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#generating-a-service-worker-file&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For generating the service worker, Mainline Menswear added configuration through a custom
implementation of the &lt;a href=&quot;https://pwa.nuxtjs.org/workbox&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;nuxt/pwa&lt;/code&gt; Workbox module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The reason they forked the &lt;code&gt;nuxt/pwa&lt;/code&gt; module was to allow the team to add more customizations to the
service worker file that they weren&#39;t able to or had issues with when using the standard version.
One such optimization was around the &lt;a href=&quot;https://web.dev/mainline-mensware/#providing-offline-functionality&quot;&gt;offline functionality&lt;/a&gt; of
the site like, for example, serving a default offline page and gathering analytics while offline.&lt;/p&gt;
&lt;h3 id=&quot;anatomy-of-the-web-app-manifest&quot;&gt;Anatomy of the web app manifest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#anatomy-of-the-web-app-manifest&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The team generated a manifest with icons for different mobile app icon sizes and other web app
details like &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;theme_color&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Mainline Menswear&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;short_name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;MMW&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Shop mens designer clothes with Mainline Menswear. Famous brands including Hugo Boss, Adidas, and Emporio Armani.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;icons&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/_nuxt/icons/icon_512.c2336e.png&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;sizes&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;512x512&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;theme_color&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#107cbb&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The web app, once installed, can be launched from the home screen without the browser getting in the
way. This is achieved by adding the &lt;code&gt;display&lt;/code&gt; parameter in the web app manifest file:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Last but not the least, the company is now able to easily track how many users are visiting their
web app from the home screen by simply appending a &lt;code&gt;utm_source&lt;/code&gt; parameter in the &lt;code&gt;start_url&lt;/code&gt; field of
the manifest:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;start_url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/?utm_source=pwa&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/add-manifest/&quot;&gt;Add a web app manifest&lt;/a&gt; for a more in-depth explanation of all the
web app manifest fields. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;runtime-caching-for-faster-navigations&quot;&gt;Runtime caching for faster navigations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#runtime-caching-for-faster-navigations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Caching for web apps is a must for page speed optimization and for providing a better user
experience for returning users.&lt;/p&gt;
&lt;p&gt;For caching on the web, there are quite a few
&lt;a href=&quot;https://dev.to/jonchen/service-worker-caching-and-http-caching-p82&quot; rel=&quot;noopener&quot;&gt;different approaches&lt;/a&gt;. The team
is using a mix of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching&quot; rel=&quot;noopener&quot;&gt;HTTP cache&lt;/a&gt; and
the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Cache&quot; rel=&quot;noopener&quot;&gt;Cache API&lt;/a&gt; for caching assets on the
client side.&lt;/p&gt;
&lt;p&gt;The Cache API gives Mainline Menswear finer control over the cached assets, allowing them to apply
complex strategies to each file type. While all this sounds complicated and hard to set up and
maintain, &lt;a href=&quot;https://developers.google.com/web/tools/workbox&quot; rel=&quot;noopener&quot;&gt;Workbox&lt;/a&gt; provides them with an easy
way of declaring such complex strategies and eases the pain of maintenance.&lt;/p&gt;
&lt;h4 id=&quot;caching-css-and-js&quot;&gt;Caching CSS and JS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#caching-css-and-js&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For CSS and JS files, the team chose to cache them and serve them over the cache using the
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/reference-docs/latest/module-workbox-strategies.StaleWhileRevalidate&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;StaleWhileRevalidate&lt;/code&gt;&lt;/a&gt;
Workbox strategy. This strategy allows them to serve all Nuxt CSS and JS files fast,
which significantly increases their site&#39;s performance.
At the same time, the files are being updated in the background to the latest version for the next visit:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* sw.js */&lt;/span&gt;&lt;br /&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;\/_nuxt\/.*(?:js|css)$&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StaleWhileRevalidate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cacheName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;css_js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;caching-google-fonts&quot;&gt;Caching Google fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#caching-google-fonts&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The strategy for caching Google Fonts depends on two file types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The stylesheet that contains the &lt;code&gt;@font-face&lt;/code&gt; declarations.&lt;/li&gt;
&lt;li&gt;The underlying font files (requested within the stylesheet mentioned above).&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.&lt;/span&gt;&lt;br /&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;https:\/\/fonts\.googleapis\.com\/*&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StaleWhileRevalidate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cacheName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;google_fonts_stylesheets&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Cache the underlying font files with a cache-first strategy for 1 year.&lt;/span&gt;&lt;br /&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;https:\/\/fonts\.gstatic\.com\/*&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CacheFirst&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cacheName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;google_fonts_webfonts&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cacheableResponse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;CacheableResponsePlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        statuses&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;expiration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpirationPlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        maxAgeSeconds&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;365&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 1 year&lt;/span&gt;&lt;br /&gt;        maxEntries&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;A full example of the common Google Fonts strategy can be found in the
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/guides/common-recipes#google_fonts&quot; rel=&quot;noopener&quot;&gt;Workbox Docs&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;caching-images&quot;&gt;Caching images &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#caching-images&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For images, Mainline Menswear decided to go with two strategies. The first strategy applies
to all images coming from their CDN, which are usually product images. Their pages are image-heavy so
they are conscious of not taking too much of their users&#39; device storage. So through Workbox, they
added a strategy that is &lt;strong&gt;caching images coming only from their CDN&lt;/strong&gt; with a &lt;strong&gt;maximum
of 60 images&lt;/strong&gt; using the
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/reference-docs/latest/module-workbox-expiration.ExpirationPlugin&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ExpirationPlugin&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The 61st (newest) image requested, replaces the 1st (oldest) image so that no more than 60 product
images are cached at any point in time.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;    url&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;origin &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://mainline-menswear-res.cloudinary.com&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;    request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;destination &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;image&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StaleWhileRevalidate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cacheName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;product_images&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;expiration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpirationPlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Only cache 60 images.&lt;/span&gt;&lt;br /&gt;        maxEntries&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        purgeOnQuotaError&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The second image strategy handles the rest of the images being requested by the origin.
These images tend to be very few and small across the whole origin, but to be on the safe side,
the number of these cached images is also limited to 60.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;\.(?:png|gif|jpg|jpeg|svg|webp)$&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StaleWhileRevalidate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    cacheName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;images&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;expiration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ExpirationPlugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Only cache 60 images.&lt;/span&gt;&lt;br /&gt;        maxEntries&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        purgeOnQuotaError&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--objective&quot;&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;:  Even though the caching strategy is exactly the same as the previous one, by
splitting images into two caches (&lt;code&gt;product_images&lt;/code&gt; and &lt;code&gt;images&lt;/code&gt;), it allows for more flexible
updates to the strategies or caches. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;providing-offline-functionality&quot;&gt;Providing offline functionality &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#providing-offline-functionality&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The offline page is precached right after the service worker is installed and activated. They do
this by creating a list of all offline dependencies: the offline HTML file and an offline SVG icon.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OFFLINE_HTML&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/offline/offline.html&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;PRECACHE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; url&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OFFLINE_HTML&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; revision&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;70f044fda3e9647a98f084763ae2c32a&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; url&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/offline/offline.svg&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; revision&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;efe016c546d7ba9f20aefc0afa9fc74a&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The precache list is then fed into Workbox which takes care of all the heavy lifting of adding the
URLs to the cache, checking for any revision mismatch, updating, and serving the
precached files with a &lt;code&gt;CacheFirst&lt;/code&gt; strategy.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;precaching&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;precacheAndRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PRECACHE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;handling-offline-navigations&quot;&gt;Handling offline navigations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#handling-offline-navigations&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once the service worker activates and the offline page is precached, it is then used to &lt;strong&gt;respond to
offline navigation requests by the user&lt;/strong&gt;. While Mainline Menswear&#39;s web app is an SPA, the offline
page shows only after the page reloads, the user closes and reopens the browser tab, or when the web
app is launched from the home screen while offline.&lt;/p&gt;
&lt;p&gt;To achieve this, Mainline Menswear provided a fallback to failed
&lt;a href=&quot;https://developers.google.com/web/tools/workbox/reference-docs/latest/module-workbox-routing.NavigationRoute&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;NavigationRoute&lt;/code&gt;&lt;/a&gt;
requests with the precached offline page:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; htmlHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strategies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NetworkOnly&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; navigationRoute &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;NavigationRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; event &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; request &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// A NavigationRoute matches navigation requests in the browser, i.e. requests for HTML&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; htmlHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; caches&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;OFFLINE_HTML&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        ignoreSearch&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;workbox&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;routing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;navigationRoute&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot; width=&quot;300&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/eJgApjFLpSRFMcMyC4e0.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Offline page example as seen on www.mainlinemenswear.co.uk.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;reporting-successful-installs&quot;&gt;Reporting successful installs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#reporting-successful-installs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apart from the home screen launch tracking (with &lt;code&gt;&amp;quot;start_url&amp;quot;: &amp;quot;/?utm_source=pwa&amp;quot;&lt;/code&gt; in the web
application manifest), the web app also reports successful app installs by listening to the
&lt;code&gt;appinstalled&lt;/code&gt; event on &lt;code&gt;window&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;appinstalled&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;send&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;event&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Install&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Success&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;blockquote&gt;
   Adding PWA capabilities to your website will
  further enhance your customers experience of shopping with you, and will be quicker to market than a
  [platform-specific] app. 
  &lt;cite&gt;Andy Hoyle, Head of Development&lt;/cite&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/mainline-mensware/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To learn more about progressive web apps and how to build them, head to the
&lt;a href=&quot;https://web.dev/progressive-web-apps/&quot;&gt;Progressive Web Apps section&lt;/a&gt; on web.dev.&lt;/p&gt;
&lt;p&gt;To read more Progressive Web Apps case studies, browse to the
&lt;a href=&quot;https://web.dev/tags/case-study/&quot;&gt;case studies section&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Charis Theodoulou</name>
    </author><author>
      <name>Natasha Kosoglov</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Excalidraw and Fugu: Improving Core User Journeys
</title>
    <link href="https://web.dev/excalidraw-and-fugu/"/>
    <updated>2021-05-18T00:00:00Z</updated>
    <id>https://web.dev/excalidraw-and-fugu/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This is a write-up of my Google I/O talk. If you prefer watching it, see the video below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;EK1AkxgQwro&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;how-i-came-to-excalidraw&quot;&gt;How I came to Excalidraw &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#how-i-came-to-excalidraw&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I want to start with a story. On January 1st, 2020,
&lt;a href=&quot;https://twitter.com/vjeux&quot; rel=&quot;noopener&quot;&gt;Christopher Chedeau&lt;/a&gt;, a software engineer at Facebook,
&lt;a href=&quot;https://twitter.com/Vjeux/status/1212503324982792193&quot; rel=&quot;noopener&quot;&gt;tweeted&lt;/a&gt; about a small drawing app he had
started to work on. With this tool, you could draw boxes and arrows that feel cartoony and
hand-drawn. The next day, you could also draw ellipses and text, as well as select objects and move
them around. On January 3, the app had gotten its name, Excalidraw, and, like with every good side
project, buying the &lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;domain name&lt;/a&gt; was one of Christopher&#39;s first acts. By
now, you could use colors and export the whole drawing as a PNG.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the Excalidraw prototype application showing that it supported rectangles, arrows, ellipses, and text.&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/VbicbA7xj5azVcDUBSKt.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;On January 15, Christopher put out a
&lt;a href=&quot;https://blog.vjeux.com/2020/uncategorized/reflections-on-excalidraw.html&quot; rel=&quot;noopener&quot;&gt;blog post&lt;/a&gt; that drew a
lot of attention on Twitter, including mine. The post started with some impressive stats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12K unique active users&lt;/li&gt;
&lt;li&gt;1.5K stars on GitHub&lt;/li&gt;
&lt;li&gt;26 contributors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a project that started a mere two weeks ago, that&#39;s not bad at all. But the thing that truly
spiked my interest was further down in the post. Christopher wrote that he tried something new this
time: &lt;em&gt;giving everyone who landed a pull request unconditional commit access.&lt;/em&gt; The same day of
reading the blog post, I had a &lt;a href=&quot;https://github.com/excalidraw/excalidraw/pull/388&quot; rel=&quot;noopener&quot;&gt;pull request&lt;/a&gt; up
that added File System Access API support to Excalidraw, fixing a
&lt;a href=&quot;https://github.com/excalidraw/excalidraw/issues/169&quot; rel=&quot;noopener&quot;&gt;feature request&lt;/a&gt; that someone had filed.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the tweet where I announce my PR.&quot; decoding=&quot;async&quot; height=&quot;424&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 550px) 550px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/9VJ9EqPzKdzUpxFeM5wH.png?auto=format&amp;w=1100 1100w&quot; width=&quot;550&quot; /&gt;
&lt;p&gt;My pull request was merged a day later and from thereon, I had full commit access. Needless to say,
I didn&#39;t abuse my power. And nor did anybody else from the 149 contributors so far.&lt;/p&gt;
&lt;p&gt;Today, &lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;Excalidraw&lt;/a&gt; is a full-fledged installable progressive web app with
offline support, a stunning dark mode, and yes, the ability to open and save files thanks to the
File System Access API.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the Excalidraw PWA in today&amp;#x27;s state.&quot; decoding=&quot;async&quot; height=&quot;537&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/Wzz6UELRpcvkKZQtmVmc.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;lipis-on-why-he-dedicates-so-much-of-his-time-to-excalidraw&quot;&gt;Lipis on why he dedicates so much of his time to Excalidraw &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#lipis-on-why-he-dedicates-so-much-of-his-time-to-excalidraw&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So this marks the end of my &amp;quot;how I came to Excalidraw&amp;quot; story, but before I dive into some of
Excalidraw&#39;s amazing features, I have the pleasure to introduce Panayiotis. Panayiotis Lipiridis, on
the Internet simply known as &lt;a href=&quot;https://github.com/lipis&quot; rel=&quot;noopener&quot;&gt;lipis&lt;/a&gt;, is the most prolific contributor to
Excalidraw. I asked lipis what motivates him to dedicate so much of his time to Excalidraw:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like everyone else I learned about this project from Christopher&#39;s tweet. My first contribution
was to add the &lt;a href=&quot;https://yeun.github.io/open-color/&quot; rel=&quot;noopener&quot;&gt;Open Color library&lt;/a&gt;, the colors that are still
part of Excalidraw today. As the project grew and we had quite many requests, my next big
contribution was to build a backend for storing drawings so users could share them. But what
really drives me to contribute is that whoever tried Excalidraw is looking to find excuses to use
it again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I fully agree with lipis. Whoever tried Excalidraw is looking to find excuses to use it again.&lt;/p&gt;
&lt;h2 id=&quot;excalidraw-in-action&quot;&gt;Excalidraw in action &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#excalidraw-in-action&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I want to show you now how you can use Excalidraw in practice. I&#39;m not a great artist, but the
Google I/O logo is simple enough, so let me give it a try. A box is the &amp;quot;i&amp;quot;, a line can be the
slash, and the &amp;quot;o&amp;quot; is a circle. I hold down &lt;kbd&gt;shift&lt;/kbd&gt;, so I get a perfect circle. Let me move
the slash a little, so it looks better. Now some color for the &amp;quot;i&amp;quot; and the &amp;quot;o&amp;quot;. Blue is good. Maybe
a different fill style? All solid, or cross-hatch? Nah, hachure looks great. It&#39;s not perfect, but
that&#39;s the idea of Excalidraw, so let me save it.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/wK9jDdHG7A7qT5ViOuEQ.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;I click the save icon and enter a file name in the file save dialog. In Chrome, a browser that
supports the File System Access API, this is not a download, but a true save operation, where I can
choose the location and name of the file, and where, if I make edits, I can just save them to the
same file.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/HvKcKNk8Q3bbaVe36E3T.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Let me change the logo and make the &amp;quot;i&amp;quot; red. If I now click save again, my modification is saved to
the same file as before. As a proof, let me clear the canvas and reopen the file. As you can see,
the modified red-blue logo is there again.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/XzlUi88cPDYl8YFAH1J8.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;working-with-files&quot;&gt;Working with files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#working-with-files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On browsers that currently don&#39;t support the File System Access API, each save operation is a
download, so when I make changes, I end up with multiple files with an incrementing number in the
filename that fill up my Downloads folder. But despite this downside, I can still save the file.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/1oVPIESBNhoL4AhOSNli.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&quot;opening-files&quot;&gt;Opening files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#opening-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So what&#39;s the secret? How can opening and saving work on different browsers that may or may not
support the File System Access API? Opening a file in Excalidraw happens in a function called
&lt;code&gt;loadFromJSON)(&lt;/code&gt;), which in turn calls a function called &lt;code&gt;fileOpen()&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;loadFromJSON&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;localAppState&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; AppState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fileOpen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Excalidraw files&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    extensions&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;.excalidraw&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;.png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;.svg&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    mimeTypes&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;image/png&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;image/svg+xml&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;loadFromBlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; localAppState&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;fileOpen()&lt;/code&gt; function that comes from a small library I wrote called
&lt;a href=&quot;https://github.com/GoogleChromeLabs/browser-fs-access&quot; rel=&quot;noopener&quot;&gt;browser-fs-access&lt;/a&gt; that we use in
Excalidraw. This library provides file system access through the
&lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File System Access API&lt;/a&gt; with a legacy fallback, so it can be used in any
browser.&lt;/p&gt;
&lt;p&gt;Let me first show you the implementation for when the API is supported. After negotiating the
accepted MIME types and file extensions, the central piece is calling the File System Access API&#39;s
function &lt;code&gt;showOpenFilePicker()&lt;/code&gt;. This function returns an array of files or a single file, dependent
on whether multiple files are selected. All that&#39;s left then is to put the file handle on the file
object, so it can be retrieved again.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; accept &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Not shown: deal with extensions and MIME types.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; handleOrHandles &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showOpenFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    types&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        accept&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; accept&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    multiple&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multiple &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; files &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handleOrHandles&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;getFileWithHandle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multiple&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; files&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; files&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getFileWithHandle&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; handle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; handle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The fallback implementation relies on an &lt;code&gt;input&lt;/code&gt; element of type &lt;code&gt;&amp;quot;file&amp;quot;&lt;/code&gt;. After the negotiation of
the to-be-accepted MIME types and extensions, the next step is to programmatically click the input
element so the file open dialog shows. On change, that is, when the user has selected one or
multiple files, the promise resolves.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; accept &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mimeTypes &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mimeTypes &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extensions &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;extensions &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multiple &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multiple &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;accept &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; accept &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;*/*&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;change&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multiple &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;saving-files&quot;&gt;Saving files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#saving-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now to saving. In Excalidraw, saving happens in a function called &lt;code&gt;saveAsJSON()&lt;/code&gt;. It first
serializes the Excalidraw elements array to JSON, converts the JSON to a blob, and then calls a
function called &lt;code&gt;fileSave()&lt;/code&gt;. This function is likewise provided by the
&lt;a href=&quot;https://github.com/GoogleChromeLabs/browser-fs-access&quot; rel=&quot;noopener&quot;&gt;browser-fs-access&lt;/a&gt; library.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;saveAsJSON&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token parameter&quot;&gt;elements&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; readonly ExcalidrawElement&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  appState&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; AppState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; serialized &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;serializeAsJSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;elements&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; appState&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;serialized&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;application/vnd.excalidraw+json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fileSave&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      fileName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; appState&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Excalidraw file&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      extensions&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.excalidraw&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    appState&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fileHandle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; fileHandle &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Again let me first look at the implementation for browsers with File System Access API support. The
first couple of lines look a little involved, but all they do is negotiate the MIME types and file
extensions. When I have saved before and already have a file handle, no save dialog needs to be
shown. But if this is the first save, a file dialog gets displayed and the app gets a file handle
back for future use. The rest is then just writing to the file, which happens through a
&lt;a href=&quot;https://web.dev/streams/&quot;&gt;writable stream&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fileName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fileName &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Untitled&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; accept &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Not shown: deal with extensions and MIME types.&lt;/span&gt;&lt;br /&gt;  handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;    handle &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;showSaveFilePicker&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      suggestedName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fileName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      types&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          description&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;          accept&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; accept&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; writable &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; handle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createWritable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; writable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; handle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;the-&amp;quot;save-as&amp;quot;-feature&quot;&gt;The &amp;quot;save as&amp;quot; feature &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#the-%22save-as%22-feature&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If I decide to ignore an already existing file handle, I can implement a &amp;quot;save as&amp;quot; feature to create
a new file based on an existing file. To show this, let me open an existing file, make some
modification, and then not overwrite the existing file, but create a new file by using the save-as
feature. This leaves the original file intact.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/oTNuosQmoMBP2G7XR8Wb.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;The implementation for browsers that don&#39;t support the File System Access API is short, since all it
does is create an anchor element with a &lt;code&gt;download&lt;/code&gt; attribute whose value is the desired filename and
a blob URL as its &lt;code&gt;href&lt;/code&gt; attribute value.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;download &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fileName &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Untitled&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;revokeObjectURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The anchor element then gets clicked programmatically. To prevent memory leaks, the blob URL needs
to be revoked after use. As this is just a download, no file save dialog gets shown ever, and all
files land in the default &lt;code&gt;Downloads&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/1oVPIESBNhoL4AhOSNli.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;drag-and-drop&quot;&gt;Drag and drop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#drag-and-drop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of my favorite system integrations on desktop is drag and drop. In Excalidraw, when I drop an
&lt;code&gt;.excalidraw&lt;/code&gt; file onto the application, it opens right away and I can start editing. On browsers
that support the File System Access API, I can then even immediately save my changes. No need to go
through a file save dialog since the required file handle has been obtained from the drag and drop
operation.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/aOPKhOOe20od8uOzehdy.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;The secret for making this happen is by calling &lt;code&gt;getAsFileSystemHandle()&lt;/code&gt; on the
&lt;a href=&quot;https://web.dev/datatransfer/&quot;&gt;data transfer&lt;/a&gt; item when the File System Access API is supported. I then pass this
file handle to &lt;code&gt;loadFromBlob()&lt;/code&gt;, which you may remember from a couple paragraphs above. So many
things you can do with files: opening, saving, over-saving, dragging, dropping. My colleague Pete
and I have documented all these tricks and more in &lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;our article&lt;/a&gt; so you can
catch up in case all this went a little too fast.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; file &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataTransfer&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;file&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;application/json&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; file&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.excalidraw&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; isLoading&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Provided by browser-fs-access.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;supported&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; item &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataTransfer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;items&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      file &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; any&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; any&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsFileSystemHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;loadFromBlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; elements&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; appState &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Load from blob&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; isLoading&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; errorMessage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;sharing-files&quot;&gt;Sharing files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#sharing-files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another system integration currently on Android, Chrome OS, and Windows is through the
&lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;Web Share Target API&lt;/a&gt;. Here I am in the Files app in my &lt;code&gt;Downloads&lt;/code&gt; folder. I
can see two files, one of them with the non-descript name &lt;code&gt;untitled&lt;/code&gt; and a timestamp. To check what
it contains, I click on the three dots, then share, and one of the options that appears is
Excalidraw. When I tap the icon, I can then see that the file just contains the I/O logo again.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/x93JgKGcp1o8at5P7exv.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;lipis-on-the-deprecated-electron-version&quot;&gt;Lipis on the deprecated Electron version &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#lipis-on-the-deprecated-electron-version&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One thing you can do with files that I haven&#39;t talked about yet is doubleclick them. What typically
happens when you doubleclick a file is that the app that&#39;s associated with the file&#39;s MIME type
opens. For example for &lt;code&gt;.docx&lt;/code&gt; this would be Microsoft Word.&lt;/p&gt;
&lt;p&gt;Excalidraw &lt;a href=&quot;https://web.dev/deprecating-excalidraw-electron/&quot;&gt;used to have an Electron version&lt;/a&gt; of the app that
supported such file type associations, so when you double-clicked an &lt;code&gt;.excalidraw&lt;/code&gt; file, the
Excalidraw Electron app would open. Lipis, whom you have already met before, was both the creator
and the deprecator of Excalidraw Electron. I asked him why he felt it was possible to deprecate the
Electron version:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;People have been asking for an Electron app since the beginning, mainly because they wanted to
open files by double-clicking. We also intended to put the app in app stores. In parallel, someone
suggested creating a PWA instead, so we just did both. Luckily we were introduced to Project Fugu
APIs like file system access, clipboard access, file handling, and more. With a sole click you can
install the app on your desktop or mobile, without the extra weight of Electron. It was an easy
decision to deprecate the Electron version, concentrate just on the web app, and make it the
best-possible PWA. On top, we&#39;re now able to publish PWAs to the Play Store and the Microsoft
Store! That&#39;s huge!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One could say Excalidraw for Electron was not deprecated because Electron is bad, not at all, but
because the web has become good enough. I like this!&lt;/p&gt;
&lt;h2 id=&quot;file-handling&quot;&gt;File handling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#file-handling&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When I say &amp;quot;the web has become good enough&amp;quot;, it&#39;s because of features like the upcoming File
Handling.&lt;/p&gt;
&lt;p&gt;This is a regular macOS Big Sur installation. Now check out what happens when I right-click an
Excalidraw file. I can choose to open it with Excalidraw, the installed PWA. Of course
double-clicking would work, too, it&#39;s just less dramatic to demonstrate in a screencast.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/Gz1w0Gey1XerN86sIF01.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;So how does this work? The first step is to make the file types my application can handle known to
the operating system. I do this in a new field called &lt;code&gt;file_handlers&lt;/code&gt; in the web app manifest. Its
value is an array of objects with an action and an &lt;code&gt;accept&lt;/code&gt; property. The action determines the URL
path the operating system launches your app at and the accept object are key value pairs of MIME
types and the associated file extensions.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Excalidraw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Excalidraw is a whiteboard tool...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;start_url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;standalone&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;theme_color&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;background_color&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;file_handlers&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;&quot;application/vnd.excalidraw+json&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.excalidraw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The next step is to handle the file when the application launches. This happens in the &lt;code&gt;launchQueue&lt;/code&gt;
interface where I need to set a consumer by calling, well, &lt;code&gt;setConsumer()&lt;/code&gt;. The parameter to this
function is an asynchronous function that receives the &lt;code&gt;launchParams&lt;/code&gt;. This &lt;code&gt;launchParams&lt;/code&gt; object
has a field called files that gets me an array of file handles to work with. I only care for the
first one and from this file handle I get a blob that I then pass to our old friend
&lt;code&gt;loadFromBlob()&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;launchQueue&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;LaunchParams&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  window &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; any&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;launchQueue&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setConsumer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;launchParams&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; files&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; any&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;launchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fileHandle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; launchParams&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;files&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      blob&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fileHandle&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;loadFromBlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; elements&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; appState &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token comment&quot;&gt;// Initialize app state.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; isLoading&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; errorMessage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Again, if this went too fast, you can read more about the File Handling API in
&lt;a href=&quot;https://web.dev/file-handling/&quot;&gt;my article&lt;/a&gt;. You can enable file handling by setting the experimental web platform
features flag. It&#39;s scheduled to land in Chrome later this year.&lt;/p&gt;
&lt;h2 id=&quot;clipboard-integration&quot;&gt;Clipboard integration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#clipboard-integration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another cool feature of Excalidraw is the clipboard integration. I can copy my entire drawing or
just parts of it into the clipboard, maybe adding a watermark if I feel like, and then paste it into
another app. This is a web version of the Windows 95 Paint app by the way.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/EHHQS78y6RJf21J1wD7y.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;The way this works is surprisingly simple. All I need is the canvas as a blob, which I then write
onto the clipboard by passing a one-element array with a &lt;code&gt;ClipboardItem&lt;/code&gt; with the blob to the
&lt;code&gt;navigator.clipboard.write()&lt;/code&gt; function. For more information on what you can do with the clipboard
API, See Jason&#39;s and &lt;a href=&quot;https://web.dev/async-clipboard/&quot;&gt;my article&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;copyCanvasToClipboardAsPng&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;canvas&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; HTMLCanvasElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;canvasToBlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;canvas&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clipboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ClipboardItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;image/png&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; blob&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; canvasToBlob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;canvas&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; HTMLCanvasElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Promise&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Blob&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toBlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CanvasError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;canvasError.canvasTooBig&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;CANVAS_POSSIBLY_TOO_BIG&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;blob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;collaborating-with-others&quot;&gt;Collaborating with others &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#collaborating-with-others&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;sharing-a-session-url&quot;&gt;Sharing a session URL &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#sharing-a-session-url&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you know that Excalidraw also has a collaborative mode? Different people can work together on
the same document. To start a new session, I click on the live collaboration button and then start a
session. I can share the session URL with my collaborators easily thanks to the
&lt;a href=&quot;https://web.dev/web-share/&quot;&gt;Web Share API&lt;/a&gt; that Excalidraw has integrated.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/7tbl5j0jrVZd3ffxhpoX.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&quot;live-collaboration&quot;&gt;Live collaboration &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#live-collaboration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I have simulated a collaboration session locally by working on the Google I/O logo on my Pixelbook,
my Pixel 3a phone, and my iPad Pro. You can see that changes I make on one device are reflected on
all other devices.&lt;/p&gt;
&lt;p&gt;I can even see all cursors move around. The Pixelbook&#39;s cursor moves steadily, since it&#39;s controlled
by a trackpad, but the Pixel 3a phone&#39;s cursor and the iPad Pro&#39;s tablet cursor jump around, since I
control these devices by tapping with my finger.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/7muh13F0CjvKBntVrUTp.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&quot;seeing-collaborator-statuses&quot;&gt;Seeing collaborator statuses &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#seeing-collaborator-statuses&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To improve the realtime collaboration experience, there is even an idle detection system running.
The cursor of the iPad Pro shows a green dot when I use it. The dot turns black when I switch to a
different browser tab or app. And when I&#39;m in the Excalidraw app, but just not doing anything, the
cursor shows me as idle, symbolized by the three zZZs.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/Y7vEI1qHTDJpHNdXjteS.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Avid readers of our publications might be inclined to think that idle detection is realized through
the &lt;a href=&quot;https://web.dev/idle-detection/&quot;&gt;Idle Detection API&lt;/a&gt;, an early stage proposal that&#39;s been worked on in the
context of Project Fugu. Spoiler alert: it&#39;s not. While we had an implementation based on this API
in Excalidraw, in the end, we decided to go for a more traditional approach based on measuring
pointer movement and page visibility.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the Idle Detection feedback filed on the WICG Idle Detection repo.&quot; decoding=&quot;async&quot; height=&quot;685&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/SudM7tqa3ZooUJYx7aBB.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;We filed &lt;a href=&quot;https://github.com/WICG/idle-detection/issues/36&quot; rel=&quot;noopener&quot;&gt;feedback&lt;/a&gt; on why the Idle Detection API
wasn&#39;t solving the use case we had. All Project Fugu APIs are being developed in the open, so
everyone can chime in and have their voice heard!&lt;/p&gt;
&lt;h2 id=&quot;lipis-on-what-is-holding-back-excalidraw&quot;&gt;Lipis on what is holding back Excalidraw &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#lipis-on-what-is-holding-back-excalidraw&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Talking of which, I asked lipis one last question regarding what he thinks is missing from the web
platform that holds back Excalidraw:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The File System Access API is great, but you know what? Most files that I care about these days
live in my Dropbox or Google Drive, not on my hard disk. I wish the File System Access API would
include an abstraction layer for remote file systems providers like Dropbox or Google to integrate
with and that developers could code against. Users could then relax and know their files are safe
with the cloud provider they trust.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I fully agree with lipis, I live in the cloud, too. Here&#39;s hoping that this will be implemented
soon.&lt;/p&gt;
&lt;h2 id=&quot;tabbed-application-mode&quot;&gt;Tabbed application mode &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#tabbed-application-mode&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Wow! We have seen a lot of really great API integrations in Excalidraw.
&lt;a href=&quot;https://web.dev/file-system-access/&quot;&gt;File system&lt;/a&gt;, &lt;a href=&quot;https://web.dev/file-handling/&quot;&gt;file handling&lt;/a&gt;,
&lt;a href=&quot;https://web.dev/excalidraw-and-fugu/%5Casync-clipboard/&quot;&gt;clipboard&lt;/a&gt;, &lt;a href=&quot;https://web.dev/excalidraw-and-fugu/%5Cweb-share/&quot;&gt;web share&lt;/a&gt;, and
&lt;a href=&quot;https://web.dev/web-share-target/&quot;&gt;web share target&lt;/a&gt;. But here is one more thing. Up until now, I could only ever
edit one document at a given time. Not anymore. Please enjoy for the first time an early version of
tabbed application mode in Excalidraw. This is how it looks.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/h8zrwaB8jBXVnQuxglpS.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;I have an existing file open in the installed Excalidraw PWA that&#39;s running in standalone mode. Now
I open a new tab in the standalone window. This is not a regular browser tab, but a PWA tab. In this
new tab I can then open a secondary file, and work on them independently from the same app window.&lt;/p&gt;
&lt;p&gt;Tabbed application mode is in its early stages and not everything is set in stone. If you&#39;re
interested, be sure to read up on the current status of this feature in
&lt;a href=&quot;https://web.dev/tabbed-application-mode/&quot;&gt;my article&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;closing&quot;&gt;Closing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/excalidraw-and-fugu/#closing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To stay in the loop on this and other features, be sure to watch our
&lt;a href=&quot;https://fugu-tracker.web.app/&quot; rel=&quot;noopener&quot;&gt;Fugu API tracker&lt;/a&gt;. We&#39;re super excited to push the web forward and
allow you to do more on the platform. Here&#39;s to an ever improving Excalidraw, and here&#39;s to all the
amazing applications that you will build. Go start creating at
&lt;a href=&quot;https://excalidraw.com/&quot; rel=&quot;noopener&quot;&gt;excalidraw.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I can&#39;t wait to see some of the APIs that I have shown today pop up in your apps. My name is Tom,
you can find me as &lt;a href=&quot;https://twitter.com/tomayac&quot; rel=&quot;noopener&quot;&gt;@tomayac&lt;/a&gt; on Twitter and the internet in general.
Thank you very much for watching, and enjoy the rest of Google I/O.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Boldly link where no one has linked before: Text Fragments
</title>
    <link href="https://web.dev/text-fragments/"/>
    <updated>2020-06-17T00:00:00Z</updated>
    <id>https://web.dev/text-fragments/</id>
    <content type="text/html" mode="escaped">&lt;h2 id=&quot;fragment-identifiers&quot;&gt;Fragment Identifiers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#fragment-identifiers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Chrome 80 was a big release. It contained a number of highly anticipated features like
&lt;a href=&quot;https://web.dev/module-workers/&quot;&gt;ECMAScript Modules in Web Workers&lt;/a&gt;,
&lt;a href=&quot;https://v8.dev/features/nullish-coalescing&quot; rel=&quot;noopener&quot;&gt;nullish coalescing&lt;/a&gt;,
&lt;a href=&quot;https://v8.dev/features/optional-chaining&quot; rel=&quot;noopener&quot;&gt;optional chaining&lt;/a&gt;, and more. The release was, as usual,
announced through a
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&quot; rel=&quot;noopener&quot;&gt;blog post&lt;/a&gt; on the
Chromium blog. You can see an excerpt of the blog post in the screenshot below.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;628&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/egsW6tkKWYI8IHE6JyMZ.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Chromium blog post with red boxes around elements with an &lt;code&gt;id&lt;/code&gt; attribute.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You are probably asking yourself what all the red boxes mean. They are the result of running the
following snippet in DevTools. It highlights all elements that have an &lt;code&gt;id&lt;/code&gt; attribute.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;[id]&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  el&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;border &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;solid 2px red&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I can place a deep link to any element highlighted with a red box thanks to the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#Fragment&quot; rel=&quot;noopener&quot;&gt;fragment identifier&lt;/a&gt;
which I then use in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL/hash&quot; rel=&quot;noopener&quot;&gt;hash&lt;/a&gt; of the
page&#39;s URL. Assuming I wanted to deep link to the &lt;em&gt;Give us feedback in our
&lt;a href=&quot;http://support.google.com/bin/static.py?hl=en&amp;amp;page=portal_groups.cs&quot; rel=&quot;noopener&quot;&gt;Product Forums&lt;/a&gt;&lt;/em&gt; box in the
aside, I could do so by handcrafting the URL
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#HTML1&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#HTML1&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;.
As you can see in the Elements panel of the Developer Tools, the element in question has an &lt;code&gt;id&lt;/code&gt;
attribute with the value &lt;code&gt;HTML1&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;97&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 600px) 600px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/whVXhhrYwA55S3i4J3l5.png?auto=format&amp;w=1200 1200w&quot; width=&quot;600&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Dev Tools showing the &lt;code&gt;id&lt;/code&gt; of an element.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If I parse this URL with JavaScript&#39;s &lt;code&gt;URL()&lt;/code&gt; constructor, the different components are revealed.
Notice the &lt;code&gt;hash&lt;/code&gt; property with the value &lt;code&gt;#HTML1&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#HTML1&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Creates a new `URL` object&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;URL {&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  hash: &quot;#HTML1&quot;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  host: &quot;blog.chromium.org&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  hostname: &quot;blog.chromium.org&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  href: &quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#HTML1&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  origin: &quot;https://blog.chromium.org&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  password: &quot;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  pathname: &quot;/2019/12/chrome-80-content-indexing-es-modules.html&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  port: &quot;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  protocol: &quot;https:&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  search: &quot;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  searchParams: URLSearchParams {}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  username: &quot;&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;}&lt;/span&gt;&lt;br /&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The fact though that I had to open the Developer Tools to find the &lt;code&gt;id&lt;/code&gt; of an element speaks volumes
about the probability this particular section of the page was meant to be linked to by the author of
the blog post.&lt;/p&gt;
&lt;p&gt;What if I want to link to something without an &lt;code&gt;id&lt;/code&gt;? Say I want to link to the &lt;em&gt;ECMAScript Modules
in Web Workers&lt;/em&gt; heading. As you can see in the screenshot below, the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; in question does not
have an &lt;code&gt;id&lt;/code&gt; attribute, meaning there is no way I can link to this heading. This is the problem that
Text Fragments solve.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;71&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 600px) 600px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1g4rTS1q5LKHEHnDoF9o.png?auto=format&amp;w=1200 1200w&quot; width=&quot;600&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Dev Tools showing a heading without an &lt;code&gt;id&lt;/code&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;text-fragments&quot;&gt;Text Fragments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#text-fragments&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://wicg.github.io/ScrollToTextFragment/&quot; rel=&quot;noopener&quot;&gt;Text Fragments&lt;/a&gt; proposal adds support for
specifying a text snippet in the URL hash. When navigating to a URL with such a text fragment, the
user agent can emphasize and/or bring it to the user&#39;s attention.&lt;/p&gt;
&lt;h3 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Text Fragments feature is supported in version 80 and beyond of Chromium-based browsers. At the
time of writing, Safari and Firefox have not publicly signaled an intent to implement the feature.
See &lt;a href=&quot;https://web.dev/text-fragments/#related-links&quot;&gt;Related links&lt;/a&gt; for pointers to the Safari and Firefox discussions.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:  These links used to not work when served across
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections#Alternative_way_of_specifying_redirections&quot; rel=&quot;noopener&quot;&gt;client-side redirects&lt;/a&gt;
that some common services like Twitter use. This issue was tracked as
&lt;a href=&quot;https://crbug.com/1055455&quot; rel=&quot;noopener&quot;&gt;crbug.com/1055455&lt;/a&gt; and is now fixed. Regular
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections#Principle&quot; rel=&quot;noopener&quot;&gt;HTTP redirects&lt;/a&gt; always
worked fine. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;For &lt;a href=&quot;https://web.dev/text-fragments/#security&quot;&gt;security&lt;/a&gt; reasons, the feature requires links to be opened in a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/noopener&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;noopener&lt;/code&gt;&lt;/a&gt; context.
Therefore, make sure to include
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-rel&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;rel=&amp;quot;noopener&amp;quot;&lt;/code&gt;&lt;/a&gt; in your
&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; anchor markup or add
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/open#noopener&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;noopener&lt;/code&gt;&lt;/a&gt; to your
&lt;code&gt;Window.open()&lt;/code&gt; list of window functionality features.&lt;/p&gt;
&lt;h3 id=&quot;textstart&quot;&gt;&lt;code&gt;textStart&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#textstart&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In its simplest form, the syntax of Text Fragments is as follows: The hash symbol &lt;code&gt;#&lt;/code&gt; followed by
&lt;code&gt;:~:text=&lt;/code&gt; and finally &lt;code&gt;textStart&lt;/code&gt;, which represents the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent&quot; rel=&quot;noopener&quot;&gt;percent-encoded&lt;/a&gt;
text I want to link to.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#:~:text=textStart&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For example, say that I want to link to the &lt;em&gt;ECMAScript Modules in Web Workers&lt;/em&gt; heading in the
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&quot; rel=&quot;noopener&quot;&gt;blog post announcing features in Chrome 80&lt;/a&gt;,
the URL in this case would be:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=ECMAScript%20Modules%20in%20Web%20Workers&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=ECMAScript%20Modules%20in%20Web%20Workers&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The text fragment is emphasized &lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;like this&lt;/mark&gt;.
If you click the link in a supporting browser like Chrome, the text fragment is highlighted and
scrolls into view:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;208&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/D3jwPrJlvN3FmJo3pADt.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Text fragment scrolled into view and highlighted.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;textstart-and-textend&quot;&gt;&lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#textstart-and-textend&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now what if I want to link to the entire &lt;em&gt;section&lt;/em&gt; titled &lt;em&gt;ECMAScript Modules in Web Workers&lt;/em&gt;, not
just its heading? Percent-encoding the entire text of the section would make the resulting URL
impracticably long.&lt;/p&gt;
&lt;p&gt;Luckily there is a better way. Rather than the entire text, I can frame the desired text using the
&lt;code&gt;textStart,textEnd&lt;/code&gt; syntax. Therefore, I specify a couple of percent-encoded words at the beginning
of the desired text, and a couple of percent-encoded words at the end of the desired text, separated
by a comma &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;That looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=ECMAScript%20Modules%20in%20Web%20Workers,ES%20Modules%20in%20Web%20Workers.&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=ECMAScript%20Modules%20in%20Web%20Workers,ES%20Modules%20in%20Web%20Workers.&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;textStart&lt;/code&gt;, I have &lt;code&gt;ECMAScript%20Modules%20in%20Web%20Workers&lt;/code&gt;, then a comma &lt;code&gt;,&lt;/code&gt; followed
by &lt;code&gt;ES%20Modules%20in%20Web%20Workers.&lt;/code&gt; as &lt;code&gt;textEnd&lt;/code&gt;. When you click through on a supporting browser
like Chrome, the whole section is highlighted and scrolled into view:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;343&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/2yTYmKnjHTnqXkcmHF1F.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Text fragment scrolled into view and highlighted.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Now you may wonder about my choice of &lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt;. Actually, the slightly shorter URL
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=ECMAScript%20Modules,Web%20Workers.&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=ECMAScript%20Modules,Web%20Workers.&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;
with only two words on each side would have worked, too. Compare &lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt; with the
previous values.&lt;/p&gt;
&lt;p&gt;If I take it one step further and now use only one word for both &lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt;, you can
see that I am in trouble. The URL
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=ECMAScript,Workers.&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=ECMAScript,Workers.&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;
is even shorter now, but the highlighted text fragment is no longer the originally desired one. The
highlighting stops at the first occurrence of the word &lt;code&gt;Workers.&lt;/code&gt;, which is correct, but not what I
intended to highlight. The problem is that the desired section is not uniquely identified by the
current one-word &lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt; values:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;342&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GGbbtHBpsoFyubnISyZw.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Non-intended text fragment scrolled into view and highlighted.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;prefix-and-suffix&quot;&gt;&lt;code&gt;prefix-&lt;/code&gt; and &lt;code&gt;-suffix&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#prefix-and-suffix&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using long enough values for &lt;code&gt;textStart&lt;/code&gt; and &lt;code&gt;textEnd&lt;/code&gt; is one solution for obtaining a unique link.
In some situations, however, this is not possible. On a side note, why did I choose the
Chrome 80 release blog post as my example? The answer is that in this release Text Fragments
were introduced:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Blog post text: Text URL Fragments. Users or authors can now link to a specific portion of a page using a text fragment provided in a URL. When the page is loaded, the browser highlights the text and scrolls the fragment into view. For example, the URL below loads a wiki page for &amp;#x27;Cat&amp;#x27; and scrolls to the content listed in the &amp;#x60;text&amp;#x60; parameter.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;200&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yA1p3CijeDbTRwMys9Hq.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Text Fragments announcement blog post excerpt.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Notice how in the screenshot above the word &amp;quot;text&amp;quot; appears four times. The forth occurrence is
written in a green code font. If I wanted to link to this particular word, I would set &lt;code&gt;textStart&lt;/code&gt;
to &lt;code&gt;text&lt;/code&gt;. Since the word &amp;quot;text&amp;quot; is, well, only one word, there cannot be a &lt;code&gt;textEnd&lt;/code&gt;. What now? The
URL
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=text&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=text&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;
matches at the first occurrence of the word &amp;quot;Text&amp;quot; already in the heading:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;209&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nXxCskUwdCxwxejPSSZW.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Text Fragment matching at the first occurrence of &quot;Text&quot;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:  Note that text fragment matching is case-insensitive. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Luckily there is a solution. In cases like this, I can specify a &lt;code&gt;prefix​-&lt;/code&gt; and a &lt;code&gt;-suffix&lt;/code&gt;. The
word before the green code font &amp;quot;text&amp;quot; is &amp;quot;the&amp;quot;, and the word after is &amp;quot;parameter&amp;quot;. None of the
other three occurrences of the word &amp;quot;text&amp;quot; has the same surrounding words. Armed with this
knowledge, I can tweak the previous URL and add the &lt;code&gt;prefix-&lt;/code&gt; and the &lt;code&gt;-suffix&lt;/code&gt;. Like the other
parameters, they, too, need to be percent-encoded and can contain more than one word.
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=the-,text,-parameter&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=the-,text,-parameter&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;.
To allow the parser to clearly identify the &lt;code&gt;prefix-&lt;/code&gt; and the &lt;code&gt;-suffix&lt;/code&gt;, they need to be separated
from the &lt;code&gt;textStart&lt;/code&gt; and the optional &lt;code&gt;textEnd&lt;/code&gt; with a dash &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;203&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/J3L5BVSMmzGY6xdkabP6.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Text Fragment matching at the desired occurrence of &quot;text&quot;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;the-full-syntax&quot;&gt;The full syntax &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#the-full-syntax&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The full syntax of Text Fragments is shown below. (Square brackets indicate an optional parameter.)
The values for all parameters need to be percent-encoded. This is especially important for the dash
&lt;code&gt;-&lt;/code&gt;, ampersand &lt;code&gt;&amp;amp;&lt;/code&gt;, and comma &lt;code&gt;,&lt;/code&gt; characters, so they are not being interpreted as part of the text
directive syntax.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#:~:text=[prefix-,]textStart[,textEnd][,-suffix]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each of &lt;code&gt;prefix-&lt;/code&gt;, &lt;code&gt;textStart&lt;/code&gt;, &lt;code&gt;textEnd&lt;/code&gt;, and &lt;code&gt;-suffix&lt;/code&gt; will only match text within a single
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements&quot; rel=&quot;noopener&quot;&gt;block-level element&lt;/a&gt;,
but full &lt;code&gt;textStart,textEnd&lt;/code&gt; ranges &lt;em&gt;can&lt;/em&gt; span multiple blocks. For example,
&lt;code&gt;:~:text=The quick,lazy dog&lt;/code&gt; will fail to match in the following example, because the starting
string &amp;quot;The quick&amp;quot; does not appear within a single, uninterrupted block-level element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  The&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  quick brown fox&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;jumped over the lazy dog&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It does, however, match in this example:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The quick brown fox&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;jumped over the lazy dog&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;creating-text-fragment-urls-with-a-browser-extension&quot;&gt;Creating Text Fragment URLs with a browser extension &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#creating-text-fragment-urls-with-a-browser-extension&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creating Text Fragments URLs by hand is tedious, especially when it comes to making sure they are
unique. If you really want to, the specification has some tips and lists the exact
&lt;a href=&quot;https://wicg.github.io/ScrollToTextFragment/#generating-text-fragment-directives&quot; rel=&quot;noopener&quot;&gt;steps for generating Text Fragment URLs&lt;/a&gt;.
We provide an open-source browser extension called
&lt;a href=&quot;https://github.com/GoogleChromeLabs/link-to-text-fragment&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment&lt;/a&gt; that lets you
link to any text by selecting it, and then clicking &amp;quot;Copy Link to Selected Text&amp;quot; in the context
menu. This extension is available for the following browsers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/link-to-text-fragment/pbcodcjpfjdpcineamnnmbkkmkdpajjg&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment for Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://microsoftedge.microsoft.com/addons/detail/link-to-text-fragment/pmdldpbcbobaamgkpkghjigngamlolag&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment for Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/firefox/addon/link-to-text-fragment/&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment for Mozilla Firefox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://apps.apple.com/app/link-to-text-fragment/id1532224396&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment for Apple Safari&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ASLtFCPoHvyTKrAtKAv4.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    &lt;a href=&quot;https://github.com/GoogleChromeLabs/link-to-text-fragment&quot;&gt;
      Link to Text Fragment
    &lt;/a&gt;
    browser extension.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;multiple-text-fragments-in-one-url&quot;&gt;Multiple text fragments in one URL &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#multiple-text-fragments-in-one-url&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Note that multiple text fragments can appear in one URL. The particular text fragments need to be
separated by an ampersand character &lt;code&gt;&amp;amp;&lt;/code&gt;. Here is an example link with three text fragments:
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=Text%20URL%20Fragments&amp;text=text,-parameter&amp;text=:~:text=On%20islands,%20birds%20can%20contribute%20as%20much%20as%2060%25%20of%20a%20cat&#39;s%20diet&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=Text%20URL%20Fragments&amp;amp;text=text,-parameter&amp;amp;text=:~:text=On%20islands,%20birds%20can%20contribute%20as%20much%20as%2060%25%20of%20a%20cat&#39;s%20diet&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;324&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ffsq7aoSoVd9q6r5cquY.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Three text fragments in one URL.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;mixing-element-and-text-fragments&quot;&gt;Mixing element and text fragments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#mixing-element-and-text-fragments&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Traditional element fragments can be combined with text fragments. It is perfectly fine to have both
in the same URL, for example, to provide a meaningful fallback in case the original text on the page
changes, so that the text fragment does not match anymore. The URL
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#HTML1:~:text=Give%20us%20feedback%20in%20our%20Product%20Forums.&quot;&gt;&lt;code&gt;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#HTML1:~:text=Give%20us%20feedback%20in%20our%20Product%20Forums.&lt;/mark&gt;&lt;/code&gt;&lt;/a&gt;
linking to the &lt;em&gt;Give us feedback in our
&lt;a href=&quot;http://support.google.com/bin/static.py?hl=en&amp;amp;page=portal_groups.cs&quot; rel=&quot;noopener&quot;&gt;Product Forums&lt;/a&gt;&lt;/em&gt; section
contains both an element fragment (&lt;code&gt;HTML1&lt;/code&gt;), as well as a text fragment
(&lt;code&gt;text=Give%20us%20feedback%20in%20our%20Product%20Forums.&lt;/code&gt;):&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;121&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 237px) 237px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/JRKCM6Ihrq8sgRZRiymr.png?auto=format&amp;w=474 474w&quot; width=&quot;237&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Linking with both element fragment and text fragment.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;the-fragment-directive&quot;&gt;The fragment directive &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#the-fragment-directive&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is one element of the syntax I have not explained yet: the fragment directive &lt;code&gt;:~:&lt;/code&gt;. To avoid
compatibility issues with existing URL element fragments as shown above, the
&lt;a href=&quot;https://wicg.github.io/ScrollToTextFragment/&quot; rel=&quot;noopener&quot;&gt;Text Fragments specification&lt;/a&gt; introduces the fragment
directive. The fragment directive is a portion of the URL fragment delimited by the code sequence
&lt;code&gt;:~:&lt;/code&gt;. It is reserved for user agent instructions, such as &lt;code&gt;text=&lt;/code&gt;, and is stripped from the URL
during loading so that author scripts cannot directly interact with it. User agent instructions are
also called &lt;em&gt;directives&lt;/em&gt;. In the concrete case, &lt;code&gt;text=&lt;/code&gt; is therefore called a &lt;em&gt;text directive&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To detect support, test for the read-only &lt;code&gt;fragmentDirective&lt;/code&gt; property on &lt;code&gt;document&lt;/code&gt;. The fragment
directive is a mechanism for URLs to specify instructions directed to the browser rather than the
document. It is meant to avoid direct interaction with author script, so that future user agent
instructions can be added without fear of introducing breaking changes to existing content. One
potential example of such future additions could be translation hints.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fragmentDirective&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Text Fragments is supported.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;From Chrome 80 to Chrome 85, the &lt;code&gt;fragmentDirective&lt;/code&gt; property was defined on
&lt;code&gt;Location.prototype&lt;/code&gt;. For details on this change, see
&lt;a href=&quot;https://github.com/WICG/scroll-to-text-fragment/issues/130&quot; rel=&quot;noopener&quot;&gt;WICG/scroll-to-text-fragment#130&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Feature detection is mainly intended for cases where links are dynamically generated (for example by
search engines) to avoid serving text fragments links to browsers that do not support them.&lt;/p&gt;
&lt;h3 id=&quot;styling-text-fragments&quot;&gt;Styling text fragments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#styling-text-fragments&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;By default, browsers style text fragments the same way they style
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; (typically black on yellow,
the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors&quot; rel=&quot;noopener&quot;&gt;system colors&lt;/a&gt;
for &lt;code&gt;mark&lt;/code&gt;). The user-agent stylesheet contains CSS that looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root::target-text&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; MarkText&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Mark&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;As you can see, the browser exposes a pseudo selector
&lt;a href=&quot;https://drafts.csswg.org/css-pseudo/#selectordef-target-text&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;::target-text&lt;/code&gt;&lt;/a&gt; that you can use to
customize the applied highlighting. For example, you could design your text fragments to be black
text on a red background. As always, be sure to
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#contrast&quot; rel=&quot;noopener&quot;&gt;check the color contrast&lt;/a&gt;
so your override styling does not cause accessibility issues and make sure the highlighting actually
visually stands out from the rest of the content.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root::target-text&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; black&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;polyfillability&quot;&gt;Polyfillability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#polyfillability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Text Fragments feature can be polyfilled to some extent. We provide a
&lt;a href=&quot;https://github.com/GoogleChromeLabs/text-fragments-polyfill&quot; rel=&quot;noopener&quot;&gt;polyfill&lt;/a&gt;, which is used internally by
the &lt;a href=&quot;https://github.com/GoogleChromeLabs/link-to-text-fragment&quot; rel=&quot;noopener&quot;&gt;extension&lt;/a&gt;, for browsers that do not
provide built-in support for Text Fragments where the functionality is implemented in JavaScript.&lt;/p&gt;
&lt;h3 id=&quot;programmatic-text-fragment-link-generation&quot;&gt;Programmatic Text Fragment link generation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#programmatic-text-fragment-link-generation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/GoogleChromeLabs/text-fragments-polyfill&quot; rel=&quot;noopener&quot;&gt;polyfill&lt;/a&gt; contains a file
&lt;code&gt;fragment-generation-utils.js&lt;/code&gt; that you can import and use to generate Text Fragment links. This is
outlined in the code sample below:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; generateFragment &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;https://unpkg.com/text-fragments-polyfill/dist/fragment-generation-utils.js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generateFragment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSelection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;status &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;origin&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pathname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;search&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fragment &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fragment&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; prefix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prefix &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;prefix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;-,&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; suffix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;suffix &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;suffix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textStart &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textStart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; textEnd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textEnd &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fragment&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textEnd&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  url &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;#:~:text=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;prefix&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textStart&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;textEnd&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;suffix&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;obtaining-text-fragments-for-analytics-purposes&quot;&gt;Obtaining Text Fragments for analytics purposes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#obtaining-text-fragments-for-analytics-purposes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Plenty of sites use the fragment for routing, which is why browsers strip out Text Fragments
so as to not break those pages. There is an
&lt;a href=&quot;https://github.com/WICG/scroll-to-text-fragment/issues/128&quot; rel=&quot;noopener&quot;&gt;acknowledged need&lt;/a&gt;
to expose Text Fragments links to pages, for example, for analytics purposes,
but the proposed solution is not implemented yet.
As a workaround for now, you can use the code below to extract
the desired information.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;performance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;navigate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;security&quot;&gt;Security &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#security&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Text fragment directives are invoked only on full (non-same-page) navigations that are the result of
a
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/interaction.html#tracking-user-activation&quot; rel=&quot;noopener&quot;&gt;user activation&lt;/a&gt;.
Additionally, navigations originating from a different origin than the destination will require the
navigation to take place in a
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/links.html#link-type-noopener&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;noopener&lt;/code&gt;&lt;/a&gt; context, such
that the destination page is known to be sufficiently isolated. Text fragment directives are only
applied to the main frame. This means that text will not be searched inside iframes, and iframe
navigation will not invoke a text fragment.&lt;/p&gt;
&lt;h3 id=&quot;privacy&quot;&gt;Privacy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#privacy&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is important that implementations of the Text Fragments specification do not leak whether a text
fragment was found on a page or not. While element fragments are fully under the control of the
original page author, text fragments can be created by anyone. Remember how in my example above
there was no way to link to the &lt;em&gt;ECMAScript Modules in Web Workers&lt;/em&gt; heading, since the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; did
not have an &lt;code&gt;id&lt;/code&gt;, but how anyone, including me, could just link to anywhere by carefully crafting
the text fragment?&lt;/p&gt;
&lt;p&gt;Imagine I ran an evil ad network &lt;code&gt;evil-ads.example.com&lt;/code&gt;. Further imagine that in one of my ad
iframes I dynamically created a hidden cross-origin iframe to &lt;code&gt;dating.example.com&lt;/code&gt; with a Text
Fragment URL
&lt;code&gt;dating.example.com&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;#:~:text=Log%20Out&lt;/mark&gt;&lt;/code&gt;
once the user interacts with the ad. If the text &amp;quot;Log Out&amp;quot; is found, I know the victim is currently
logged in to &lt;code&gt;dating.example.com&lt;/code&gt;, which I could use for user profiling. Since a naive Text
Fragments implementation might decide that a successful match should cause a focus switch, on
&lt;code&gt;evil-ads.example.com&lt;/code&gt; I could listen for the &lt;code&gt;blur&lt;/code&gt; event and thus know when a match occurred. In
Chrome, we have implemented Text Fragments in such a way that the above scenario cannot happen.&lt;/p&gt;
&lt;p&gt;Another attack might be to exploit network traffic based on scroll position. Assume I had access to
network traffic logs of my victim, like as the admin of a company intranet. Now imagine there
existed a long human resources document &lt;em&gt;What to Do If You Suffer From…&lt;/em&gt; and then a list of
conditions like &lt;em&gt;burn out&lt;/em&gt;, &lt;em&gt;anxiety&lt;/em&gt;, etc. I could place a tracking pixel next to each item on the
list. If I then determine that loading the document temporally co-occurs with the loading of the
tracking pixel next to, say, the &lt;em&gt;burn out&lt;/em&gt; item, I can then, as the intranet admin, determine that
an employee has clicked through on a text fragment link with &lt;code&gt;:~:text=burn%20out&lt;/code&gt; that the employee
may have assumed was confidential and not visible to anyone. Since this example is somewhat
contrived to begin with and since its exploitation requires &lt;em&gt;very&lt;/em&gt; specific preconditions to be met,
the Chrome security team evaluated the risk of implementing scroll on navigation to be manageable.
Other user agents may decide to show a manual scroll UI element instead.&lt;/p&gt;
&lt;p&gt;For sites that wish to opt-out, Chromium supports a
&lt;a href=&quot;https://wicg.github.io/document-policy/&quot; rel=&quot;noopener&quot;&gt;Document Policy&lt;/a&gt;
header value that they can send so user agents will not process Text Fragment URLs.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Document-Policy: force-load-at-top&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;disabling-text-fragments&quot;&gt;Disabling text fragments &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#disabling-text-fragments&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The easiest way for disabling the feature is by using an extension that can inject HTTP response
headers, for example,
&lt;a href=&quot;https://chrome.google.com/webstore/detail/modheader/idgpnmonknjnojddfkpgkljpfnnfcklj&quot; rel=&quot;noopener&quot;&gt;ModHeader&lt;/a&gt;
(not a Google product), to insert a response (&lt;em&gt;not&lt;/em&gt; request) header as follows:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Document-Policy: force-load-at-top&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Another, more involved, way to opt out is by using the enterprise setting
&lt;a href=&quot;https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ScrollToTextFragmentEnabled&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;ScrollToTextFragmentEnabled&lt;/code&gt;&lt;/a&gt;.
To do this on macOS, paste the command below in the terminal.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;defaults &lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt; com.google.Chrome ScrollToTextFragmentEnabled -bool &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;On Windows, follow the documentation on the
&lt;a href=&quot;https://support.google.com/chrome/a/answer/9131254?hl=en&quot; rel=&quot;noopener&quot;&gt;Google Chrome Enterprise Help&lt;/a&gt; support
site.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:  Only try this when you know what you are doing. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;text-fragments-in-web-search&quot;&gt;Text fragments in web search &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#text-fragments-in-web-search&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For some searches, the search engine Google provides a quick answer or summary with a content
snippet from a relevant website. These &lt;em&gt;featured snippets&lt;/em&gt; are most likely to show up when a search
is in the form of a question. Clicking a featured snippet takes the user directly to the featured
snippet text on the source web page. This works thanks to automatically created Text Fragments URLs.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;451&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KbZgnGxZOOymLxYPZyGH.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Google search engine results page showing a featured snippet. The status bar shows the Text Fragments URL.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;&quot; decoding=&quot;async&quot; height=&quot;451&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/4Q7zk9xBnb2uw8GRaLnU.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;After clicking through, the relevant section of the page is scrolled into view.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Text Fragments URL is a powerful feature to link to arbitrary text on webpages. The scholarly
community can use it to provide highly accurate citation or reference links. Search engines can use
it to deeplink to text results on pages. Social networking sites can use it to let users share
specific passages of a webpage rather than inaccessible screenshots. I hope you start
&lt;a href=&quot;https://blog.chromium.org/2019/12/chrome-80-content-indexing-es-modules.html#:~:text=Text%20URL%20Fragments&amp;amp;text=text,-parameter&amp;amp;text=:~:text=On%20islands,%20birds%20can%20contribute%20as%20much%20as%2060%25%20of%20a%20cat&#39;s%20diet&quot; rel=&quot;noopener&quot;&gt;using Text Fragment URLs&lt;/a&gt;
and find them as useful as I do. Be sure to install the
&lt;a href=&quot;https://github.com/GoogleChromeLabs/link-to-text-fragment&quot; rel=&quot;noopener&quot;&gt;Link to Text Fragment&lt;/a&gt; browser
extension.&lt;/p&gt;
&lt;h2 id=&quot;related-links&quot;&gt;Related links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#related-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/scroll-to-text-fragment/&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/392&quot; rel=&quot;noopener&quot;&gt;TAG Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/4733392803332096&quot; rel=&quot;noopener&quot;&gt;Chrome Platform Status entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/919204&quot; rel=&quot;noopener&quot;&gt;Chrome tracking bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/d/topic/blink-dev/zlLSxQ9BA8Y/discussion&quot; rel=&quot;noopener&quot;&gt;Intent to Ship thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2019-December/030978.html&quot; rel=&quot;noopener&quot;&gt;WebKit-Dev thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/194&quot; rel=&quot;noopener&quot;&gt;Mozilla standards position thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/text-fragments/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Text Fragments was implemented and specified by &lt;a href=&quot;https://github.com/nickburris&quot; rel=&quot;noopener&quot;&gt;Nick Burris&lt;/a&gt; and
&lt;a href=&quot;https://github.com/bokand&quot; rel=&quot;noopener&quot;&gt;David Bokan&lt;/a&gt;, with contributions from
&lt;a href=&quot;https://github.com/grantjwang&quot; rel=&quot;noopener&quot;&gt;Grant Wang&lt;/a&gt;. Thanks to &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt; for
the thorough review of this article. Hero image by &lt;a href=&quot;https://unsplash.com/@grakozy&quot; rel=&quot;noopener&quot;&gt;Greg Rakozy&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/oMpAz-DN-9I&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Recognize your users&#39; handwriting</title>
    <link href="https://web.dev/handwriting-recognition/"/>
    <updated>2021-05-17T00:00:00Z</updated>
    <id>https://web.dev/handwriting-recognition/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Handwriting Recognition API is part of the &lt;a href=&quot;https://web.dev/fugu-status/&quot;&gt;capabilities project&lt;/a&gt; and
is currently in development. This post will be updated as the implementation progresses.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what&quot;&gt;What is the Handwriting Recognition API? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Handwriting Recognition API allows you to convert handwriting (ink) from your users into text.
Some operating systems have long included such APIs, and with this new capability, your web apps can
finally use this functionality. The conversion takes place directly on the user&#39;s device, works even
in offline mode, all without adding any third-party libraries or services.&lt;/p&gt;
&lt;p&gt;This API implements so-called &amp;quot;on-line&amp;quot; or near real-time recognition. This means that the
handwritten input is recognized while the user is drawing it by capturing and analyzing the single
strokes. In contrast to &amp;quot;off-line&amp;quot; procedures such as Optical Character Recognition (OCR), where
only the end product is known, on-line algorithms can provide a higher level of accuracy due to
additional signals like the temporal sequence and pressure of individual ink strokes.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/8WbTDNrhLsU0El80frMBGE4eMCD3/xpKdyvsjKswk4kISP0pQ.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Suggested use cases for the Handwriting Recognition API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Example uses include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Note-taking applications where users want to capture handwritten notes and have them translated
into text.&lt;/li&gt;
&lt;li&gt;Forms applications where users can use pen or finger input due to time constraints.&lt;/li&gt;
&lt;li&gt;Games that require filling in letters or numbers, such as crosswords, hangman, or sudoku.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#status&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/handwriting-recognition/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. Gather feedback &amp;amp; iterate on design&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/handwriting-recognition/#feedback&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/3207688834594635777&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;use&quot;&gt;How to use the Handwriting Recognition API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#use&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To experiment with the Handwriting Recognition API locally, without an origin trial token, enable
the &lt;code&gt;#experimental-web-platform-features&lt;/code&gt; flag in &lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Note that the API is currently exclusive to Chrome OS devices. Chrome 91
already contains limited support for the API, but to fully experience it, we recommend you test on
Chrome 92 to Chrome 94. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 id=&quot;enabling-support-during-the-origin-trial-phase&quot;&gt;Enabling support during the origin trial phase &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#enabling-support-during-the-origin-trial-phase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Starting in Chrome 92, the Handwriting Recognition API will be available as an origin trial on
Chrome OS. The origin trial is expected to end in Chrome 94 (October 13, 2021).&lt;/p&gt;
&lt;p&gt;Origin trials allow you to try new features and give feedback on their
usability, practicality, and effectiveness to the web standards community. For
more information, see the &lt;a href=&quot;https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/developer-guide.md&quot; rel=&quot;noopener&quot;&gt;Origin Trials Guide for Web Developers&lt;/a&gt;.
To sign up for this or another origin trial, visit the &lt;a href=&quot;https://developers.chrome.com/origintrials/#/trials/active&quot; rel=&quot;noopener&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;register-for-ot&quot;&gt;Register for the origin trial &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#register-for-ot&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/origintrials/#/view_trial/3207688834594635777&quot; rel=&quot;noopener&quot;&gt;Request a token&lt;/a&gt; for your origin.&lt;/li&gt;
&lt;li&gt;Add the token to your pages. There are two ways to do that:
&lt;ul&gt;
&lt;li&gt;Add an &lt;code&gt;origin-trial&lt;/code&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag to the head of each page. For example,
this may look something like: &lt;br /&gt;
&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;origin-trial&amp;quot; content=&amp;quot;TOKEN_GOES_HERE&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you can configure your server, you can also add the token
using an &lt;code&gt;Origin-Trial&lt;/code&gt; HTTP header. The resulting response header should
look something like:&lt;br /&gt;
&lt;code&gt;Origin-Trial: TOKEN_GOES_HERE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Detect browser support by checking for the existence of the &lt;code&gt;createHandwritingRecognizer()&lt;/code&gt; method
on the navigator object:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;createHandwritingRecognizer&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// 🎉 The Handwriting Recognition API is supported!&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;core-concepts&quot;&gt;Core concepts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#core-concepts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Handwriting Recognition API converts handwritten input into text, regardless of the input method
(mouse, touch, pen). The API has four main entities:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;em&gt;point&lt;/em&gt; represents where the pointer was at a particular time.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;stroke&lt;/em&gt; consists of one or more points. The recording of a stroke starts when the user puts
the pointer down (i.e., clicks the primary mouse button, or touches the screen with their pen or
finger) and ends when they raise the pointer back up.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;drawing&lt;/em&gt; consists of one or more strokes. The actual recognition takes place at this level.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;recognizer&lt;/em&gt; is configured with the expected input language. It is used to create an instance
of a drawing with the recognizer configuration applied.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These concepts are implemented as specific interfaces and dictionaries, which I&#39;ll cover shortly.&lt;/p&gt;
&lt;img alt=&quot;The core entities of the Handwriting Recognition API: One or more points compose a stroke, one or more strokes compose a drawing, that the recognizer creates. The actual recognition takes place at the drawing level.&quot; decoding=&quot;async&quot; height=&quot;445&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/IUbfA7u5K0vUYspj7XK5.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h4 id=&quot;creating-a-recognizer&quot;&gt;Creating a recognizer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#creating-a-recognizer&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To recognize text from handwritten input, you need to obtain an instance of a
&lt;code&gt;HandwritingRecognizer&lt;/code&gt; by calling &lt;code&gt;navigator.createHandwritingRecognizer()&lt;/code&gt; and passing constraints
to it. Constraints determine the handwriting recognition model that should be used. Currently, you
can specify a list of languages in order of preference:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; recognizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createHandwritingRecognizer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  languages&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:  The current implementation on Chrome OS can only recognize one language
at a time. It only supports English (&lt;code&gt;en&lt;/code&gt;), and a gesture model (&lt;code&gt;zxx-x-gesture&lt;/code&gt;) to recognize
gestures such as crossing out words. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The method returns a promise resolving with an instance of a &lt;code&gt;HandwritingRecognizer&lt;/code&gt; when the
browser can fulfill your request. Otherwise, it will reject the promise with an error, and
handwriting recognition will not be available. For this reason, you may want to query the
recognizer&#39;s support for particular recognition features first.&lt;/p&gt;
&lt;h4 id=&quot;querying-recognizer-support&quot;&gt;Querying recognizer support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#querying-recognizer-support&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;By calling &lt;code&gt;navigator.queryHandwritingRecognizerSupport()&lt;/code&gt;, you can check if the target platform
supports the handwriting recognition features you intend to use. In the following example, the
developer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wants to detect texts in English&lt;/li&gt;
&lt;li&gt;get alternative, less likely predictions when available&lt;/li&gt;
&lt;li&gt;gain access to the segmentation result, i.e., the recognized characters, including the points and
strokes that make them up&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; languages&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; alternatives&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; segmentationResults &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;queryHandwritingRecognizerSupport&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    languages&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    alternatives&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    segmentationResult&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;languages&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// true or false&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;alternatives&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// true or false&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;segmentationResult&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// true or false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The method returns a promise resolving with a result object. If the browser supports the feature
specified by the developer, its value will be set to &lt;code&gt;true&lt;/code&gt;. Otherwise, it will be set to &lt;code&gt;false&lt;/code&gt;.
You can use this information to enable or disable certain features within your application, or to
adjust your query and send a new one.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Due to fingerprinting concerns, you cannot request a list of supported features, such as
particular languages, and the browser may ask for user permission or reject your request entirely if
you send too many feature queries. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4 id=&quot;start-a-drawing&quot;&gt;Start a drawing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#start-a-drawing&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Within your application, you should offer an input area where the user makes their handwritten
entries. For performance reasons, it is recommended to implement this with the help of a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial&quot; rel=&quot;noopener&quot;&gt;canvas object&lt;/a&gt;. The exact
implementation of this part is out of scope for this article, but you may refer to the &lt;a href=&quot;https://web.dev/handwriting-recognition/#demo&quot;&gt;demo&lt;/a&gt;
to see how it can be done.&lt;/p&gt;
&lt;p&gt;To start a new drawing, call the &lt;code&gt;startDrawing()&lt;/code&gt; method on the recognizer. This method takes an
object containing different hints to fine-tune the recognition algorithm. All hints are optional:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The kind of text being entered: text, email addresses, numbers, or an individual character
(&lt;code&gt;recognitionType&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The type of input device: mouse, touch, or pen input (&lt;code&gt;inputType&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The preceding text (&lt;code&gt;textContext&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The number of less-likely alternative predictions that should be returned (&lt;code&gt;alternatives&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A list of user-identifiable characters (&amp;quot;graphemes&amp;quot;) the user will most likely enter
(&lt;code&gt;graphemeSet&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Handwriting Recognition API plays well with
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events&quot; rel=&quot;noopener&quot;&gt;Pointer Events&lt;/a&gt; which provide an
abstract interface to consume input from any pointing device. The pointer event arguments contain
the type of pointer being used. This means you can use pointer events to determine the input type
automatically. In the following example, the drawing for handwriting recognition is automatically
created on the first occurrence of a &lt;code&gt;pointerdown&lt;/code&gt; event on the handwriting area. As the
&lt;code&gt;pointerType&lt;/code&gt; may be empty or set to a proprietary value, I introduced a consistency check to make
sure only supported values are set for the drawing&#39;s input type.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; drawing&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; activeStroke&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pointerdown&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;drawing&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    drawing &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; recognizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;startDrawing&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      recognitionType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// email, number, per-character&lt;/span&gt;&lt;br /&gt;      inputType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;mouse&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;touch&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;pen&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pointerType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      textContext&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Hello, &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      alternatives&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      graphemeSet&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;f&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;i&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;u&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// for a fizz buzz entry form&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;startStroke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:  The current implementation on Chrome OS does not support grapheme sets
yet, they are silently ignored. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h4 id=&quot;add-a-stroke&quot;&gt;Add a stroke &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#add-a-stroke&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;pointerdown&lt;/code&gt; event is also the right place to start a new stroke. To do so, create a new
instance of &lt;code&gt;HandwritingStroke&lt;/code&gt;. Also, you should store the current time as a point of reference for
the subsequent points added to it:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;startStroke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  activeStroke &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    stroke&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandwritingStroke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    startTime&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;addPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;add-a-point&quot;&gt;Add a point &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#add-a-point&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After creating the stroke, you should directly add the first point to it. As you will add more
points later on, it makes sense to implement the point creation logic in a separate method. In the
following example, the &lt;code&gt;addPoint()&lt;/code&gt; method calculates the elapsed time from the reference timestamp.
The temporal information is optional, but can improve recognition quality. Then, it reads the X and
Y coordinates from the pointer event and adds the point to the current stroke.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; timeElapsed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; activeStroke&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;startTime&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  activeStroke&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stroke&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    x&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    y&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    t&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; timeElapsed&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;pointermove&lt;/code&gt; event handler is called when the pointer is moved across the screen. Those points
need to be added to the stroke as well. The event can also be raised if the pointer is not in a
&amp;quot;down&amp;quot; state, for example when moving the cursor across the screen without pressing the mouse
button. The event handler from the following example checks if an active stroke exists, and adds the
new point to it.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pointermove&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;activeStroke&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;addPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;recognize-text&quot;&gt;Recognize text &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#recognize-text&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;When the user lifts the pointer again, you can add the stroke to your drawing by calling its
&lt;code&gt;addStroke()&lt;/code&gt; method. The following example also resets the &lt;code&gt;activeStroke&lt;/code&gt;, so the &lt;code&gt;pointermove&lt;/code&gt;
handler will not add points to the completed stroke.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If necessary, you can also use the drawing&#39;s &lt;code&gt;getStrokes()&lt;/code&gt; method to list all strokes,
and the &lt;code&gt;removeStroke()&lt;/code&gt; method to remove a particular one from the drawing. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Next, it&#39;s time for recognizing the user&#39;s input by calling the &lt;code&gt;getPrediction()&lt;/code&gt; method on the
drawing. Recognition usually takes less than a few hundred milliseconds, so you can repeatedly run
predictions if needed. The following example runs a new prediction after each completed stroke.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;pointerup&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  drawing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addStroke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;activeStroke&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stroke&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  activeStroke &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mostLikelyPrediction&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;lessLikelyAlternatives&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; drawing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrediction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mostLikelyPrediction&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mostLikelyPrediction&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  lessLikelyAlternatives&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;alternative&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;alternative&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This method returns a promise which resolves with an array of predictions ordered by their
likelihood. The number of elements depends on the value you passed to the &lt;code&gt;alternatives&lt;/code&gt; hint. You
could use this array to present the user with a choice of possible matches, and have them select an
option. Alternatively, you can simply go with the most likely prediction, which is what I do in the
example.&lt;/p&gt;
&lt;p&gt;The prediction object contains the recognized text and an optional segmentation result, which I will
discuss in the following section.&lt;/p&gt;
&lt;h4 id=&quot;detailed-insights-with-segmentation-results&quot;&gt;Detailed insights with segmentation results &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#detailed-insights-with-segmentation-results&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If supported by the target platform, the prediction object can also contain a segmentation result.
This is an array containing all recognized handwriting segment, a combination of the recognized
user-identifiable character (&lt;code&gt;grapheme&lt;/code&gt;) along with its position in the recognized text
(&lt;code&gt;beginIndex&lt;/code&gt;, &lt;code&gt;endIndex&lt;/code&gt;), and the strokes and points that created it.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mostLikelyPrediction&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;segmentationResult&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  mostLikelyPrediction&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;segmentationResult&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; grapheme&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beginIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; endIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; drawingSegments &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;grapheme&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beginIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; endIndex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      drawingSegments&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; strokeIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beginPointIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; endPointIndex &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;strokeIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; beginPointIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; endPointIndex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You could use this information to track down the recognized graphemes on the canvas again.&lt;/p&gt;
&lt;img alt=&quot;Boxes are drawn around each recognized grapheme&quot; decoding=&quot;async&quot; height=&quot;338&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/8WbTDNrhLsU0El80frMBGE4eMCD3/0UK0jj7vOXaNqkRr3SF9.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h4 id=&quot;complete-recognition&quot;&gt;Complete recognition &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#complete-recognition&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;After the recognition has completed, you can free resources by calling the &lt;code&gt;clear()&lt;/code&gt; method on the
&lt;code&gt;HandwritingDrawing&lt;/code&gt;, and the &lt;code&gt;finish()&lt;/code&gt; method on the &lt;code&gt;HandwritingRecognizer&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;drawing&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;recognizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The web component &lt;code&gt;&amp;lt;handwriting-textarea&amp;gt;&lt;/code&gt; implements a
&lt;a href=&quot;https://web.dev/progressively-enhance-your-pwa/&quot;&gt;progressively enhanced&lt;/a&gt;, editing control capable of handwriting
recognition. By clicking the button in the lower right corner of the editing control, you activate
the drawing mode. When you complete the drawing, the web component will automatically start the
recognition and add the recognized text back to the editing control. If the Handwriting Recognition
API is not supported at all, or the platform doesn&#39;t support the requested features, the edit button
will be hidden. But the basic editing control remains usable as a &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The web component offers properties and attributes to define the recognition behavior from the
outside, including &lt;code&gt;languages&lt;/code&gt; and &lt;code&gt;recognitiontype&lt;/code&gt;. You can set the content of the control via the
&lt;code&gt;value&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;handwriting-textarea&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;languages&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;recognitiontype&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Hello&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;handwriting-textarea&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To be informed about any changes to the value, you can listen to the &lt;code&gt;input&lt;/code&gt; event.&lt;/p&gt;
&lt;p&gt;You can try the component using &lt;a href=&quot;https://handwriting-recognition.glitch.me/&quot; rel=&quot;noopener&quot;&gt;this demo on Glitch&lt;/a&gt;.
Also be sure to have a look at the
&lt;a href=&quot;https://github.com/christianliebel/handwriting-textarea&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt;. To use the control in your
application, &lt;a href=&quot;https://www.npmjs.com/package/handwriting-textarea&quot; rel=&quot;noopener&quot;&gt;obtain it from npm&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team has designed and implemented the Handwriting Recognition API using the core
principles defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;,
including user control, transparency, and ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Handwriting Recognition API can&#39;t be turned off by the user. It is only available for websites
delivered via HTTPS, and may only be called from the top-level browsing context.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is no indication if handwriting recognition is active. To prevent fingerprinting, the browser
implements countermeasures, such as displaying a permission prompt to the user when it detects
possible abuse.&lt;/p&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Handwriting Recognition API currently does not show any permissions prompts. Thus, permission
does not need to be persisted in any way.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chromium team wants to hear about your experiences with the Handwriting Recognition API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that doesn&#39;t work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/handwriting-recognition/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chromium&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;Blink&amp;gt;Handwriting&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt; box.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Handwriting Recognition API? Your public support helps the Chromium team
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Share how you plan to use it on the &lt;a href=&quot;https://discourse.wicg.io/t/proposal-handwriting-recognition-api/4935&quot; rel=&quot;noopener&quot;&gt;WICG Discourse thread&lt;/a&gt;. Send a tweet to
&lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23HandwritingRecognition&amp;amp;src=recent_search_click&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#HandwritingRecognition&lt;/code&gt;&lt;/a&gt;
and let us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful-links&quot;&gt;Helpful Links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#helpful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/handwriting-recognition/blob/main/explainer.md&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/handwriting-recognition&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features/5263213807534080&quot; rel=&quot;noopener&quot;&gt;ChromeStatus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/1207667&quot; rel=&quot;noopener&quot;&gt;Chromium bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/591&quot; rel=&quot;noopener&quot;&gt;TAG review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/g/blink-dev/c/VXUq1UY4m7Y&quot; rel=&quot;noopener&quot;&gt;Intent to Prototype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2021-March/031762.html&quot; rel=&quot;noopener&quot;&gt;WebKit-Dev thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/507&quot; rel=&quot;noopener&quot;&gt;Mozilla standards position&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/handwriting-recognition/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was reviewed by &lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;, Honglin Yu and Jiewei Qian. Hero image by
&lt;a href=&quot;https://unsplash.com/@sbouaked&quot; rel=&quot;noopener&quot;&gt;Samir Bouaked&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/MFvflDBZdyM&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Christian Liebel</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
</feed>
