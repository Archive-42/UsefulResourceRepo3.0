<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>Fonts on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/fonts/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="Fonts on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about Fonts.</subtitle>
  
  
  <entry>
    <title>Use advanced typography with local fonts</title>
    <link href="https://web.dev/local-fonts/"/>
    <updated>2020-08-24T00:00:00Z</updated>
    <id>https://web.dev/local-fonts/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Local Font Access API is part of the
&lt;a href=&quot;https://developers.google.com/web/updates/capabilities&quot; rel=&quot;noopener&quot;&gt;capabilities project&lt;/a&gt; and is currently in
development. This post will be updated as the implementation progresses. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;web-safe-fonts&quot;&gt;Web safe fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#web-safe-fonts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have been doing web development long enough, you may remember the so-called
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals#Web_safe_fonts&quot; rel=&quot;noopener&quot;&gt;web safe fonts&lt;/a&gt;.
These fonts are known to be available on nearly all instances of the most used operating systems
(namely Windows, macOS, the most common Linux distributions, Android, and iOS). In the early 2000s,
Microsoft even spearheaded an
&lt;a href=&quot;https://web.archive.org/web/20020124085641/http://www.microsoft.com/typography/fontpack/default.htm&quot; rel=&quot;noopener&quot;&gt;initiative&lt;/a&gt;
called &lt;em&gt;TrueType core fonts for the Web&lt;/em&gt; that provided these fonts for free download with the
objective that &lt;em&gt;&amp;quot;whenever you visit a Web site that specifies them, you&#39;ll see pages exactly as the
site designer intended&amp;quot;&lt;/em&gt;. Yes, this included sites set in
&lt;a href=&quot;https://docs.microsoft.com/en-us/typography/font-list/comic-sans-ms&quot; rel=&quot;noopener&quot;&gt;Comic Sans MS&lt;/a&gt;. Here is a
classic web safe font stack (with the ultimate fallback of whatever
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#%3Cgeneric-name%3E:~:text=sans%2Dserif,-Glyphs&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;sans-serif&lt;/code&gt;&lt;/a&gt;
font) might look like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Helvetica&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Arial&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sans-serif&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;web-fonts&quot;&gt;Web fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#web-fonts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The days where web safe fonts really mattered are long gone. Today, we have
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Web_fonts&quot; rel=&quot;noopener&quot;&gt;web fonts&lt;/a&gt;, some of
which are even &lt;a href=&quot;https://web.dev/variable-fonts/&quot;&gt;variable fonts&lt;/a&gt; that we can tweak further by changing the values
for the various exposed axes. You can use web fonts by declaring an
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; block at the start of
the CSS, which specifies the font file(s) to download:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;flamboyant.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;After this, you can then use the custom web font by specifying the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-family&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt;, as normal:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;local-fonts-as-fingerprint-vector&quot;&gt;Local fonts as fingerprint vector &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#local-fonts-as-fingerprint-vector&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most web fonts come from, well, the web. An interesting fact, though, is that the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;src&lt;/code&gt;&lt;/a&gt; property in the
&lt;code&gt;@font-face&lt;/code&gt; declaration, apart from the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src#Values:~:text=%3Curl%3E%20%5B%20format(%20%3Cstring%3E%23%20)%20%5D%3F,-Specifies&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;url()&lt;/code&gt;&lt;/a&gt;
function, also accepts a
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src#format():~:text=downloaded.-,%3Cfont%2Dface%2Dname%3E&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;local()&lt;/code&gt;&lt;/a&gt;
function. This allows custom fonts to be loaded (surprise!) locally. If the user happens to have
&lt;em&gt;FlamboyantSansSerif&lt;/em&gt; installed on their operating system, the local copy will be used rather than
it being downloaded:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;FlamboyantSansSerif&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;flamboyant.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This approach provides a nice fallback mechanism that potentially saves bandwidth. On the Internet,
unfortunately, we cannot have nice things. The problem with the &lt;code&gt;local()&lt;/code&gt; function is that it can be
abused for browser fingerprinting. Turns out, the list of fonts a user has installed can be pretty
identifying. A lot of companies have their own corporate fonts that are installed on employees&#39;
laptops. For example, Google has a corporate font called &lt;em&gt;Google Sans&lt;/em&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The macOS Font Book app showing a preview of the Google Sans font.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;420&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xivl6c1xM2VlqFf9GvgQ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google Sans font installed on a Google employee&#39;s laptop.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;An attacker can try to determine what company someone works for by testing for the existence of a
large number of known corporate fonts like &lt;em&gt;Google Sans&lt;/em&gt;. The attacker would attempt rendering text
set in these fonts on a canvas and measure the glyphs. If the glyphs match the known shape of the
corporate font, the attacker has a hit. If the glyphs do not match, the attacker knows that a
default replacement font was used since the corporate font was not installed. For full details on
this and other browser fingerprinting attacks, read the
&lt;a href=&quot;http://www-sop.inria.fr/members/Nataliia.Bielova/papers/Lape-etal-20-TWEB.pdf&quot; rel=&quot;noopener&quot;&gt;survey paper&lt;/a&gt; by
Laperdix &lt;em&gt;et al.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Company fonts apart, even just the list of installed fonts can be identifying. The situation with
this attack vector has become so bad that recently the WebKit team
&lt;a href=&quot;https://webkit.org/tracking-prevention/#table-of-contents-toggle:~:text=Changed%20font%20availability%20to%20web%20content,but%20not%20locally%20user%2Dinstalled%20fonts&quot; rel=&quot;noopener&quot;&gt;decided&lt;/a&gt;
to &lt;em&gt;&amp;quot;only include [in the list available fonts] web fonts and fonts that come with the operating
system, but not locally user-installed fonts&amp;quot;&lt;/em&gt;. (And here I am, with an article on granting access
to local fonts.)&lt;/p&gt;
&lt;h2 id=&quot;the-local-font-access-api&quot;&gt;The Local Font Access API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#the-local-font-access-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The beginning of this article may have put you in a negative mood. Can we really not have nice
things? Fret not. We think we can, and maybe
&lt;a href=&quot;http://hyperboleandahalf.blogspot.com/2013/05/depression-part-two.html#Blog1:~:text=like-,hopeless&quot; rel=&quot;noopener&quot;&gt;everything is not hopeless&lt;/a&gt;.
But first, let me answer a question that you might be asking yourself.&lt;/p&gt;
&lt;h3 id=&quot;why-do-we-need-the-local-font-access-api-when-there-are-web-fonts&quot;&gt;Why do we need the Local Font Access API when there are web fonts? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#why-do-we-need-the-local-font-access-api-when-there-are-web-fonts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Professional-quality design and graphics tools have historically been difficult to deliver on the
web. One stumbling block has been an inability to access and use the full variety of professionally
constructed and hinted fonts that designers have locally installed. Web fonts enable some publishing
use-cases, but fail to enable programmatic access to the vector glyph shapes and font tables used by
rasterizers to render the glyph outlines. There is likewise no way to access a web font&#39;s binary
data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Design tools need access to font bytes to do their own OpenType layout implementation and allow
design tools to hook in at lower levels, for actions such as performing vector filters or
transforms on the glyph shapes.&lt;/li&gt;
&lt;li&gt;Developers may have legacy font stacks for their applications that they are bringing to the web.
To use these stacks, they usually require direct access to font data, something web fonts do not
provide.&lt;/li&gt;
&lt;li&gt;Some fonts may not be licensed for delivery over the web. For example, Linotype has a license for
some fonts that only includes &lt;a href=&quot;https://www.linotype.com/25/font-licensing.html&quot; rel=&quot;noopener&quot;&gt;desktop use&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Local Font Access API is an attempt at solving these challenges. It consists of two parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;font enumeration API&lt;/strong&gt;, which allows users to grant access to the full set of available system
fonts.&lt;/li&gt;
&lt;li&gt;From each enumeration result, the ability to request low-level (byte-oriented) &lt;strong&gt;SFNT container
access&lt;/strong&gt; that includes the full font data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;status&quot;&gt;Current status &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#status&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1. Create explainer&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access&quot; rel=&quot;noopener&quot;&gt;Complete&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2. Create initial draft of specification&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://wicg.github.io/local-font-access/&quot; rel=&quot;noopener&quot;&gt;In progress&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. &lt;strong&gt;Gather feedback &amp;amp; iterate on design&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.dev/local-fonts/#feedback&quot;&gt;&lt;strong&gt;In progress&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. Origin trial&lt;/td&gt;
&lt;td&gt;Complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. Launch&lt;/td&gt;
&lt;td&gt;Not started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;how-to-use-the-local-font-access-api&quot;&gt;How to use the Local Font Access API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#how-to-use-the-local-font-access-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;enabling-via-about:flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#enabling-via-about:flags&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To experiment with the Local Font Access API locally, enable the &lt;code&gt;#font-access&lt;/code&gt; flag in
&lt;code&gt;about://flags&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;feature-detection&quot;&gt;Feature detection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#feature-detection&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To check if the Local Font Access API is supported, use:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fonts&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// The Local Font Access API is supported&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;asking-for-permission&quot;&gt;Asking for permission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#asking-for-permission&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Access to a user&#39;s local fonts is gated behind the &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission, which you can request
with
&lt;a href=&quot;https://w3c.github.io/permissions/#requesting-more-permission&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;navigator.permissions.request()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Ask for permission to use the API&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; status &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;permissions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;local-fonts&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;status&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;granted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Permission to access local fonts not granted.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// A `TypeError` indicates the &#39;local-fonts&#39;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// permission is not yet implemented, so&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// only `throw` if this is _not_ the problem.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;TypeError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;enumerating-local-fonts&quot;&gt;Enumerating local fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#enumerating-local-fonts&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once the permission has been granted, you can then, from the &lt;code&gt;FontManager&lt;/code&gt; interface that is exposed
on &lt;code&gt;navigator.fonts&lt;/code&gt;, call &lt;code&gt;query()&lt;/code&gt; to ask the browser for the locally installed fonts, which it
will display in a picker for the user to select all or a subset from to be shared with the page.
This results in an array that you can loop over. Each font is represented as a &lt;code&gt;FontMetadata&lt;/code&gt; object
with the properties &lt;code&gt;family&lt;/code&gt; (for example, &lt;code&gt;&amp;quot;Comic Sans MS&amp;quot;&lt;/code&gt;), &lt;code&gt;fullName&lt;/code&gt; (for example,
&lt;code&gt;&amp;quot;Comic Sans MS&amp;quot;&lt;/code&gt;), and &lt;code&gt;postscriptName&lt;/code&gt; (for example, &lt;code&gt;&amp;quot;ComicSansMS&amp;quot;&lt;/code&gt;).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Query for all available fonts and log metadata.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pickedFonts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fonts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; metadata &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; pickedFonts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;postscriptName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fullName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;family&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;accessing-sfnt-data&quot;&gt;Accessing SFNT data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#accessing-sfnt-data&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Full &lt;a href=&quot;https://en.wikipedia.org/wiki/SFNT&quot; rel=&quot;noopener&quot;&gt;SFNT&lt;/a&gt; access is available via the &lt;code&gt;blob()&lt;/code&gt; method of the
&lt;code&gt;FontMetadata&lt;/code&gt; object. SFNT is a font file format which can contain other fonts, such as PostScript,
TrueType, OpenType, Web Open Font Format (WOFF) fonts and others.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pickedFonts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fonts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; metadata &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; pickedFonts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// We&#39;re only interested in a particular font.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;family &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Comic Sans MS&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// `blob()` returns a Blob containing valid and complete&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// SFNT-wrapped font data.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sfnt &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sfntVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Slice out only the bytes we need: the first 4 bytes are the SFNT&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// version info.&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// Spec: https://docs.microsoft.com/en-us/typography/opentype/spec/otff#organization-of-an-opentype-font&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; sfnt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;UNKNOWN&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sfntVersion&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;\x00\x01\x00\x00&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;typ1&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;OTTO&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        outlineFormat &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Outline format:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outlineFormat&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;demo&quot;&gt;Demo &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can see the Local Font Access API in action in the
&lt;a href=&quot;https://local-font-access.glitch.me/demo/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; below. Be sure to also check out the
&lt;a href=&quot;https://glitch.com/edit/#!/local-font-access?path=README.md%3A1%3A0&quot; rel=&quot;noopener&quot;&gt;source code&lt;/a&gt;. The demo
showcases a custom element called &lt;a href=&quot;https://github.com/tomayac/font-select&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;font-select&amp;gt;&lt;/code&gt;&lt;/a&gt; that
implements a local font picker.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe src=&quot;https://glitch.com/embed/#!/embed/local-font-access?path=index.html&amp;previewSize=100&quot; title=&quot;local-font-access on Glitch&quot; allow=&quot;local-fonts&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot;&gt;
  &lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;privacy-considerations&quot;&gt;Privacy considerations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#privacy-considerations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission appears to provide a highly fingerprintable surface. However,
browsers are free to return anything they like. For example, anonymity-focused browsers may choose
to only provide a set of default fonts built into the browser. Similarly, browsers are not required
to provide table data exactly as it appears on disk.&lt;/p&gt;
&lt;p&gt;Wherever possible, the Local Font Access API is designed to only expose exactly the information
needed to enable the mentioned use cases. System APIs may produce a list of installed fonts not in a
random or a sorted order, but in the order of font installation. Returning exactly the list of
installed fonts given by such a system API can expose additional data that may be used for
fingerprinting, and use cases we want to enable are not assisted by retaining this ordering. As a
result, this API requires that the returned data be sorted before being returned.&lt;/p&gt;
&lt;h2 id=&quot;security-and-permissions&quot;&gt;Security and permissions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#security-and-permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team has designed and implemented the Local Font Access API using the core principles
defined in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/docs/security/permissions-for-powerful-web-platform-features.md&quot; rel=&quot;noopener&quot;&gt;Controlling Access to Powerful Web Platform Features&lt;/a&gt;, including user
control, transparency, and ergonomics.&lt;/p&gt;
&lt;h3 id=&quot;user-control&quot;&gt;User control &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#user-control&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Access to a user&#39;s fonts is fully under their control and will not be allowed unless the
&lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission, as listed in the
&lt;a href=&quot;https://w3c.github.io/permissions/#permission-registry&quot; rel=&quot;noopener&quot;&gt;permission registry&lt;/a&gt;, is granted.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#transparency&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Whether a site has been granted access to the user&#39;s local fonts will be visible in the
&lt;a href=&quot;https://support.google.com/chrome/answer/114662?hl=en&amp;amp;co=GENIE.Platform=Desktop&quot; rel=&quot;noopener&quot;&gt;site information sheet&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;permission-persistence&quot;&gt;Permission persistence &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#permission-persistence&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;&amp;quot;local-fonts&amp;quot;&lt;/code&gt; permission will be persisted between page reloads. It can be revoked via the
&lt;em&gt;site information&lt;/em&gt; sheet.&lt;/p&gt;
&lt;h2 id=&quot;feedback&quot;&gt;Feedback &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#feedback&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team wants to hear about your experiences with the Local Font Access API.&lt;/p&gt;
&lt;h3 id=&quot;tell-us-about-the-api-design&quot;&gt;Tell us about the API design &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#tell-us-about-the-api-design&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Is there something about the API that does not work like you expected? Or are there missing methods
or properties that you need to implement your idea? Have a question or comment on the security
model? File a spec issue on the corresponding &lt;a href=&quot;https://github.com/WICG/local-font-access/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;, or add your thoughts to an
existing issue.&lt;/p&gt;
&lt;h3 id=&quot;report-a-problem-with-the-implementation&quot;&gt;Report a problem with the implementation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#report-a-problem-with-the-implementation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you find a bug with Chrome&#39;s implementation? Or is the implementation different from the spec?
File a bug at &lt;a href=&quot;https://new.crbug.com/&quot; rel=&quot;noopener&quot;&gt;new.crbug.com&lt;/a&gt;. Be sure to include as much detail as you can,
simple instructions for reproducing, and enter &lt;code&gt;Blink&amp;gt;Storage&amp;gt;FontAccess&lt;/code&gt; in the &lt;strong&gt;Components&lt;/strong&gt; box.
&lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt; works great for sharing quick and easy repros.&lt;/p&gt;
&lt;h3 id=&quot;show-support-for-the-api&quot;&gt;Show support for the API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#show-support-for-the-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you planning to use the Local Font Access API? Your public support helps the Chrome team to
prioritize features and shows other browser vendors how critical it is to support them.&lt;/p&gt;
&lt;p&gt;Send a tweet to &lt;a href=&quot;https://twitter.com/ChromiumDev&quot; rel=&quot;noopener&quot;&gt;@ChromiumDev&lt;/a&gt; using the hashtag
&lt;a href=&quot;https://twitter.com/search?q=%23LocalFontAccess&amp;amp;src=typed_query&amp;amp;f=live&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;#LocalFontAccess&lt;/code&gt;&lt;/a&gt; and let
us know where and how you&#39;re using it.&lt;/p&gt;
&lt;h2 id=&quot;helpful-links&quot;&gt;Helpful links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#helpful-links&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access&quot; rel=&quot;noopener&quot;&gt;Explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/local-font-access/&quot; rel=&quot;noopener&quot;&gt;Spec draft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=535764&quot; rel=&quot;noopener&quot;&gt;Chromium bug for font enumeration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crbug.com/982054&quot; rel=&quot;noopener&quot;&gt;Chromium bug for font table access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromestatus.com/feature/6234451761692672&quot; rel=&quot;noopener&quot;&gt;ChromeStatus entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/local-font-access/issues&quot; rel=&quot;noopener&quot;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3ctag/design-reviews/issues/399&quot; rel=&quot;noopener&quot;&gt;TAG review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/standards-positions/issues/401&quot; rel=&quot;noopener&quot;&gt;Mozilla standards position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.chrome.com/origintrials/#/view_trial/-7289075996899147775&quot; rel=&quot;noopener&quot;&gt;Origin Trial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/local-fonts/#acknowledgements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Local Font Access API spec was edited by
&lt;a href=&quot;https://www.linkedin.com/in/emilaeklund/&quot; rel=&quot;noopener&quot;&gt;Emil A. Eklund&lt;/a&gt;,
&lt;a href=&quot;https://infrequently.org/&quot; rel=&quot;noopener&quot;&gt;Alex Russell&lt;/a&gt;,
&lt;a href=&quot;https://www.linkedin.com/in/joshuaseanbell/&quot; rel=&quot;noopener&quot;&gt;Joshua Bell&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/oyiptong/&quot; rel=&quot;noopener&quot;&gt;Olivier Yiptong&lt;/a&gt;. This article was reviewed by
&lt;a href=&quot;https://github.com/jpmedley&quot; rel=&quot;noopener&quot;&gt;Joe Medley&lt;/a&gt;,
&lt;a href=&quot;https://fi.linkedin.com/in/dominik-r%C3%B6ttsches-7323684&quot; rel=&quot;noopener&quot;&gt;Dominik Röttsches&lt;/a&gt;, and
&lt;a href=&quot;https://github.com/oyiptong/&quot; rel=&quot;noopener&quot;&gt;Olivier Yiptong&lt;/a&gt;. Hero image by
&lt;a href=&quot;https://unsplash.com/@brett_jordan&quot; rel=&quot;noopener&quot;&gt;Brett Jordan&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/photos/qrjvkj-oS-M&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Introduction to variable fonts on the web</title>
    <link href="https://web.dev/variable-fonts/"/>
    <updated>2018-02-19T00:00:00Z</updated>
    <id>https://web.dev/variable-fonts/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this article, we will look at what variable fonts are, the benefits they
offer, and how we can use them in our work. First, let&#39;s review how typography
works on the web, and what innovations variable fonts bring.&lt;/p&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As of May 2020 variable fonts are supported in most browsers. See
&lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot; rel=&quot;noopener&quot;&gt;Can I use variable fonts?&lt;/a&gt;
and &lt;a href=&quot;https://web.dev/variable-fonts/#fallbacks&quot;&gt;Fallbacks&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#introduction&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The terms font and typeface are often used interchangeably by developers.
However there is a difference: A typeface is the underlying visual design that
can exist in many different typesetting technologies, and a font is one of these
implementations, in a digital file format. In other words, a typeface is what
you &lt;em&gt;see&lt;/em&gt;, and the font is what you &lt;em&gt;use&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Another concept that is often overlooked is the distinction between a style, and
a family. A style is a single and specific typeface, such as Bold Italic, and a
family is the complete set of styles.&lt;/p&gt;
&lt;p&gt;Before variable fonts, each style was implemented as a separate font file. With
variable fonts, all styles can be contained in a single file.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A specimen composition and list of different styles of the Roboto family&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Left: a specimen of the Roboto typeface family. Right: named styles within the family.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;challenges-for-the-designer-and-developer&quot;&gt;Challenges for the designer and developer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#challenges-for-the-designer-and-developer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a designer creates a print project they face some constraints, such as the
physical size of the page layout, the number of colors they can use (which is
determined by the kind of printing press that will be used), and so on. But they
can use as many typeface styles as they like. This means that the typography of
print media is often rich and sophisticated, so that the reading experience is
truly delightful. Think of the last time you enjoyed browsing an excellent
magazine.&lt;/p&gt;
&lt;p&gt;Web designers and developers have different constraints than print designers,
and an important one is the associated bandwidth costs of our designs. This
has been a sticking point for richer typographic experiences, as they come at
a cost. With traditional web fonts, each style used in our designs requires
users to download a separate font file, which increases latency and page
rendering time. Only including the Regular and Bold styles, plus their italic
counterparts, can amount to 500 KB or more of font data. This is even before
we have dealt with how the fonts are rendered, the fallback patterns we need
to use, or undesirable side-effects such as &lt;a href=&quot;https://www.zachleat.com/web/fout-vs-foit/&quot; rel=&quot;noopener&quot;&gt;FOIT and
FOUT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many font families offer a much wider range of styles, from Thin to Black
weights, narrow and wide widths, a variety of stylistic details, and even
size-specific designs (optimized for large or small text sizes.) Since you&#39;d
have to load a new font file for every style (or combinations of styles), many
web developers choose not to use these capabilities, reducing the reading
experience of their users.&lt;/p&gt;
&lt;h2 id=&quot;anatomy-of-a-variable-font&quot;&gt;Anatomy of a variable font &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#anatomy-of-a-variable-font&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Variable fonts address these challenges, by packing styles into a single file.&lt;/p&gt;
&lt;p&gt;This works by starting with a central or &#39;default&#39; style, usually the
&#39;Regular&#39;–an upright roman design with the most typical weight and width that
is most suitable for plain text. This is then connected to other styles in a
continuous range, called an &#39;axis.&#39; The most common axis is &lt;strong&gt;Weight&lt;/strong&gt;, which
can connect the default style through to a Bold style. Any individual style
can be located along an axis, and is called an &#39;instance&#39; of the variable
font. Some instances are named by the font developer, for example Weight axis
location 600 is called SemiBold.&lt;/p&gt;
&lt;p&gt;The variable font &lt;a href=&quot;https://github.com/TypeNetwork/Roboto-Flex&quot; rel=&quot;noopener&quot;&gt;Roboto Flex&lt;/a&gt;
has three styles for its &lt;strong&gt;Weight&lt;/strong&gt; axis. The Regular style is at the center,
and there are two styles at the opposite ends of the axis, one lighter and
the other heavier. Between these, you can choose from 900 instances:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The letter &amp;#x27;A&amp;#x27; shown in different weights&quot; decoding=&quot;async&quot; height=&quot;218&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Above: Illustrated anatomy of the Weight axis for the typeface Roboto.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The font developer can offer a set of different axes. You can combine them
because they all share the same default styles. Roboto has three styles in a
Width axis: the Regular is at the center of the axis, and two styles, narrower
and wider, are at each end. These provide all the widths of the Regular style,
and combine with the Weight axis to provide all the widths for every weight.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-dance.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption&gt;
    Roboto Flex in random combinations of Width and Weight
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This means there are thousands of styles! This may seem like massive overkill,
but the quality of the reading experience can be remarkably enhanced by this
diversity of type styles. And, if it is without performance penalty, web
developers can use a few or as many styles as they wish–it&#39;s up to their design.&lt;/p&gt;
&lt;h3 id=&quot;italics&quot;&gt;Italics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#italics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The way that Italics are handled in variable fonts is interesting, as there are
two difference approaches. Typefaces like Helvetica or Roboto have interpolation
compatible contours, so their Roman and Italic styles can be interpolated
between and the &lt;strong&gt;Slant&lt;/strong&gt; axis can be used to get from Roman to Italic.&lt;/p&gt;
&lt;p&gt;Other typefaces (such as Garamond, Baskerville, or Bodoni) have Roman and Italic
glyph contours that are not interpolation compatible. For example, the contours
that typically define a Roman lowercase &amp;quot;n&amp;quot; do not match the contours used to
define an Italic lowercase &amp;quot;n&amp;quot;. Instead of interpolating one contour to the
other, the &lt;strong&gt;Italic&lt;/strong&gt; axis toggles from Roman to Italic contours.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Example of the Weight Axes for the typeface Amstelvar&quot; decoding=&quot;async&quot; height=&quot;520&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Amstelvar&#39;s &quot;n&quot; contours in Italic (12 point, regular weight, normal width),
    and in Roman. Image supplied by David Berlow, type designer and typographer
    at Font Bureau.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;After the switch to Italic, the axes available to the user should be the same as
those for the Roman, just as the character set should be the same.&lt;/p&gt;
&lt;p&gt;A glyph substitution capability can also be seen for individual glyphs, and used
anywhere in the design space of a variable font. For example, a dollar sign
design with two vertical bars works best at larger point sizes, but at smaller
point sizes a design with only one bar is better. When we have fewer pixels for
rendering the glyph, a two bar design can become illegible. To combat this, much
like the Italic axis, a glyph substitution of one glyph for another can occur
along the &lt;strong&gt;Optical Size&lt;/strong&gt; axis at a point decided by the type designer.&lt;/p&gt;
&lt;p&gt;In summary, where the contours allow for it, type designers can create fonts
that interpolate between various styles in a multi-dimensional design space.
This gives you granular control over your typography, and a great deal of power.&lt;/p&gt;
&lt;h2 id=&quot;axes-definitions&quot;&gt;Axes definitions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#axes-definitions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are five &lt;a href=&quot;https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg#registered-axis-tags&quot; rel=&quot;noopener&quot;&gt;registered
axes&lt;/a&gt;,
which control known, predictable features of the font: weight, width, optical
size, slant and italics. Besides those, a font can contain custom axes. These
can control any design aspect of the font the type designer wishes: the size of
serifs, the length of swashes, the height of ascenders or the size of the dot on
the i.&lt;/p&gt;
&lt;p&gt;Even though axes can control the same feature, they might use different values.
For example, in the Oswald and Hepta Slab variable fonts there is only one axis
available, Weight, but the ranges are different–Oswald has the same range as
before it was upgraded to be variable, 200 to 700, but Hepta Slab has an extreme
hairline weight at 1 that goes all the up to 900.&lt;/p&gt;
&lt;p&gt;The five registered axes have 4-character lowercase tags that are used to
set their values in CSS:&lt;/p&gt;
&lt;table class=&quot;responsive&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th colspan=&quot;2&quot;&gt;Axis names and CSS values&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Weight
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;wght&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Width
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;wdth&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Slant
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;slnt&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Optical Size
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;opsz&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Italics
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;ital&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since the font developer defines which axes are available in a variable font,
and which values they can have, it is essential to find out what each font
offers. The font&#39;s documentation should provide this, or you can inspect the
font using a tool like &lt;a href=&quot;https://wakamaifondue.com/&quot; rel=&quot;noopener&quot;&gt;Wakamai Fondue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;use-cases-and-benefits&quot;&gt;Use cases and benefits &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#use-cases-and-benefits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Setting the axes values comes down to personal taste and applying typographic
best practices. The danger with any new technology is possible misuse, and
settings that are overly artistic or exploratory could also decrease legibility
of the actual text. For titles, exploring different axes to create great
artistic designs are exciting, but for body copy this risks making the text
illegible.&lt;/p&gt;
&lt;h3 id=&quot;exciting-expression&quot;&gt;Exciting expression &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#exciting-expression&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Grass example by Mandy Michael&quot; decoding=&quot;async&quot; height=&quot;174&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 495px) 495px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=990 990w&quot; width=&quot;495&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;One great example of artistic expression is shown above, an exploration of the
typeface
&lt;a href=&quot;https://www.typenetwork.com/brochure/decovar-a-decorative-variable-font-by-david-berlow&quot; rel=&quot;noopener&quot;&gt;Decovar&lt;/a&gt;
by Mandy Michael.&lt;/p&gt;
&lt;p&gt;You can view the working example and source code for the above sample
&lt;a href=&quot;https://codepen.io/mandymichael/pen/YYaWop&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;animation&quot;&gt;Animation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#animation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vgdbNJBYHma2o62ZqYmcnkq3j0o1/2Du2L0Ii5nUqz8n6S3Vz.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Typeface Zycon, designed for animation by David Berlow, type designer and
    typographer at Font Bureau.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;There is also a possibility to explore animating characters with variable fonts.
Above is an example of different axes being used with the typeface Zycon. See
the live &lt;a href=&quot;https://www.axis-praxis.org/specimens/zycon&quot; rel=&quot;noopener&quot;&gt;animation example on Axis
Praxis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://typogram.github.io/Anicons&quot; rel=&quot;noopener&quot;&gt;Anicons&lt;/a&gt; is the world&#39;s first animated
color icon font, based on Material Design Icons. Anicons is an experiment that
combines two cutting edge font technologies: variable fonts and color fonts.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/anicons-animation.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A few examples of hover animations from Anicon&#39;s color icon font
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;finesse&quot;&gt;Finesse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#finesse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/larger-widths.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Amstelvar using little bits of XTRA in opposite directions so the words&#39; widths are evened out
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/TypeNetwork/Roboto-Flex&quot; rel=&quot;noopener&quot;&gt;Roboto Flex&lt;/a&gt; and
&lt;a href=&quot;https://github.com/TypeNetwork/Amstelvar&quot; rel=&quot;noopener&quot;&gt;Amstelvar&lt;/a&gt; offer a set of
&amp;quot;Parametric Axes.&amp;quot; In these axes, the letters are deconstructed into 4
fundamental aspects of form: black or positive shapes, white or negative
shapes, and the x and y dimensions. In the same way that primary colors can be
blended with any other color to adjust it, these 4 aspects can be used to fine
tune any other axis.&lt;/p&gt;
&lt;p&gt;The XTRA axis in Amstelvar allows you to adjust the &amp;quot;white&amp;quot; per mille value,
as shown above. Using little bits of XTRA in opposite directions, the words&#39;
widths are evened out.&lt;/p&gt;
&lt;h2 id=&quot;variable-fonts-in-css&quot;&gt;Variable fonts in CSS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#variable-fonts-in-css&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;loading-variable-font-files&quot;&gt;Loading variable font files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#loading-variable-font-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Variable fonts are loaded though the same &lt;code&gt;@font-face&lt;/code&gt; mechanism as traditional
static web fonts, but with two new enhancements:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Roboto Flex&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2 supports variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2-variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25% 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;1. Source Formats:&lt;/strong&gt; We don&#39;t want the browser to download the font if it
doesn&#39;t support variable fonts, so we add a &lt;code&gt;format&lt;/code&gt; description: once in the
&lt;a href=&quot;https://www.w3.org/TR/css-fonts-4/#font-face-src-requirement-types&quot; rel=&quot;noopener&quot;&gt;future
format&lt;/a&gt;
(&lt;code&gt;woff2 supports variations&lt;/code&gt;), once in the current but soon to be deprecated
format (&lt;code&gt;woff2-variations&lt;/code&gt;). If the browser supports variable fonts and supports
the upcoming syntax, it will use the first declaration. If it supports variable
fonts and the current syntax, it will use the second declaration. They both
point to the same font file.&lt;/p&gt;
&lt;!-- TODO 2021 Q1 revisit this, based on progress in
     https://www.w3.org/TR/css-fonts-4/#font-face-src-requirement-types
     to allow removing the 2nd src --&gt;
&lt;p&gt;&lt;strong&gt;2. Style Ranges:&lt;/strong&gt; You&#39;ll notice we&#39;re supplying two values for &lt;code&gt;font-weight&lt;/code&gt;
and &lt;code&gt;font-stretch&lt;/code&gt;. Instead of telling the browser which specific weight this
font provides (for example &lt;code&gt;font-weight: 500;&lt;/code&gt;), we now give it the &lt;strong&gt;range&lt;/strong&gt; of
weights supported by the font. For Roboto Flex, the Weight axis ranges from 100
to 1000, and CSS directly maps the axis range to the &lt;code&gt;font-weight&lt;/code&gt; style
property. By specifying the range in &lt;code&gt;@font-face&lt;/code&gt;, any value outside this range
will be &amp;quot;capped&amp;quot; to the nearest valid value. The Width axis range is mapped in
the same way to the &lt;code&gt;font-stretch&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;If you&#39;re using the Google Fonts API, this will all be taken care of. Not only
will the CSS contain the proper source formats and ranges, Google Fonts will
also send static fallback fonts in case variable fonts aren&#39;t supported.&lt;/p&gt;
&lt;h3 id=&quot;using-weights-and-widths&quot;&gt;Using weights and widths &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-weights-and-widths&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Currently, the axes you can reliably set from CSS are the &lt;code&gt;wght&lt;/code&gt; axis through
&lt;code&gt;font-weight&lt;/code&gt;, and the &lt;code&gt;wdth&lt;/code&gt; axis through &lt;code&gt;font-stretch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Traditionally, you would set &lt;code&gt;font-weight&lt;/code&gt; as a keyword (&lt;code&gt;light&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;) or as
a numerical value between 100 and 900, in steps of 100. With variable fonts, you
can set any value within the font&#39;s Width range:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.kinda-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 125&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-weight.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Weight axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Likewise, we can set &lt;code&gt;font-stretch&lt;/code&gt; with keywords (&lt;code&gt;condensed&lt;/code&gt;,
&lt;code&gt;ultra-expanded&lt;/code&gt;) or with percentage values:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.kinda-narrow&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 33.3%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-wide&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-width.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Width axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-italics-and-obliques&quot;&gt;Using italics and obliques &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-italics-and-obliques&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ital&lt;/code&gt; axis is intended for fonts that contain both a regular style, and an
italic style. The axis is meant to be an on/off switch: value &lt;code&gt;0&lt;/code&gt; is off and
will show the regular style, value &lt;code&gt;1&lt;/code&gt; will show the italics. Unlike other axes,
there&#39;s no transition. A value of &lt;code&gt;0.5&lt;/code&gt; won&#39;t give you &amp;quot;half italics&amp;quot;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;slnt&lt;/code&gt; axis is different from italics in that it&#39;s not a new &lt;em&gt;style&lt;/em&gt;, but
just slants the regular style. By default its value is &lt;code&gt;0&lt;/code&gt;, which means the
default upright letter shapes. Roboto Flex has a maximum slant of -10 degrees,
meaning the letters will lean to the right when going from 0 to -10.&lt;/p&gt;
&lt;p&gt;It would be intuitive to set these axis through the &lt;code&gt;font-style&lt;/code&gt; property, but
as of April 2020, how to exactly do this is &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/3125&quot; rel=&quot;noopener&quot;&gt;still being worked
out&lt;/a&gt;. So for now, you should
treat these as custom axes, and set them through &lt;code&gt;font-variation-settings&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;i, em, .italic&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token comment&quot;&gt;/* Should be font-style: italic; */&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ital&#39;&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token comment&quot;&gt;/* Should be font-style: oblique 10deg; */&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;slnt&#39;&lt;/span&gt; 10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-slant.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Slant axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-optical-sizes&quot;&gt;Using optical sizes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-optical-sizes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A typeface can be rendered very small (a 12px footnote) or very large (a 80px
headline). Fonts can respond to these size changes by changing its letter shapes
to better suit its size. A small size might be better off without fine details,
while a large size might benefit from more details and thinner strokes.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The letter &amp;#x27;a&amp;#x27; shown at different optical sizes&quot; decoding=&quot;async&quot; height=&quot;147&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The letter &#39;a&#39; in Roboto Flex at different pixel sizes, then scaled to be the same size,
    shows the differences in design.
    &lt;a href=&quot;https://codepen.io/RoelN/pen/PoPvdeV&quot;&gt;Try it yourself on Codepen&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;A new CSS property has been introduced for this axis: &lt;code&gt;font-optical-sizing&lt;/code&gt;. By
default it&#39;s set to &lt;code&gt;auto&lt;/code&gt;, which makes the browser set the axis value based on
the &lt;code&gt;font-size&lt;/code&gt;. This means the browser will pick the best optical size
automatically, but if you wish to turn this off you can set
&lt;code&gt;font-optical-sizing&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also set a custom value for the &lt;code&gt;opsz&lt;/code&gt; axis, if you deliberately want an
optical size that doesn&#39;t match the font size. The following CSS would cause
text to be displayed at a large size, but at an optical size as if it were
printed in &lt;code&gt;8pt&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.small-yet-large&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 8&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;using-custom-axes&quot;&gt;Using custom axes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-custom-axes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unlike registered axes, custom axes will not be mapped to an existing CSS
property, so you will always have to set them through &lt;code&gt;font-variation-settings&lt;/code&gt;.
Tags for custom axes are always in uppercase, to distinguish them from
registered axes.&lt;/p&gt;
&lt;p&gt;Roboto Flex offers a few custom axes, and the most important is Grade (&lt;code&gt;GRAD&lt;/code&gt;).
A Grade axis is interesting as it changes the weight of the font without
changing the widths, so line breaks do not change. By playing with a Grade axis,
you can avoid being forced to fiddle with changes to Weight axis that affects
the overall width, and then changes to the Width axis that affect the overall
weight.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-grade.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Grade axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;As &lt;code&gt;GRAD&lt;/code&gt; is a custom axis, with a range of -1 to 1, we need to address it with
&lt;code&gt;font-variation-settings&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` -1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-normal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;variable-fonts-on-google-fonts&quot;&gt;Variable fonts on Google Fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#variable-fonts-on-google-fonts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Google Fonts has expanded their catalog with &lt;a href=&quot;https://fonts.google.com/?vfonly=true&quot; rel=&quot;noopener&quot;&gt;variable
fonts&lt;/a&gt;, and adding new ones regularly.
The interface is currently aimed at picking single instances from the font:
you select the variation you want, click &amp;quot;Select this style&amp;quot;, and it will be
added to the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element that fetches the CSS and fonts from Google Fonts.&lt;/p&gt;
&lt;p&gt;To use all the available axes, or ranges of values, you will have to &lt;a href=&quot;https://developers.google.com/fonts/docs/css2&quot; rel=&quot;noopener&quot;&gt;manually
compose&lt;/a&gt; the URL to the Google
Fonts API. The &lt;a href=&quot;https://fonts.google.com/variablefonts&quot; rel=&quot;noopener&quot;&gt;variable fonts overview&lt;/a&gt; lists all axes and values.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/RoelN/google-variable-fonts-links&quot; rel=&quot;noopener&quot;&gt;Google Variable Fonts Links&lt;/a&gt;
tool can also give you the latest URLs for the full variable fonts.&lt;/p&gt;
&lt;h2 id=&quot;font-variation-settings-inheritance&quot;&gt;Font-variation-settings inheritance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#font-variation-settings-inheritance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While all registered axes will soon be supported through existing CSS
properties, for the time being you might need to rely on
&lt;code&gt;font-variation-settings&lt;/code&gt; as a fallback. And if your font has custom axes,
you&#39;ll need &lt;code&gt;font-variation-settings&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;However, here&#39;s a little gotcha with &lt;code&gt;font-variation-settings&lt;/code&gt;. Every property
you &lt;em&gt;don&#39;t explicitly set&lt;/em&gt; will automatically be reset to its default.
Previously set values aren&#39;t inherited! This means the following will not work
as expected:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;slanted grade-light&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	I should be slanted and have a light grade&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;First the browser will apply &lt;code&gt;font-variation-settings: &#39;slnt&#39; 10&lt;/code&gt; from the
&lt;code&gt;.slanted&lt;/code&gt; class. Then it will apply &lt;code&gt;font-variation-settings: &#39;GRAD&#39; -1&lt;/code&gt; from
the &lt;code&gt;.grade-light&lt;/code&gt; class. But this will reset the &lt;code&gt;slnt&lt;/code&gt; back to its default of
0! The result will be text in a light grade, but not slanted.&lt;/p&gt;
&lt;p&gt;Luckily, we can work around this by using CSS variables:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set the default values */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--slnt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--GRAD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Change value for these elements and their children */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--slnt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-normal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Apply whatever value is kept in the CSS variables */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted,&lt;br /&gt;.grade-light,&lt;br /&gt;.grade-normal,&lt;br /&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;slnt&#39;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--slnt&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;GRAD&#39;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--GRAD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;CSS variables will cascade, so if an element (or one of its parents) will have
set the &lt;code&gt;slnt&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt;, it will keep that value, even if you set &lt;code&gt;GRAD&lt;/code&gt; to
something else. See
&lt;a href=&quot;https://pixelambacht.nl/2019/fixing-variable-font-inheritance/&quot; rel=&quot;noopener&quot;&gt;Fixing variable font inheritance&lt;/a&gt;
for an in-depth explanation of this technique.&lt;/p&gt;
&lt;p&gt;Note that animating CSS variables doesn&#39;t work (by design), so something like
this doesn&#39;t work:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; width-animation&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token selector&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;--wdth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token selector&quot;&gt;to&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;--wdth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 151&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;These animations will have to happen directly on &lt;code&gt;font-variation-settings&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;performance-gains&quot;&gt;Performance gains &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#performance-gains&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenType variable fonts allow us to store multiple variations of a type family
into a single font file.
&lt;a href=&quot;https://medium.com/@monotype/part-2-from-truetype-gx-to-variable-fonts-4c28b16997c3&quot; rel=&quot;noopener&quot;&gt;Monotype&lt;/a&gt;
ran an experiment by combining 12 input fonts to generate eight weights,
across three widths, across both the Italic and Roman styles. Storing 48
individual fonts in a single variable font file meant a &lt;em&gt;88% reduction in file
size&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However, if you are using a single font such as Roboto Regular and nothing
else, you might not see a net gain in font size if you were to switch to a
variable font with many axes. As always, it depends on your use-case.&lt;/p&gt;
&lt;p&gt;On the flip side, animating the font between settings may cause performance
issues. Although this will improve once variable font support in browsers gets
more mature, the problem can be reduced somewhat by only animating fonts that are
currently on screen. This handy snippet by
&lt;a href=&quot;https://abcdinamo.com/news/using-variable-fonts-on-the-web&quot; rel=&quot;noopener&quot;&gt;Dinamo&lt;/a&gt; pauses
animations in elements with the class &lt;code&gt;vf-animation&lt;/code&gt;, when they&#39;re not on
screen:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; observer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; observer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Pause/Play the animation&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isIntersecting&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;animationPlayState &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;running&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;animationPlayState &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;paused&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; variableTexts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.vf-animation&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;variableTexts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; observer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;el&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If your font responds to user interaction, it&#39;s a good idea to &lt;a href=&quot;https://css-tricks.com/debouncing-throttling-explained-examples/&quot; rel=&quot;noopener&quot;&gt;throttle or
debounce&lt;/a&gt;
input events. This will prevent the browser from rendering instances of the
variable font that changed so little from the previous instance the human eye
wouldn&#39;t see the difference.&lt;/p&gt;
&lt;p&gt;If you&#39;re using Google Fonts, it&#39;s a good idea to
&lt;a href=&quot;https://web.dev/preconnect-and-dns-prefetch/&quot;&gt;preconnect&lt;/a&gt; to &lt;code&gt;https://fonts.gstatic.com&lt;/code&gt;,
the domain where Google&#39;s fonts are hosted. This will make sure the browser
knows early on where to get the fonts when it comes across them in the CSS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;preconnect&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://fonts.gstatic.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This tip works for other CDNs as well: the sooner you let the browser set up a
network connection, the sooner it can download your fonts.&lt;/p&gt;
&lt;p&gt;Find more performance tips for loading Google Fonts in &lt;a href=&quot;https://csswizardry.com/2020/05/the-fastest-google-fonts/&quot; rel=&quot;noopener&quot;&gt;The Fastest
Google Fonts&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;fallbacks&quot;&gt;Fallbacks and browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#fallbacks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All modern browsers &lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot; rel=&quot;noopener&quot;&gt;support variable
fonts&lt;/a&gt;. In case you need to support
older browsers, you can choose to build your site with static fonts, and use
variable fonts as progressive enhancement:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set up Roboto for old browsers, only regular + bold */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;Roboto-Regular.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;Roboto-Bold.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bold&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-bold&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bold&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set up Roboto for modern browsers, all weights */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@supports&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Roboto&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2 supports variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2-variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25% 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.super-bold&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For older browsers, text with the class &lt;code&gt;.super-bold&lt;/code&gt; will get rendered in the
normal bold, as that&#39;s the only bold font we have available. When variable fonts
are supported, we can actually use the heaviest weight of 1000.&lt;/p&gt;
&lt;p&gt;If you are using the Google Fonts API, it will take care of loading the proper
fonts for your visitor&#39;s browsers. Say you request the font Oswald in weight
range 200 to 700, like so:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&amp;amp;display=swap&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Modern browsers that can handle variable fonts will get the variable font, and
will have every weight between 200 and 700 available. Older browsers will get
served individual static fonts for every weight. In this case, this means
they&#39;ll download 6 font files: one for weight 200, one for weight 300, and so
on.&lt;/p&gt;
&lt;h2 id=&quot;thanks&quot;&gt;Thanks &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#thanks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article would have only been made possible with the help of the following
people:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/mustafa_x&quot; rel=&quot;noopener&quot;&gt;Mustafa Kurtuldu&lt;/a&gt;, UX designer and design advocate at Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/PixelAmbacht&quot; rel=&quot;noopener&quot;&gt;Roel Nieskens&lt;/a&gt;, UX designer/developer and typography expert at &lt;a href=&quot;https://kabisa.nl/&quot; rel=&quot;noopener&quot;&gt;Kabisa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/davelab6&quot; rel=&quot;noopener&quot;&gt;Dave Crossland&lt;/a&gt;, Program Manager, Google Fonts&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dberlow&quot; rel=&quot;noopener&quot;&gt;David Berlow&lt;/a&gt;, type designer and typographer at
&lt;a href=&quot;https://fontbureau.typenetwork.com/&quot; rel=&quot;noopener&quot;&gt;Font Bureau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/lorp&quot; rel=&quot;noopener&quot;&gt;Laurence Penney&lt;/a&gt;, developer of &lt;a href=&quot;https://axis-praxis.org/&quot; rel=&quot;noopener&quot;&gt;axis-praxis.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/Mandy_Kerr&quot; rel=&quot;noopener&quot;&gt;Mandy Michael&lt;/a&gt;, developer of &lt;a href=&quot;https://variablefonts.dev/&quot; rel=&quot;noopener&quot;&gt;variablefonts.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hero image by &lt;a href=&quot;https://unsplash.com/@brunus&quot; rel=&quot;noopener&quot;&gt;Bruno Martins&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/OhJmwB4XWLE&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Mustafa Kurtuldu</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author><author>
      <name>Dave Crossland</name>
    </author><author>
      <name>Roel Nieskens</name>
    </author>
  </entry>
  
  <entry>
    <title>Optimize WebFont loading and rendering</title>
    <link href="https://web.dev/optimize-webfont-loading/"/>
    <updated>2019-08-16T00:00:00Z</updated>
    <id>https://web.dev/optimize-webfont-loading/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;A &amp;quot;full&amp;quot; WebFont that includes all stylistic variants,
which you may not need, plus all the glyphs, which may go unused,
can easily result in a multi-megabyte download.
In this post you will find out how to optimize loading of WebFonts
so visitors only download what they will use.&lt;/p&gt;
&lt;p&gt;To address the problem of large files containing all variants,
the &lt;code&gt;@font-face&lt;/code&gt; CSS rule is specifically designed
to allow you to split the font family into a collection of resources. For example
unicode subsets, and distinct style variants.&lt;/p&gt;
&lt;p&gt;Given these declarations,
the browser figures out the required subsets and variants and downloads the minimal set required to render the text, which is very convenient.
However, if you&#39;re not careful,
it can also create a performance bottleneck in the critical rendering path and delay text rendering.&lt;/p&gt;
&lt;h3 id=&quot;the-default-behavior&quot;&gt;The default behavior &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#the-default-behavior&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lazy loading of fonts carries an important hidden implication that may delay text rendering:
the browser must &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction&quot; rel=&quot;noopener&quot;&gt;construct the render tree&lt;/a&gt;,
which is dependent on the DOM and CSSOM trees,
before it knows which font resources it needs in order to render the text.
As a result, font requests are delayed well after other critical resources,
and the browser may be blocked from rendering text until the resource is fetched.&lt;/p&gt;
&lt;img alt=&quot;Font critical rendering path&quot; decoding=&quot;async&quot; height=&quot;303&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NgSTa9SirmikQAq1G5fN.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;ol&gt;
&lt;li&gt;The browser requests the HTML document.&lt;/li&gt;
&lt;li&gt;The browser begins parsing the HTML response and constructing the DOM.&lt;/li&gt;
&lt;li&gt;The browser discovers CSS, JS, and other resources and dispatches requests.&lt;/li&gt;
&lt;li&gt;The browser constructs the CSSOM after all of the CSS content is received and combines it with
the DOM tree to construct the render tree.
&lt;ul&gt;
&lt;li&gt;Font requests are dispatched after the render tree indicates which font variants are needed to
render the specified text on the page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The browser performs layout and paints content to the screen.
&lt;ul&gt;
&lt;li&gt;If the font is not yet available, the browser may not render any text pixels.&lt;/li&gt;
&lt;li&gt;After the font is available, the browser paints the text pixels.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &amp;quot;race&amp;quot; between the first paint of page content,
which can be done shortly after the render tree is built,
and the request for the font resource is what creates the &amp;quot;blank text problem&amp;quot;
where the browser might render page layout but omits any text.&lt;/p&gt;
&lt;p&gt;By preloading WebFonts and using &lt;code&gt;font-display&lt;/code&gt; to control how browsers behave with unavailable fonts,
you can prevent blank pages and layout shifts due to font loading.&lt;/p&gt;
&lt;h3 id=&quot;preload-your-webfont-resources&quot;&gt;Preload your WebFont resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#preload-your-webfont-resources&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If there&#39;s a high probability that your page will need a specific WebFont hosted at a URL you know in advance,
you can take advantage of &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/resource-prioritization&quot; rel=&quot;noopener&quot;&gt;resource prioritization&lt;/a&gt;.
Using &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt; will trigger a request for the WebFont early in the critical rendering path,
without having to wait for the CSSOM to be created.&lt;/p&gt;
&lt;h3 id=&quot;customize-the-text-rendering-delay&quot;&gt;Customize the text rendering delay &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#customize-the-text-rendering-delay&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;While preloading makes it more likely that a WebFont will be available when a page&#39;s content is rendered,
it offers no guarantees.
You still need to consider how browsers behave when rendering text that uses a &lt;code&gt;font-family&lt;/code&gt; which is not yet available.&lt;/p&gt;
&lt;p&gt;In the post &lt;a href=&quot;https://web.dev/avoid-invisible-text/&quot;&gt;Avoid invisible text during font loading&lt;/a&gt; you can see that default browser behavior is not consistent.
However, you can tell modern browsers how you want them to behave by using
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;font-display&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Similar to the existing font timeout behaviors that some browsers implement,
&lt;code&gt;font-display&lt;/code&gt; segments the lifetime of a font download into three major periods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first period is the &lt;strong&gt;font block period&lt;/strong&gt;.
During this period, if the font face is not loaded,
any element attempting to use it must instead render with an invisible fallback font face.
If the font face successfully loads during the block period, the font face is then used normally.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;font swap period&lt;/strong&gt; occurs immediately after the font block period.
During this period, if the font face is not loaded,
any element attempting to use it must instead render with a fallback font face.
If the font face successfully loads during the swap period, the font face is then used normally.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;font failure period&lt;/strong&gt; occurs immediately after the font swap period.
If the font face is not yet loaded when this period starts,
it&#39;s marked as a failed load, causing normal font fallback.
Otherwise, the font face is used normally.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Understanding these periods means you can use &lt;code&gt;font-display&lt;/code&gt; to decide how your
font should render depending on whether or when it was downloaded.&lt;/p&gt;
&lt;p&gt;To work with the &lt;code&gt;font-display&lt;/code&gt; property, add it to your &lt;code&gt;@font-face&lt;/code&gt; rules:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* or block, swap, fallback, optional */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* will be preloaded */&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;unicode-range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; U+000-5FF&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Latin glyphs */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;font-display&lt;/code&gt; currently supports the following range of values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fallback&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information on preloading fonts, and the &lt;code&gt;font-display&lt;/code&gt; property, see the following posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/avoid-invisible-text/&quot;&gt;Avoid invisible text during font loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/02/font-display&quot; rel=&quot;noopener&quot;&gt;Controlling font performance using font-display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/preload-optional-fonts/&quot;&gt;Prevent layout shifting and flashes of invisibile text (FOIT) by preloading optional fonts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;the-font-loading-api&quot;&gt;The Font Loading API &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#the-font-loading-api&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Used together, &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt; and the CSS &lt;code&gt;font-display&lt;/code&gt; give you a great deal of control over font loading and rendering,
without adding in much overhead.
But if you need additional customizations,
and are willing to incur the overhead introduced by running JavaScript, there is another option.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/css-font-loading/&quot; rel=&quot;noopener&quot;&gt;Font Loading API&lt;/a&gt; provides a scripting interface to define and manipulate CSS font faces,
track their download progress, and override their default lazyload behavior.
For example, if you&#39;re sure that a particular font variant is required,
you can define it and tell the browser to initiate an immediate fetch of the font resource:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; font &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FontFace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Awesome Font&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;url(/fonts/awesome.woff2)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  style&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;normal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; unicodeRange&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;U+000-5FF&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; weight&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;400&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// don&#39;t wait for the render tree, initiate an immediate fetch!&lt;/span&gt;&lt;br /&gt;font&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// apply the font (which may re-render text and cause a page reflow)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// after the font has finished downloading&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fonts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;font&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fontFamily &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Awesome Font, serif&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// OR... by default the content is hidden,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// and it&#39;s rendered after the font is available&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; content &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  content&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;visibility &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;visible&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// OR... apply your own render strategy here...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Further, because you can check the font status
(via the &lt;a href=&quot;https://www.w3.org/TR/css-font-loading/#font-face-set-check&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt;) method
and track its download progress,
you can also define a custom strategy for rendering text on your pages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can hold all text rendering until the font is available.&lt;/li&gt;
&lt;li&gt;You can implement a custom timeout for each font.&lt;/li&gt;
&lt;li&gt;You can use the fallback font to unblock rendering and inject a new style that uses the desired
font after the font is available.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Best of all, you can also mix and match the above strategies for different content on the page.
For example, you can delay text rendering on some sections until the font is available,
use a fallback font, and then re-render after the font download has finished.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The Font Loading API is &lt;a href=&quot;http://caniuse.com/#feat=font-loading&quot; rel=&quot;noopener&quot;&gt;not available in older browsers&lt;/a&gt;.
Consider using the &lt;a href=&quot;https://github.com/bramstein/fontloader&quot; rel=&quot;noopener&quot;&gt;FontLoader polyfill&lt;/a&gt; or the
&lt;a href=&quot;https://github.com/typekit/webfontloader&quot; rel=&quot;noopener&quot;&gt;WebFontloader library&lt;/a&gt; to deliver similar functionality,
albeit with even more overhead from an additional JavaScript dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;proper-caching-is-a-must&quot;&gt;Proper caching is a must &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#proper-caching-is-a-must&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Font resources are, typically, static resources that don&#39;t see frequent updates.
As a result, they are ideally suited for a long max-age expiry—
ensure that you specify both a &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#validating-cached-responses-with-etags&quot; rel=&quot;noopener&quot;&gt;conditional ETag header&lt;/a&gt;,
and an &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#cache-control&quot; rel=&quot;noopener&quot;&gt;optimal Cache-Control policy&lt;/a&gt; for all font resources.&lt;/p&gt;
&lt;p&gt;If your web application uses a &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot; rel=&quot;noopener&quot;&gt;service worker&lt;/a&gt;,
serving font resources with a &lt;a href=&quot;https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-then-network&quot; rel=&quot;noopener&quot;&gt;cache-first strategy&lt;/a&gt; is appropriate for most use cases.&lt;/p&gt;
&lt;p&gt;You should not store fonts using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;
or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot; rel=&quot;noopener&quot;&gt;IndexedDB&lt;/a&gt;;
each of those has its own set of performance issues.
The browser&#39;s HTTP cache provides the best and most robust mechanism to deliver font resources to the browser.&lt;/p&gt;
&lt;h2 id=&quot;webfont-loading-checklist&quot;&gt;WebFont loading checklist &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#webfont-loading-checklist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Customize font loading and rendering using &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;, &lt;code&gt;font-display&lt;/code&gt;, or the Font
Loading API:&lt;/strong&gt; default lazyloading behavior may result in delayed text rendering. These web platform
features allow you to override this behavior for particular fonts, and to specify custom rendering
and timeout strategies for different content on the page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Specify revalidation and optimal caching policies:&lt;/strong&gt; fonts are static resources that are
infrequently updated. Make sure that your servers provide a long-lived max-age timestamp and a
revalidation token to allow for efficient font reuse between different pages. If using a service
worker, a cache-first strategy is appropriate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;automated-testing-for-webfont-loading-behavior-with-lighthouse&quot;&gt;Automated testing for WebFont loading behavior with Lighthouse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/optimize-webfont-loading/#automated-testing-for-webfont-loading-behavior-with-lighthouse&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
can help automate the process of making sure that you&#39;re following web font optimization best practices.&lt;/p&gt;
&lt;p&gt;The following audits can help you make sure that your pages are continuing to follow web font optimization best practices over time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-rel-preload/&quot;&gt;Preload key requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-long-cache-ttl/&quot;&gt;Uses inefficient cache policy on static assets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/font-display/&quot;&gt;All text remains visible during WebFont loads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Ilya Grigorik</name>
    </author>
  </entry>
  
  <entry>
    <title>Reduce WebFont Size</title>
    <link href="https://web.dev/reduce-webfont-size/"/>
    <updated>2019-08-16T00:00:00Z</updated>
    <id>https://web.dev/reduce-webfont-size/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Typography is fundamental to good design, branding, readability, and accessibility.
WebFonts enable all of the above and more:
the text is selectable, searchable, zoomable, and high-DPI friendly,
providing consistent and sharp text rendering regardless of the screen size and resolution.
WebFonts are critical to good design, UX, and performance.&lt;/p&gt;
&lt;p&gt;WebFont optimization is a critical piece of the overall performance strategy.
Each font is an additional resource, and some fonts may block rendering of the text,
but just because the page is using WebFonts doesn&#39;t mean that it has to render slower.
On the contrary, optimized fonts,
combined with a judicious strategy for how they are loaded and applied on the page,
can help reduce the total page size and improve page rendering times.&lt;/p&gt;
&lt;h2 id=&quot;anatomy-of-a-webfont&quot;&gt;Anatomy of a WebFont &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#anatomy-of-a-webfont&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;WebFont&lt;/em&gt; is a collection of glyphs,
and each glyph is a vector shape that describes a letter or symbol.
As a result, two simple variables determine the size of a particular font file:
the complexity of the vector paths of each glyph and the number of glyphs in a particular font.
For example, Open Sans, which is one of the most popular WebFonts,
contains 897 glyphs, which include Latin, Greek, and Cyrillic characters.&lt;/p&gt;
&lt;img alt=&quot;Font glyph table&quot; decoding=&quot;async&quot; height=&quot;309&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/B92rhiBJD9sx88a5CvVy.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;When picking a font, it&#39;s important to consider which character sets are supported.
If you need to localize your page content to multiple languages,
you should use a font that can deliver a consistent look and experience to your users.
For example, &lt;a href=&quot;https://www.google.com/get/noto/&quot; rel=&quot;noopener&quot;&gt;Google&#39;s Noto font family&lt;/a&gt; aims to support all the world&#39;s languages.
Note, however, that the total size of Noto, with all languages included, results in a 1.1GB+ ZIP download.&lt;/p&gt;
&lt;p&gt;In this post you will find out how to reduce the delivered filesize of your WebFonts.&lt;/p&gt;
&lt;h3 id=&quot;webfont-formats&quot;&gt;WebFont formats &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#webfont-formats&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Today there are four font container formats in use on the web:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Embedded_OpenType&quot; rel=&quot;noopener&quot;&gt;EOT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/TrueType&quot; rel=&quot;noopener&quot;&gt;TTF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Web_Open_Font_Format&quot; rel=&quot;noopener&quot;&gt;WOFF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/WOFF2/&quot; rel=&quot;noopener&quot;&gt;WOFF2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://caniuse.com/#feat=woff&quot; rel=&quot;noopener&quot;&gt;WOFF&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/#feat=woff2&quot; rel=&quot;noopener&quot;&gt;WOFF 2.0&lt;/a&gt; enjoy the widest support,
however for compatibility with older browsers you may need to include other formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serve WOFF 2.0 variant to browsers that support it.&lt;/li&gt;
&lt;li&gt;Serve WOFF variant to the majority of browsers.&lt;/li&gt;
&lt;li&gt;Serve TTF variant to old Android (below 4.4) browsers.&lt;/li&gt;
&lt;li&gt;Serve EOT variant to old IE (below IE9) browsers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;There&#39;s technically another container format, the &lt;a href=&quot;http://caniuse.com/svg-fonts&quot; rel=&quot;noopener&quot;&gt;SVG
font container&lt;/a&gt;, but IE and Firefox never supported it, and it is now deprecated in Chrome. As
such, it&#39;s of limited use and it&#39;s intentionally omitted it in this guide.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;reduce-font-size-with-compression&quot;&gt;Reduce font size with compression &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#reduce-font-size-with-compression&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A font is a collection of glyphs, each of which is a set of paths describing the letter form.
The individual glyphs are different,
but they contain a lot of similar information that can be compressed with GZIP or a compatible compressor:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EOT and TTF formats are not compressed by default. Ensure that your servers are configured to
apply &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer#text-compression-with-gzip&quot; rel=&quot;noopener&quot;&gt;GZIP compression&lt;/a&gt;
when delivering these formats.&lt;/li&gt;
&lt;li&gt;WOFF has built-in compression.
Ensure that your WOFF compressor is using optimal compression settings.&lt;/li&gt;
&lt;li&gt;WOFF2 uses custom preprocessing and compression algorithms to deliver ~30% file-size reduction over other formats.
For more information, see &lt;a href=&quot;http://www.w3.org/TR/WOFF20ER/&quot; rel=&quot;noopener&quot;&gt;the WOFF 2.0 evaluation report&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, it&#39;s worth noting that some font formats contain additional metadata,
such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Font_hinting&quot; rel=&quot;noopener&quot;&gt;font hinting&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Kerning&quot; rel=&quot;noopener&quot;&gt;kerning&lt;/a&gt;
information that may not be necessary on some platforms,
which allows for further file-size optimization.
Consult your font compressor for available optimization options,
and if you take this route, ensure that you have the appropriate infrastructure to test and deliver these optimized fonts to each browser.
For example, &lt;a href=&quot;https://fonts.google.com/&quot; rel=&quot;noopener&quot;&gt;Google Fonts&lt;/a&gt;
maintains 30+ optimized variants for each font and automatically detects and delivers the optimal variant for each platform and browser.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Consider using &lt;a href=&quot;http://en.wikipedia.org/wiki/Zopfli&quot; rel=&quot;noopener&quot;&gt;Zopfli compression&lt;/a&gt; for the EOT, TTF, and WOFF formats.
Zopfli is a zlib compatible compressor that delivers ~5% file-size reduction over gzip.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;define-a-font-family-with-@font-face&quot;&gt;Define a font family with @font-face &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#define-a-font-family-with-@font-face&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;@font-face&lt;/code&gt; CSS at-rule allows you to define the location of a particular font resource, its
style characteristics, and the Unicode codepoints for which it should be used. A combination of such
&lt;code&gt;@font-face&lt;/code&gt; declarations can be used to construct a &amp;quot;font family,&amp;quot; which the browser will use to
evaluate which font resources need to be downloaded and applied to the current page.&lt;/p&gt;
&lt;h3 id=&quot;consider-a-variable-font&quot;&gt;Consider a variable font &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#consider-a-variable-font&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Variable fonts can significantly reduce the filesize of your fonts in cases where you need multiple variants of a font.
Instead of needing to load the regular and bold styles plus their italic versions,
you can load a single file that contains all of the information.&lt;/p&gt;
&lt;p&gt;Variable fonts are now supported by all modern browsers,
find out more in the &lt;a href=&quot;https://web.dev/variable-fonts/&quot;&gt;Introduction to variable fonts on the web&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;select-the-right-format&quot;&gt;Select the right format &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#select-the-right-format&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Each &lt;code&gt;@font-face&lt;/code&gt; declaration provides the name of the font family, which acts as a logical group of
multiple declarations, &lt;a href=&quot;http://www.w3.org/TR/css3-fonts/#font-prop-desc&quot; rel=&quot;noopener&quot;&gt;font properties&lt;/a&gt; such as
style, weight, and stretch, and the &lt;a href=&quot;http://www.w3.org/TR/css3-fonts/#src-desc&quot; rel=&quot;noopener&quot;&gt;src descriptor&lt;/a&gt;,
which specifies a prioritized list of locations for the font resource.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; italic&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font Italic&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-i.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-i.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-i.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-i.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;First, note that the above examples define a single &lt;em&gt;Awesome Font&lt;/em&gt; family with two styles
(normal and &lt;em&gt;italic&lt;/em&gt;), each of which points to a different set of font resources.
In turn, each &lt;code&gt;src&lt;/code&gt; descriptor contains a prioritized, comma-separated list of resource variants:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;local()&lt;/code&gt; directive allows you to reference, load, and use locally installed fonts.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;url()&lt;/code&gt; directive allows you to load external fonts, and are allowed to contain an optional
&lt;code&gt;format()&lt;/code&gt; hint indicating the format of the font referenced by the provided URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Unless you&#39;re referencing one of the default system fonts,
it is rare for the user to have it locally installed,
especially on mobile devices,
where it is effectively impossible to &amp;quot;install&amp;quot; additional fonts.
You should always start with a &lt;code&gt;local()&lt;/code&gt; entry &amp;quot;just in case,&amp;quot; and then provide a list of &lt;code&gt;url()&lt;/code&gt; entries.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When the browser determines that the font is needed,
it iterates through the provided resource list in the specified order and tries to load the appropriate resource.
For example, following the example above:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The browser performs page layout and determines which font variants are required to render the
specified text on the page.&lt;/li&gt;
&lt;li&gt;For each required font, the browser checks if the font is available locally.&lt;/li&gt;
&lt;li&gt;If the font is not available locally, the browser iterates over external definitions:
&lt;ul&gt;
&lt;li&gt;If a format hint is present, the browser checks if it supports the hint before initiating the
download. If the browser doesn&#39;t support the hint, the browser advances to the next one.&lt;/li&gt;
&lt;li&gt;If no format hint is present, the browser downloads the resource.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The combination of local and external directives with appropriate format hints allows you to specify
all of the available font formats and let the browser handle the rest. The browser determines which
resources are required and selects the optimal format.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The order in which the font variants are specified matters.
The browser picks the first format it supports.
Therefore, if you want the newer browsers to use WOFF 2.0,
then you should place the WOFF 2.0 declaration above WOFF.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;unicode-range-subsetting&quot;&gt;Unicode-range subsetting &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#unicode-range-subsetting&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In addition to font properties such as style, weight, and stretch,
the &lt;code&gt;@font-face&lt;/code&gt; rule allows you to define a set of Unicode codepoints supported by each resource.
This enables you to split a large Unicode font into smaller subsets
(for example, Latin, Cyrillic, and Greek subsets)
and only download the glyphs required to render the text on a particular page.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/TR/css3-fonts/#descdef-unicode-range&quot; rel=&quot;noopener&quot;&gt;unicode-range descriptor&lt;/a&gt; allows you to
specify a comma-delimited list of range values, each of which can be in one of three different
forms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single codepoint (for example, &lt;code&gt;U+416&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Interval range (for example, &lt;code&gt;U+400-4ff&lt;/code&gt;): indicates the start and end codepoints of a range&lt;/li&gt;
&lt;li&gt;Wildcard range (for example, &lt;code&gt;U+4??&lt;/code&gt;): &lt;code&gt;?&lt;/code&gt; characters indicate any hexadecimal digit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, you can split your &lt;em&gt;Awesome Font&lt;/em&gt; family into Latin and Japanese
subsets, each of which the browser downloads on an as-needed basis:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;unicode-range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; U+000-5FF&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Latin glyphs */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-jp.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-jp.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-jp.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-jp.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;unicode-range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; U+3000-9FFF&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; U+ff??&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Japanese glyphs */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Unicode-range subsetting is particularly important for Asian languages, where the number of
glyphs is much larger than in Western languages and a typical &amp;quot;full&amp;quot; font is often measured in
megabytes instead of tens of kilobytes.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The use of Unicode range subsets and separate files for each stylistic variant of the font allows
you to define a composite font family that is both faster and more efficient to download. Visitors
only download the variants and subsets they need, and they aren&#39;t forced to download subsets that
they may never see or use on the page.&lt;/p&gt;
&lt;p&gt;Most browsers &lt;a href=&quot;http://caniuse.com/#feat=font-unicode-range&quot; rel=&quot;noopener&quot;&gt;now support unicode-range&lt;/a&gt;.
For compatibility with older browsers you may need to fall back to &amp;quot;manual subsetting&amp;quot;.
In this case you have to fall back to providing a single font resource
that contains all the necessary subsets and hide the rest from the browser.
For example, if the page is only using Latin characters,
then you can strip other glyphs and serve that particular subset as a standalone resource.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Determine which subsets are needed:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;If the browser supports unicode-range subsetting,
then it will automatically select the right subset.
The page just needs to provide the subset files and specify appropriate unicode-ranges in the &lt;code&gt;@font-face&lt;/code&gt; rules.&lt;/li&gt;
&lt;li&gt;If the browser doesn&#39;t support unicode-range subsetting,
then the page needs to hide all unnecessary subsets;
that is, the developer must specify the required subsets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Generate font subsets:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Use the open-source &lt;a href=&quot;https://github.com/behdad/fonttools/&quot; rel=&quot;noopener&quot;&gt;pyftsubset tool&lt;/a&gt; to subset and optimize your fonts.&lt;/li&gt;
&lt;li&gt;Some font services allow manual subsetting via custom query parameters,
which you can use to manually specify the required subset for your page.
Consult the documentation from your font provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;font-selection-and-synthesis&quot;&gt;Font selection and synthesis &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#font-selection-and-synthesis&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Each font family is composed of multiple stylistic variants
(regular, bold, italic) and multiple weights for each style,
each of which, in turn, may contain very different glyph shapes—for example,
different spacing, sizing, or a different shape altogether.&lt;/p&gt;
&lt;img alt=&quot;Font weights&quot; decoding=&quot;async&quot; height=&quot;127&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 697px) 697px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/FNtAc2xRmx2MuUt2MADj.png?auto=format&amp;w=1394 1394w&quot; width=&quot;697&quot; /&gt;
&lt;p&gt;For example, the above diagram illustrates a font family that offers three different bold weights:
400 (regular), 700 (bold), and 900 (extra bold).
All other in-between variants (indicated in gray) are automatically mapped to the closest variant by the browser.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;When a weight is specified for which no face exists,
a face with a nearby weight is used.
In general, bold weights map to faces with heavier weights and light weights map to faces with lighter weights.&lt;/p&gt;
&lt;cite&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-fonts/#font-matching-algorithm&quot;&gt;CSS font matching algorithm&lt;/a&gt;&lt;/cite&gt;
&lt;/blockquote&gt;
&lt;p&gt;Similar logic applies to &lt;em&gt;italic&lt;/em&gt; variants.
The font designer controls which variants they will produce,
and you control which variants you&#39;ll use on the page.
Because each variant is a separate download, it&#39;s a good idea to keep the number of variants small.
For example, you can define two bold variants for the &lt;em&gt;Awesome Font&lt;/em&gt; family:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;unicode-range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; U+000-5FF&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Latin glyphs */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Awesome Font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l-700.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l-700.woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l-700.ttf&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;/fonts/awesome-l-700.eot&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;unicode-range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; U+000-5FF&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Latin glyphs */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The above example declares the &lt;em&gt;Awesome Font&lt;/em&gt; family
that is composed of two resources that cover the same set of Latin glyphs (&lt;code&gt;U+000-5FF&lt;/code&gt;)
but offer two different &amp;quot;weights&amp;quot;: normal (400) and bold (700).
However, what happens if one of your CSS rules specifies a different font weight,
or sets the font-style property to italic?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If an exact font match isn&#39;t available, the browser substitutes the closest match.&lt;/li&gt;
&lt;li&gt;If no stylistic match is found (for example, no italic variants were declared in the example above),
then the browser synthesizes its own font variant.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Font synthesis&quot; decoding=&quot;async&quot; height=&quot;356&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/a8Jo2cIO1tPsj71AzftS.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Be aware that synthesized approaches may not be suitable for scripts like Cyrillic,
where italic forms are very different in shape.
For proper fidelity in those scripts, use an actual italic font.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The example above illustrates the difference between the actual vs. synthesized font results for Open Sans.
All synthesized variants are generated from a single 400-weight font.
As you can see, there&#39;s a noticeable difference in the results.
The details of how to generate the bold and oblique variants are not specified.
Therefore, the results vary from browser to browser, and are highly dependent on the font.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For best consistency and visual results, don&#39;t rely on font synthesis.
Instead, minimize the number of used font variants and specify their locations,
such that the browser can download them when they are used on the page.
Or, choose to use a variable font.
That said, in some cases a synthesized variant &lt;a href=&quot;https://www.igvita.com/2014/09/16/optimizing-webfont-selection-and-synthesis/&quot; rel=&quot;noopener&quot;&gt;may be a viable option&lt;/a&gt;,
but be cautious in using synthesized variants.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;webfont-size-optimization-checklist&quot;&gt;WebFont size optimization checklist &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/reduce-webfont-size/#webfont-size-optimization-checklist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Audit and monitor your font use:&lt;/strong&gt; don&#39;t use too many fonts on your pages, and, for each font,
minimize the number of used variants. This helps produce a more consistent and a faster experience
for your users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Subset your font resources:&lt;/strong&gt; many fonts can be subset, or split into multiple unicode-ranges to
deliver just the glyphs that a particular page requires. This reduces the file size and improves the
download speed of the resource. However, when defining the subsets, be careful to optimize for font
re-use. For example, don&#39;t download a different but overlapping set of characters on each page. A
good practice is to subset based on script: for example, Latin, and Cyrillic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deliver optimized font formats to each browser:&lt;/strong&gt; provide each font in WOFF 2.0, WOFF, EOT, and TTF
formats. Make sure to apply GZIP compression to the EOT and TTF formats, because they are not
compressed by default.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Give precedence to &lt;code&gt;local()&lt;/code&gt; in your &lt;code&gt;src&lt;/code&gt; list:&lt;/strong&gt; listing &lt;code&gt;local(&#39;Font Name&#39;)&lt;/code&gt; first in your
&lt;code&gt;src&lt;/code&gt; list ensures that HTTP requests aren&#39;t made for fonts that are already installed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;&lt;/strong&gt; to test for &lt;a href=&quot;https://web.dev/uses-text-compression/&quot;&gt;text compression&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Ilya Grigorik</name>
    </author>
  </entry>
  
  <entry>
    <title>More variable font options for the macOS `system-ui` font in Chromium 83</title>
    <link href="https://web.dev/more-variable-font-options-in-chromium-83/"/>
    <updated>2020-05-21T00:00:00Z</updated>
    <id>https://web.dev/more-variable-font-options-in-chromium-83/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;The &lt;a href=&quot;https://drafts.csswg.org/css-fonts-4/#system-ui-def&quot; rel=&quot;noopener&quot;&gt;&#39;system-ui&#39; section&lt;/a&gt; of the CSS Fonts Module Level 4 spec defines a &lt;code&gt;system-ui&lt;/code&gt; font keyword that allows developers to use the built-in, turbo-optimized, localized, mega-high-quality, no-download-needed, default operating system font right in their sites and apps.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; system-ui&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This typography choice is akin to saying &amp;quot;use the default system font for the current locale of this user.&amp;quot;&lt;/p&gt;
&lt;p&gt;On macOS, the &lt;code&gt;system-ui&lt;/code&gt; font is San Francisco, a font that a design team vetted, tested, and… recently upgraded! First we&#39;ll cover the &lt;a href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#new-powers&quot;&gt;new exciting variable font features in Catalina&lt;/a&gt;, then we&#39;ll cover a couple of &lt;a href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#regression&quot;&gt;bugs and how Chromium engineers resolved them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post assumes that you&#39;re already familiar with variable fonts. If not, check out &lt;a href=&quot;https://web.dev/variable-fonts/&quot;&gt;Introduction to variable fonts on the web&lt;/a&gt; and the video below.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;B42rUMdcB7c&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h3 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At the time of writing, &lt;code&gt;system-ui&lt;/code&gt; has support from Chromium (since 56), Edge (since 79), Safari (since 11), and from Firefox (since 43) but with the &lt;code&gt;-apple-system&lt;/code&gt; keyword. See &lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot; rel=&quot;noopener&quot;&gt;Can I use variable fonts?&lt;/a&gt; for updates.&lt;/p&gt;
&lt;h2 id=&quot;new-powers&quot;&gt;New powers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#new-powers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The new abilities that Catalina brought to the system font are now available to web developers as of Chromium 83. The &lt;code&gt;system-ui&lt;/code&gt; font now &lt;strong&gt;has more variable settings&lt;/strong&gt;: optical sizing and 2 unique weight adjustments:&lt;/p&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Mojave&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; system-ui&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;wght&#39;&lt;/span&gt; 750&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Catalina&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; system-ui&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;wght&#39;&lt;/span&gt; 750&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 20&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;GRAD&#39;&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;YAXS&#39;&lt;/span&gt; 400&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;These variant features are only available for macOS Catalina users.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On Mojave, &lt;code&gt;system-ui&lt;/code&gt; is a variable font with only &lt;code&gt;wght&lt;/code&gt; settings. While &lt;code&gt;system-ui&lt;/code&gt; on Catalina is a variable font with &lt;code&gt;wght&lt;/code&gt;, &lt;code&gt;opsz&lt;/code&gt;, &lt;code&gt;GRAD&lt;/code&gt;, and &lt;code&gt;YAXS&lt;/code&gt; settings.&lt;/p&gt;
&lt;p&gt;Looks like some neat progressive enhancement design opportunities to me! Really dig into the subtleties of the system font if you want.&lt;/p&gt;
&lt;h3 id=&quot;wght&quot;&gt;&lt;code&gt;wght&lt;/code&gt;  &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#wght&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Accepts a font weight between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;900&lt;/code&gt; and is applied equally to all characters.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* 0-900 */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;wght&#39;&lt;/span&gt; 750&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;opsz&quot;&gt;&lt;code&gt;opsz&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#opsz&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Optical sizing is similar to kerning or letter-spacing, but the spacing is done by a human eye instead of math. A value of &lt;code&gt;19&lt;/code&gt; or below is intended for text and body copy spacing, while &lt;code&gt;20&lt;/code&gt; or above is for spacing display headers and titles.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* 19 or 20 */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 20&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_opsz_v2.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_opsz_v2.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;grad&quot;&gt;&lt;code&gt;GRAD&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#grad&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Similar to weight, but without touching horizontal spacing. It accepts values between &lt;code&gt;400&lt;/code&gt; and &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* 400-1000 */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;GRAD&#39;&lt;/span&gt; 500&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_grad_v2.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_grad_v2.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;yaxs&quot;&gt;&lt;code&gt;YAXS&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#yaxs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Stretches the glyph vertically. It accepts values between &lt;code&gt;400&lt;/code&gt; and &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* 400-1000 */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;YAXS&#39;&lt;/span&gt; 500&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_yaxs_v2.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_yaxs_v2.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;combining-the-options&quot;&gt;Combining the options &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#combining-the-options&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With a few lines of CSS, we can tweak the font settings into a bold of our choice or try out other interesting combinations:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bold&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;wght&#39;&lt;/span&gt; 750&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;YAXS&#39;&lt;/span&gt; 600&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;GRAD&#39;&lt;/span&gt; 500&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 20&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_combined_v2.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_combined_v2.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;And just like that, Chromium users on macOS see your upgraded, custom 750 weight with some fun other tweaks 👍&lt;/p&gt;
&lt;h2 id=&quot;playground&quot;&gt;Playground &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#playground&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; in the Glitch below to get an editable copy of the Glitch, and then edit the new &lt;code&gt;font-variation-settings&lt;/code&gt; options to see how it affects your font. Remember that this Glitch will only work if you&#39;re using a macOS Catalina device.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/macos-system-ui?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=50&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;macos-system-ui on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;macOS 10.15 added new features to its system font, and in macOS 10.15 a tricky &lt;code&gt;system-ui&lt;/code&gt; bug was logged in the Chromium bug tracker. I wonder if they are related!?&lt;/p&gt;
&lt;div role=&quot;banner&quot; class=&quot;w-banner w-banner--neutral w-banner--body&quot;&gt;
  The image for this article was made with CSS and &lt;code&gt;system-ui&lt;/code&gt;. Here&#39;s the &lt;a href=&quot;https://codepen.io/argyleink/pen/eYpbwWd&quot;&gt;codepen&lt;/a&gt;.
&lt;/div&gt;
&lt;h2 id=&quot;regression&quot;&gt;Appendix: The &lt;code&gt;system-ui&lt;/code&gt; regression &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#regression&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The rest of this blog post explains how &lt;code&gt;system-ui&lt;/code&gt; broke in Chromium 80 and how the Chromium engineers fixed it. If this isn&#39;t interesting or relevant for you, you can stop reading now.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This story starts with a different bug: &lt;a href=&quot;https://crbug.com/1005969&quot; rel=&quot;noopener&quot;&gt;#1005969&lt;/a&gt;. This was reported against macOS 10.15 because the &lt;code&gt;system-ui&lt;/code&gt; font spacing looked narrow and crammed.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A comparison of two paragraphs from a Facebook group page. On the left is Chrome and the right is Safari, and Chrome is subtle but slightly tighter in spacing&quot; decoding=&quot;async&quot; height=&quot;417&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/f0xi5DBj1M6v72VcKNUx.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Chrome on left (tighter tracking), Safari on right (better optical spacing)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;background&quot;&gt;Background &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#background&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Did you ever notice on macOS 10.14 how your paragraphs or headers &amp;quot;snapped&amp;quot; to a different looking font when the size went up or down?&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_20to19.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_20to19.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;On Mojave (macOS 10.14), the &lt;code&gt;system-ui&lt;/code&gt; font switched between two fonts depending on the target font size. When text was under &lt;code&gt;20px&lt;/code&gt;, macOS used &amp;quot;San Francisco Text&amp;quot;. When text was &lt;code&gt;20px&lt;/code&gt; or over, macOS used &amp;quot;San Francisco Display&amp;quot;. Optical sizing was built statically into two separate fonts.&lt;/p&gt;
&lt;p&gt;Catalina (macOS 10.15) shipped a new united variable font for San Francisco. No more managing &amp;quot;Text&amp;quot; and &amp;quot;Display&amp;quot;. It also gained the new variation setting &lt;a href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#opsz&quot;&gt;&lt;code&gt;opsz&lt;/code&gt;&lt;/a&gt; described earlier.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 20&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Unfortunately, the default &lt;code&gt;opsz&lt;/code&gt; value in the new Catalina font is &lt;code&gt;20&lt;/code&gt;, and Chromium engineers were not prepared to apply &lt;code&gt;opsz&lt;/code&gt; to the system font. This led to smaller sizes displaying too narrow.&lt;/p&gt;
&lt;p&gt;To fix that, Chromium needed to apply &lt;code&gt;opsz&lt;/code&gt; correctly to the system font. This led to &lt;a href=&quot;https://crbug.com/1005969&quot; rel=&quot;noopener&quot;&gt;Issue #1005969&lt;/a&gt; getting fixed. Victory! Or was it…?&lt;/p&gt;
&lt;h3 id=&quot;not-done-yet&quot;&gt;Not done yet &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#not-done-yet&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is where it got tricky: Chromium applied &lt;code&gt;opsz&lt;/code&gt; but something did not look right still. System fonts on Mac have an additional font table called &lt;a href=&quot;https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6trak.html&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;trak&lt;/code&gt;&lt;/a&gt;, which tweaks horizontal spacing. While working on the fix, Chromium engineers noticed that on macOS, when retrieving horizontal metrics from a &lt;code&gt;CTFontRef&lt;/code&gt; object, the &lt;code&gt;trak&lt;/code&gt; metrics were already getting factored into the metrics results. Chromium&#39;s shaping library &lt;a href=&quot;https://github.com/harfbuzz/harfbuzz&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;HarfBuzz&lt;/code&gt;&lt;/a&gt; needs metrics where the &lt;code&gt;trak&lt;/code&gt; values are not yet factored in.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A display of system-ui and all of it&amp;#x27;s font weight and variations in a list. Half of them have no weight differences applied.&quot; decoding=&quot;async&quot; height=&quot;481&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/rq7Vpi6ZfUzFNKEOVACk.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Left: Bold weights applied to font sizes 19 and below. Right: Font sizes 20 and up lose bold styling&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Internally, &lt;a href=&quot;https://skia.org/&quot; rel=&quot;noopener&quot;&gt;Skia&lt;/a&gt; (the graphics library, not the typeface of the same name) uses both the &lt;code&gt;CGFontRef&lt;/code&gt; class from &lt;a href=&quot;https://developer.apple.com/documentation/coregraphics&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;CoreGraphics&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;CTFontRef&lt;/code&gt; class from &lt;a href=&quot;https://developer.apple.com/documentation/coretext&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;CoreText&lt;/code&gt;&lt;/a&gt;. Due to required internal conversions between those objects (used for keeping backwards compatibility and accessing needed APIs on both classes), Skia would lose weight information in certain circumstances and bold fonts would stop working. This was tracked in &lt;a href=&quot;https://crbug.com/1057654&quot; rel=&quot;noopener&quot;&gt;Issue #1057654&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Skia still needs to support macOS 10.11 because Chromium still supports it. On 10.11 the &amp;quot;San Francisco Text&amp;quot; and &amp;quot;San Francisco Display&amp;quot; fonts weren&#39;t even variable fonts. Rather, each was a family of separate fonts for every weight available. At some point their glyph IDs became out of sync with each other. So if Skia did text shaping (converting text into glyphs that can be drawn) with &amp;quot;San Francisco Text&amp;quot;, it would be gibberish if drawn with &amp;quot;San Francisco Display&amp;quot;, and vice versa. And even if Skia just asked for a different size macOS might switch to the other. It should be possible to always use one of the fonts and just scale it (using a matrix to scale it up instead of asking for a larger size) but &lt;code&gt;CoreText&lt;/code&gt; has an issue where it will not scale sbix (color emoji) glyphs up (only down). It&#39;s a bit more complex than that. &lt;code&gt;CoreText&lt;/code&gt; actually seems to cap the vertical extent after matrix application, which seems to be related to it not being able to draw emoji at 45 degree angles. In any event, if you want your emoji to be shown big, you need to make a copy of the font to get a big version.&lt;/p&gt;
&lt;p&gt;So in order to create copies of &lt;code&gt;CTFont&lt;/code&gt; objects at different sizes internally while ensuring that the same underlying font data is used, Chromium pulled the &lt;code&gt;CGFont&lt;/code&gt; off the &lt;code&gt;CTFont&lt;/code&gt;, then made a new &lt;code&gt;CTFont&lt;/code&gt; from the &lt;code&gt;CGFont&lt;/code&gt; (&lt;code&gt;CGFont&lt;/code&gt; objects are size independent, the magic switching happens at the &lt;code&gt;CoreText&lt;/code&gt; level). This worked fine until 10.154. In 10.15 this round trip ended up losing too much information, resulting in the weight issue. &lt;a href=&quot;https://github.com/flutter/flutter/issues/49492&quot; rel=&quot;noopener&quot;&gt;Flutter noticed the weight issue&lt;/a&gt; and an alternate fix for resizing was made to create the new &lt;code&gt;CTFont&lt;/code&gt; directly from the original &lt;code&gt;CTFont&lt;/code&gt; while controlling the optical size directly using an old but undocumented attribute in &lt;code&gt;CoreText&lt;/code&gt;. This keeps things working on 10.11 and fixes other issues (like explicitly setting the optical size to the default value).&lt;/p&gt;
&lt;p&gt;However, this preserves more of the &lt;code&gt;CoreText&lt;/code&gt; &#39;magic&#39; in the font. One of these seems to be that it still tweaks the glyph advances in some way other than just the &lt;code&gt;trak&lt;/code&gt; table (the application of which Chromium was already trying to suppress through yet another undocumented attribute).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CGFont&lt;/code&gt; doesn&#39;t do any of this &#39;magic&#39; so maybe Chromium could get the &lt;code&gt;CGFont&lt;/code&gt; off the &lt;code&gt;CTFont&lt;/code&gt; and just use it to get advances? Unfortunately this wouldn&#39;t work because &lt;code&gt;CoreText&lt;/code&gt; is known to muck with fonts in other ways as well. For example, it makes small emoji slightly bigger than you actually requested (boosting their size a bit). &lt;code&gt;CGFont&lt;/code&gt; doesn&#39;t know about this, so you&#39;d end up with your sbix-based emoji too close to each other since you&#39;d be measuring at one size but &lt;code&gt;CoreText&lt;/code&gt; would draw them bigger by some amount. Chromium does want the &lt;code&gt;CTFont&lt;/code&gt; advances, but it wants them without tracking, and preferably without any other mucking about.&lt;/p&gt;
&lt;p&gt;Since the fix for the spacing issue required a set of interconnected Blink and Skia fixes, the Chromium engineers could not &amp;quot;just revert&amp;quot; to fix the problem. The Chromium engineers also tried using a different build flag for changing a font-related codepath in Skia, which fixed the bold fonts problem, but regressed the spacing problem.&lt;/p&gt;
&lt;h2 id=&quot;the-fix&quot;&gt;The fix &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/more-variable-font-options-in-chromium-83/#the-fix&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the end, of course Chromium wanted to fix both things. Chromium now resorts to using HarfBuzz built-in font OpenType font metrics functions for retrieving horizontal metrics directly from the binary data in the system font&#39;s font tables. Using this, Chromium is sidestepping &lt;code&gt;CoreText&lt;/code&gt; and Skia when the font has a &lt;code&gt;trak&lt;/code&gt; table (except when it&#39;s the emoji font).&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A display of system-ui and all of it&amp;#x27;s font weight and variations in a list. The half previously not working looks great now.&quot; decoding=&quot;async&quot; height=&quot;481&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/9KOCF5Gh0tEWETkmDEVo.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;In the meantime there&#39;s still &lt;a href=&quot;https://bugs.chromium.org/p/skia/issues/detail?id=10123&quot; rel=&quot;noopener&quot;&gt;Skia Issue #10123&lt;/a&gt; to track fixing this fully in Skia, and to go back to using Skia to retrieve the system font metrics from there, instead of the current fix that goes through &lt;code&gt;HarfBuzz&lt;/code&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author><author>
      <name>Dominik Röttsches</name>
    </author>
  </entry>
  
  <entry>
    <title>Prevent layout shifting and flashes of invisible text (FOIT) by preloading optional fonts</title>
    <link href="https://web.dev/preload-optional-fonts/"/>
    <updated>2020-03-18T00:00:00Z</updated>
    <id>https://web.dev/preload-optional-fonts/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In Chrome 83, new font loading improvements have been made to completely eliminate layout shifting and flash of invisible text (FOIT) when optional fonts are preloaded.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;By optimizing rendering cycles, Chrome 83 eliminates layout shifting when preloading optional fonts.
Combining &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt; with &lt;code&gt;font-display: optional&lt;/code&gt; is the most effective way to
guarantee no layout jank when rendering custom fonts.&lt;/p&gt;
&lt;h2 id=&quot;compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/preload-optional-fonts/#compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Check out MDN&#39;s data for up-to-date cross-browser support information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Preloading_content#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/@font-face/font-display#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;font-display&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;font-rendering&quot;&gt;Font rendering &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/preload-optional-fonts/#font-rendering&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Layout shifting, or re-layout, occurs when a resource on a web page changes dynamically, resulting in
a &amp;quot;shift&amp;quot; of content. Fetching and rendering web fonts can directly cause layout shifts in one of
two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A fallback font is swapped with a new font (&amp;quot;flash of unstyled text&amp;quot;)&lt;/li&gt;
&lt;li&gt;&amp;quot;Invisible&amp;quot; text is shown until a new font is rendered into the page (&amp;quot;flash of invisible text&amp;quot;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The CSS &lt;a href=&quot;https://font-display.glitch.me/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;font-display&lt;/code&gt;&lt;/a&gt; property provides a way to modify
rendering behavior of custom fonts through a range of different supported values (&lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;block&lt;/code&gt;,
&lt;code&gt;swap&lt;/code&gt;, &lt;code&gt;fallback&lt;/code&gt;, and &lt;code&gt;optional&lt;/code&gt;). Choosing which value to use depends on the preferred behavior
for asynchronously loaded fonts. However, every one of these supported values can trigger re-layout
in one of the two ways listed above, until now!&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/cls/&quot;&gt;Cumulative Layout Shift&lt;/a&gt; metric makes it possible to measure the layout
instability on a web page.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;optional-fonts&quot;&gt;Optional fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/preload-optional-fonts/#optional-fonts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;font-display&lt;/code&gt; property uses a timeline of three periods to handle fonts that need to be
downloaded before they can be rendered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Block:&lt;/strong&gt; Render &amp;quot;invisible&amp;quot; text, but switch to the web font as soon as it finishes loading.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Swap:&lt;/strong&gt; Render text using a fallback system font, but switch to the web font as soon as it
finishes loading.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fail:&lt;/strong&gt; Render text using a fallback system font.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Previously, fonts designated with &lt;code&gt;font-display: optional&lt;/code&gt; had a 100ms block period and no swap
period. This means that &amp;quot;invisible&amp;quot; text is displayed very briefly before switching to a fallback
font. If the font is not downloaded within 100ms, then the fallback font is used and no swapping
occurs.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing previous optional font behavior when font fails to load&quot; decoding=&quot;async&quot; height=&quot;340&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/WHLORYEu864QRRveFQUz.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Previous &lt;code&gt;font-display: optional&lt;/code&gt; behavior in Chrome when font is downloaded &lt;b&gt;after&lt;/b&gt; the 100ms block period&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;However, in the case that the font is downloaded before the 100ms block period completes, the custom
font is rendered and used on the page.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing previous optional font behavior when font loads in time&quot; decoding=&quot;async&quot; height=&quot;318&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/mordYRjmCCDtlMcNXEOU.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Previous &lt;code&gt;font-display: optional&lt;/code&gt; behavior in Chrome when font is downloaded &lt;b&gt;before&lt;/b&gt; the 100ms block period&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Chrome re-renders the page &lt;strong&gt;twice&lt;/strong&gt; in both instances, regardless of whether the fallback font
is used or if the custom font finishes loading in time. This causes a slight flicker of invisible
text and, in cases when a new font is rendered, layout jank that moves some of the page&#39;s content.
This occurs even if the font is stored in the browser&#39;s disk cache and can load well before the
block period is complete.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1040632&quot; rel=&quot;noopener&quot;&gt;Optimizations&lt;/a&gt; have landed in Chrome 83 to entirely remove the first render cycle for optional fonts
that are preloaded with &lt;a href=&quot;https://web.dev/codelab-preload-web-fonts/&quot;&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&#39;&amp;gt;&lt;/code&gt;&lt;/a&gt;.
Instead, rendering is blocked until the custom font has finished loading or a certain period of time
has passed. This timeout period is currently set at 100ms, but may possibly change in the near
future to optimize performance.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing new preloaded optional font behavior when font fails to load&quot; decoding=&quot;async&quot; height=&quot;353&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/zLldiq9J3duBTaeRN88e.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;New &lt;code&gt;font-display: optional&lt;/code&gt; behavior in Chrome when fonts are preloaded and font is downloaded &lt;b&gt;after&lt;/b&gt; the 100ms block period (no flash of invisible text)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing new preloaded optional font behavior when font loads in time&quot; decoding=&quot;async&quot; height=&quot;346&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/OEHClGFMFspaWjb3xXLY.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;New &lt;code&gt;font-display: optional&lt;/code&gt; behavior in Chrome when fonts are preloaded and font is downloaded &lt;b&gt;before&lt;/b&gt; the 100ms block period (no flash of invisible text)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Preloading optional fonts in Chrome removes the possibility of layout jank and flash of unstyled
text. This matches the required behavior as specified in &lt;a href=&quot;https://drafts.csswg.org/css-fonts-4/#valdef-font-face-font-display-optional&quot; rel=&quot;noopener&quot;&gt;CSS Fonts Module Level
4&lt;/a&gt; where optional
fonts should never cause re-layout and user agents can instead delay rendering for a suitable period
of time.&lt;/p&gt;
&lt;p&gt;Although it is not necessary to preload an optional font, it greatly improves the chance for it to
load before the first render cycle, especially if it is not yet stored in the browser&#39;s
cache.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/preload-optional-fonts/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Chrome team is interested to hear your experiences preloading optional fonts with these new optimizations in
place! File an &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/entry&quot; rel=&quot;noopener&quot;&gt;issue&lt;/a&gt; if you experience any
problems or would like to drop any feature suggestions.&lt;/p&gt;
</content>
    <author>
      <name>Houssein Djirdeh</name>
    </author>
  </entry>
</feed>
