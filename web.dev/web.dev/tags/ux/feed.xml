<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://web.dev/</id>
  <title>UX on web.dev</title>
  <updated>2021-08-11T17:14:17Z</updated>
  <author>
    <name>Google Developers</name>
  </author>
  <link href="https://web.dev/tags/ux/feed.xml" rel="self"/>
  <link href="https://web.dev/"/>
  <category term="UX on web.dev"/>
  <icon>https://web.dev/images/social.png</icon>
  <logo>https://web.dev/images/shared/rss-banner.png</logo>
  <subtitle>Our latest news, updates, and stories about UX.</subtitle>
  
  
  <entry>
    <title>2021 Scroll Survey Report</title>
    <link href="https://web.dev/2021-scroll-survey-report/"/>
    <updated>2021-08-02T00:00:00Z</updated>
    <id>https://web.dev/2021-scroll-survey-report/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In April, the Chrome team &lt;a href=&quot;https://web.dev/2021-scroll-survey/&quot;&gt;released a scroll and touch-action
survey&lt;/a&gt; based on top reported issues from
the &lt;a href=&quot;https://mdn-web-dna.s3-us-west-2.amazonaws.com/MDN-Web-DNA-Report-2019.pdf&quot; rel=&quot;noopener&quot;&gt;2019 MDN Web DNA
Report&lt;/a&gt;.
The &lt;a href=&quot;https://storage.googleapis.com/web-dev-uploads/file/vS06HQ1YTsbMKSFTIPl2iogUQP73/QZopyELSk8T7IpsgOnRU.pdf&quot; rel=&quot;noopener&quot;&gt;2021 Scroll Survey
Report&lt;/a&gt;
is ready, and the Chrome team would like to share some thoughts and action items
we&#39;ve gleaned from the survey results. We hope these results will help browser
vendors and standards groups understand how to improve web scrolling.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View the &lt;a href=&quot;https://storage.googleapis.com/web-dev-uploads/file/vS06HQ1YTsbMKSFTIPl2iogUQP73/QZopyELSk8T7IpsgOnRU.pdf&quot; rel=&quot;noopener&quot;&gt;2021 Scroll Survey
Report&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;noteworthy-results&quot;&gt;Noteworthy results &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#noteworthy-results&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The survey anonymously collected 880 submissions, with 366 answering every
question.&lt;/p&gt;
&lt;p&gt;While getting started with scrolling is one line of CSS, like &lt;code&gt;overflow-x: scroll;&lt;/code&gt;, the surface area of scroll APIs and options is large, spanning JavaScript to
CSS. The following results help to highlight the issues web developers are
encountering.&lt;/p&gt;
&lt;h3 id=&quot;overall-satisfaction-with-web-scrolling&quot;&gt;Overall satisfaction with web scrolling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#overall-satisfaction-with-web-scrolling&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 27&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;45&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      are &lt;b&gt;somewhat&lt;/b&gt; or &lt;b&gt;extremely dissatisfied overall&lt;/b&gt; &lt;br /&gt;
      with &lt;b&gt;web scrolling&lt;/b&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This question was placed near the end of the survey intentionally, after
questions on 26 scroll use cases and features. From the response, it&#39;s clear that
the web community struggles with scroll. Almost half of the respondents report a
level of overall dissatisfaction.&lt;/p&gt;
&lt;p&gt;We believe overall sentiment about working with scroll should not be this low.
This metric needs to be changed; it&#39;s a clear signal there&#39;s work to be done.&lt;/p&gt;
&lt;h3 id=&quot;difficulty-working-with-scroll&quot;&gt;Difficulty working with scroll &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#difficulty-working-with-scroll&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 2&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;43&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      reported it&#39;s &lt;b&gt;somewhat&lt;/b&gt; or &lt;br /&gt;
      &lt;b&gt;extremely difficult &lt;br /&gt;
      to  work with scrolling&lt;/b&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;From our research, these difficulties come from the multitude of use cases for
scroll. When we talk about scrolling, that might include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://elad.medium.com/css-position-sticky-how-it-really-works-54cd01dc2d46&quot; rel=&quot;noopener&quot;&gt;Positioning elements within scrollable areas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.logrocket.com/infinite-scroll-techniques-in-react-adcfd7ff32bd/&quot; rel=&quot;noopener&quot;&gt;Infinite scroll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://greensock.com/scrolltrigger/&quot; rel=&quot;noopener&quot;&gt;Scroll linked animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/css-only-carousel/&quot; rel=&quot;noopener&quot;&gt;Carousels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.alexandergottlieb.com/overflow-scroll-and-the-right-padding-problem-a-css-only-solution-6d442915b3f4&quot; rel=&quot;noopener&quot;&gt;Scrollview padding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.magictoolbox.com/magicscroll/integration/&quot; rel=&quot;noopener&quot;&gt;Cyclical scroll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tbranyen/hyperlist&quot; rel=&quot;noopener&quot;&gt;Virtualized scroll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Missing browser features,
complex JavaScript, and the need to support input modes including touch,
keyboard, and gamepads, make all of these things harder.&lt;/p&gt;
&lt;h3 id=&quot;importance-of-touch-interactions&quot;&gt;Importance of touch interactions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#importance-of-touch-interactions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 3&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;51&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;touch interactions&lt;/b&gt; as &lt;br /&gt;
      &lt;b&gt;very&lt;/b&gt; or &lt;b&gt;extremely important&lt;/b&gt; &lt;br /&gt;
      to their work.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With &lt;a href=&quot;https://twitter.com/TheRealNooshu/status/1399676709125906432?s=20&quot; rel=&quot;noopener&quot;&gt;mobile web users still on the rise in visit
statistics&lt;/a&gt;,
it wasn&#39;t surprising to see half of the respondents report that touch is very
important to their work on the web. This signaled that web features like CSS
scroll snap and &lt;code&gt;touch-action&lt;/code&gt; need extra attention so the web can deliver on
high-quality touch interaction.&lt;/p&gt;
&lt;h3 id=&quot;difficulty-of-tab-key-or-gamepad-navigation&quot;&gt;Difficulty of tab key or gamepad navigation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#difficulty-of-tab-key-or-gamepad-navigation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 5a&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;44&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;somewhat&lt;/b&gt; or &lt;b&gt;extremely difficult&lt;/b&gt; &lt;br /&gt;
      to do &lt;b&gt;gamepad&lt;/b&gt; and &lt;b&gt;tab navigation&lt;/b&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Scrolling includes navigation methods such as keyboard arrows, tab keys,
spacebar presses, and gamepads, and it can be difficult to include these when doing
custom scroll work. Almost half of the respondents report it&#39;s
somewhat or extremely difficult to include these inputs.&lt;/p&gt;
&lt;h3 id=&quot;learning-touch-action&quot;&gt;Learning &lt;code&gt;touch-action&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#learning-touch-action&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 9&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;50&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;learning&lt;/b&gt; about &lt;br /&gt;
      &lt;b&gt;`touch-action: manipulation`&lt;/b&gt; &lt;br /&gt;
      from the survey.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Some of the survey questions asked about using certain APIs with a possible
answer of Yes, No, or &amp;quot;today I learned.&amp;quot; One notable piece of feedback was the
number of people who reported learning about &lt;code&gt;touch-action&lt;/code&gt; from the survey, as
it&#39;s a critical property when building custom touch gestures that need to
interact within scroll.&lt;/p&gt;
&lt;h3 id=&quot;cyclical-scrolling&quot;&gt;Cyclical scrolling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#cyclical-scrolling&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 27&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;58&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;sometimes, often&lt;/b&gt; or on &lt;b&gt;every project&lt;/b&gt; &lt;br /&gt;
      using &lt;b&gt;cyclical scrolling&lt;/b&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;380&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/xLwqQ6xGBIdI0uxFx566.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    The video shows cyclical seconds scrolling, &lt;br /&gt;
    after 60 seconds it begins at 0 again.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Those numbers are high for a scrolling feature with little or no support provided by the web platform.
The feature often incurs high amounts of technical
debt because of this, with duplication or JavaScript injected to force the
effect. It&#39;s popular for product carousels and when selecting time in seconds or minutes to
offer cyclical scrolling.&lt;/p&gt;
&lt;h3 id=&quot;are-scrollable-areas-important&quot;&gt;Are scrollable areas important &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#are-scrollable-areas-important&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 2&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;55&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      &lt;b&gt;very&lt;/b&gt; or &lt;br /&gt;
      &lt;b&gt;extremely important&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;16&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;not at all&lt;/b&gt; &lt;br /&gt;
      or &lt;b&gt;slightly important&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Respondents felt strongly about the importance of scrollable areas,
giving another signal about the struggles required to deliver high-quality scrolling.&lt;/p&gt;
&lt;h3 id=&quot;carousels&quot;&gt;Carousels &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#carousels&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 20&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;87&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      &lt;b&gt;have used&lt;/b&gt; carousels.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;24&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report they&#39;re &lt;br /&gt;
      &lt;b&gt;easy&lt;/b&gt; to manage.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Nearly every respondent delivers carousels in their web work, while only 25% find
them easy to manage. Off-the-shelf carousels were popular during our
research, but this statistic surprised us, as it doesn&#39;t sound very solved.&lt;/p&gt;
&lt;h3 id=&quot;infinite-scroll&quot;&gt;Infinite scroll &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#infinite-scroll&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 22&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;65&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      use it &lt;b&gt;sometimes&lt;/b&gt; &lt;br /&gt;
      to &lt;b&gt;every project&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;60&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      &lt;b&gt;somewhat&lt;/b&gt; or &lt;br /&gt;
      &lt;b&gt;extremely difficult&lt;/b&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Two-thirds of respondents deliver infinite scroll in their web work, and an equal
amount report it&#39;s difficult to do. Another example of high usage paired with
high difficulty, which indicates to us an area needing attention.&lt;/p&gt;
&lt;p&gt;While &lt;a href=&quot;https://web.dev/content-visibility/&quot;&gt;&lt;code&gt;content-visibility&lt;/code&gt;&lt;/a&gt; and
&lt;code&gt;contain-intrinsic-size&lt;/code&gt; can be combined to reduce render costs for long
scrollable areas, it doesn&#39;t seem to be helping with &amp;quot;load more&amp;quot; infinite scroll
UX.&lt;/p&gt;
&lt;h3 id=&quot;scroll-linked-or-scroll-triggered-animations&quot;&gt;Scroll-linked or scroll-triggered animations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#scroll-linked-or-scroll-triggered-animations&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 24&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;47&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      use it &lt;b&gt;sometimes&lt;/b&gt;&lt;br /&gt;
      to &lt;b&gt;every project&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;56&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      report &lt;b&gt;somewhat&lt;/b&gt; or &lt;br /&gt;
      &lt;b&gt;extremely difficult&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Almost half of all respondents use scroll-orchestrated animations and half the
respondents find it difficult, once again linking high usage with difficulty.&lt;/p&gt;
&lt;h3 id=&quot;compete-with-built-in-scrolling&quot;&gt;Compete with built-in scrolling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#compete-with-built-in-scrolling&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 26&lt;/small&gt;&lt;/p&gt;
&lt;div class=&quot;w-stats&quot;&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;32&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      &lt;b&gt;always&lt;/b&gt; or &lt;br /&gt;
      &lt;b&gt;most of the time&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;w-stat&quot;&gt;
    &lt;p class=&quot;w-stat__figure&quot;&gt;50&lt;sub class=&quot;w-stat__sub&quot;&gt;%&lt;/sub&gt;&lt;/p&gt;
    &lt;p class=&quot;w-stat__desc&quot;&gt;
      &lt;b&gt;sometimes&lt;/b&gt;
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The built-in scroll and touch interactions of phone and tablet applications are
often touted as a clear place where the web can catch up. The features include
scroll-linked animations, programmatic interfaces, voice integration, scroll
hints, and pull-to-refresh APIs.&lt;/p&gt;
&lt;p&gt;Just half of the respondents felt it was only sometimes possible to match the
experience of built-in scrolling.&lt;/p&gt;
&lt;h3 id=&quot;overall-satisfaction-building-scroll-interactions-on-the-web&quot;&gt;Overall satisfaction building scroll interactions on the web &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#overall-satisfaction-building-scroll-interactions-on-the-web&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;small&gt;Question 27&lt;/small&gt;&lt;/p&gt;
&lt;img alt=&quot;A pie chart showing 5 sections: 6.3% extremely dissatisfied, 2.7% extremely satisfied, 23.4% somewhat satisfied, 28.8% neither satisfied nor dissatisfied, 38.7% somewhat dissatisfied.&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/ycHj33nZb1KfUFxNBdH5.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;survey-takeaways&quot;&gt;Survey Takeaways &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#survey-takeaways&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The survey results are segmented into four categories:
&lt;a href=&quot;https://web.dev/2021-scroll-survey-report/#compatibility&quot;&gt;compatibility&lt;/a&gt;,
&lt;a href=&quot;https://web.dev/2021-scroll-survey-report/#education&quot;&gt;education&lt;/a&gt;,
&lt;a href=&quot;https://web.dev/2021-scroll-survey-report/#apis&quot;&gt;APIs&lt;/a&gt;,
and &lt;a href=&quot;https://web.dev/2021-scroll-survey-report/#features&quot;&gt;features&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;compatibility&quot;&gt;Compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#compatibility&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Chrome team has &lt;a href=&quot;https://web.dev/compat2021&quot;&gt;declared a goal&lt;/a&gt; to decrease
the number of web compatibility issues, including scroll compatibility.&lt;/p&gt;
&lt;p&gt;The first three compatibility issues to focus on:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Horizontal scrolling compatibility.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt; cross browser.&lt;/li&gt;
&lt;li&gt;Removing prefixes from &lt;code&gt;-webkit-scrollbar&lt;/code&gt; and following the standard.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;education&quot;&gt;Education &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#education&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The survey results showed that there needs to be more education around
&lt;code&gt;touch-action&lt;/code&gt; and &lt;a href=&quot;https://web.dev/logical-property-shorthands/&quot;&gt;logical
properties&lt;/a&gt;. The browser is at the
forefront of international layout, and it&#39;s apparent it&#39;s underutilized or
misunderstood.&lt;/p&gt;
&lt;p&gt;Areas to focus on:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;touch-action&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/learn/css/logical-properties/&quot;&gt;Logical properties&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;apis&quot;&gt;APIs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#apis&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Usage of scroll snapping is growing, and developers have responded that they
want to use features interoperably with popular libraries and
plugins. Shrinking this gap between CSS and plugin libraries will help the
satisfaction of scroll snap developer and user experience.&lt;/p&gt;
&lt;p&gt;We&#39;ll focus API work on &lt;code&gt;scroll-snap&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;API availability and compatibility across browsers.&lt;/li&gt;
&lt;li&gt;Begin work on &lt;a href=&quot;https://github.com/argyleink/ScrollSnapExplainers&quot; rel=&quot;noopener&quot;&gt;new CSS
APIs&lt;/a&gt; like &lt;code&gt;scroll-start&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Begin work on &lt;a href=&quot;https://github.com/argyleink/ScrollSnapExplainers&quot; rel=&quot;noopener&quot;&gt;new JS
events&lt;/a&gt; like
&lt;code&gt;snapChanged()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;features&quot;&gt;Features &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#features&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The survey results showed that users struggle with some specific types of
scroll-related components on the web, as the platform doesn&#39;t provide the
primitives they need to build them without plugins or a high level of effort.
This is an area that we hope to explore more deeply.&lt;/p&gt;
&lt;p&gt;The features developers struggle to build include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Carousels&lt;/li&gt;
&lt;li&gt;Virtual scroll&lt;/li&gt;
&lt;li&gt;Infinite scroll&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;resources&quot;&gt;Resources &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey-report/#resources&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://drive.google.com/file/d/10WXTJHCZmH0rXEh3J7z3ki96-f9SHs_R/view?usp=sharing&amp;amp;resourcekey=0-5b1y_6rZDhyt6Tkbz3FCzA&quot; rel=&quot;noopener&quot;&gt;Scroll Survey
Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/2021-scroll-survey/&quot;&gt;Survey Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://insights.developer.mozilla.org/&quot; rel=&quot;noopener&quot;&gt;Mozilla DNA Reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/compat2021/&quot;&gt;Compat2021: Eliminating five top compatibility pain points on the
web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/google.com/g/blink-interactions-team/search?q=Igalia%20work%20update&quot; rel=&quot;noopener&quot;&gt;2020-2021 Scroll Compatibility Igalia
Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thumbnail image: photo by &lt;a href=&quot;https://unsplash.com/@taypaigey&quot; rel=&quot;noopener&quot;&gt;Taylor Wilcox&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/aXeVH4FcS1k&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author><author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Offline UX design guidelines</title>
    <link href="https://web.dev/offline-ux-design-guidelines/"/>
    <updated>2016-11-10T00:00:00Z</updated>
    <id>https://web.dev/offline-ux-design-guidelines/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This article provides design guidelines on how to create a great experience
on both slow networks and offline.&lt;/p&gt;
&lt;p&gt;The quality of a network connection can be affected by a number of factors such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor coverage of a provider.&lt;/li&gt;
&lt;li&gt;Extreme weather conditions.&lt;/li&gt;
&lt;li&gt;Power outages.&lt;/li&gt;
&lt;li&gt;Entering into permanent &amp;quot;dead zones&amp;quot; such as buildings with walls that block network connections.&lt;/li&gt;
&lt;li&gt;Entering into temporary &amp;quot;dead zones&amp;quot; like when traveling on a train and going through a tunnel.&lt;/li&gt;
&lt;li&gt;Time-boxed internet connections such as those in airports or hotels.&lt;/li&gt;
&lt;li&gt;Cultural practices that require limited or no internet access at specific times or days.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your goal is to provide a good experience that lessens the impact of changes in connectivity.&lt;/p&gt;
&lt;h2 id=&quot;decide-what-to-show-your-users-when-they-have-a-bad-network-connection&quot;&gt;Decide what to show your users when they have a bad network connection &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#decide-what-to-show-your-users-when-they-have-a-bad-network-connection&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first question that must be asked is what does success and failure of a network connection look
like? A successful connection is your app&#39;s normal online experience. The failure of a connection,
however, can be both the offline state of your app as well how the app behaves when there is a laggy
network.&lt;/p&gt;
&lt;p&gt;When thinking about the success or failure of a network connection you need to ask yourself these
important UX questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How long do you wait to determine the success or failure of a connection?&lt;/li&gt;
&lt;li&gt;What can you do while success or failure is being determined?&lt;/li&gt;
&lt;li&gt;What should you do in the event of failure?&lt;/li&gt;
&lt;li&gt;How do you inform the user of the above?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;inform-users-of-their-current-state-and-change-of-state&quot;&gt;Inform users of their current state and change of state &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-users-of-their-current-state-and-change-of-state&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Inform the user of both the actions they can still take when they have a network failure and the
current state of the application. For example, a notification could say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You seem to have a bad network connection. Not to worry! Messages will be sent when the
network is restored.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;display: inline-block; max-width: 45%;&quot;&gt;
  &lt;img alt=&quot;The Emojoy emoji messaging app informing the user when a change in state occurs.&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 335px) 335px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/roxoXuJ9x7qUHFVWMgXZ.png?auto=format&amp;w=670 670w&quot; width=&quot;335&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Clearly inform the user when a change in state occurs as soon as possible.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot; style=&quot;display: inline-block; max-width: 45%;&quot;&gt;
  &lt;img alt=&quot;The I/O 2016 app informing the user when a change in state occurs.&quot; decoding=&quot;async&quot; height=&quot;601&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 335px) 335px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/GvE07BeSsnTyxnRbkZhz.png?auto=format&amp;w=670 670w&quot; width=&quot;335&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google I/O app used a material design &quot;toast&quot; to let the user know when they were offline.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;inform-users-when-the-network-connection-improves-or-is-restored&quot;&gt;Inform users when the network connection improves or is restored &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-users-when-the-network-connection-improves-or-is-restored&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;How you inform the user that their network connection has improved depends
on your application. Apps such as a stock market app that prioritize current information
should auto-update and notify the user as soon as possible.&lt;/p&gt;
&lt;p&gt;It is recommended that you let the user know that your web app has been updated &amp;quot;in the background&amp;quot;
by using a visual cue such as, for example, a material design toast element. This involves detecting both the
the presence of a service worker and an update to its managed
content. You can see a code example of this &lt;a href=&quot;https://github.com/GoogleChrome/sw-precache/blob/master/demo/app/js/service-worker-registration.js#L29&quot;&gt;function
at work here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One example of this would be &lt;a href=&quot;https://chromestatus.com/&quot; rel=&quot;noopener&quot;&gt;Chrome Platform Status&lt;/a&gt;
which posts a note to the user when the app has been updated.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example weather app.&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ikam7evJEVSicAnVxvWA.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Some apps, like the weather app, need to auto-update, as old data
    is not useful.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome Status uses a toast&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 336px) 336px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/5TtIkRCPsuxAOajX8LPF.png?auto=format&amp;w=672 672w&quot; width=&quot;336&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Apps like Chrome Status let the user know
    when content has been updated via a toast notification.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You may also show the last time the app was updated at all times in a prominent space. This would
be useful for a currency converter app, for example.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The Material Money app being out-of-date.&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/nK4V7aUvmLvaNJgF1S2I.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Material Money caches rates…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Material money has been updated&quot; decoding=&quot;async&quot; height=&quot;598&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 324px) 324px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wqaFuHzeAC2wR0D3pt7R.png?auto=format&amp;w=648 648w&quot; width=&quot;324&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …and notifies the user when the app has been updated.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Applications such as news apps could show a simple tap-to-update notification
informing the user of new content. Auto-updating would cause users to lose
their place.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;An example news app, Tailpiece in its normal state&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Tailpiece, an online newspaper, will auto-download the latest news…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Example news app, Tailpiece when its ready to be updated&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WNIMNF14cSF29fntl1Lc.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …but allow users to refresh manually so they do not lose their place in an article.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;update-the-ui-to-reflect-the-current-contextual-state&quot;&gt;Update the UI to reflect the current contextual state &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#update-the-ui-to-reflect-the-current-contextual-state&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Each bit of UI may have its own context and functionality that will change depending on if it
requires a successful connection. One example would be an e-commerce site that can be browsed
offline. The Buy button and pricing would be disabled until a connection is reestablished.&lt;/p&gt;
&lt;p&gt;Other forms of contextual states could include data. For example, the financial application
Robinhood allows users to buy stock and uses color and graphics to notify the user when the market
is open. The whole interface turns white and then grays out when the market closes. When the value
of stock increases or decreases, each individual stock widget turns green or red depending on its
state.&lt;/p&gt;
&lt;h3 id=&quot;educate-the-user-so-they-understand-what-the-offline-model-is&quot;&gt;Educate the user so they understand what the offline model is &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#educate-the-user-so-they-understand-what-the-offline-model-is&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Offline is a new mental model for everyone. You need to educate your users about what changes will
occur when they don&#39;t have a connection. Inform them of where large data is saved and give them
settings to change the default behavior. Make sure you use multiple UI design components such as
informative language, icons, notifications, color, and imagery to convey these ideas collectively
rather than relying on a single design choice, such as an icon on its own, to tell the whole story.&lt;/p&gt;
&lt;h2 id=&quot;provide-an-offline-experience-by-default&quot;&gt;Provide an offline experience by default &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#provide-an-offline-experience-by-default&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If your app doesn&#39;t require much data, then cache that data by default. Users can become
increasingly frustrated if they can only access their data with a network connection. Try to make
the experience as stable as possible. An unstable connection will make your app feel untrustworthy,
where an app that lessens the impact of a network failure will feel magical to the user.&lt;/p&gt;
&lt;p&gt;News sites could benefit from auto-downloading and auto-saving the latest news so a
user could read today&#39;s news without a connection, perhaps downloading the text without the article
images. Also, adapt to the user&#39;s behavior. For example, if the sports section is what they typically view,
make that the priority download.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Tailpiece informs the user that they are offline with various design widgets&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/M39yiHQYpXacVII6d7zX.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    If the device is offline, Tailpiece will notify the user with a status message…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Tailpiece has a visual indicator that shows what sections are ready for offline use.&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KpkzjYNoCWquWKXTvM28.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …letting them know that they can at least partially still use the app.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;When it comes to communicating an app&#39;s status, saying &amp;quot;The network is down&amp;quot; sends the message
that the app&#39;s network is experiencing problems, whereas &amp;quot;You are disconnected&amp;quot; makes it clearer
to the user that the problem is on their end.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;inform-the-user-when-the-app-is-ready-for-offline-consumption&quot;&gt;Inform the user when the app is ready for offline consumption &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#inform-the-user-when-the-app-is-ready-for-offline-consumption&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a web app first loads you need to indicate to the user if it is ready for offline use. Do this
with a
&lt;a href=&quot;https://material.io/components/snackbars&quot; rel=&quot;noopener&quot;&gt;widget that provides brief feedback&lt;/a&gt;
about an operation through a message at the bottom of the screen such as, for example, when a section has
been synced or a data file has downloaded.&lt;/p&gt;
&lt;p&gt;Again think of the language you are using to make sure it is fit for your audience. Ensure the
messaging is given the same in all instances where it&#39;s used. The term offline is generally
misunderstood by a non-technical audience so use action-based language that your audience can relate
to.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;I/O app offline&quot; decoding=&quot;async&quot; height=&quot;664&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/fNOute6xBzFcDUNMeXDe.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The Google I/O 2016 app notifies the user when
    the app is ready for offline use…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome Status site is offline&quot; decoding=&quot;async&quot; height=&quot;664&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Od6jUnazP8n7CMe18G2C.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …and so does the Chrome Platform Status site, which includes information about the occupied storage.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;make-&#39;save-for-offline&#39;-an-obvious-part-of-the-interface-for-data-heavy-apps&quot;&gt;Make &#39;save for offline&#39; an obvious part of the interface for data-heavy apps &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#make-&#39;save-for-offline&#39;-an-obvious-part-of-the-interface-for-data-heavy-apps&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If an application uses large amounts of data, make sure that there is a switch or pin to add an item
for offline use rather than auto-downloading, unless a user has specifically asked for this behavior
via a settings menu. Make sure that the pin or download UI is not obscured by other UI elements and
that the feature is obvious to the user.&lt;/p&gt;
&lt;p&gt;One example would be a music player that requires large data files. The user is aware of the
associated data cost, but may also want to use the player offline.
Downloading music for later use requires the user to plan ahead, so education about this may be
required during onboarding.&lt;/p&gt;
&lt;h3 id=&quot;clarify-what-is-available-offline&quot;&gt;Clarify what is available offline &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#clarify-what-is-available-offline&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Be clear as to the option you are providing. You may need to show a tab or setting that shows an
&amp;quot;offline library&amp;quot; or &lt;a href=&quot;https://web.dev/content-indexing-api/&quot;&gt;content index&lt;/a&gt;,
so the user can easily see what they have stored on their phone and what needs to
be saved. Make sure the settings are concise and be clear where the data will be stored and who has
access to it.&lt;/p&gt;
&lt;h3 id=&quot;show-the-actual-cost-of-an-action&quot;&gt;Show the actual cost of an action &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#show-the-actual-cost-of-an-action&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Many users equate offline capability with &#39;downloading&#39;. Users in countries where network
connections regularly fail or aren&#39;t available often share content with other users, or save content
for offline use when they have connectivity.&lt;/p&gt;
&lt;p&gt;Users on data plans may avoid downloading large files for fear of cost, so you may also want to
display an associated cost so users can make an active comparison for a specific file or task. For
example, if the music app above could detect if the user is on a data plan and show the file size so
that users can see the cost of a file.&lt;/p&gt;
&lt;h3 id=&quot;help-prevent-hacked-experiences&quot;&gt;Help prevent hacked experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#help-prevent-hacked-experiences&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Often users hack an experience without realizing they are doing it. For example before cloud-based
file sharing web apps, it was common for users to save large files and attach them to emails so
they could carry on editing from a different device. It is important not to be pulled into their
hacked experience but rather look at what they are trying to achieve. In other words instead of
thinking of how you can make attaching a large file more user-friendly, solve the problem of
sharing large files across multiple devices.&lt;/p&gt;
&lt;h2 id=&quot;make-experiences-transferable-from-one-device-to-another&quot;&gt;Make experiences transferable from one device to another &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#make-experiences-transferable-from-one-device-to-another&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When building for flaky networks, try to sync as soon as the connection improves
so that the experience is transferable. For example, imagine a travel app losing
a network connection mid-way through a booking. When the connection is reestablished, the app syncs
with the user&#39;s account allowing them to continue their booking on their desktop device. Not being
able to transfer experiences can be incredibly jarring to users.&lt;/p&gt;
&lt;p&gt;Inform the user of the current state of their data. For example, you could show whether the
app has synced. Educate them where possible but try not to overburden them with messaging.&lt;/p&gt;
&lt;h2 id=&quot;create-inclusive-design-experiences&quot;&gt;Create inclusive design experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#create-inclusive-design-experiences&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When designing seek to be inclusive by providing meaningful design devices, simple language,
standard iconography, and meaningful imagery that will guide the user to complete the action or task
rather than hinder their progress.&lt;/p&gt;
&lt;h3 id=&quot;use-simple-concise-language&quot;&gt;Use simple, concise language &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-simple-concise-language&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Good UX is not just about a well designed interface. It includes the path a user takes as well as
the words used in the app. Avoid tech jargon when explaining the state of the app or
individual UI components. Consider that the phrase &amp;quot;app offline&amp;quot; might not convey to the user the
current state of the app.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A service worker icon is a bad example&quot; decoding=&quot;async&quot; height=&quot;149&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 350px) 350px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/MaYiuInHsZ2mbPQcbD4l.png?auto=format&amp;w=700 700w&quot; width=&quot;350&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Avoid terms that aren&#39;t intelligible to non-technical users.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A download icon is a good example&quot; decoding=&quot;async&quot; height=&quot;149&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 350px) 350px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ZIjYKLFK5DbrDJDJeDqu.png?auto=format&amp;w=700 700w&quot; width=&quot;350&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use language and imagery that describes the action.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;use-multiple-design-devices-to-create-accessible-user-experiences&quot;&gt;Use multiple design devices to create accessible user experiences &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-multiple-design-devices-to-create-accessible-user-experiences&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use language, color, and visual components to demonstrate a change of state or current status.
Solely using color to demonstrate state may not be noticed by the user and may be inaccessible to
users who suffer from visual disabilities. Also, the instinct for designers is to use grayed UI
to represent offline, but this can have a loaded meaning on the web. Grayed UI such as input elements
on a form also means that an element is disabled. This can cause confusion if you &lt;em&gt;only&lt;/em&gt;
use color to depict state.&lt;/p&gt;
&lt;p&gt;To prevent misunderstandings, express different states to the user in multiple ways, for example
with color, labels, and UI components.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A bad example only using color.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 720px) 720px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uj28SN1ZepiIvya4YTe1.png?auto=format&amp;w=1440 1440w&quot; width=&quot;720&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use color as the sole means to describe what is happening.
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
  &lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;A good example that uses color and text to show an error.&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 720px) 720px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/s78eC2GBEkDQouqhBYMO.png?auto=format&amp;w=1440 1440w&quot; width=&quot;720&quot; /&gt;
    &lt;figcaption class=&quot;w-figcaption&quot;&gt;
      Use a mixture of design elements to convey meaning
    &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;use-icons-that-convey-meaning&quot;&gt;Use icons that convey meaning &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-icons-that-convey-meaning&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Make sure that information is conveyed correctly with meaningful text labels as well as icons. Icons
alone can be problematic, since the concept of offline on the web is relatively new. Users may
misunderstand icons used on their own. For example, using a floppy disc for save makes sense to an
older generation but young users who have never seen a floppy disc may be confused by the metaphor.
Likewise, the &#39;hamburger&#39; menu icon has been known to confuse users when presented without a label.&lt;/p&gt;
&lt;p&gt;When introducing an offline icon try to remain consistent with industry standard visuals (when they
exist) as well as providing a text label and description. For example, saving for offline might be
a typical download icon or perhaps if the action involves syncing it could be a syncing icon. Some
actions may be interpreted as saving for offline rather than demonstrating a network&#39;s status. Think
of the action you are trying to convey rather than presenting the user with an abstract concept. For
example, save or download data would be action-based.&lt;/p&gt;
&lt;img alt=&quot;Various icon examples that convey offline&quot; decoding=&quot;async&quot; height=&quot;299&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 700px) 700px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/h2FFD3nLIOdSzWg5H5kO.png?auto=format&amp;w=1400 1400w&quot; width=&quot;700&quot; /&gt;
&lt;p&gt;Offline can mean a number of things depending on the context, such as download, export, pin, etc.
For more inspiration checkout the
&lt;a href=&quot;https://material.io/resources/icons/&quot; rel=&quot;noopener&quot;&gt;Material Design icon set&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;use-skeleton-layouts-with-other-feedback-mechanisms&quot;&gt;Use skeleton layouts with other feedback mechanisms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#use-skeleton-layouts-with-other-feedback-mechanisms&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A skeleton layout is essentially a wireframe version of your app that displays while content is
being loaded. This helps demonstrate to the user that content is about to be loaded. Consider also
using a preloader UI as well, with a text label informing the user that the app is loading. One
example would be to pulsate the wireframe content giving the app the feeling that it is alive and
loading. This reassures the user that something is happening and helps prevent resubmissions or
refreshes of your app.&lt;/p&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A skeleton layout example&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/pUIrcbblhHe5YPSrrwRy.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Skeleton placeholder layout is shown during the download of the article…
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&quot;display: inline-block; max-width: 45%;&quot; class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A loaded article example&quot; decoding=&quot;async&quot; height=&quot;665&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 360px) 360px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/rRLScscdU9BE9Wt4RYAx.png?auto=format&amp;w=720 720w&quot; width=&quot;360&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    …that gets replaced with the real contents once the download finishes.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;don&#39;t-block-content&quot;&gt;Don&#39;t block content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#don&#39;t-block-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In some applications, a user might trigger an action such as creating a new document. Some apps will
try to connect to a server in order to sync the new document and to demonstrate this they display an
intrusive loading modal dialog that covers the entire screen. This may work fine if the user has a
stable network connection, but if the network is unstable they won&#39;t be able to escape from this
action and the UI effectively blocks them from doing anything else. Network requests that block
content should be avoided. Allow the user to continue to browse your app and queue tasks that will
be performed and synced once the connection has improved.&lt;/p&gt;
&lt;p&gt;Demonstrate the state of an action by providing your users with feedback. For example, if a user is
editing a doc, consider changing the feedback design so it is visibly different from when they are
online but still shows that their file was &amp;quot;saved&amp;quot; and will sync when they have a network
connection. This will educate the user about the different states available and reassure them that
their task or action has been stored. This has the added benefit of the user growing more confident
using your application.&lt;/p&gt;
&lt;h2 id=&quot;design-for-the-next-billion&quot;&gt;Design for the next billion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#design-for-the-next-billion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In many regions, low-end devices are commonplace, connectivity is unreliable and, for many users,
data is unaffordable. You will need to earn user trust by being transparent and frugal with data.
Think about ways to help users on poor connections and simplify the interface to help speed up
tasks. Always try to ask users before downloading data-heavy content.&lt;/p&gt;
&lt;p&gt;Offer low bandwidth options for users on laggy connections. So if the network connection is slow,
provide small assets. Offer an option to choose high or low quality assets.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/offline-ux-design-guidelines/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Education is key to offline UX as users are unfamiliar with these concepts. Try to create associations
with things that are familiar, e.g downloading for later use is the same as offlining data.&lt;/p&gt;
&lt;p&gt;When designing for unstable network connections, remember these guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Think how you design for the success, failure, and instability of a network connection.&lt;/li&gt;
&lt;li&gt;Data may be expensive, so be considerate to the user.&lt;/li&gt;
&lt;li&gt;For most users globally, the tech environment is almost exclusively mobile.&lt;/li&gt;
&lt;li&gt;Low-end devices are commonplace, with limited storage, memory and processing power, and small
displays and lower touchscreen quality. Make sure performance is a part of your design process.&lt;/li&gt;
&lt;li&gt;Allow users to browse your application when they are offline.&lt;/li&gt;
&lt;li&gt;Inform users of their current state and of changes in states.&lt;/li&gt;
&lt;li&gt;Try to provide offline by default if your app doesn&#39;t require much data.&lt;/li&gt;
&lt;li&gt;If the app is data-heavy, educate users about how they can download for offline use.&lt;/li&gt;
&lt;li&gt;Make experiences transferable between devices.&lt;/li&gt;
&lt;li&gt;Utilize language, icons, imagery, typography, and color to express ideas to the user collectively.&lt;/li&gt;
&lt;li&gt;Provide reassurance and feedback to help the user.&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Mustafa Kurtuldu</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author>
  </entry>
  
  <entry>
    <title>Take the 2021 scroll survey to help improve scrolling on the web</title>
    <link href="https://web.dev/2021-scroll-survey/"/>
    <updated>2021-04-15T00:00:00Z</updated>
    <id>https://web.dev/2021-scroll-survey/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;We&#39;ve been analyzing the results of the
&lt;a href=&quot;https://mdn-web-dna.s3-us-west-2.amazonaws.com/MDN-Web-DNA-Report-2019.pdf&quot; rel=&quot;noopener&quot;&gt;2019 Mozilla Developer Network Web DNA Report&lt;/a&gt;
for action items and follow up strategies to improve the top reported issues.
A small sub-group on the Chrome team identified a group of issues related
to scrolling, &lt;code&gt;scroll-snap&lt;/code&gt;, and &lt;code&gt;touch-action&lt;/code&gt;. Those issues were researched,
evaluated, and synthesized into a new, follow-up survey with more precise
questions about issues related to these topics.&lt;/p&gt;
&lt;h2 id=&quot;2021-scroll-survey&quot;&gt;2021 Scroll Survey &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/2021-scroll-survey/#2021-scroll-survey&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We believe that there are many ways to improve scrolling on the web for
developers, designers, and users alike. We&#39;ve created a survey which we
hope is respectful of your time. It should take no more than 10 minutes
to complete. The results will help browser vendors and standards groups
understand how to make scrolling better.&lt;/p&gt;
&lt;p&gt;You can take part in the survey at &lt;a href=&quot;https://google.qualtrics.com/jfe/form/SV_bjbaTccU1lpPlVX&quot; rel=&quot;noopener&quot;&gt;2021 Web Scrolling Survey&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author><author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Building a Settings component</title>
    <link href="https://web.dev/building-a-settings-component/"/>
    <updated>2021-03-17T00:00:00Z</updated>
    <id>https://web.dev/building-a-settings-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this post I want to share thinking on building a Settings component for the
web that is responsive, supports multiple device inputs, and works across
browsers. Try the &lt;a href=&quot;https://gui-challenges.web.app/settings/dist/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/WuIwd9jPb30KmmnjJn75.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    &lt;a href=&quot;https://gui-challenges.web.app/settings/dist/&quot;&gt;Demo&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you prefer video, or want a UI/UX preview of what we&#39;re building, here&#39;s a
shorter walkthrough on YouTube:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;dm7gnp6eh3Q&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&#39;ve broken out the aspects of this component into the following sections:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#layouts&quot;&gt;Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#color&quot;&gt;Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#custom-range&quot;&gt;Custom range input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#custom-checkbox&quot;&gt;Custom checkbox input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#accessibility&quot;&gt;Accessibility considerations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#javascript&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;The CSS snippets below assume PostCSS with
&lt;a href=&quot;https://preset-env.cssdb.org/features&quot; rel=&quot;noopener&quot;&gt;PostCSS Preset Env&lt;/a&gt;.
Intent is to practice early and often with syntax in early drafts or
experimentally available in browsers. Or as the plugin likes to say,
&amp;quot;Use tomorrow&#39;s CSS today&amp;quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;layouts&quot;&gt;Layouts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#layouts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the first GUI Challenge demo to be &lt;strong&gt;all CSS Grid&lt;/strong&gt;! Here&#39;s each grid
highlighted with the &lt;a href=&quot;https://goo.gle/devtools-grid&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools for grid&lt;/a&gt;:&lt;/p&gt;
&lt;img alt=&quot;Colorful outlines and gap spacing overlays that help show all the boxes that make up the settings layout&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;563&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/h6LZhScslprBcFol4gGp.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;div role=&quot;banner&quot; class=&quot;w-banner w-banner--neutral &quot;&gt;
&lt;p&gt;To highlight your grid layouts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Chrome DevTools with &lt;code&gt;cmd+opt+i&lt;/code&gt; or &lt;code&gt;ctrl+alt+i&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select the Layout tab next to the Styles tab.&lt;/li&gt;
&lt;li&gt;Under the Grid layouts section, check on all the layouts.&lt;/li&gt;
&lt;li&gt;Change the colors of all layouts.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;h3 id=&quot;just-for-gap&quot;&gt;Just for gap &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#just-for-gap&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most common layout:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--something&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I call this layout &amp;quot;just for gap&amp;quot; because it only uses grid to add gaps between blocks.&lt;/p&gt;
&lt;p&gt;Five layouts use this strategy, here&#39;s all of them displayed:&lt;/p&gt;
&lt;img alt=&quot;Vertical grid layouts highlighted with outlines and filled in gaps&quot; decoding=&quot;async&quot; height=&quot;568&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/zYWSVLzdtrh1K8p8yUuA.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;The &lt;code&gt;fieldset&lt;/code&gt; element, which contains each input group (&lt;code&gt;.fieldset-item&lt;/code&gt;), is using &lt;code&gt;gap: 1px&lt;/code&gt; to
create the hairline borders between elements. No tricky border solution!&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Filled gap&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg-surface-1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp; &gt; .fieldset-item&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg-surface-2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Border trick&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp; &gt; .fieldset-item&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg-surface-2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;:not(:last-child)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;border-bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px solid &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg-surface-1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&quot;natural-grid-wrapping&quot;&gt;Natural grid wrapping &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#natural-grid-wrapping&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most complex layout ended up being the macro layout, the logical layout
system between &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;centering-wrapping-content&quot;&gt;Centering wrapping content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#centering-wrapping-content&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Flexbox and grid both provide abilities to &lt;code&gt;align-items&lt;/code&gt; or
&lt;code&gt;align-content&lt;/code&gt;, and when dealing with wrapping elements, &lt;code&gt;content&lt;/code&gt; layout
alignments will distribute space amongst the children as a group.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;place-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The main element is using &lt;code&gt;place-content: center&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/place-content&quot; rel=&quot;noopener&quot;&gt;alignment
shorthand&lt;/a&gt; so
that the children are centered vertically and horizontally in both one and two column layouts.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/IQI2PofA6gpNFUkDrvKo.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Watch in the above video how the &amp;quot;content&amp;quot; stays centered, even though wrapping
has occurred.&lt;/p&gt;
&lt;h4 id=&quot;repeat-auto-fit-minmax&quot;&gt;Repeat auto-fit minmax &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#repeat-auto-fit-minmax&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; uses an adaptive grid layout for each section.
This layout switches from one to two columns based on available space.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xxl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;auto-fit&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;minmax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10ch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 35ch&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex-start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 89vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This grid has a different value for &lt;code&gt;row-gap&lt;/code&gt; (--space-xl) than &lt;code&gt;column-gap&lt;/code&gt; (--space-xxl)
to put that custom touch on the responsive layout. When the columns stack, we
want a large gap, but not as large as if we&#39;re on a wide screen.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;grid-template-columns&lt;/code&gt; property uses 3 CSS functions: &lt;code&gt;repeat()&lt;/code&gt;, &lt;code&gt;minmax()&lt;/code&gt; and
&lt;code&gt;min()&lt;/code&gt;. &lt;a href=&quot;https://web.dev/building-a-settings-component/#&quot;&gt;Una Kravets&lt;/a&gt; has a &lt;a href=&quot;https://web.dev/one-line-layouts/&quot;&gt;great layout blog
post&lt;/a&gt; about this, calling it
&lt;a href=&quot;https://web.dev/one-line-layouts/#07.-ram-(repeat-auto-minmax):-grid-template-columns(auto-fit-minmax(lessbasegreater-1fr))&quot;&gt;RAM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&#39;s 3 special additions in our layout, if you compare it to Una&#39;s:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We pass an extra &lt;code&gt;min()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;We specify &lt;code&gt;align-items: flex-start&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There&#39;s a &lt;code&gt;max-width: 89vw&lt;/code&gt; style.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The extra &lt;code&gt;min()&lt;/code&gt; function is well described by Evan Minto on their blog in the
post &lt;a href=&quot;https://evanminto.com/blog/intrinsically-responsive-css-grid-minmax-min/&quot; rel=&quot;noopener&quot;&gt;Intrinsically Responsive CSS Grid with minmax() and
min()&lt;/a&gt;.
I recommend giving that a read. The &lt;code&gt;flex-start&lt;/code&gt; alignment correction is to
remove the default stretching effect, so that the children of this layout don&#39;t
need to have equal heights, they can have natural, intrinsic heights. The
YouTube video has a quick breakdown of this alignment addition.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max-width: 89vw&lt;/code&gt; is worth a small breakdown in this post.
Let me show you the layout with and without the style applied:&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/gdldf7hyaBrHWwxQbSaT.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;What&#39;s happening? When &lt;code&gt;max-width&lt;/code&gt; is specified, it&#39;s providing context,
explicit sizing or &lt;a href=&quot;https://drafts.csswg.org/css-sizing-3/#definite&quot; rel=&quot;noopener&quot;&gt;definite
sizing&lt;/a&gt; for the &lt;a href=&quot;https://drafts.csswg.org/css-grid/#auto-repeat&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;auto-fit&lt;/code&gt;
layout algorithm&lt;/a&gt; to know how
many repetitions it can fit into the space. While it seems obvious that the
space is &amp;quot;full width&amp;quot;, per the CSS grid spec, a definite size or max-size must
be provided. I&#39;ve provided a max-size.&lt;/p&gt;
&lt;p&gt;So, why &lt;code&gt;89vw&lt;/code&gt;? Because &amp;quot;it worked&amp;quot; for my layout.
Me and a couple of other Chrome folks are investigating why a more reasonable value,
like &lt;code&gt;100vw&lt;/code&gt; isn&#39;t sufficient, and if this is in fact a bug.&lt;/p&gt;
&lt;h3 id=&quot;spacing&quot;&gt;Spacing &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#spacing&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A majority of the harmony of this layout is from a limited palette of spacing, 7
to be exact.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-xxs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .25rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-xs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  .5rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-sm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-md&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  1.5rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-lg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-xl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;  3rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--space-xxl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 6rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Usage of these flows really nicely with grid, &lt;a href=&quot;https://drafts.csswg.org/css-nesting-1/&quot; rel=&quot;noopener&quot;&gt;CSS @nest&lt;/a&gt;, and &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/&quot; rel=&quot;noopener&quot;&gt;level 5 syntax
of @media&lt;/a&gt;. Here&#39;s an example, the fully &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; layout set of styles.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;place-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-sm&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;width &gt;= 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-lg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;width &gt;= 800px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;A grid with centered content, moderately padded by default (like on mobile). But
as more viewport space becomes available, it spreads out by increasing padding.
2021 CSS is looking pretty good!&lt;/p&gt;
&lt;p&gt;Remember the earlier layout, &amp;quot;just for gap&amp;quot;? Here&#39;s a more complete version of
how they look in this component:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xxs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-md&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;color&quot;&gt;Color &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#color&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A controlled use of color helped this design stand out as expressive yet
minimal. I do it like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--surface1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--surface2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;15 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--surface3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;20 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--surface4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;25 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--text1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;95 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--text2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;75 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--key-term&quot;&gt;
&lt;p&gt;&lt;strong&gt;Key Term&lt;/strong&gt;:
&lt;a href=&quot;https://github.com/csstools/postcss-lab-function&quot; rel=&quot;noopener&quot;&gt;PostCSS &lt;code&gt;lab()&lt;/code&gt; and &lt;code&gt;lch()&lt;/code&gt;
plugin&lt;/a&gt; is part of &lt;a href=&quot;https://preset-env.cssdb.org/features#lch-function&quot; rel=&quot;noopener&quot;&gt;PostCSS
Preset Env&lt;/a&gt;, and will output
&lt;code&gt;rgb()&lt;/code&gt; colors.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I name my surface and text colors with numbers as opposed to names like
&lt;code&gt;surface-dark&lt;/code&gt; and &lt;code&gt;surface-darker&lt;/code&gt; because in a media query, I&#39;ll be flipping
them, and light and dark won&#39;t be meaningful.&lt;/p&gt;
&lt;p&gt;I flip them in a preference media query like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  ...&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; light&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--surface1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--surface2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;100 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--surface3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;98 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--surface4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;85 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--text1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;20 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--text2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;40 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--key-term&quot;&gt;
&lt;p&gt;&lt;strong&gt;Key Term&lt;/strong&gt;:
&lt;a href=&quot;https://github.com/csstools/postcss-nesting&quot; rel=&quot;noopener&quot;&gt;PostCSS &lt;code&gt;@nest&lt;/code&gt; plugin&lt;/a&gt; is part of &lt;a href=&quot;https://preset-env.cssdb.org/features&quot; rel=&quot;noopener&quot;&gt;PostCSS
Preset Env&lt;/a&gt;, and will expand selectors to a syntax
browsers support today.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It&#39;s important to get a quick glimpse at the overall picture and strategy before
we dive into color syntax details. But, since I&#39;ve gotten a bit ahead of myself,
let me back up a bit.&lt;/p&gt;
&lt;h3 id=&quot;lch&quot;&gt;LCH? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#lch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Without getting too deep into color theory land, LCH is a human oriented syntax,
that caters to how we percieve color, not how we measure color with math (like
255). This gives it a distinct advantage as humans can write it more easily and other
humans will be in tune with these adjustments.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-screenshot&quot;&gt;
  &lt;img alt=&quot;A screenshot of pod.link/csspodcast webpage, with Color 2: Perception episode pulled up&quot; decoding=&quot;async&quot; height=&quot;329&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/160dWLSrMhFISwWMVd4w.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    Learn about perceptual color (and more!) on the &lt;a href=&quot;https://pod.link/thecsspodcast&quot;&gt;CSS Podcast&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For today, in this demo, let&#39;s focus on the syntax and the values I&#39;m flipping
to make light and dark. Let&#39;s look at 1 surface and 1 text color:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--surface1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;10 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--text1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;95 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; light&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--surface1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;--text1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;40 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;--surface1: lch(10 0 0)&lt;/code&gt; translates to &lt;code&gt;10%&lt;/code&gt; lightness, 0 chroma and 0 hue: a
very dark colorless gray. Then, in the media query for light mode, the lightness
is flipped to &lt;code&gt;90%&lt;/code&gt; with &lt;code&gt;--surface1: lch(90 0 0);&lt;/code&gt;. And that&#39;s the gist of the
strategy. Start by just changing lightness between the 2 themes, maintaining the
contrast ratios the design calls for or what can maintain accessibility.&lt;/p&gt;
&lt;p&gt;The bonus with &lt;code&gt;lch()&lt;/code&gt; here is that lightness is human oriented, and we can feel
good about a &lt;code&gt;%&lt;/code&gt; change to it, that it will be perceptually and consistently
that &lt;code&gt;%&lt;/code&gt; different. &lt;code&gt;hsl()&lt;/code&gt; for example is &lt;a href=&quot;https://twitter.com/argyleink/status/1201908189257555968&quot; rel=&quot;noopener&quot;&gt;not as
reliable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&#39;s &lt;a href=&quot;https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/&quot; rel=&quot;noopener&quot;&gt;more to
learn&lt;/a&gt; about
color spaces and &lt;code&gt;lch()&lt;/code&gt; if you&#39;re interested. It&#39;s coming!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSS right now &lt;strong&gt;cannot access these colors at all&lt;/strong&gt;.
Let me repeat: &lt;strong&gt;We have no access to one third of the colors in most modern
monitors.&lt;/strong&gt; And these are not just any colors, but the &lt;strong&gt;most vivid colors the
screen can display&lt;/strong&gt;. Our websites are washed out because monitor hardware evolved
faster than CSS specs and browser implementations.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Lea Verou&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;adaptive-form-controls-with-color-scheme&quot;&gt;Adaptive form controls with color-scheme &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#adaptive-form-controls-with-color-scheme&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Many browsers ship dark theme controls, currently Safari and Chromium, but you
have to specify in CSS or HTML that your design uses them.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/0VVtEAWM6jHeIxahqnFy.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;The above is demonstrating the effect of the property from the Styles panel of
DevTools. The demo uses the HTML tag, which in my opinion is generally
a better location:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;color-scheme&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;dark light&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Learn all about it in this &lt;a href=&quot;https://web.dev/color-scheme/&quot;&gt;&lt;code&gt;color-scheme&lt;/code&gt;
article&lt;/a&gt; by &lt;a href=&quot;https://web.dev/authors/thomassteiner/&quot;&gt;Thomas
Steiner&lt;/a&gt;. There&#39;s a lot more to gain
than dark checkbox inputs!&lt;/p&gt;
&lt;h3 id=&quot;css-accent-color&quot;&gt;CSS &lt;code&gt;accent-color&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#css-accent-color&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There&#39;s been &lt;a href=&quot;https://twitter.com/argyleink/status/1360022120810483715?s=20&quot; rel=&quot;noopener&quot;&gt;recent
activity&lt;/a&gt; around
&lt;code&gt;accent-color&lt;/code&gt; on form elements, being a single CSS style that can change the
tint color used in the browsers input element. Read more about it &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/5187&quot; rel=&quot;noopener&quot;&gt;here on
GitHub&lt;/a&gt;. I&#39;ve included it in my
styles for this component. As browsers support it, my checkboxes will be
more on theme with the pink and purple color pops.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;checkbox&quot;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;accent-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;img alt=&quot;A screenshot from Chromium on Linux of pink checkboxes&quot; decoding=&quot;async&quot; height=&quot;406&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/J9pbhB0ImoDzbsXkBGtG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h3 id=&quot;color-pops-with-fixed-gradients-and-focus-within&quot;&gt;Color pops with fixed gradients and focus-within &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#color-pops-with-fixed-gradients-and-focus-within&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Color pops most when it&#39;s used sparingly, and one of the ways I like to achieve
that is through colorful UI interactions.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;480px&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/Pm75QwVToKkiqedqPtmm.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;There are many layers of UI feedback and interaction in the above video, which
help give personality to the interaction by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Highlighting context.&lt;/li&gt;
&lt;li&gt;Providing UI feedback of &amp;quot;how full&amp;quot; the value is in the range.&lt;/li&gt;
&lt;li&gt;Providing UI feedback that a field is accepting input.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To provide feedback when an element is being interacted with, CSS is using the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt;&lt;/a&gt;
pseudo class to change the appearance of various elements, let&#39;s break down the
&lt;code&gt;.fieldset-item&lt;/code&gt;, it&#39;s super interesting:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.fieldset-item&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;...&lt;br /&gt;&lt;br /&gt;  &amp;amp;:focus-within&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--surface2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp; svg&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; white&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp; picture&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;clip-path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand-bg-gradient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; fixed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When one of the children of this element has focus-within:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;.fieldset-item&lt;/code&gt; background is assigned a higher contrast surface color.&lt;/li&gt;
&lt;li&gt;The nested &lt;code&gt;svg&lt;/code&gt; is filled white for higher contrast.&lt;/li&gt;
&lt;li&gt;The nested &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; &lt;code&gt;clip-path&lt;/code&gt; expands to a full circle and the
background is filled with the bright fixed gradient.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;custom-range&quot;&gt;Custom range &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#custom-range&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given the following HTML input element, I&#39;ll show you how I customized its
appearance:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;range&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;There&#39;s 3 parts to this element we need to customize:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#range-element-styles&quot;&gt;Range element / container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#track-styles&quot;&gt;Track&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#thumb-styles&quot;&gt;Thumb&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;range-element-styles&quot;&gt;Range element styles &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#range-element-styles&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;range&quot;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* style setting variables */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--track-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .5ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--track-fill&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1.25ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-highlight-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;appearance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;token comment&quot;&gt;/* clear styles, make way for mine */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;token comment&quot;&gt;/* fill container */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ex 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;token comment&quot;&gt;/* ensure thumb isn&#39;t colliding with sibling content */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transparent&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;/* bg is in the track */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;outline-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;token comment&quot;&gt;/* focus styles have space */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The first few lines of CSS are the custom parts of the styles, and I hope that
clearly labeling them helps. The rest of the styles are mostly reset styles, to
provide a consistent foundation for building the tricky parts of the component.&lt;/p&gt;
&lt;h3 id=&quot;track-styles&quot;&gt;Track styles &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#track-styles&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;range&quot;]::-webkit-slider-runnable-track&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;appearance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* clear styles, make way for mine */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--track-height&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* hard stop gradient:&lt;br /&gt;        - half transparent (where colorful fill we be)&lt;br /&gt;        - half dark track fill&lt;br /&gt;        - 1st background image is on top&lt;br /&gt;    */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      to right&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      transparent &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--track-fill&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--surface1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 0%&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* colorful fill effect, behind track surface fill */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand-bg-gradient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; fixed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The trick to this is &amp;quot;revealing&amp;quot; the vibrant fill color. This is done with the
hard stop gradient on top. The gradient is transparent up to the fill percentage, and after
that uses the unfilled track surface color. Behind that unfilled surface, is a
full width color, waiting for transparency to reveal it.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/aiAL28AkDRZvaAZNEbW8.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;h4 id=&quot;track-fill-style&quot;&gt;Track fill style &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#track-fill-style&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;My design &lt;strong&gt;does require JavaScript&lt;/strong&gt; in order to maintain the fill style. There
are CSS only strategies but they require the thumb element to be the same height
as the track, and I wasn&#39;t able to find a harmony within those limits.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* grab sliders on page */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sliders &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input[type=&quot;range&quot;]&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* take a slider element, return a percentage string for use in CSS */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;rangeToPercent&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;slider&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; max &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; slider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;max&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; percent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; slider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; max &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;percent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* on page load, set the fill amount */&lt;/span&gt;&lt;br /&gt;sliders&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;slider&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  slider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;--track-fill&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rangeToPercent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;slider&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* when a slider changes, update the fill prop */&lt;/span&gt;&lt;br /&gt;  slider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;--track-fill&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rangeToPercent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I think this makes for a nice visual upgrade. The slider works great without
JavaScript, the &lt;code&gt;--track-fill&lt;/code&gt; prop is not required, it simply will not have a
fill style if not present. If JavaScript is available, populate the custom
property while also observing any user changes, syncing the custom property with
the value.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/sliding-nightmare-understanding-range-input/&quot; rel=&quot;noopener&quot;&gt;Here&#39;s a great
post&lt;/a&gt; on
&lt;a href=&quot;https://css-tricks.com/&quot; rel=&quot;noopener&quot;&gt;CSS-Tricks&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/anatudor&quot; rel=&quot;noopener&quot;&gt;Ana
Tudor&lt;/a&gt;, that demonstrates a CSS only solution for
track fill. I also found this
&lt;a href=&quot;https://app.native-elements.dev/editor/elements/range&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;range&lt;/code&gt; element&lt;/a&gt; very inspiring.&lt;/p&gt;
&lt;h3 id=&quot;thumb-styles&quot;&gt;Thumb styles &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#thumb-styles&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;range&quot;]::-webkit-slider-thumb&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;appearance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* clear styles, make way for mine */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ew-resize&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* cursor style to support drag direction */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3px solid &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--surface3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-offset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand-bg-gradient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; fixed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The majority of these styles are to make a nice circle.
Again you see the fixed background gradient there that unifies the
dynamic colors of the thumbs, tracks and associated SVG elements.
I separated the styles for the interaction to help isolate the &lt;code&gt;box-shadow&lt;/code&gt;
technique being used for the hover highlight:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@custom-media&lt;/span&gt; --motionOK &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-preference&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;::-webkit-slider-thumb&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* shadow spread is initally 0 */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 0 0 &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-highlight-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-highlight-color&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* if motion is OK, transition the box-shadow change */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--motionOK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; box-shadow .1s ease&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* on hover/active state of parent, increase size prop */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@nest&lt;/span&gt; input[type=&lt;span class=&quot;token string&quot;&gt;&quot;range&quot;&lt;/span&gt;]&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;hover&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;active&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;--thumb-highlight-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--key-term&quot;&gt;
&lt;p&gt;&lt;strong&gt;Key Term&lt;/strong&gt;:
&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#custom-mq&quot; rel=&quot;noopener&quot;&gt;@custom-media&lt;/a&gt;
is a Level 5 spec addition that
&lt;a href=&quot;https://github.com/postcss/postcss-custom-media&quot; rel=&quot;noopener&quot;&gt;PostCSS Custom Media&lt;/a&gt;, part of
&lt;a href=&quot;https://preset-env.cssdb.org/features&quot; rel=&quot;noopener&quot;&gt;PostCSS Preset Env&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The goal was an easy to manage and animated visual highlight for user feedback.
By using a box shadow I can avoid &lt;a href=&quot;https://web.dev/animations-guide/#triggers&quot;&gt;triggering
layout&lt;/a&gt; with the effect. I do this
by creating a shadow that&#39;s not blurred and matches the circular shape of the
thumb element. Then I change and transition it&#39;s spread size on hover.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/s835RbH88L5bxjl5bMFl.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;If only the highlight effect was so easy on checkboxes…&lt;/p&gt;
&lt;h3 id=&quot;cross-browser-selectors&quot;&gt;Cross browser selectors &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#cross-browser-selectors&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I found I needed these &lt;code&gt;-webkit-&lt;/code&gt; and &lt;code&gt;-moz-&lt;/code&gt; selectors to achieve cross browser
consistency:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;range&quot;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp;::-webkit-slider-runnable-track&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp;::-moz-range-track&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp;::-webkit-slider-thumb&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp;::-moz-range-thumb&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/JoshWComeau&quot; rel=&quot;noopener&quot;&gt;Josh Comeau&lt;/a&gt; outlines
why the above examples don&#39;t simply use a comma between selectors for cross
browser styling, see the &lt;a href=&quot;https://twitter.com/JoshWComeau/status/1359213591602335752?s=20&quot; rel=&quot;noopener&quot;&gt;Twitter
thread&lt;/a&gt; for
more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;custom-checkbox&quot;&gt;Custom Checkbox &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#custom-checkbox&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Given the following HTML input element, I&#39;ll show you how I customized its
appearance:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;There&#39;s 3 parts to this element we need to customize:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#checkbox-element&quot;&gt;Checkbox element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#checkbox-labels&quot;&gt;Associated labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/building-a-settings-component/#checkbox-highlight&quot;&gt;Highlight effect&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;checkbox-element&quot;&gt;Checkbox element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#checkbox-element&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;checkbox&quot;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-sm&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;/* increase width */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-sm&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;token comment&quot;&gt;/* increase height */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;outline-offset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;token comment&quot;&gt;/* focus style enhancement */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;accent-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brand&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;token comment&quot;&gt;/* tint the input */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;             &lt;span class=&quot;token comment&quot;&gt;/* prepare for an absolute pseudo element */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;transform-style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; preserve-3d&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;/* create a 3d z-space stacking context */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pointer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;transform-style&lt;/code&gt; and &lt;code&gt;position&lt;/code&gt; styles prepare for the pseudo-element we will introduce later
to style the highlight. Otherwise, it&#39;s mostly
minor opinionated style stuff from me. I like the cursor to be pointer, I like
outline offsets, default checkboxes are too tiny, and if &lt;code&gt;accent-color&lt;/code&gt; is
&lt;a href=&quot;https://drafts.csswg.org/css-ui-4/#widget-accent&quot; rel=&quot;noopener&quot;&gt;supported&lt;/a&gt;, bring these
checkboxes into the brand color scheme.&lt;/p&gt;
&lt;h3 id=&quot;checkbox-labels&quot;&gt;Checkbox labels &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#checkbox-labels&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It&#39;s important to provide labels for checkboxes for 2 reasons. The first is to
represent what the checkbox value is used for, to answer &amp;quot;on or off for what?&amp;quot;
Second is for UX, web users have become accustomed to interacting with
checkboxes via their associated labels.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/7GYIFNjNCBdj13juFO7S.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;input&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;checkbox&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text-notifications&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text-notifications&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;label&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text-notifications&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Text Messages&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Get notified about all text messages sent to your device&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;On your label, put a &lt;code&gt;for&lt;/code&gt; attribute that points to a checkbox by ID: &lt;code&gt;&amp;lt;label for=&amp;quot;text-notifications&amp;quot;&amp;gt;&lt;/code&gt;. On your checkbox, double up both the name and id to
ensure it&#39;s found with varying tools and tech, like a mouse or screenreader:
&lt;code&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; id=&amp;quot;text-notifications&amp;quot; name=&amp;quot;text-notifications&amp;quot;&amp;gt;&lt;/code&gt;.
&lt;code&gt;:hover&lt;/code&gt;, &lt;code&gt;:active&lt;/code&gt; and more come for free with the connection, increasing the
ways your form can be interacted with.&lt;/p&gt;
&lt;h3 id=&quot;checkbox-highlight&quot;&gt;Checkbox highlight &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#checkbox-highlight&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I want to keep my interfaces consistent, and the slider element has a nice
thumbnail highlight that I&#39;d like to use with the checkbox. The thumbnail was
able to use &lt;code&gt;box-shadow&lt;/code&gt; and it&#39;s &lt;code&gt;spread&lt;/code&gt; property to scale a shadow up and
down. However, that effect doesn&#39;t work here because our checkboxes are, &lt;a href=&quot;https://twitter.com/argyleink/status/1329230409784291328?s=20&quot; rel=&quot;noopener&quot;&gt;and should
be&lt;/a&gt;, square.&lt;/p&gt;
&lt;p&gt;I was able to achieve the same visual effect with a pseudo element, and an
unfortunate amount of tricky CSS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@custom-media&lt;/span&gt; --motionOK &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-preference&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;checkbox&quot;]::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .01&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;                        &lt;span class=&quot;token comment&quot;&gt;/* initial scale of highlight */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-highlight-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--space-xl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-highlight-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-highlight-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;clip-path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;                     &lt;span class=&quot;token comment&quot;&gt;/* circle shape */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;token comment&quot;&gt;/* this is why position relative on parent */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;                                   &lt;span class=&quot;token comment&quot;&gt;/* pop and plop technique (https://web.dev/centering-in-css/#5.-pop-and-plop) */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-highlight-color&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;token comment&quot;&gt;/* goal is a centered scaling circle */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;                                  &lt;span class=&quot;token comment&quot;&gt;/* order here matters!! */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;                          &lt;span class=&quot;token comment&quot;&gt;/* counter balances left: 50% */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-50%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;                          &lt;span class=&quot;token comment&quot;&gt;/* counter balances top: 50% */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;translateZ&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-1px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;                          &lt;span class=&quot;token comment&quot;&gt;/* PUTS IT BEHIND THE CHECKBOX */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--thumb-scale&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;                 &lt;span class=&quot;token comment&quot;&gt;/* value we toggle for animation */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;will-change&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--motionOK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;                       &lt;span class=&quot;token comment&quot;&gt;/* transition only if motion is OK */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform .2s ease&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* on hover, set scale custom property to &quot;in&quot; state */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=&quot;checkbox&quot;]:hover::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--thumb-scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Creating a circle psuedo-element is straightforward work, but &lt;strong&gt;placing it
behind the element it&#39;s attached to&lt;/strong&gt; was harder. Here&#39;s before and
after I fixed it:&lt;/p&gt;
&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/Spdpw5P1MD8ceazneRXo.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s definitely a micro interaction, but important to me to keep the visual
consistency. The animation scaling technique is the same as we&#39;ve been using in
other places. We set a custom property to a new value and let CSS transition it
based on motion preferences. The key feature here is &lt;code&gt;translateZ(-1px)&lt;/code&gt;. The
parent created a 3D space and this pseudo-element child tapped into it by
placing itself slightly back in z-space.&lt;/p&gt;
&lt;h2 id=&quot;accessibility&quot;&gt;Accessibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#accessibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The YouTube video does a great demonstration of the mouse, keyboard and
screenreader interactions for this settings component. I&#39;ll call out some of the
details here.&lt;/p&gt;
&lt;h3 id=&quot;html-element-choices&quot;&gt;HTML Element Choices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#html-element-choices&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;fieldset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;picture&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each of these holds hints and tips to the user&#39;s browsing tool. Some elements
provide interaction hints, some connect interactivity, and some help shape the
acccessibility tree that a screenreader navigates.&lt;/p&gt;
&lt;h3 id=&quot;html-attributes&quot;&gt;HTML Attributes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#html-attributes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can hide elements that are not needed by screenreaders,
in this case the icon next to the slider:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;picture&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-hidden&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot; width=&quot;480px&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/fVjqHRZHQixAaxjeAvDP.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;&lt;/p&gt;
&lt;p&gt;The above video demonstrates the screenreader flow on Mac OS. Notice how input
focus moves straight from one slider to the next. This is because we&#39;ve hidden
the icon that may have been a stop on the way to the next slider. Without this
attribute, a user would need to stop, listen and move past the picture which
they may not be able to see.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;Ensure to cross browser test screenreader interactions.
The original demo included &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; in the list of elements with
&lt;code&gt;aria-hidden=&amp;quot;true&amp;quot;&lt;/code&gt;, but it&#39;s been since removed after &lt;a href=&quot;https://twitter.com/rob_dodson/status/1371859386210029568&quot; rel=&quot;noopener&quot;&gt;Twitter
conversation&lt;/a&gt;
revealed cross browser differences.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The SVG is a bunch of math, let&#39;s add a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; element for a free mouse hover
title and a human readable comment about what the math is creating:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;viewBox&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0 0 24 24&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;A note icon&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;path&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Other than that, we&#39;ve used enough clearly marked HTML, that the form tests
really well across mouse, keyboard, video game controllers and screenreaders.&lt;/p&gt;
&lt;h2 id=&quot;javascript&quot;&gt;JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#javascript&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&#39;ve &lt;a href=&quot;https://web.dev/building-a-settings-component/#track-styles&quot;&gt;already covered&lt;/a&gt; how the track fill color was being managed from JavaScript,
so let&#39;s look at the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; related JavaScript now:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; formData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FormData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;formData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Everytime the form is interacted with and changed, the console logs the form as
an object into a table for easy review before submitting to a server.&lt;/p&gt;
&lt;img alt=&quot;A screenshot of the console.table() results, where the form data is shown in a table&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;285&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/hFAyIOpOSdiczdf4AtIj.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that you know how I did it, how would you?! This makes for some fun
component architecture! Who&#39;s going to make the 1st version with slots in their
favorite framework? 🙂&lt;/p&gt;
&lt;p&gt;Let&#39;s diversify our approaches and learn all the ways to build on the web.
Create a demo, &lt;a href=&quot;https://twitter.com/argyleink&quot; rel=&quot;noopener&quot;&gt;tweet me&lt;/a&gt; links, and I&#39;ll add it
to the &lt;a href=&quot;https://web.dev/building-a-settings-component/#community-remixes&quot;&gt;Community remixes&lt;/a&gt; section below!&lt;/p&gt;
&lt;h2 id=&quot;community-remixes&quot;&gt;Community remixes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-settings-component/#community-remixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/tomayac&quot; rel=&quot;noopener&quot;&gt;@tomayac&lt;/a&gt; with their style regarding the
hover area for the checkbox labels! This version has no hover gap between
elements: &lt;a href=&quot;https://tomayac.github.io/gui-challenges/settings/dist/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; and
&lt;a href=&quot;https://github.com/tomayac/gui-challenges&quot; rel=&quot;noopener&quot;&gt;source&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Sign-in form best practices</title>
    <link href="https://web.dev/sign-in-form-best-practices/"/>
    <updated>2020-06-29T00:00:00Z</updated>
    <id>https://web.dev/sign-in-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;alGcULGtiv8&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;If users ever need to log in to your site, then good sign-in form design is
critical. This is especially true for people on poor connections, on mobile, in
a hurry, or under stress. Poorly designed sign-in forms get high bounce rates.
Each bounce could mean a lost and disgruntled user—not just a missed sign-in
opportunity.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--codelab&quot;&gt;
&lt;p&gt;&lt;strong&gt;Try it&lt;/strong&gt;!
If you would prefer to learn these best practices with a hands-on tutorial,
check out the &lt;a href=&quot;https://web.dev/codelab-sign-in-form-best-practices/&quot;&gt;Sign-in form best practices codelab&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example of a simple sign-in form that demonstrates all of the best practices:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;checklist&quot;&gt;Checklist &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#checklist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#meaningful-html&quot;&gt;Use meaningful HTML elements&lt;/a&gt;: &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;,
&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#label&quot;&gt;Label each input with a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use element attributes to &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#element-attributes&quot;&gt;access built-in browser
features&lt;/a&gt;: &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;autocomplete&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;,
&lt;code&gt;autofocus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Give input &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes stable values that don&#39;t change
between page loads or website deployments.&lt;/li&gt;
&lt;li&gt;Put sign-in &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#single-form&quot;&gt;in its own &amp;lt;form&amp;gt; element&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#submission&quot;&gt;Ensure successful form submission&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#new-password&quot;&gt;&lt;code&gt;autocomplete=&amp;quot;new-password&amp;quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#new-password&quot;&gt;&lt;code&gt;id=&amp;quot;new-password&amp;quot;&lt;/code&gt;&lt;/a&gt; for
the password input in a sign-up form, and for the new password in a reset-password form.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#current-password&quot;&gt;&lt;code&gt;autocomplete=&amp;quot;current-password&amp;quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#current-password&quot;&gt;&lt;code&gt;id=&amp;quot;current-password&amp;quot;&lt;/code&gt;&lt;/a&gt;
for a sign-in password input.&lt;/li&gt;
&lt;li&gt;Provide &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#show-password&quot;&gt;Show password&lt;/a&gt; functionality.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#accessible-password-inputs&quot;&gt;Use &lt;code&gt;aria-label&lt;/code&gt; and &lt;code&gt;aria-describedby&lt;/code&gt;&lt;/a&gt; for
password inputs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#no-double-inputs&quot;&gt;Don&#39;t double-up inputs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Design forms so the &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#keyboard-obstruction&quot;&gt;mobile keyboard doesn&#39;t obscure inputs or
buttons&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ensure forms are usable on mobile: use &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#size-text-correctly&quot;&gt;legible text&lt;/a&gt;,
and make sure inputs and buttons are &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#tap-targets&quot;&gt;large enough to work as touch targets&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#general-guidelines&quot;&gt;Maintain branding and style&lt;/a&gt; on your sign-up and sign-in pages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#analytics&quot;&gt;Test in the field as well as the lab&lt;/a&gt;: build page analytics,
interaction analytics, and user-centric performance measurement into your
sign-up and sign-in flow.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#devices&quot;&gt;Test across browsers and devices&lt;/a&gt;: form behaviour varies
significantly across platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This article is about frontend best practices. It does not explain how to build
backend services to authenticate users, store their credentials, or manage their
accounts. &lt;a href=&quot;https://cloud.google.com/blog/products/gcp/12-best-practices-for-user-account&quot; rel=&quot;noopener&quot;&gt;12 best practices for user account, authorization and password
management&lt;/a&gt;
outlines core principles for running your own backend. If you have users in
different parts of the world, you need to consider localizing your site&#39;s use of
third-party identity services as well as its content.&lt;/p&gt;
&lt;p&gt;There are also two relatively new APIs not covered in this article which can
help you build a better sign-in experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/web-otp/&quot;&gt;&lt;strong&gt;WebOTP&lt;/strong&gt;&lt;/a&gt;: to deliver one-time passcodes or
PIN numbers via SMS to mobile phones. This can allow users to select a phone
number as an identifier (no need to enter an email address!) and also enables
two-step verification for sign-in and one-time codes for payment confirmation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Credential Management&lt;/strong&gt;&lt;/a&gt;: to enable developers to store and retrieve password credentials and federated credentials programmatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id=&quot;meaningful-html&quot;&gt;Use meaningful HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#meaningful-html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use elements built for the job: &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;. These enable
built-in browser functionality, improve accessibility, and add meaning to your
markup.&lt;/p&gt;
&lt;h3 id=&quot;form&quot;&gt;Use &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#form&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You might be tempted to wrap inputs in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and handle input data
submission purely with JavaScript. It&#39;s generally better to use a plain old
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;
element. This makes your site accessible to screenreaders and other assistive
devices, enables a range of built-in browser features, makes it simpler to build
basic functional sign-in for older browsers, and can still work even if
JavaScript fails.&lt;/p&gt;
&lt;p id=&quot;single-form&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;A common mistake is to wrap a whole web page in a single form, but this is liable
to cause problems for browser password managers and autofill. Use a different
&amp;lt;form&amp;gt; for each UI component that needs a form. For example, if you have
sign-in and search on the same page, you should use two form elements.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;label&quot;&gt;Use &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#label&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To label an input, use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A tap or click on a label moves focus to its input. Associate a label with an
input by using the label&#39;s &lt;code&gt;for&lt;/code&gt; attribute with the input&#39;s &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Screenreaders announce label text when the label or the label&#39;s input gets
focus.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don&#39;t use placeholders as input labels. People are liable to forget what the
input was for once they&#39;ve started entering text, especially if they get
distracted (&amp;quot;Was I entering an email address, a phone number, or an account
ID?&amp;quot;). There are lots of other potential problems with placeholders: see &lt;a href=&quot;https://www.smashingmagazine.com/2018/06/placeholder-attribute/&quot; rel=&quot;noopener&quot;&gt;Don&#39;t
Use The Placeholder
Attribute&lt;/a&gt; and
&lt;a href=&quot;https://www.nngroup.com/articles/form-design-placeholders/&quot; rel=&quot;noopener&quot;&gt;Placeholders in Form Fields Are
Harmful&lt;/a&gt; if you&#39;re
unconvinced.&lt;/p&gt;
&lt;p&gt;It&#39;s probably best to put your labels above your inputs. This enables consistent
design across mobile and desktop and, according to &lt;a href=&quot;https://ai.googleblog.com/2014/07/simple-is-better-making-your-web-forms.html&quot; rel=&quot;noopener&quot;&gt;Google AI
research&lt;/a&gt;,
enables quicker scanning by users. You get full width labels and inputs, and you
don&#39;t need to adjust label and input width to fit the label text.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot showing form input label position on mobile: next to input and above input.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;253&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/k0ioJa9CqnMI8vyAvQPS.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Label and input width is limited when both are on the same line.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Open the &lt;a href=&quot;https://label-position.glitch.me/&quot; rel=&quot;noopener&quot;&gt;label-position&lt;/a&gt; Glitch on a
mobile device to see for yourself.&lt;/p&gt;
&lt;h3 id=&quot;button&quot;&gt;Use &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#button&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;
for buttons! Button elements provide accessible behaviour and built-in form
submission functionality, and they can easily be styled. There&#39;s no point in
using a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or some other element pretending to be a button.&lt;/p&gt;
&lt;p&gt;Ensure that the submit button says what it does. Examples include &lt;strong&gt;Create account&lt;/strong&gt; or
&lt;strong&gt;Sign in&lt;/strong&gt;, not &lt;strong&gt;Submit&lt;/strong&gt; or &lt;strong&gt;Start&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;submission&quot;&gt;Ensure successful form submission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#submission&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Help password managers understand that a form has been submitted. There are two
ways to do that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to a different page.&lt;/li&gt;
&lt;li&gt;Emulate navigation with &lt;code&gt;History.pushState()&lt;/code&gt; or &lt;code&gt;History.replaceState()&lt;/code&gt;,
and remove the password form.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With an &lt;code&gt;XMLHttpRequest&lt;/code&gt; or &lt;code&gt;fetch&lt;/code&gt; request, make sure that sign-in success is
reported in the response and handled by taking the form out of the DOM as well
as indicating success to the user.&lt;/p&gt;
&lt;p&gt;Consider disabling the &lt;strong&gt;Sign in&lt;/strong&gt; button once the user has tapped or clicked
it. &lt;a href=&quot;https://baymard.com/blog/users-double-click-online&quot; rel=&quot;noopener&quot;&gt;Many users click buttons multiple times&lt;/a&gt;
even on sites that are fast and responsive. That slows down interactions and
adds to server load.&lt;/p&gt;
&lt;p&gt;Conversely, don&#39;t disable form submission awaiting user input. For example,
don&#39;t disable the &lt;strong&gt;Sign in&lt;/strong&gt; button if users haven&#39;t entered their customer
PIN. Users may miss out something in the form, then try repeatedly tapping the
(disabled) &lt;strong&gt;Sign in&lt;/strong&gt; button and think it&#39;s not working. At the very least, if
you must disable form submission, explain to the user what&#39;s missing when they
click on the disabled button.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
The default type for a button in a form is &lt;code&gt;submit&lt;/code&gt;. If you want to add another
button in a form (for &lt;strong&gt;Show password&lt;/strong&gt;, for example) add &lt;code&gt;type=&amp;quot;button&amp;quot;&lt;/code&gt;.
Otherwise clicking or tapping on it will submit the form.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;no-double-inputs&quot;&gt;Don&#39;t double up inputs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#no-double-inputs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some sites force users to enter emails or passwords twice. That might reduce
errors for a few users, but causes extra work for &lt;em&gt;all&lt;/em&gt; users, and &lt;a href=&quot;https://uxmovement.com/forms/why-the-confirm-password-field-must-die/&quot; rel=&quot;noopener&quot;&gt;increases
abandonment
rates&lt;/a&gt;.
Asking twice also makes no sense where browsers autofill email addresses or
suggest strong passwords. It&#39;s better to enable users to confirm their email
address (you&#39;ll need to do that anyway) and make it easy for them to reset their
password if necessary.&lt;/p&gt;
&lt;h2 id=&quot;element-attributes&quot;&gt;Make the most of element attributes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#element-attributes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is where the magic really happens!
Browsers have multiple helpful built-in features that use input element attributes.&lt;/p&gt;
&lt;h3 id=&quot;autofocus&quot;&gt;Help users start faster &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#autofocus&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add an &lt;code&gt;autofocus&lt;/code&gt; attribute to the first input in your sign-in form. That makes
it clear where to start and, on desktop at least, means users don&#39;t have to
select the input to start typing.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot showing form input with autofocus.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;451&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/27x2icJSXCMdfWOjVAdR.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Autofocus provides clear visual focus on desktop.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;show-password&quot;&gt;Keep passwords private—but enable users to see them if they want &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#show-password&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Passwords inputs should have &lt;code&gt;type=&amp;quot;password&amp;quot;&lt;/code&gt; to hide password text and help the
browser understand that the input is for passwords. (Note that browsers use
&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#autofill&quot;&gt;a variety of techniques&lt;/a&gt; to understand input roles and decide
whether or not to offer to save passwords.)&lt;/p&gt;
&lt;p&gt;You should add a &lt;strong&gt;Show password&lt;/strong&gt; icon or button to enable users to check the
text they&#39;ve entered—and don&#39;t forget to add a &lt;strong&gt;Forgot password&lt;/strong&gt; link. See
&lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#password-display&quot;&gt;Enable password display&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Google sign-in form showing Show password icon.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;107&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 300px) 300px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/58suVe0HnSLaJvNjKY53.png?auto=format&amp;w=600 600w&quot; width=&quot;300&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Password input from the Google sign-in form: with &lt;strong&gt;Show password&lt;/strong&gt; icon and &lt;strong&gt;Forgot password&lt;/strong&gt; link.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;mobile-keyboards&quot;&gt;Give mobile users the right keyboard &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#mobile-keyboards&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;&amp;lt;input type=&amp;quot;email&amp;quot;&amp;gt;&lt;/code&gt; to give mobile users an appropriate keyboard and
enable basic built-in email address validation by the browser… no JavaScript
required!&lt;/p&gt;
&lt;p&gt;If you need to use a telephone number instead of an email address, &lt;code&gt;&amp;lt;input type=&amp;quot;tel&amp;quot;&amp;gt;&lt;/code&gt; enables a telephone keypad on mobile. You can also use the
&lt;code&gt;inputmode&lt;/code&gt; attribute where necessary: &lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt; is ideal for PIN
numbers. &lt;a href=&quot;https://css-tricks.com/everything-you-ever-wanted-to-know-about-inputmode/&quot; rel=&quot;noopener&quot;&gt;Everything You Ever Wanted to Know About
inputmode&lt;/a&gt;
has more detail.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
&lt;code&gt;type=&amp;quot;number&amp;quot;&lt;/code&gt; adds an up/down arrow to increment numbers, so don&#39;t use it for
numbers that aren&#39;t meant to be incremented, such as IDs and account numbers.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;keyboard-obstruction&quot;&gt;Prevent mobile keyboard from obstructing the &lt;strong&gt;Sign in&lt;/strong&gt; button &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#keyboard-obstruction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unfortunately, if you&#39;re not careful, mobile keyboards may cover your form or,
worse, partially obstruct the &lt;strong&gt;Sign in&lt;/strong&gt; button. Users may give up before
realizing what has happened.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of a sign-in form on an Android phone: one showing how the Submit button is obscured by the phone keyboard.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;360&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/rLo5sW9LBpTcJU7KNnb7.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The &lt;b&gt;Sign in&lt;/b&gt; button: now you see it, now you don&#39;t.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Where possible, avoid this by displaying only the email/phone and password inputs and &lt;strong&gt;Sign in&lt;/strong&gt; button at the top of your sign-in page. Put other content below.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a sign-in form on an Android phone: the Sign in button is not obscured by the phone keyboard.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;342&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 200px) 200px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/0OebKiAP4sTgaXbcbvYx.png?auto=format&amp;w=400 400w&quot; width=&quot;200&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The keyboard doesn&#39;t obstruct the &lt;b&gt;Sign in&lt;/b&gt; button.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;devices&quot;&gt;Test on a range of devices &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#devices&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You&#39;ll need to test on a range of devices for your target audience, and adjust
accordingly. BrowserStack enables &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;free testing for open source
projects&lt;/a&gt; on a range of real devices
and browsers.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of a sign-in form on iPhone 7, 8 and 11. On iPhone 7 and 8 the Sign in button is obscured by the phone keyboard, but not on iPhone 11&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;522&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/jToMlWgjS3J2WKmjs1hx.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The &lt;b&gt;Sign in&lt;/b&gt; button: obscured on iPhone 7 and 8, but not on iPhone 11.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;two-pages&quot;&gt;Consider using two pages &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#two-pages&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Some sites (including Amazon and eBay) avoid the problem by asking for
email/phone and password on two pages. This approach also simplifies the
experience: the user is only tasked with one thing at a time.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a sign-in form on the Amazon website: email/phone and password on two separate &amp;#x27;pages&amp;#x27;.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;385&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/CxpObjYZMs0MMFo66f4P.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Two-stage sign-in: email or phone, then password.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Ideally, this should be implemented with a single &amp;lt;form&amp;gt;. Use JavaScript
to initially display only the email input, then hide it and show the password input.
If you must force the user to navigate to a new page between entering their email and
password, the form on the second page should have a hidden input element with the
email value, to help enable password managers to store the correct value. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/form-styles-that-chromium-understands&quot; rel=&quot;noopener&quot;&gt;Password
Form Styles that Chromium Understands&lt;/a&gt;
provides a code example.&lt;/p&gt;
&lt;h3 id=&quot;autofill&quot;&gt;Help users to avoid re-entering data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#autofill&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can help browsers store data correctly and autofill inputs, so users don&#39;t
have to remember to enter email and password values. This is particularly important
on mobile, and crucial for email inputs, which get &lt;a href=&quot;https://www.formisimo.com/blog/conversion-rate-increases-57-with-form-analytics-case-study/&quot; rel=&quot;noopener&quot;&gt;high abandonment rates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are two parts to this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;autocomplete&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;type&lt;/code&gt; attributes help browsers understand
the role of inputs in order to store data that can later be used for autofill.
To allow data to be stored for autofill, modern browsers also require inputs to
have a stable &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; value (not randomly generated on each page load or
site deployment), and to be in a &amp;lt;form&amp;gt; with a &lt;code&gt;submit&lt;/code&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;autocomplete&lt;/code&gt; attribute helps browsers correctly autofill inputs using
stored data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For email inputs use &lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt;, since &lt;code&gt;username&lt;/code&gt; is recognized
by password managers in modern browsers—even though you should use &lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt;
and you may want to use &lt;code&gt;id=&amp;quot;email&amp;quot;&lt;/code&gt; and &lt;code&gt;name=&amp;quot;email&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For password inputs, use the appropriate &lt;code&gt;autocomplete&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; values to help browsers
differentiate between new and current passwords.&lt;/p&gt;
&lt;h3 id=&quot;new-password&quot;&gt;Use &lt;code&gt;autocomplete=&amp;quot;new-password&amp;quot;&lt;/code&gt; and &lt;code&gt;id=&amp;quot;new-password&amp;quot;&lt;/code&gt; for a new password &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#new-password&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;autocomplete=&amp;quot;new-password&amp;quot;&lt;/code&gt; and &lt;code&gt;id=&amp;quot;new-password&amp;quot;&lt;/code&gt; for the password input in a sign-up
form, or the new password in a change-password form.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;current-password&quot;&gt;Use &lt;code&gt;autocomplete=&amp;quot;current-password&amp;quot;&lt;/code&gt; and &lt;code&gt;id=&amp;quot;current-password&amp;quot;&lt;/code&gt; for an existing password &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#current-password&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;autocomplete=&amp;quot;current-password&amp;quot;&lt;/code&gt; and &lt;code&gt;id=&amp;quot;current-password&amp;quot;&lt;/code&gt; for the password input in a
sign-in form, or the input for the user&#39;s old password in a change-password form. This tells the
browser that you want it to use the current password that it has stored for the site.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a sign-up form:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;new-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;new-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For sign-in:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Browsers such as Chrome can use the browser&#39;s password manager to autofill fields in the sign-in
process for returning users. For these features to work, the browser needs to be able to
distinguish when a user changes their password.&lt;/p&gt;
&lt;p&gt;Specifically the form for changing the user&#39;s password should be cleared or hidden from the page
after the new password is set up. If the form for changing the user&#39;s password stays filled out on
the page after the password change has occurred, the browser may not be able to record the update.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;password-managers&quot;&gt;Support password managers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#password-managers&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Different browsers handle email autofill and password suggestion somewhat
differently, but the effects are much the same. On Safari 11 and above on desktop,
for example, the password manager is displayed, and then biometric
authentication (fingerprint or facial recognition) is used if available.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of three stages of sign-in process in Safari on desktop: password manager, biometric authentication, autofill.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;234&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/UjBRRYaLbX9bh3LDFcAM.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Sign-in with autocomplete—no text entry required!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Chrome on desktop displays email suggestions, shows the password manager, and autofills the password.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of four stages of sign-in process in Chrome on desktop: email completion, email suggestion, password manager, autofill on selection.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;232&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/mDm1cstWZB9jJDzMmzgE.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Autocomplete sign-in flow in Chrome 84.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Browser password and autofill systems are not simple. The algorithms for
guessing, storing and displaying values are not standardized, and vary from
platform to platform. For example, as pointed out by &lt;a href=&quot;https://hiddedevries.nl/en/blog/2018-01-13-making-password-managers-play-ball-with-your-login-form&quot; rel=&quot;noopener&quot;&gt;Hidde de
Vries&lt;/a&gt;:
&amp;quot;Firefox&#39;s password manager complements its heuristics with a
&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1119454&quot; rel=&quot;noopener&quot;&gt;recipe system&lt;/a&gt;.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cloudfour.com/thinks/autofill-what-web-devs-should-know-but-dont&quot; rel=&quot;noopener&quot;&gt;Autofill: What web devs should know, but
don&#39;t&lt;/a&gt;
has a lot more information about using &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;autocomplete&lt;/code&gt;. The &lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#inappropriate-for-the-control&quot; rel=&quot;noopener&quot;&gt;HTML
spec&lt;/a&gt;
lists all 59 possible values.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can help password managers by using different &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; values in sign-up and sign-in
forms, for the &lt;code&gt;form&lt;/code&gt; element itself, as well as any &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textarea&lt;/code&gt; elements.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;password-suggestions&quot;&gt;Enable the browser to suggest a strong password &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#password-suggestions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Modern browsers use heuristics to decide when to show the password manager UI and
suggest a strong password.&lt;/p&gt;
&lt;p&gt;Here&#39;s how Safari does it on desktop.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of Firefox password manager on desktop.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;229&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/B1DlZK0CllVjrOUbb5xB.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Password suggestion flow in Safari.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;(Strong unique password suggestion has been available in Safari since version 12.0.)&lt;/p&gt;
&lt;p&gt;Built-in browser password generators mean users and developers don&#39;t need
to work out what a &amp;quot;strong password&amp;quot; is. Since browsers can securely store
passwords and autofill them as necessary, there&#39;s no need for users to remember
or enter passwords. Encouraging users to take advantage of built-in browser
password generators also means they&#39;re more likely to use a unique, strong
password on your site, and less likely to reuse a password that could be
compromised elsewhere.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The downside with this approach is that there&#39;s no way to share passwords across
platforms. For example, a user may use Safari on their iPhone and Chrome on
their Windows laptop.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;required-fields&quot;&gt;Help save users from accidentally missing inputs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#required-fields&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add the &lt;code&gt;required&lt;/code&gt; attribute to both email and password fields.
Modern browsers automatically prompt and set focus for missing data.
No JavaScript required!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of desktop Firefox and Chrome for Android showing &amp;#x27;Please fill out this field&amp;#x27; prompt for missing data.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;392&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 600px) 600px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/n5Nr290upVmQGvlc263U.png?auto=format&amp;w=1200 1200w&quot; width=&quot;600&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Prompt and focus for missing data on Firefox for desktop (version 76)
    and Chrome for Android (version 83).
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;mobile-design&quot;&gt;Design for fingers and thumbs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#mobile-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The default browser size for just about everything relating to input elements
and buttons is too small, especially on mobile. This may seem obvious, but it&#39;s
a common problem with sign-in forms on many sites.&lt;/p&gt;
&lt;h3 id=&quot;tap-targets&quot;&gt;Make sure inputs and buttons are large enough &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#tap-targets&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The default size and padding for inputs and buttons is too small on desktop and
even worse on mobile.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of unstyled form in Chrome for desktop and Chrome for Android.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;434&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lJNO6w2dOyp4cYKl5b3y.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;According to &lt;a href=&quot;https://support.google.com/accessibility/android/answer/7101858?hl=en-GB&quot; rel=&quot;noopener&quot;&gt;Android accessibility
guidance&lt;/a&gt;
the recommended target size for touchscreen objects is 7–10 mm. Apple interface
guidelines suggest 48x48 px, and the W3C suggest &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Understanding/target-size.html&quot; rel=&quot;noopener&quot;&gt;at least 44x44 CSS
pixels&lt;/a&gt;. On that
basis, add (at least) about 15 px of padding to input elements and buttons for
mobile, and around 10 px on desktop. Try this out with a real mobile device and
a real finger or thumb. You should comfortably be able to tap each of your
inputs and buttons.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/tap-targets/&quot;&gt;Tap targets are not sized appropriately&lt;/a&gt;
Lighthouse audit can help you automate the process of detecting input elements
that are too small.&lt;/p&gt;
&lt;h4 id=&quot;design-for-thumbs&quot;&gt;Design for thumbs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#design-for-thumbs&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Search for &lt;a href=&quot;https://www.google.com/search?q=touch+target&quot; rel=&quot;noopener&quot;&gt;touch target&lt;/a&gt; and
you&#39;ll see lots of pictures of forefingers. However, in the real world, many
people use their thumbs to interact with phones. Thumbs are bigger than
forefingers, and control is less precise. All the more reason for adequately
sized touch targets.&lt;/p&gt;
&lt;h3 id=&quot;size-text-correctly&quot;&gt;Make text big enough &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#size-text-correctly&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As with size and padding, the default browser font size for input elements and
buttons is too small, particularly on mobile.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of unstyled form in Chrome on desktop and on Android.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;494&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/EeIsqWhLbot15p4SYpo2.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Default styling on desktop and mobile: input text is too small to be legible for many users.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Browsers on different platforms size fonts differently, so it&#39;s difficult to
specify a particular font size that works well everywhere. A quick survey of
popular websites shows sizes of 13–16 pixels on desktop: matching that physical size
is a good minimum for text on mobile.&lt;/p&gt;
&lt;p&gt;This means you need to use a larger pixel size on mobile: &lt;code&gt;16px&lt;/code&gt; on Chrome for
desktop is quite legible, but even with good vision it&#39;s difficult to read &lt;code&gt;16px&lt;/code&gt;
text on Chrome for Android. You can set different font pixel sizes for different
viewport sizes using &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/responsive#apply_media_queries_based_on_viewport_size&quot; rel=&quot;noopener&quot;&gt;media
queries&lt;/a&gt;.
&lt;code&gt;20px&lt;/code&gt; is about right on mobile—but you should test this out with friends or
colleagues who have low vision.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/font-size/&quot;&gt;Document doesn&#39;t use legible font sizes&lt;/a&gt;
Lighthouse audit can help you automate the process of detecting text that&#39;s too
small.&lt;/p&gt;
&lt;h3 id=&quot;size-margins-correctly&quot;&gt;Provide enough space between inputs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#size-margins-correctly&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add enough margin to make inputs work well as touch targets. In other words, aim
for about a finger width of margin.&lt;/p&gt;
&lt;h3 id=&quot;visible-inputs&quot;&gt;Make sure your inputs are clearly visible &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#visible-inputs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The default border styling for inputs makes them hard to see. They&#39;re almost
invisible on some platforms such as Chrome for Android.&lt;/p&gt;
&lt;p&gt;As well as padding, add a border: on a white background, a good general rule is
to use &lt;code&gt;#ccc&lt;/code&gt; or darker.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of styled form in Chrome on Android.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;525&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 250px) 250px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/OgDJ5V2N7imHXSBkN4pr.png?auto=format&amp;w=500 500w&quot; width=&quot;250&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Legible text, visible input borders, adequate padding and margins.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;built-in-validation&quot;&gt;Use built-in browser features to warn of invalid input values &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#built-in-validation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Browsers have built-in features to do basic form validation for inputs with a
&lt;code&gt;type&lt;/code&gt; attribute. Browsers warn when you submit a form with an invalid value,
and set focus on the problematic input.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a sign-in form in Chrome on desktop showing browser prompt and focus for an invalid email value.&quot; decoding=&quot;async&quot; height=&quot;290&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 300px) 300px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Phf9m5J66lIX9x5brzOL.png?auto=format&amp;w=600 600w&quot; width=&quot;300&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Basic built-in validation by the browser.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You can use the &lt;code&gt;:invalid&lt;/code&gt; CSS selector to highlight invalid data. Use
&lt;code&gt;:not(:placeholder-shown)&lt;/code&gt; to avoid selecting inputs with no content.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;input[type=email]:not(:placeholder-shown):invalid&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;outline-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Try out different ways of highlighting inputs with invalid values.&lt;/p&gt;
&lt;h2 id=&quot;javascript&quot;&gt;Use JavaScript where necessary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#javascript&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;password-display&quot;&gt;Toggle password display &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#password-display&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You should add a &lt;strong&gt;Show password&lt;/strong&gt; icon or button to enable users to check the
text they&#39;ve entered. &lt;a href=&quot;https://www.nngroup.com/articles/stop-password-masking/&quot; rel=&quot;noopener&quot;&gt;Usability
suffers&lt;/a&gt; when users
can&#39;t see the text they&#39;ve entered. Currently there&#39;s no built-in way to do
this, though &lt;a href=&quot;https://twitter.com/sw12/status/1251191795377156099&quot; rel=&quot;noopener&quot;&gt;there are plans for
implementation&lt;/a&gt;. You&#39;ll
need to use JavaScript instead.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img class=&quot;w-screenshot&quot; src=&quot;https://web.dev/sign-in-form-best-practices/show-password-google.png&quot; alt=&quot;Google sign-in form showing Show password icon.&quot; width=&quot;350&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Google sign-in form: with &lt;strong&gt;Show password&lt;/strong&gt; icon and &lt;strong&gt;Forgot password&lt;/strong&gt; link.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The following code uses a text button to add &lt;strong&gt;Show password&lt;/strong&gt; functionality.&lt;/p&gt;
&lt;p&gt;HTML:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Show password as plain text. Warning: this will display your password on the screen.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s the CSS to make the button look like plain text:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;button#toggle-password&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pointer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Media query isn&#39;t shown here. */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--mobile-font-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Display at the top right of the container */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;And the JavaScript for showing the password:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; passwordInput &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; togglePasswordButton &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;toggle-password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; togglePassword&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;togglePassword&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Hide password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;aria-label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Hide password.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Show password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;aria-label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Show password as plain text. &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Warning: this will display your password on the screen.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s the end result:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of sign-in form with Show password text &amp;#x27;button&amp;#x27;, in Safari on Mac and on iPhone 7.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;468&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/x4NP9JMf1KI8PapQ9JFh.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Sign-in form with &lt;strong&gt;Show password&lt;/strong&gt; text &#39;button&#39;, in Safari on Mac and iPhone 7.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;accessible-password-inputs&quot;&gt;Make password inputs accessible &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#accessible-password-inputs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;aria-describedby&lt;/code&gt; to outline password rules by giving it the ID of the
element that describes the constraints. Screenreaders provide the label text, the
input type (password), and then the description.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-describedby&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Eight or more characters with a mix of letters, numbers and symbols.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When you add &lt;strong&gt;Show password&lt;/strong&gt; functionality, make sure to include
an &lt;code&gt;aria-label&lt;/code&gt; to warn that the password will be displayed. Otherwise users may
inadvertently reveal passwords.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Show password as plain text.&lt;br /&gt;                    Warning: this will display your password on the screen.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  Show password&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can see both ARIA features in action in the following Glitch:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://webaim.org/techniques/forms/&quot; rel=&quot;noopener&quot;&gt;Creating Accessible Forms&lt;/a&gt; has more tips to help make forms accessible.&lt;/p&gt;
&lt;h3 id=&quot;validation&quot;&gt;Validate in realtime and before submission &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#validation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HTML form elements and attributes have built-in features for basic validation,
but you should also use JavaScript to do more robust validation while users are
entering data and when they attempt to submit the form.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Client-side validation helps users enter data and can avoid unnecessary server
load, but you must always validate and sanitize data on your backend.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://glitch.com/edit/#!/sign-in-form-codelab-5&quot; rel=&quot;noopener&quot;&gt;Step 5&lt;/a&gt; of the sign-in form
codelab uses the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#constraints&quot; rel=&quot;noopener&quot;&gt;Constraint Validation
API&lt;/a&gt; (which is
&lt;a href=&quot;https://caniuse.com/#feat=constraint-validation&quot; rel=&quot;noopener&quot;&gt;widely supported&lt;/a&gt;) to add
custom validation using built-in browser UI to set focus and display prompts.&lt;/p&gt;
&lt;p&gt;Find out more: &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms#use_javascript_for_more_complex_real-time_validation&quot; rel=&quot;noopener&quot;&gt;Use JavaScript for more complex real-time
validation&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;analytics&quot;&gt;Analytics and RUM &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#analytics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&amp;quot;What you cannot measure, you cannot improve&amp;quot; is particularly true for sign-up
and sign-in forms. You need to set goals, measure success, improve your site—and
repeat.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nngroup.com/articles/discount-usability-20-years/&quot; rel=&quot;noopener&quot;&gt;Discount usability
testing&lt;/a&gt; can be
helpful for trying out changes, but you&#39;ll need real-world data to really
understand how your users experience your sign-up and sign-in forms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page analytics&lt;/strong&gt;: sign-up and sign-in page views, bounce rates,
and exits.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interaction analytics&lt;/strong&gt;: &lt;a href=&quot;https://support.google.com/analytics/answer/6180923?hl=en&quot; rel=&quot;noopener&quot;&gt;goal
funnels&lt;/a&gt; (where do
users abandon your sign-in or sign-in flow?) and
&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/gtagjs/events&quot; rel=&quot;noopener&quot;&gt;events&lt;/a&gt;
(what actions do users take when interacting with your forms?)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website performance&lt;/strong&gt;: &lt;a href=&quot;https://web.dev/user-centric-performance-metrics&quot;&gt;user-centric
metrics&lt;/a&gt; (are your sign-up and sign-in
forms slow for some reason and, if so, what is the cause?).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may also want to consider implementing A/B testing in order to try out
different approaches to sign-up and sign-in, and staged rollouts to validate the
changes on a subset of users before releasing changes to all users.&lt;/p&gt;
&lt;h2 id=&quot;general-guidelines&quot;&gt;General guidelines &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#general-guidelines&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well designed UI and UX can reduce sign-in form abandonment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don&#39;t make users hunt for sign-in! Put a link to the sign-in form at the top
of the page, using well-understood wording such as &lt;strong&gt;Sign In&lt;/strong&gt;, &lt;strong&gt;Create Account&lt;/strong&gt;
or &lt;strong&gt;Register&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Keep it focused! Sign-up forms are not the place to distract people with
offers and other site features.&lt;/li&gt;
&lt;li&gt;Minimize sign-up complexity. Collect other user data (such as addresses or
credit card details) only when users see a clear benefit from providing that
data.&lt;/li&gt;
&lt;li&gt;Before users start on your sign-up form, make it clear what the value
proposition is. How do they benefit from signing in? Give users concrete
incentives to complete sign-up.&lt;/li&gt;
&lt;li&gt;If possible allow users to identify themselves with a mobile phone number
instead of an email address, since some users may not use email.&lt;/li&gt;
&lt;li&gt;Make it easy for users to reset their password, and make the &lt;strong&gt;Forgot your
password?&lt;/strong&gt; link obvious.&lt;/li&gt;
&lt;li&gt;Link to your terms of service and privacy policy documents: make it clear to
users from the start how you safeguard their data.&lt;/li&gt;
&lt;li&gt;Include the logo and name of your company or organization on your signup and
sign-in pages, and make sure that language, fonts and styles match the rest of
your site. Some forms don&#39;t feel like they belong to the same site as other
content, especially if they have a significantly different URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;resources&quot;&gt;Keep learning &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-in-form-best-practices/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms&quot; rel=&quot;noopener&quot;&gt;Create Amazing Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/08/best-practices-for-mobile-form-design/&quot; rel=&quot;noopener&quot;&gt;Best Practices For Mobile Form Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/more-capable-form-controls&quot;&gt;More capable form controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webaim.org/techniques/forms/&quot; rel=&quot;noopener&quot;&gt;Creating Accessible Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api&quot; rel=&quot;noopener&quot;&gt;Streamlining the Sign-in Flow Using Credential Management API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/web-otp/&quot;&gt;Verify phone numbers on the web with the WebOTP API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/photos/_XFObcM_7KU&quot; rel=&quot;noopener&quot;&gt;Meghan Schiereck&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Building a Tabs component</title>
    <link href="https://web.dev/building-a-tabs-component/"/>
    <updated>2021-02-17T00:00:00Z</updated>
    <id>https://web.dev/building-a-tabs-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this post I want to share thinking on building a Tabs component for the web
that is responsive, supports multiple device inputs, and works across browsers.
Try the &lt;a href=&quot;https://gui-challenges.web.app/tabs/dist/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/IBDNCMVCysfM9fYC9bnP.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    &lt;a href=&quot;https://gui-challenges.web.app/tabs/dist/&quot;&gt;Demo&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you prefer video, here&#39;s a YouTube version of this post:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;mMBcHcvxuuA&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tabs are a common component of design systems but can take many shapes and
forms. First there were desktop tabs built on &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; element, and now we have
buttery mobile components that animate content based on physics properties.
They&#39;re all trying to do the same thing: save space.&lt;/p&gt;
&lt;p&gt;Today, the essentials of a tabs user experience is a button navigation area
which toggles the visibility of content in a display frame. Many different
content areas share the same space, but are conditionally presented based on the
button selected in the navigation.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the collage is quite chaotic due to the huge diversity of styles the web has applied to the component concept&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/eAaQ44VAmzVOO9Cy5Wc8.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A collage of tab component web design styles from over the past 10 years
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;web-tactics&quot;&gt;Web Tactics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#web-tactics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All in all I found this component pretty straightforward to build, thanks to a
few critical web platform features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scroll-snap-points&lt;/code&gt; for elegant swipe and keyboard interactions with
appropriate scroll stop positions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Deep_linking&quot; rel=&quot;noopener&quot;&gt;Deep links&lt;/a&gt; via URL hashes for
browser handled in-page scroll anchoring and sharing support&lt;/li&gt;
&lt;li&gt;Screen reader support with &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;id=&amp;quot;#hash&amp;quot;&lt;/code&gt; element markup&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt; for enabling crossfade transitions and instant
in-page scrolling&lt;/li&gt;
&lt;li&gt;The in-draft &lt;code&gt;@scroll-timeline&lt;/code&gt; web feature for dynamically underlining and
color changing the selected tab&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;markup&quot;&gt;The HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#markup&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fundamentally, the UX here is: click a link, have the URL represent the nested
page state, and then see the content area update as the browser scrolls to the
matching element.&lt;/p&gt;
&lt;p&gt;There are some structural content members in there: links and &lt;code&gt;:target&lt;/code&gt;s. We
need a list of links, which a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; is great for, and a list of &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;
elements, which a &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is great for. Each link hash will match a section,
letting the browser scroll things via anchoring.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/Pr8BrPDjq8ga9NyoHLJk.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    A link button is clicked, sliding in focused content
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For example, clicking a link automatically focuses the &lt;code&gt;:target&lt;/code&gt; article in
Chrome 89, no JS required. The user can then scroll the article content with
their input device as always. It&#39;s complimentary content, as indicated in the
markup.&lt;/p&gt;
&lt;p&gt;I used the following markup to organize the tabs:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I can establish connections between the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; elements with
&lt;code&gt;href&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; properties like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#responsive&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#accessible&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#overscroll&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#more&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;responsive&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;accessible&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;overscroll&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;more&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I next filled the articles with mixed amounts of lorem, and the links with a
mixed length and image set of titles. With content to work with, we can begin
layout.&lt;/p&gt;
&lt;h3 id=&quot;overscroll&quot;&gt;Scrolling layouts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#overscroll&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are 3 different types of scroll areas in this component:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The navigation &lt;b style=&quot;color: #FF00E2;&quot;&gt;(pink)&lt;/b&gt; is horizontally
scrollable&lt;/li&gt;
&lt;li&gt;The content area &lt;b style=&quot;color: #008CFF;&quot;&gt;(blue)&lt;/b&gt; is horizontally
scrollable&lt;/li&gt;
&lt;li&gt;Each article item &lt;b style=&quot;color: #2FD800;&quot;&gt;(green)&lt;/b&gt; is vertically
scrollable.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;3 colorful boxes with color matching directional arrows which outline the scroll areas and show the direction they&amp;#x27;ll scroll.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;450&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/qVmUKMwbeoCBffP0aY55.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;There&#39;s 2 different types of elements involved with scrolling:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;A window&lt;/strong&gt; &lt;br /&gt;A box with defined dimensions that has the &lt;code&gt;overflow&lt;/code&gt;
property style.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;An oversized surface&lt;/strong&gt; &lt;br /&gt;In this layout, it&#39;s the list containers: nav
links, section articles, and article contents.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;tabs-layout&quot;&gt;&lt;code&gt;&amp;lt;snap-tabs&amp;gt;&lt;/code&gt; layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-layout&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The top level layout I chose was flex (Flexbox). I set the direction to
&lt;code&gt;column&lt;/code&gt;, so the header and section are vertically ordered. This is our first
scroll window, and it hides everything with overflow hidden. The header and
section will employ overscroll soon, as individual zones.&lt;/p&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;HTML&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;CSS&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;snap-tabs&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* establish primary containing box */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp; &gt; section&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* be pushy about consuming all space */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp; &gt; header&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* defend against &amp;lt;section&gt; needing 100% */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;flex-shrink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;/* fixes cross browser quarks */&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;min-block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; fit-content&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Pointing back to the colorful 3-scroll diagram:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; is now prepared to be the &lt;b style=&quot;color: #FF00E2;&quot;&gt;(pink)&lt;/b&gt;
scroll container.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is prepared to be the &lt;b style=&quot;color: #008CFF;&quot;&gt;(blue)&lt;/b&gt; scroll
container.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The frames I&#39;ve highlighted below with
&lt;a href=&quot;https://a.nerdy.dev/gimme-visbug&quot; rel=&quot;noopener&quot;&gt;VisBug&lt;/a&gt; help us see the &lt;strong&gt;windows&lt;/strong&gt; the
scroll containers have created.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the header and section elements have hotpink overlays on them, outlining the space they take up in the component&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;620&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/Fyl0rTuETjORBigkIBx5.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;tabs-header&quot;&gt;Tabs &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-header&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The next layout is nearly the same: I use flex to create vertical ordering.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;HTML&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;snap-indicator&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;snap-tabs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;CSS&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;.snap-indicator&lt;/code&gt; should travel horizontally with the group of links, and
this header layout helps set that stage. No absolute positioned elements here!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the nav and span.indicator elements have hotpink overlays on them, outlining the space they take up in the component&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;368&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/EGNIrpw4gEzIZEcsAt5R.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Next, the scroll styles. It turns out that we can share the scroll styles
between our 2 horizontal scroll areas (header and section), so I made a utility
class, &lt;code&gt;.scroll-snap-x&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.scroll-snap-x&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* browser decide if x is ok to scroll and show bars on, y hidden */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* prevent scroll chaining on x scroll */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* scrolling should snap children on x */&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;scrollbar-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;::-webkit-scrollbar&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each needs overflow on the x axis, scroll containment to trap overscroll, hidden
scrollbars for touch devices and lastly scroll-snap for locking content
presentation areas. Our keyboard tab order is accessible and any interactions guide
focus naturally. Scroll snap containers also get a nice carousel style
interaction from their keyboard.&lt;/p&gt;
&lt;h4 id=&quot;tabs-header-nav&quot;&gt;Tabs header &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-header-nav&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The nav links need to be laid out in a line, with no line breaks, vertically
centered, and each link item should snap to the scroll-snap container. Swift
work for 2021 CSS!&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;HTML&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;CSS&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;nav&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;&amp;amp; a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; inline-flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; nowrap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Each link styles and sizes itself, so the nav layout only needs to specify
direction and flow. Unique widths on nav items makes the transition between tabs
fun as the indicator adjusts its width to the new target. Depending on how many
elements are in here, the browser will render a scrollbar or not.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the a elements of the nav have hotpink overlays on them, outlining the space they take up in the component as well as where they overflow&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;327&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/P7Vm3EvhO1wrTK1boU6y.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;tabs-section&quot;&gt;Tabs &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-section&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This section is a flex item and needs to be the dominant consumer of space. It
also needs to create columns for the articles to be placed into. Again, swift
work for CSS 2021! The &lt;code&gt;block-size: 100%&lt;/code&gt; stretches this element to fill the
parent as much as possible, then for its own layout, it creates a series of
columns that are &lt;code&gt;100%&lt;/code&gt; the width of the parent. Percentages work great here
because we&#39;ve written strong constraints on the parent.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;HTML&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;CSS&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-auto-flow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-auto-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;It&#39;s as if we&#39;re saying &amp;quot;expand vertically as much as possible, in a pushy way&amp;quot;
(remember the header we set to &lt;code&gt;flex-shrink: 0&lt;/code&gt;: it is a defense against this
expansion push), which sets the row height for a set of full height columns. The
&lt;code&gt;auto-flow&lt;/code&gt; style tells the grid to always lay children out in a horizontal
line, no wrapping, exactly what we want; to overflow the parent window.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the article elements have hotpink overlays on them, outlining the space they take up in the component and where they overflow&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;512&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/FYroCMocutCGg1X8kfdG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;I find these difficult to wrap my head around sometimes! This section element is
fitting into a box, but also created a set of boxes. I hope the visuals and
explanations are helping.&lt;/p&gt;
&lt;h4 id=&quot;tabs-article&quot;&gt;Tabs &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-article&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The user should be able to scroll the article content, and the scrollbars should
only show up if there is overflow. These article elements are in a neat
position. They are simultaneously a scroll parent and a scroll child. The
browser is really handling some tricky touch, mouse, and keyboard interactions
for us here.&lt;/p&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;HTML&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  ...&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;CSS&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-y&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior-y&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;I chose to have the articles snap within their parent scroller. I really like
how the navigation link items and the article elements snap to the inline-start
of their respective scroll containers. It looks and feels like a harmonious
relationship.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the article element and it&amp;#x27;s child elements have hotpink overlays on them, outlining the space they take up in the component and the direction they overflow&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;808&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/O8gJp7AxBty8yND4fFGr.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The article is a grid child, and it&#39;s size is predetermined to be the viewport
area we want to provide scroll UX. This means I don&#39;t need any height or width
styles here, I just need to define how it overflows. I set overflow-y to auto,
and then also trap the scroll interactions with the handy overscroll-behavior
property.&lt;/p&gt;
&lt;h4 id=&quot;scroll-areas-recap&quot;&gt;3 scroll areas recap &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#scroll-areas-recap&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Below I&#39;ve chosen in my system settings to &amp;quot;always show scrollbars&amp;quot;. I think
it&#39;s doubly important for the layout to work with this setting turned on, as it
is for me to review the layout and the scroll orchestration.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the 3 scrollbars are set to show, now consuming layout space, and our component still looks great&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;607&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/6I6TI9PI4rvrJ9lr8T99.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;I think seeing the scrollbar gutter in this component helps clearly show where
the scroll areas are, the direction they support, and how they interact with
each other. Consider how each of these scroll window frames also are flex or
grid parents to a layout.&lt;/p&gt;
&lt;p&gt;DevTools can help us visualize this:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;the scroll areas have grid and flexbox tool overlays, outlining the space they take up in the component and the direction they overflow&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;455&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/GFJwc3IggHY4G5fBMiu9.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    Chromium Devtools, showing the flexbox nav element layout full of anchor elements,
    the grid section layout full of article elements, and the article
    elements full of paragraphs and a heading element.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The scroll layouts are complete: snapping, deep linkable, and keyboard
accessible. Strong foundation for UX enhancements, style and delight.&lt;/p&gt;
&lt;h4 id=&quot;feature-highlight&quot;&gt;Feature highlight &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#feature-highlight&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Scroll snapped children maintain their locked position during resize. This means
JavaScript won&#39;t need to bring anything into view on device rotate or browser
resize. Try it out in Chromium DevTools &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode&quot; rel=&quot;noopener&quot;&gt;Device
Mode&lt;/a&gt; by
selecting any mode other than &lt;strong&gt;Responsive&lt;/strong&gt;, and then resizing the device frame.
Notice the element stays in view and locked with its content. This has been
available since Chromium updated their implementation to match the spec. Here&#39;s
a &lt;a href=&quot;https://web.dev/snap-after-layout/&quot;&gt;blog post&lt;/a&gt; about it.&lt;/p&gt;
&lt;h3 id=&quot;animation&quot;&gt;Animation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#animation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The goal of the animation work here is to clearly link interactions with UI
feedback. This helps guide or assist the user through to their (hopefully)
seamless discovery of all the content. I&#39;ll be adding motion with purpose and
conditionally. Users can now specify &lt;a href=&quot;https://web.dev/prefers-reduced-motion/&quot;&gt;their motion
preferences&lt;/a&gt; in their operating system,
and I thoroughly enjoy responding to their preferences in my interfaces.&lt;/p&gt;
&lt;p&gt;I&#39;ll be linking a tab underline with the article scroll position. Snapping isn&#39;t
only pretty alignment, it&#39;s also anchoring the start and end of an animation.
This keeps the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, which acts like a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Mini-map&quot; rel=&quot;noopener&quot;&gt;mini-map&lt;/a&gt;, connected to the content.
We&#39;ll be checking the user&#39;s motion preference from both CSS and JS. There&#39;s a
few great places to be considerate!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/D4zfhetqvhqlcPdTRtLZ.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;scroll-behavior&quot;&gt;Scroll behavior &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#scroll-behavior&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;There&#39;s an opportunity to enhance the motion behavior of both &lt;code&gt;:target&lt;/code&gt; and
&lt;code&gt;element.scrollIntoView()&lt;/code&gt;. By default, it&#39;s instant. The browser just sets the
scroll position. Well, what if we want to transition to that scroll position,
instead of blink there?&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-preference&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.scroll-snap-x&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;scroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; smooth&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/Q4JDplhM9gEd4PoiXqs6.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;Since we&#39;re introducing motion here, and motion that the user doesn&#39;t control
(like scrolling), we only apply this style if the user has no preference in
their operating system around reduced motion. This way, we only introduce scroll
motion for folks who are OK with it.&lt;/p&gt;
&lt;h4 id=&quot;tabs-indicator&quot;&gt;Tabs indicator &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#tabs-indicator&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The purpose of this animation is to help associate the indicator with the state
of the content. I decided to color crossfade &lt;code&gt;border-bottom&lt;/code&gt; styles for users
who prefer reduced motion, and a scroll linked sliding + color fade animation
for users who are OK with motion.&lt;/p&gt;
&lt;p&gt;In Chromium Devtools, I can toggle the preference and demonstrate the 2
different transition styles. I had a ton of fun building this.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/NVoLHgjGjf7fZw5HFpF6.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reduce&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;snap-tabs &gt; header a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;border-block-end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--indicator-size&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; solid &lt;span class=&quot;token function&quot;&gt;hsl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--accent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; / 0%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; color .7s ease&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; border-color .5s ease&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;:is(:target,:active,[active])&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--text-active-color&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;border-block-end-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;hsl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--accent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;snap-tabs .snap-indicator&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I hide the &lt;code&gt;.snap-indicator&lt;/code&gt; when the user prefers reduced motion since I don&#39;t
need it anymore. Then I replace it with &lt;code&gt;border-block-end&lt;/code&gt; styles and a
&lt;code&gt;transition&lt;/code&gt;. Also notice in the tabs interaction that the active nav item not
only has a brand underline highlight, but it&#39;s text color also is darker. The
active element has higher text color contrast and a bright underlight accent.&lt;/p&gt;
&lt;p&gt;Just a few extra lines of CSS will make someone feel seen (in the sense that
we&#39;re thoughtfully respecting their motion preferences). I love it.&lt;/p&gt;
&lt;h4 id=&quot;scroll-timeline&quot;&gt;&lt;code&gt;@scroll-timeline&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#scroll-timeline&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the above section I showed you how I handle the reduced motion crossfade
styles, and in this section I&#39;ll show you how I linked the indicator and a
scroll area together. This is some fun experimental stuff up next. I hope you&#39;re
as excited as me.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; matches&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;motionOK &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;(prefers-reduced-motion: no-preference)&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I first check the user&#39;s motion preference from JavaScript. If the result of
this is &lt;code&gt;false&lt;/code&gt;, meaning the user prefers reduced motion, then we&#39;ll not run any
of the scroll linking motion effects.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;motionOK&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// motion based animation code&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;At the time of writing this, the &lt;a href=&quot;https://caniuse.com/css-scroll-timeline&quot; rel=&quot;noopener&quot;&gt;browser support for
&lt;code&gt;@scroll-timeline&lt;/code&gt;&lt;/a&gt; is none. It&#39;s a
&lt;a href=&quot;https://drafts.csswg.org/scroll-animations-1/&quot; rel=&quot;noopener&quot;&gt;draft spec&lt;/a&gt; with only
experimental implementations. It has a polyfill though, which I use in this
demo.&lt;/p&gt;
&lt;h5 id=&quot;scrolltimeline&quot;&gt;&lt;code&gt;ScrollTimeline&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#scrolltimeline&quot;&gt;#&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;While CSS and JavaScript can both create scroll timelines, I opted into
JavaScript so I could use live element measurements in the animation.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sectionScrollTimeline &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ScrollTimeline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  scrollSource&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; tabsection&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// snap-tabs &gt; section&lt;/span&gt;&lt;br /&gt;  orientation&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;inline&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;token comment&quot;&gt;// scroll in the direction letters flow&lt;/span&gt;&lt;br /&gt;  fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;both&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;              &lt;span class=&quot;token comment&quot;&gt;// bi-directional linking&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I want 1 thing to follow another&#39;s scroll position, and by creating a
&lt;code&gt;ScrollTimeline&lt;/code&gt; I define the driver of the scroll link, the &lt;code&gt;scrollSource&lt;/code&gt;.
Normally an animation on the web runs against a global time frame tick, but with
a custom &lt;code&gt;sectionScrollTimeline&lt;/code&gt; in memory, I can change all that.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;tabindicator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    width&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;both&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    timeline&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; sectionScrollTimeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Before I get into the keyframes of the animation, I think it&#39;s important to
point out the follower of the scrolling, &lt;code&gt;tabindicator&lt;/code&gt;, will be animated based
on a custom timeline, our section&#39;s scroll. This completes the linkage, but is
missing the final ingredient, stateful points to animate between, also known as
keyframes.&lt;/p&gt;
&lt;h4 id=&quot;dynamic-keyframes&quot;&gt;Dynamic keyframes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#dynamic-keyframes&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;There&#39;s a really powerful pure declarative CSS way to animate with
&lt;code&gt;@scroll-timeline&lt;/code&gt;, but the animation I chose to do was too dynamic. There&#39;s no
way to transition between &lt;code&gt;auto&lt;/code&gt; width, and there&#39;s no way to dynamically create
a number of keyframes based on children length.&lt;/p&gt;
&lt;p&gt;JavaScript knows how to get that information though, so we&#39;ll iterate over the
children ourselves and grab the computed values at runtime:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;tabindicator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    transform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;offsetLeft&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;translateX(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;offsetLeft&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    width&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;offsetWidth&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;offsetWidth&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;both&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    timeline&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; sectionScrollTimeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For each &lt;code&gt;tabnavitem&lt;/code&gt;, destructure the &lt;code&gt;offsetLeft&lt;/code&gt; position and return a string
that uses it as a &lt;code&gt;translateX&lt;/code&gt; value. This creates 4 transform keyframes for the
animation. The same is done for width, each is asked what its dynamic width is
and then it&#39;s used as a keyframe value.&lt;/p&gt;
&lt;p&gt;Here&#39;s example output, based on my fonts and browser preferences:&lt;/p&gt;
&lt;p&gt;TranslateX Keyframes:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;offsetLeft&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;translateX(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;offsetLeft&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// results in 4 array items, which represent 4 keyframe states&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// [&quot;translateX(0px)&quot;, &quot;translateX(121px)&quot;, &quot;translateX(238px)&quot;, &quot;translateX(464px)&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Width Keyframes:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;offsetWidth&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;offsetWidth&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// results in 4 array items, which represent 4 keyframe states&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// [&quot;121px&quot;, &quot;117px&quot;, &quot;226px&quot;, &quot;67px&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To summarize the strategy, the tab indicator will now animate across 4 keyframes
depending on the scroll snap position of the section scroller. The snap points
create clear delineation between our keyframes and really add to the
synchronized feel of the animation.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;active tab and inactive tab are shown with VisBug overlays which show passing contrast scores for both&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 540px) 540px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/vS06HQ1YTsbMKSFTIPl2iogUQP73/jV5X2JMkgUQSIpcivvTJ.png?auto=format&amp;w=1080 1080w&quot; width=&quot;540&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The user drives the animation with their interaction, seeing the width and
position of the indicator change from one section to the next, tracking
perfectly with scroll.&lt;/p&gt;
&lt;p&gt;You may not have noticed, but I&#39;m very proud of the transition of color as the
highlighted navigation item becomes selected.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/qoxGO8SR2t6GPuCWhwvu.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;The unselected lighter grey appears even more pushed back when the highlighted
item has more contrast. It&#39;s common to transition color for text, like on hover
and when selected, but it&#39;s next-level to transition that color on scroll,
synchronized with the underline indicator.&lt;/p&gt;
&lt;p&gt;Here&#39;s how I did it:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;navitem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  navitem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      color&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;        item &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; navitem&lt;br /&gt;          &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;var(--text-active-color)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;var(--text-color)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      duration&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      fill&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;both&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      timeline&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; sectionScrollTimeline&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Each tab nav link needs this new color animation, tracking the same scroll
timeline as the underline indicator. I use the same timeline as before: since
it&#39;s role is to emit a tick on scroll, we can use that tick in any type of
animation we want. As I did before, I create 4 keyframes in the loop, and return
colors.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;  item &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; navitem&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;var(--text-active-color)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;var(--text-color)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// results in 4 array items, which represent 4 keyframe states&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// [&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;var(--text-active-color)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;var(--text-color)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;var(--text-color)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&quot;var(--text-color)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The keyframe with the color &lt;code&gt;var(--text-active-color)&lt;/code&gt; highlights the link, and
it&#39;s otherwise a standard text color. The nested loop there makes it relatively
straightforward, as the outer loop is each nav item, and the inner loop is each
navitem&#39;s personal keyframes. I check if the outer loop element is the same as
the inner loop one, and use that to know when it&#39;s selected.&lt;/p&gt;
&lt;p&gt;I had a lot of fun writing this. So much.&lt;/p&gt;
&lt;h3 id=&quot;js&quot;&gt;Even more JavaScript enhancements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#js&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It&#39;s worth a reminder that the core of what I&#39;m showing you here works without
JavaScript. With that said, let&#39;s see how we can enhance it when JS is
available.&lt;/p&gt;
&lt;h4 id=&quot;deep-links&quot;&gt;Deep links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#deep-links&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Deep links are more of a mobile term, but I think the intent of the deep link is
met here with tabs in that you can share a URL directly to a tab&#39;s contents. The
browser will in-page navigate to the ID that is matched in the URL hash. I found
this &lt;code&gt;onload&lt;/code&gt; handler made the effect across platforms.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollLeft &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;scroll-end-synchronization&quot;&gt;Scroll end synchronization &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#scroll-end-synchronization&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Our users aren&#39;t always clicking or using a keyboard, sometimes they&#39;re just
free scrolling, as they should be able to. When the section scroller stops
scrolling, wherever it lands needs to be matched in the top navigation bar.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/syltOES9Gxc0ihOsgTIV.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;Here&#39;s how I wait for scroll end:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollEndTimer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollEndTimer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;determineActiveTabSection&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Whenever the sections are being scrolled, clear the section timeout if there,
and start a new one. When sections stop being scrolled, don&#39;t clear the timeout,
and fire 100ms after resting. When it fires, call function that seeks to figure
out where the user stopped.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;determineActiveTabSection&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollLeft &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; tabsection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientWidth&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; matchingNavItem &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tabnavitems&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  matchingNavItem &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setActiveTab&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matchingNavItem&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Assuming the scroll snapped, dividing the current scroll position from the width
of the scroll area should result in an integer and not a decimal. I then try to
grab a navitem from our cache via this calculated index, and if it finds
something, I send the match to be set active.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;setActiveTab&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;tabbtn&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  tabnav&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;:scope a[active]&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;active&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  tabbtn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;active&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  tabbtn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scrollIntoView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Setting the active tab starts by clearing any currently active tab, then giving
the incoming nav item the active state attribute. The call to &lt;code&gt;scrollIntoView()&lt;/code&gt;
has a fun interaction with CSS that is worth noting.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/nsiyMgZ2QGF2fx9gVRgu.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.scroll-snap-x&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; no-preference&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;scroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; smooth&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In the horizontal scroll snap utility CSS, we&#39;ve
&lt;a href=&quot;https://drafts.csswg.org/css-nesting-1/&quot; rel=&quot;noopener&quot;&gt;nested&lt;/a&gt; a media query which applies
&lt;code&gt;smooth&lt;/code&gt; scrolling if the user is motion tolerant. JavaScript can freely make
calls to scroll elements into view, and CSS can manage the UX declaratively.
Quite the delightful little match they make sometimes.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that you know how I did it, how would you?! This makes for some fun
component architecture! Who&#39;s going to make the 1st version with slots in their
favorite framework? 🙂&lt;/p&gt;
&lt;p&gt;Let&#39;s diversify our approaches and learn all the ways to build on the web.
Create a &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/argyleink&quot; rel=&quot;noopener&quot;&gt;tweet me&lt;/a&gt;
your version, and I&#39;ll add it to the &lt;a href=&quot;https://web.dev/building-a-tabs-component/#community-remixes&quot;&gt;Community remixes&lt;/a&gt;
section below.&lt;/p&gt;
&lt;h2 id=&quot;community-remixes&quot;&gt;Community remixes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-tabs-component/#community-remixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/devnook&quot; rel=&quot;noopener&quot;&gt;@devnook&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/rob_dodson&quot; rel=&quot;noopener&quot;&gt;@rob_dodson&lt;/a&gt;, &amp;amp; &lt;a href=&quot;https://twitter.com/DasSurma&quot; rel=&quot;noopener&quot;&gt;@DasSurma&lt;/a&gt; with Web Components: &lt;a href=&quot;https://developers.google.com/web/fundamentals/web-components/examples/howto-tabs&quot; rel=&quot;noopener&quot;&gt;article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Hands-on with Portals: seamless navigation on the web</title>
    <link href="https://web.dev/hands-on-portals/"/>
    <updated>2019-05-06T00:00:00Z</updated>
    <id>https://web.dev/hands-on-portals/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;Making sure your pages load fast is key to delivering a good user experience.
But one area we often overlook is page transitions—what our users see when
they move between pages.&lt;/p&gt;
&lt;p&gt;A new web platform API proposal called &lt;a href=&quot;https://github.com/WICG/portals&quot; rel=&quot;noopener&quot;&gt;Portals&lt;/a&gt; aims to
help with this by streamlining the experience as users navigate &lt;em&gt;across&lt;/em&gt; your
site.&lt;/p&gt;
&lt;p&gt;See Portals in action:&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/hands-on-portals/portals_vp9.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/hands-on-portals/portals_h264.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
 &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Seamless embeds and navigation with Portals. Created by &lt;a href=&quot;https://twitter.com/argyleink&quot;&gt;Adam Argyle&lt;/a&gt;.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;what-portals-enable&quot;&gt;What Portals enable &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#what-portals-enable&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Single Page Applications (SPAs) offer nice transitions
but come at the cost of higher complexity to build.
Multi-page Applications (MPAs) are much easier to build,
but you end up with blank screens between pages.&lt;/p&gt;
&lt;p&gt;Portals offer the best of both worlds:
the low complexity of an MPA with the seamless transitions of an SPA.
Think of them like an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; in that they allow for embedding,
but unlike an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;,
they also come with features to navigate to their content.&lt;/p&gt;
&lt;p&gt;Seeing is believing:
please first check out what we showcased at Chrome Dev Summit 2018:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;Ai4aZ9Jbsys&quot; videoStartAt=&quot;1081&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;With classic navigations, users have to wait with a blank screen
until the browser finishes rendering the destination.
With Portals, users get to experience an animation,
while the &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; pre-renders content and creates a seamless navigation experience.&lt;/p&gt;
&lt;p&gt;Before Portals, we could have rendered another page using an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. We could also have added animations to move the frame around the page. But an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; won&#39;t let you navigate into its content. Portals close this gap, enabling interesting use cases.&lt;/p&gt;
&lt;h2 id=&quot;try-out-portals&quot;&gt;Try out Portals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#try-out-portals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;enable-flags&quot;&gt;Enabling via about://flags &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#enable-flags&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Try out Portals in Chrome 85 and later versions by flipping an experimental flag:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable the &lt;code&gt;about://flags/#enable-portals&lt;/code&gt; flag for same-origin navigations.&lt;/li&gt;
&lt;li&gt;For testing out cross-origin navigations, enable the &lt;code&gt;about://flags/#enable-portals-cross-origin&lt;/code&gt; flag in addition.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this early phase of the Portals experiment,
we also recommend using a completely separate user data directory for your tests
by setting the
&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/user_data_dir.md#command-line&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;--user-data-dir&lt;/code&gt;&lt;/a&gt;
command line flag.
Once Portals are enabled, confirm in DevTools that you have the new shiny &lt;code&gt;HTMLPortalElement&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;A screenshot of the DevTools console showing the HTMLPortalElement&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;252&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/aUrrqhzMxaEX865Fk5zX.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;implement-portals&quot;&gt;Implement Portals &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#implement-portals&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let&#39;s walk through a basic implementation example.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Create a portal with the wikipedia page, and embed it&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// (like an iframe). You can also use the &amp;lt;portal&gt; tag instead.&lt;/span&gt;&lt;br /&gt;portal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;src &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://en.wikipedia.org/wiki/World_Wide_Web&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;...&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// When the user touches the preview (embedded portal):&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// do fancy animation, e.g. expand …&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// and finish by doing the actual transition.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// For the sake of simplicity, this snippet will navigate&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// on the `onload` event of the Portals element.&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;load&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;   portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It&#39;s that simple. Try this code in the DevTools console, the wikipedia page should open up.&lt;/p&gt;
&lt;img alt=&quot;A gif of preview portal style demo&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;557&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/rp6i8ngGJkvooXJ9WmLK.gif?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;If you wanted to build something like we showed at Chrome Dev Summit which works just like the demo above,
the following snippet will be of interest.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Adding some styles with transitions&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; style &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;style&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&lt;br /&gt;  portal {&lt;br /&gt;    position:fixed;&lt;br /&gt;    width: 100%;&lt;br /&gt;    height: 100%;&lt;br /&gt;    opacity: 0;&lt;br /&gt;    box-shadow: 0 0 20px 10px #999;&lt;br /&gt;    transform: scale(0.4);&lt;br /&gt;    transform-origin: bottom left;&lt;br /&gt;    bottom: 20px;&lt;br /&gt;    left: 20px;&lt;br /&gt;    animation-name: fade-in;&lt;br /&gt;    animation-duration: 1s;&lt;br /&gt;    animation-delay: 2s;&lt;br /&gt;    animation-fill-mode: forwards;&lt;br /&gt;  }&lt;br /&gt;  .portal-transition {&lt;br /&gt;    transition: transform 0.4s;&lt;br /&gt;  }&lt;br /&gt;  @media (prefers-reduced-motion: reduce) {&lt;br /&gt;    .portal-transition {&lt;br /&gt;      transition: transform 0.001s;&lt;br /&gt;    }&lt;br /&gt;  }&lt;br /&gt;  .portal-reveal {&lt;br /&gt;    transform: scale(1.0) translateX(-20px) translateY(20px);&lt;br /&gt;  }&lt;br /&gt;  @keyframes fade-in {&lt;br /&gt;    0%   { opacity: 0; }&lt;br /&gt;    100% { opacity: 1; }&lt;br /&gt;  }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Let&#39;s navigate into the WICG Portals spec page&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;src &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;https://wicg.github.io/portals/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Add a class that defines the transition. Consider using&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// `prefers-reduced-motion` media query to control the animation.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// https://developers.google.com/web/updates/2019/03/prefers-reduced-motion&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal-transition&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Animate the portal once user interacts&lt;/span&gt;&lt;br /&gt;  portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal-reveal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;transitionend&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;propertyName &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;transform&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Activate the portal once the transition has completed&lt;/span&gt;&lt;br /&gt;    portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; portal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It is also easy to do feature detection to progressively enhance a website using Portals.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;HTMLPortalElement&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// If this is a platform that have Portals...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If you want to quickly experience what Portals feel like, try using
&lt;a href=&quot;https://uskay-portals-demo.glitch.me/&quot; rel=&quot;noopener&quot;&gt;uskay-portals-demo.glitch.me&lt;/a&gt;.
Be sure you access it with Chrome 85 or later versions and turn on the &lt;a href=&quot;https://web.dev/hands-on-portals/#enable-flags&quot;&gt;experimental flag&lt;/a&gt;!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter a URL you want to preview.&lt;/li&gt;
&lt;li&gt;The page will then be embedded as a &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
&lt;li&gt;Click on the preview.&lt;/li&gt;
&lt;li&gt;The preview will be activated after an animation.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;A gif of using the glitch demo of using Portals&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;547&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Y4Vv6v3DAAC32IsiWS7g.gif?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;check-out-the-spec&quot;&gt;Check out the spec &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#check-out-the-spec&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We are actively discussing
&lt;a href=&quot;https://wicg.github.io/portals/&quot; rel=&quot;noopener&quot;&gt;the Portals spec&lt;/a&gt; in the Web Incubation Community Group (WICG).
To quickly get up to speed, take a look at some of the
&lt;a href=&quot;https://github.com/WICG/portals/blob/master/key-scenarios.md&quot; rel=&quot;noopener&quot;&gt;key scenarios&lt;/a&gt;.
These are the three important features to familiarize yourself with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/portals/#the-portal-element&quot; rel=&quot;noopener&quot;&gt;The &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element:&lt;/a&gt; The HTML element itself. The API is very simple. It consists of the &lt;code&gt;src&lt;/code&gt; attribute, the &lt;code&gt;activate&lt;/code&gt; function and an interface for messaging (&lt;code&gt;postMessage&lt;/code&gt;). &lt;code&gt;activate&lt;/code&gt; takes an optional argument to pass data to the &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; upon activation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/portals/#the-portalhost-interface&quot; rel=&quot;noopener&quot;&gt;The &lt;code&gt;portalHost&lt;/code&gt; interface:&lt;/a&gt; Adds a &lt;code&gt;portalHost&lt;/code&gt; object to the &lt;code&gt;window&lt;/code&gt; object. This lets you check if the page is embedded as a &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element. It also provides an interface for messaging (&lt;code&gt;postMessage&lt;/code&gt;) back to the host.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wicg.github.io/portals/#the-portalactivateevent-interface&quot; rel=&quot;noopener&quot;&gt;The PortalActivateEvent interface:&lt;/a&gt; An event that fires when the &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; is activated. There is a neat function called &lt;code&gt;adoptPredecessor&lt;/code&gt; which you can use to retrieve the previous page as a &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element. This allows you to create seamless navigations and composed experiences between two pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&#39;s look beyond the basic usage pattern. Here is a non-exhaustive list of what you can achieve with Portals along with sample code.&lt;/p&gt;
&lt;h3 id=&quot;customize-the-style-when-embedded-as-a-lessportalgreater-element&quot;&gt;Customize the style when embedded as a &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#customize-the-style-when-embedded-as-a-lessportalgreater-element&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Detect whether this page is hosted in a portal&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;portalHost&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Customize the UI when being embedded as a portal&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;messaging-between-the-lessportalgreater-element-and-portalhost&quot;&gt;Messaging between the &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element and &lt;code&gt;portalHost&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#messaging-between-the-lessportalgreater-element-and-portalhost&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Send message to the portal element&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;someKey&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; someValue&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ORIGIN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Receive message via window.portalHost&lt;/span&gt;&lt;br /&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;portalHost&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;someKey&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// handle the event&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;activating-the-lessportalgreater-element-and-receiving-the-portalactivate-event&quot;&gt;Activating the &lt;code&gt;&amp;lt;portal&amp;gt;&lt;/code&gt; element and receiving the &lt;code&gt;portalactivate&lt;/code&gt; event &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#activating-the-lessportalgreater-element-and-receiving-the-portalactivate-event&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// You can optionally add data to the argument of the activate function&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;somekey&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;somevalue&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// The portal content will receive the portalactivate event&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// when the activate happens&lt;/span&gt;&lt;br /&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portalactivate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Data available as evt.data&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;retrieving-the-predecessor&quot;&gt;Retrieving the predecessor &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#retrieving-the-predecessor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Listen to the portalactivate event&lt;/span&gt;&lt;br /&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;portalactivate&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// ... and creatively use the predecessor&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; portal &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; evt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;adoptPredecessor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;someElm&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;knowing-your-page-was-adopted-as-a-predecessor&quot;&gt;Knowing your page was adopted as a predecessor &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#knowing-your-page-was-adopted-as-a-predecessor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// The activate function returns a Promise.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// When the promise resolves, it means that the portal has been activated.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// If this document was adopted by it, then window.portalHost will exist.&lt;/span&gt;&lt;br /&gt;portal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Check if this document was adopted into a portal element.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;portalHost&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// You can start communicating with the portal element&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// i.e. listen to messages&lt;/span&gt;&lt;br /&gt;    window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;portalHost&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token comment&quot;&gt;// handle the event&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;By combining all of the features supported by Portals,
you can build really fancy user experiences.
For instance, the demo below demonstrates how Portals can enable a seamless user experience
between a website and third party embed content.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;4JkipxFVE9k&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Interested in this demo?
&lt;a href=&quot;https://github.com/WICG/portals/tree/master/demos/portal-embed-demo&quot; rel=&quot;noopener&quot;&gt;Fork it on GitHub&lt;/a&gt;
and build your own version!&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;use-cases-and-plans&quot;&gt;Use cases and plans &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#use-cases-and-plans&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We hope you liked this brief tour of Portals! We can&#39;t wait to see what you can come up with. For instance, you might want to start using Portals for non-trivial navigations such as: pre-rendering the page for your best-seller product from a product category listing page.&lt;/p&gt;
&lt;p&gt;Another important thing to know is that Portals can be used in cross-origin navigations, just like an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. So, if you have multiple websites that cross reference one another, you can also use Portals to create seamless navigations between two different websites. This cross-origin use case is very unique to Portals, and can even improve the user experience of SPAs.&lt;/p&gt;
&lt;h2 id=&quot;feedback-welcome&quot;&gt;Feedback welcome &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/hands-on-portals/#feedback-welcome&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Portals are ready for experimentation in Chrome 85 and later versions. Feedback from the community is crucial to the design of new APIs, so please try it out and tell us what you think! If you have any feature requests or feedback, please head over to the &lt;a href=&quot;https://github.com/WICG/portals/issues&quot; rel=&quot;noopener&quot;&gt;WICG GitHub repo&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Yusuke Utsunomiya</name>
    </author>
  </entry>
  
  <entry>
    <title>Building a sidenav component</title>
    <link href="https://web.dev/building-a-sidenav-component/"/>
    <updated>2021-01-21T00:00:00Z</updated>
    <id>https://web.dev/building-a-sidenav-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this post I want to share with you how I prototyped a Sidenav component for the web that
is responsive, stateful, supports keyboard navigation, works with and without JavaScript,
and works across browsers. Try the &lt;a href=&quot;https://gui-challenges.web.app/sidenav/dist/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you prefer video, here&#39;s a YouTube version of this post:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;uiZqDLqjGRY&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It&#39;s tough building a responsive navigation system. Some users will be on a keyboard,
some will have powerful desktops, and some will visit from a small mobile device.
Everyone visiting should be able to open and close the menu.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/gui-sidenav/desktop-demo-1080p.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    Desktop to mobile responsive layout demo
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/gui-sidenav/mobile-demo-1080p.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    Light and dark theme down on iOS and Android
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;web-tactics&quot;&gt;Web Tactics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#web-tactics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this component exploration I had the joy of combining a few critical web platform features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSS &lt;a href=&quot;https://web.dev/building-a-sidenav-component/#target-psuedo-class&quot;&gt;&lt;code&gt;:target&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS &lt;a href=&quot;https://web.dev/building-a-sidenav-component/#grid-stack&quot;&gt;grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS &lt;a href=&quot;https://web.dev/building-a-sidenav-component/#transforms&quot;&gt;transforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CSS Media Queries for viewport and user preference&lt;/li&gt;
&lt;li&gt;JS for &lt;code&gt;focus&lt;/code&gt; &lt;a href=&quot;https://web.dev/building-a-sidenav-component/#ux-enhancements&quot;&gt;UX enhancements&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My solution has one sidebar and toggles only when at a &amp;quot;mobile&amp;quot; viewport of &lt;code&gt;540px&lt;/code&gt; or less.
&lt;code&gt;540px&lt;/code&gt; will be our breakpoint for switching between the mobile interactive layout and the static desktop layout.&lt;/p&gt;
&lt;h3 id=&quot;target-psuedo-class&quot;&gt;CSS &lt;code&gt;:target&lt;/code&gt; pseudo-class &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#target-psuedo-class&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; link sets the url hash to &lt;code&gt;#sidenav-open&lt;/code&gt; and the other to empty (&lt;code&gt;&#39;&#39;&lt;/code&gt;).
Lastly, an element has the &lt;code&gt;id&lt;/code&gt; to match the hash:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-close&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;aside&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Clicking each of these links changes the hash state of our page URL,
then with a pseudo-class I show and hide the sidenav:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-open:target&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/hash-change.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;grid-stacks&quot;&gt;CSS Grid &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#grid-stacks&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the past, I only used absolute or fixed position
sidenav layouts and components. Grid though, with its &lt;code&gt;grid-area&lt;/code&gt; syntax,
lets us assign multiple elements to the same row or column.&lt;/p&gt;
&lt;h4 id=&quot;stacks&quot;&gt;Stacks &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#stacks&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The primary layout element &lt;code&gt;#sidenav-container&lt;/code&gt; is a grid that creates 1 row and 2 columns,
1 of each are named &lt;code&gt;stack&lt;/code&gt;. When space is constrained, CSS assigns all of the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element&#39;s
children to the same grid name, placing all elements into the same space, creating a stack.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [stack] 1fr / min-content [stack] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;min-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vh&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-container &gt; *&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; stack&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/responsive-stack-demo-1080p.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;menu-backdrop&quot;&gt;Menu backdrop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#menu-backdrop&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; is the animating element that contains the side navigation. It has
2 children: the navigation container &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; named &lt;code&gt;[nav]&lt;/code&gt; and a backdrop &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;
named &lt;code&gt;[escape]&lt;/code&gt;, which is used to close the menu.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [nav] 2fr [escape] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Adjust &lt;code&gt;2fr&lt;/code&gt; &amp;amp; &lt;code&gt;1fr&lt;/code&gt; to find the ratio you like for the menu overlay and its negative space close button.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/overlay-escape-ratio.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    A demo of what happens when you change the ratio.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;transforms&quot;&gt;CSS 3D transforms &amp;amp; transitions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#transforms&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our layout is now stacked at a mobile viewport size. Until I add some new styles,
it&#39;s overlaying our article by default. Here&#39;s some UX I&#39;m shooting for in this next section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Animate open and close&lt;/li&gt;
&lt;li&gt;Only animate with motion if the user is OK with that&lt;/li&gt;
&lt;li&gt;Animate &lt;code&gt;visibility&lt;/code&gt; so keyboard focus doesn&#39;t enter the offscreen element&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I begin to implement motion animations, I want to start with accessibility top of mind.&lt;/p&gt;
&lt;h4 id=&quot;accessible-motion&quot;&gt;Accessible motion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#accessible-motion&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Not everyone will want a slide out motion experience. In our solution this preference
is applied by adjusting a &lt;code&gt;--duration&lt;/code&gt; CSS variable inside a media query. This media query value represents
a user&#39;s operating system preference for motion (if available).&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;--duration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .6s&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reduce&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;--duration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ms&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/prefers-reduced-motion.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    A demo of the interaction with and without duration applied.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Now when our sidenav is sliding open and closed, if a user prefers reduced motion,
I instantly move the element into view, maintaining state without motion.&lt;/p&gt;
&lt;h4 id=&quot;transition-transform-translate&quot;&gt;Transition, transform, translate &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#transition-transform-translate&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id=&quot;sidenav-out-(default)&quot;&gt;Sidenav out (default) &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#sidenav-out-(default)&quot;&gt;#&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;To set the default state of our sidenav on mobile to an offscreen state,
I position the element with &lt;code&gt;transform: translateX(-110vw)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note, I added another &lt;code&gt;10vw&lt;/code&gt; to the typical offscreen code of &lt;code&gt;-100vw&lt;/code&gt;,
to ensure the &lt;code&gt;box-shadow&lt;/code&gt; of the sidenav doesn&#39;t peek into the main viewport when it&#39;s hidden.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-110vw&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;will-change&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      transform &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--easeOutExpo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      visibility 0s linear &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h5 id=&quot;sidenav-in&quot;&gt;Sidenav in &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#sidenav-in&quot;&gt;#&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;When the &lt;code&gt;#sidenav&lt;/code&gt; element matches as &lt;code&gt;:target&lt;/code&gt;, set the &lt;code&gt;translateX()&lt;/code&gt; position to homebase &lt;code&gt;0&lt;/code&gt;,
and watch as CSS slides the element from its out position of &lt;code&gt;-110vw&lt;/code&gt;, to its &amp;quot;in&amp;quot;
position of &lt;code&gt;0&lt;/code&gt; over &lt;code&gt;var(--duration)&lt;/code&gt; when the URL hash is changed.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;#sidenav-open:target&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      transform &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--easeOutExpo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;transition-visibility&quot;&gt;Transition visibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#transition-visibility&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The goal now is to hide the menu from screenreaders when it&#39;s out,
so systems don&#39;t put focus into an offscreen menu. I accomplish this by setting a
visibility transition when the &lt;code&gt;:target&lt;/code&gt; changes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When going in, don&#39;t transition visibility; be visible right away so I can see the element slide in and accept focus.&lt;/li&gt;
&lt;li&gt;When going out, transition visibility but delay it, so it flips to &lt;code&gt;hidden&lt;/code&gt; at the end of the transition out.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;ux-enhancements&quot;&gt;Accessibility UX enhancements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#ux-enhancements&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;links&quot;&gt;Links &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#links&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This solution relies on changing the URL in order for the state to be managed.
Naturally, the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element should be used here, and it gets some nice accessibility
features for free. Let&#39;s adorn our interactive elements with labels clearly articulating intent.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-close&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/keyboard-voiceover.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    A demo of the voiceover and keyboard interaction UX.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Now our primary interaction buttons clearly state their intent for both mouse and keyboard.&lt;/p&gt;
&lt;h4 id=&quot;:is(:hover-:focus)&quot;&gt;&lt;code&gt;:is(:hover, :focus)&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#:is(:hover-:focus)&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This handy CSS functional pseudo-selector lets us swiftly be inclusive
with our hover styles by sharing them with focus as well.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.hamburger:is(:hover, :focus) svg &gt; line&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;hsl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--brandHSL&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;sprinkle-on-javascript&quot;&gt;Sprinkle on JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#sprinkle-on-javascript&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id=&quot;press-escape-to-close&quot;&gt;Press &lt;code&gt;escape&lt;/code&gt; to close &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#press-escape-to-close&quot;&gt;#&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;The &lt;code&gt;Escape&lt;/code&gt; key on your keyboard should close the menu right? Let&#39;s wire that up.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sidenav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-open&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;sidenav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;code &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Escape&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h5 id=&quot;focus-ux&quot;&gt;Focus UX &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#focus-ux&quot;&gt;#&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;The next snippet helps us put focus on the open and close buttons after
they open or close. I want to make toggling easy.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;sidenav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;transitionend&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; isOpen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-open&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  isOpen&lt;br /&gt;      &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-close&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-button&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When the sidenav opens, focus the close button. When the sidenav closes,
focus the open button. I do this by calling &lt;code&gt;focus()&lt;/code&gt; on the element in JavaScript.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that you know how I did it, how would you?! This makes for some fun component architecture!
Who&#39;s going to make the 1st version with slots? 🙂&lt;/p&gt;
&lt;p&gt;Let&#39;s diversify our
approaches and learn all the ways to build on the web. Create a &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/argyleink&quot; rel=&quot;noopener&quot;&gt;tweet me&lt;/a&gt; your version, and I&#39;ll add it to the
&lt;a href=&quot;https://web.dev/building-a-sidenav-component/#community-remixes&quot;&gt;Community remixes&lt;/a&gt; section below.&lt;/p&gt;
&lt;h2 id=&quot;community-remixes&quot;&gt;Community remixes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-sidenav-component/#community-remixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/_developit&quot; rel=&quot;noopener&quot;&gt;@_developit&lt;/a&gt; with custom elements: &lt;a href=&quot;https://glitch.com/edit/#!/app-drawer&quot; rel=&quot;noopener&quot;&gt;demo &amp;amp; code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/mayeedwin1&quot; rel=&quot;noopener&quot;&gt;@mayeedwin1&lt;/a&gt; with HTML/CSS/JS: &lt;a href=&quot;https://glitch.com/edit/#!/maye-gui-challenge&quot; rel=&quot;noopener&quot;&gt;demo &amp;amp; code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/a_nurella&quot; rel=&quot;noopener&quot;&gt;@a_nurella&lt;/a&gt; with a Glitch Remix: &lt;a href=&quot;https://glitch.com/edit/#!/sidenav-with-adam&quot; rel=&quot;noopener&quot;&gt;demo &amp;amp; code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/EvroMalarkey&quot; rel=&quot;noopener&quot;&gt;@EvroMalarkey&lt;/a&gt; with HTML/CSS/JS: &lt;a href=&quot;https://evromalarkey.github.io/scrollsnap-drawer/index.html&quot; rel=&quot;noopener&quot;&gt;demo &amp;amp; code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Codelab: Building a Sidenav component</title>
    <link href="https://web.dev/codelab-building-a-sidenav-component/"/>
    <updated>2021-01-21T00:00:00Z</updated>
    <id>https://web.dev/codelab-building-a-sidenav-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This codelab teaches you how to build a responsive slide out side navigation layout component
on the web. We&#39;ll build the component as we go, starting with HTML, then CSS,
then JavaScript.&lt;/p&gt;
&lt;p&gt;Check out my blog post &lt;a href=&quot;https://web.dev/building-a-sidenav-component&quot;&gt;Building a Sidenav component&lt;/a&gt;
to learn about the CSS web platform features chosen for building this component.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;uiZqDLqjGRY&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#setup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; to make the project editable.&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;app/index.html&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;html&quot;&gt;HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, get the essentials of the HTML setup so there&#39;s content and some boxes to work with.&lt;/p&gt;
&lt;p&gt;Drop the following HTML into the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; holds the navigation menu as a complimentary element to &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, which
holds the primary page content.&lt;/p&gt;
&lt;p&gt;Next we&#39;ll fill in those semantic elements with the rest of the page content.&lt;/p&gt;
&lt;p&gt;Add a navigation element, some navigation links and a close link inside the &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;My&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Dashboard&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Profile&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Preferences&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Archive&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Settings&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Accessibility&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Theme&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Admin&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Links go great inside &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; elements, and &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; elements go great in &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; sidebars.
Still, there&#39;s more we can do to improve.&lt;/p&gt;
&lt;p&gt;In the main content element, add a header and an article to semantically hold the layout content.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;viewBox&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0 0 50 40&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;line&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;10%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;10%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;line&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;50%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;line&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;100%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;90%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;90%&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Site Title&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    {put some placeholder content here}&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can ignore the &lt;code&gt;The attribute name of [ viewBox ] must be in lowercase&lt;/code&gt; lint error from Glitch.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The header has the menu open link. The aside has the close button.
We&#39;ll show and hide elements based on viewport size soon.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element, we pasted a placeholder sentence. Replace `` with your own stuff, or paste the lorem provided below:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Totam Header&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cum consectetur, necessitatibus velit officia ut impedit veritatis temporibus soluta? Totam odit cupiditate facilis nisi sunt hic necessitatibus voluptatem nihil doloribus! Enim.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit rerum, amet odio explicabo voluptas eos cum libero, ex esse quasi optio incidunt soluta eligendi labore error corrupti! Dolore, cupiditate porro.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Subhead Totam Odit&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit rerum, amet odio explicabo voluptas eos cum libero, ex esse quasi optio incidunt soluta eligendi labore error corrupti! Dolore, cupiditate porro.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit rerum, amet odio explicabo voluptas eos cum libero, ex esse quasi optio incidunt soluta eligendi labore error corrupti! Dolore, cupiditate porro.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Subhead&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit rerum, amet odio explicabo voluptas eos cum libero, ex esse quasi optio incidunt soluta eligendi labore error corrupti! Dolore, cupiditate porro.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugit rerum, amet odio explicabo voluptas eos cum libero, ex esse quasi optio incidunt soluta eligendi labore error corrupti! Dolore, cupiditate porro.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This content, and it&#39;s length, are what will cause the page to be scrollable when it exceeds your viewport height.&lt;/p&gt;
&lt;p&gt;So far you&#39;ve added an aside element, with a nav, links and a way to close the sidenav.
You also added a header, a way to open the sidenav, and an article to the main element.
This is clean, semantic and pretty timeless already,
but we can make it cleaner and clearer for everyone. The open link in the sidenav
could be more clearly marked.&lt;/p&gt;
&lt;p&gt;Add attributes &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;aria-label&lt;/code&gt; to the header open link element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The open SVG icon could be more clearly marked as well.
Add the following attributes to the SVG inside the open link element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;viewBox&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0 0 50 40&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;viewBox&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;0 0 50 40&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;presentation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;focusable&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;trigram for heaven symbol&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The close link in the sidenav could be more clearly marked.
Add attributes &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;aria-label&lt;/code&gt; to the sidenav close link element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;While all links do not require titles or special labels, I believe these to be an exception
since they&#39;re being used to change the URL, like a link does, but they don&#39;t have any text content of their own.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;css&quot;&gt;CSS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#css&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Time to layout the elements. The main content
and sidenav are direct children of the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, so that&#39;s a good place to start.&lt;/p&gt;
&lt;p&gt;Add the following CSS into &lt;code&gt;css/sidenav.css&lt;/code&gt; so the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element lays out the children.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [stack] 1fr / min-content [stack] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp; &gt; :matches(aside, main)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; stack&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This layout essentially says: Create a named row &lt;code&gt;stack&lt;/code&gt; with everything in it,
and 2 columns in that row, the 2nd of which is named &lt;code&gt;stack&lt;/code&gt; also. The 1st column
should be sized by its minimal content needs, and the 2nd column can take up the rest.
Then, if in a constrained viewport of &lt;code&gt;540px&lt;/code&gt; or less, put the sidenav and main content elements
into the same row and column, resulting in them being on top of each other in a 1x1 grid.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/responsive-stack-demo-1080p.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;With this responsive stacking functionality as a base, we can now leverage the state of the URL bar to toggle the
visibility and transition style of the sidenav.&lt;/p&gt;
&lt;p&gt;Update the &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; element back in &lt;code&gt;app/index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;aside&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;aside&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This enables CSS to match an element and the URL hash together. This is important for &lt;code&gt;:target&lt;/code&gt; usage.
Now the element&#39;s ID can match the URL hash we&#39;ll be setting with &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;p&gt;In addition, for easier JavaScript targeting,
add IDs for key elements that control the sidenav. First, add an ID to the sidenav open link:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#sidenav-open&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;hamburger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Open Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Next, add an ID to the sidenav close link:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;del class=&quot;highlight-line highlight-line-remove&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/del&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sidenav-close&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Close Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;That wraps up the macro &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; responsive stacking layout, plus ties us into the URL bar.
Let&#39;s keep going!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; has a neat layout too. It has 2 children, a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; which is the paper-like looking
component that slides out, and a closing &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; link element that sets the url has to &lt;code&gt;#&lt;/code&gt;.
The link is invisible to the right of the paper slide out nav; it&#39;s so folks can &amp;quot;click off&amp;quot; the visual
component to dismiss it.&lt;/p&gt;
&lt;p&gt;Add the following CSS to &lt;code&gt;css/sidenav.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [nav] 2fr [escape] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;I thought the ratio and names were a really nice touch here,
where grid could shine and give a designer a lot of control.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/overlay-escape-ratio.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;Next I need to conditionally overlay the main content and persist my position
through any document scrolling. This is a great job for &lt;code&gt;position: sticky&lt;/code&gt; and
some &lt;code&gt;overscroll-behavior&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add the following styles for the sidenav:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [nav] 2fr [escape] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; sticky&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;max-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vh&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;overscroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* not keyboard accessible when closed */&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Those styles ensure the sidenav is the viewport height, scrolls vertically
and contains the scroll. Very importantly, it hides the element. By default,
when the viewport is &lt;code&gt;540px&lt;/code&gt; or smaller, hide that sidenav. Unless!&lt;/p&gt;
&lt;p&gt;Add a &lt;code&gt;:target&lt;/code&gt; pseudo-selector to the &lt;code&gt;#sidenav-open&lt;/code&gt; element:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;:target&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When the ID of that element and the URL bar are the same,
set &lt;code&gt;visibility&lt;/code&gt; to &lt;code&gt;visible&lt;/code&gt;. Go ahead and open the side menu after scrolling the page,
or try scrolling the page while the sidenav is open. What do you think?&lt;/p&gt;
&lt;p&gt;Add the following CSS to the bottom of &lt;code&gt;app/sidenav.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-button,&lt;br /&gt;#sidenav-close&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transparent&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;-webkit-touch-callout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;user-select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manipulation&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;These styles target our open and close buttons, specifies their tap and touch styles,
and also hides them when viewports are &lt;code&gt;540px&lt;/code&gt; or larger.&lt;/p&gt;
&lt;p&gt;For some flair, let&#39;s add CSS transforms with respectful accessibility.
Add the following CSS to &lt;code&gt;css/sidenav.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;#sidenav-open&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;--easeOutExpo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.16&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;--duration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .6s&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  ...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 540px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    ...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-110vw&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;will-change&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      transform &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--easeOutExpo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      visibility 0s linear &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;:target&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--duration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--easeOutExpo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reduce&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;--duration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ms&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/atoms-sandbox.google.com.a.appspot.com/prefers-reduced-motion.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    A demo of the interaction with and without duration applied
    based on the `prefers-reduced-motion` media query.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;sprinkle-in-some-javascript&quot;&gt;Sprinkle in some JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#sprinkle-in-some-javascript&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;Escape&lt;/code&gt; key should close the menu. Add this JS to &lt;code&gt;js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sidenav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-open&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;sidenav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;code &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Escape&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This listens for a key event on the sidenav element.
If it&#39;s &lt;code&gt;Escape&lt;/code&gt;, it sets the URL hash to empty, making the sidenav transition out.&lt;/p&gt;
&lt;p&gt;This next piece of UX JS is focus management. I want to make opening and closing easy, so I wait
until the sidenav has finished a transition of some kind, then cross check it against the
URL hash to determine if it&#39;s in or out. I then use JavaScript to set the focus on the button
complimentary to the one they just pressed.&lt;/p&gt;
&lt;p&gt;Add the following JavaScript to &lt;code&gt;js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; closenav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-close&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; opennav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-button&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;sidenav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;transitionend&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;propertyName &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;transform&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; isOpen &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hash &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;#sidenav-open&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  isOpen&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; closenav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; opennav&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;try-it-out&quot;&gt;Try it out &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#try-it-out&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To preview the site, press &lt;strong&gt;View App&lt;/strong&gt;. Then press
&lt;strong&gt;Fullscreen&lt;/strong&gt;
&lt;img src=&quot;https://web.dev/images/glitch/fullscreen.svg&quot; alt=&quot;fullscreen&quot; style=&quot;padding: 4px 8px; opacity: .5; border: 1px solid #c3c3c3; border-radius: 5px;&quot; /&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-sidenav-component/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That&#39;s a wrap up for the needs I had with the component. Feel free to build upon
it, drive it with JavaScript state instead of the URL, and in general make it yours! There&#39;s always more to add
or more use cases to cover.&lt;/p&gt;
&lt;p&gt;Open up &lt;code&gt;css/brandnav.css&lt;/code&gt; to check out the non-layout related styles that I applied to
this component. I didn&#39;t feel it was important to the feature set I was focusing on, and I
hoped that separating styles from layout would encourage copy and paste. There could
be more learning for you there!&lt;/p&gt;
&lt;p&gt;How do you make slide out responsive sidenav components?
Do you ever have more than 1, like one on both sides? I&#39;d love to feature your solution
in a YouTube video, make sure to &lt;a href=&quot;https://twitter.com/argyleink&quot; rel=&quot;noopener&quot;&gt;tweet at me&lt;/a&gt; or comment in YouTube with your code, it&#39;ll help everyone
out!&lt;/p&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Payment and address form best practices</title>
    <link href="https://web.dev/payment-and-address-form-best-practices/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/payment-and-address-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;xfGKmvvyhdM&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;Well-designed forms help users and increase conversion rates. One small fix can make a big difference!&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--codelab&quot;&gt;
&lt;p&gt;&lt;strong&gt;Try it&lt;/strong&gt;!
If you prefer to learn these best practices with a hands-on tutorial, check out the two codelabs
for this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/codelab-payment-form-best-practices&quot;&gt;Payment form best practices codelab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/codelab-address-form-best-practices&quot;&gt;Address form best practices codelab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example of a simple payment form that demonstrates all of the best practices:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 720px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example of a simple address form that demonstrates all of the best practices:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 980px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/address-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;address-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;checklist&quot;&gt;Checklist &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#checklist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#meaningful-html&quot;&gt;Use meaningful HTML elements&lt;/a&gt;: &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-label&quot;&gt;Label each form field with a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use HTML element attributes to &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-attributes&quot;&gt;access built-in browser features&lt;/a&gt;, in particular
&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#type-attribute&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#autocomplete-attribute&quot;&gt;&lt;code&gt;autocomplete&lt;/code&gt;&lt;/a&gt; with appropriate values.&lt;/li&gt;
&lt;li&gt;Avoid using &lt;code&gt;type=&amp;quot;number&amp;quot;&lt;/code&gt; for numbers that aren&#39;t meant to be
incremented, such as payment card numbers. Use &lt;code&gt;type=&amp;quot;text&amp;quot;&lt;/code&gt; and &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#inputmode-attribute&quot;&gt;&lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;If an &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#autocomplete-attribute&quot;&gt;appropriate autocomplete value&lt;/a&gt; is available for an &lt;code&gt;input&lt;/code&gt;,
&lt;code&gt;select&lt;/code&gt;, or &lt;code&gt;textarea&lt;/code&gt;, you should use it.&lt;/li&gt;
&lt;li&gt;To help browsers autofill forms, give input &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#stable-name-id&quot;&gt;stable values&lt;/a&gt;
that don&#39;t change between page loads or website deployments.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#disable-submit&quot;&gt;Disable submit buttons&lt;/a&gt; once they&#39;ve been tapped or clicked.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#validate&quot;&gt;Validate&lt;/a&gt; data during entry—not just on form submission.&lt;/li&gt;
&lt;li&gt;Make &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#guest-checkout&quot;&gt;guest checkout&lt;/a&gt; the default and make account creation simple once checkout
is complete.&lt;/li&gt;
&lt;li&gt;Show &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#checkout-progress&quot;&gt;progress through the checkout process&lt;/a&gt; in clear steps with clear calls
to action.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#reduce-checkout-exits&quot;&gt;Limit potential checkout exit points&lt;/a&gt; by removing clutter and distractions.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#checkout-details&quot;&gt;Show full order details&lt;/a&gt; at checkout and make order adjustments easy.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#unneeded-data&quot;&gt;Don&#39;t ask for data you don&#39;t need&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#single-name-input&quot;&gt;Ask for names with a single input&lt;/a&gt; unless you have a good reason not to.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#unicode-matching&quot;&gt;Don&#39;t enforce Latin-only characters&lt;/a&gt; for names and usernames.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-variety&quot;&gt;Allow for a variety of address formats&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Consider using a &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-textarea&quot;&gt;single &lt;code&gt;textarea&lt;/code&gt; for address&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#billing-address&quot;&gt;autocomplete for billing address&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#internationalization-localization&quot;&gt;Internationalize and localize&lt;/a&gt; where necessary.&lt;/li&gt;
&lt;li&gt;Consider avoiding &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#postal-code-address-lookup&quot;&gt;postal code address lookup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#payment-form-autocomplete&quot;&gt;appropriate payment card autocomplete values&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use a &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#single-number-input&quot;&gt;single input for payment card numbers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#avoid-custom-elements&quot;&gt;Avoid using custom elements&lt;/a&gt; if they break the autofill experience.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#analytics-rum&quot;&gt;Test in the field as well as the lab&lt;/a&gt;: page analytics, interaction analytics, and
real-user performance measurement.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#test-platforms&quot;&gt;Test on a range of browsers, devices, and platforms&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This article is about frontend best practices for address and payment forms. It does not explain
how to implement transactions on your site. To find out more about adding payment functionality to your
website, see &lt;a href=&quot;https://web.dev/payments&quot;&gt;Web Payments&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;meaningful-html&quot;&gt;Use meaningful HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#meaningful-html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the elements and attributes built for the job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;, &lt;code&gt;autocomplete&lt;/code&gt;, and &lt;code&gt;inputmode&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These enable built-in browser functionality, improve accessibility, and add meaning to your markup.&lt;/p&gt;
&lt;h3 id=&quot;html-elements&quot;&gt;Use HTML elements as intended &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-elements&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;html-form&quot;&gt;Put your form in a &amp;lt;form&amp;gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-form&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You might be tempted not to bother wrapping your &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, and to handle data
submission purely with JavaScript.&lt;/p&gt;
&lt;p&gt;Don&#39;t do it!&lt;/p&gt;
&lt;p&gt;An HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; gives you access to a powerful set of built-in features across all modern browsers,
and can help make your site accessible to screen readers and other assistive devices. A &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;
also makes it simpler to build basic functionality for older browsers with limited JavaScript
support, and to enable form submission even if there&#39;s a glitch with your code—and for the
small number of users who actually disable JavaScript.&lt;/p&gt;
&lt;p&gt;If you have more than one page component for user input, make sure to put each in its own &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;
element. For example, if you have search and sign-up on the same page, put each in its own &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;html-label&quot;&gt;Use &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; to label elements &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-label&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;To label an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Associate a label with an input by giving the label&#39;s &lt;code&gt;for&lt;/code&gt; attribute the same value as
the input&#39;s &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Address line 1&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;…&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Use a single label for a single input: don&#39;t try to label multiple inputs with only one label. This
works best for browsers, and best for screenreaders. A tap or click on a label moves focus to the input
it&#39;s associated with, and screenreaders announce label text when the &lt;em&gt;label&lt;/em&gt; or the label&#39;s &lt;em&gt;input&lt;/em&gt;
gets focus.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Don&#39;t use &lt;a href=&quot;https://www.smashingmagazine.com/2018/06/placeholder-attribute/&quot; rel=&quot;noopener&quot;&gt;placeholders&lt;/a&gt;
on their own instead of labels. Once you start entering text in an input, the
placeholder is hidden, so it can be easy to forget what the input is for. The same is true if
you use the placeholder to show the correct format for values such as dates. This can be especially
problematic for users on phones, particularly if they&#39;re distracted or feeling stressed!&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;html-button&quot;&gt;Make buttons helpful &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-button&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;
for buttons! You can also use &lt;code&gt;&amp;lt;input type=&amp;quot;submit&amp;quot;&amp;gt;&lt;/code&gt;, but don&#39;t use a &lt;code&gt;div&lt;/code&gt; or some
other random element acting as a button. Button elements provide accessible behaviour, built-in
form submission functionality, and can easily be styled.&lt;/p&gt;
&lt;p&gt;Give each form submit button a value that says what it does. For each step towards checkout, use
a descriptive call-to-action that shows progress and makes the next step obvious. For example, label
the submit button on your delivery address form &lt;strong&gt;Proceed to Payment&lt;/strong&gt; rather than &lt;strong&gt;Continue&lt;/strong&gt;
or &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;p id=&quot;disable-submit&quot;&gt;&lt;/p&gt;
&lt;p&gt;Consider disabling a submit button once the user has tapped or clicked it—especially when the user is
making a payment or placing an order. Many users click buttons repeatedly, even if they&#39;re working fine.
That can mess up checkout and add to server load.&lt;/p&gt;
&lt;p&gt;On the other hand, don&#39;t disable a submit button waiting on complete and valid user input. For
example, don&#39;t just leave a &lt;strong&gt;Save Address&lt;/strong&gt; button disabled because something is missing or invalid.
That doesn&#39;t help the user—they may continue to tap or click the button and assume that it&#39;s broken.
Instead, if users attempt to submit a form with invalid data, explain to them what&#39;s gone wrong
and what to do to fix it. This is particularly important on mobile, where data entry is more
difficult and missing or invalid form data may not be visible on the user&#39;s screen by the time they
attempt to submit a form.&lt;/p&gt;
&lt;h3 id=&quot;html-attributes&quot;&gt;Make the most of HTML attributes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#html-attributes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;make-it-easy-for-users-to-enter-data&quot;&gt;Make it easy for users to enter data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#make-it-easy-for-users-to-enter-data&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p id=&quot;type-attribute&quot;&gt;&lt;/p&gt;
&lt;p&gt;Use the appropriate input &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;type&lt;/code&gt; attribute&lt;/a&gt;
to provide the right keyboard on mobile and enable basic built-in validation by the browser.&lt;/p&gt;
&lt;p&gt;For example, use &lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt; for email addresses and &lt;code&gt;type=&amp;quot;tel&amp;quot;&lt;/code&gt; for phone numbers.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of Android phones, showing a keyboard appropriate for entering an email addresss (using type=email) and for entering a telephone number (with type=tel).&quot; decoding=&quot;async&quot; height=&quot;683&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/bi7J9Z1TLP4IsQLyhbQm.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Keyboards appropriate for email and telephone.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p id=&quot;inputmode-attribute&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Using type=&amp;quot;number&amp;quot; adds an up/down arrow to increment numbers, which makes no sense for data such
as telephone, payment card or account numbers.&lt;/p&gt;
&lt;p&gt;For numbers like these, set &lt;code&gt;type=&amp;quot;text&amp;quot;&lt;/code&gt; (or leave off the attribute, since &lt;code&gt;text&lt;/code&gt; is the default).
For telephone numbers, use &lt;code&gt;type=&amp;quot;tel&amp;quot;&lt;/code&gt; to get the appropriate keyboard on mobile. For other numbers
use &lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt; to get a numeric keyboard on mobile.&lt;/p&gt;
&lt;p&gt;Some sites still use &lt;code&gt;type=&amp;quot;tel&amp;quot;&lt;/code&gt; for payment card numbers to ensure that mobile users get the right
keyboard. However, &lt;code&gt;inputmode&lt;/code&gt; is &lt;a href=&quot;https://caniuse.com/input-inputmode&quot; rel=&quot;noopener&quot;&gt;very widely supported now&lt;/a&gt;,
so you shouldn&#39;t have to do that—but do check your users&#39; browsers.&lt;/p&gt;
&lt;/div&gt;
&lt;p id=&quot;avoid-custom-elements&quot;&gt;&lt;/p&gt;
&lt;p&gt;For dates, try to avoid using custom &lt;code&gt;select&lt;/code&gt; elements. They break the autofill experience if not
properly implemented and don&#39;t work on older browsers. For numbers such as birth year, consider
using an &lt;code&gt;input&lt;/code&gt; element rather than a &lt;code&gt;select&lt;/code&gt;, since entering digits manually can be easier and less
error prone than selecting from a long drop-down list—especially on mobile. Use &lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt;
to ensure the right keyboard on mobile and add validation and format hints with text or a
placeholder to make sure the user enters data in the appropriate format.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;datalist&lt;/code&gt;&lt;/a&gt; element enables
a user to select from a list of available options and provides matching suggestions as the user enters text.
Try out &lt;code&gt;datalist&lt;/code&gt; for &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; inputs at &lt;a href=&quot;https://simpl.info/datalist&quot; rel=&quot;noopener&quot;&gt;simpl.info/datalist&lt;/a&gt;.
For birth year input, you can compare a &lt;code&gt;select&lt;/code&gt; with an &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;datalist&lt;/code&gt; at &lt;a href=&quot;https://datalist-select.glitch.me/&quot; rel=&quot;noopener&quot;&gt;datalist-select.glitch.me&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;autocomplete-attribute&quot;&gt;Use autocomplete to improve accessibility and help users avoid re-entering data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#autocomplete-attribute&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Using appropriate &lt;code&gt;autocomplete&lt;/code&gt; values enables browsers to help users by securely storing data and
autofilling &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, and &lt;code&gt;textarea&lt;/code&gt; values. This is particularly important on mobile, and
crucial for avoiding &lt;a href=&quot;https://www.zuko.io/blog/8-surprising-insights-from-zukos-benchmarking-data&quot; rel=&quot;noopener&quot;&gt;high form abandonment rates&lt;/a&gt;. Autocomplete also provides &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html&quot; rel=&quot;noopener&quot;&gt;multiple accessibility benefits&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If an appropriate autocomplete value is available for a form field, you should use it. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete&quot; rel=&quot;noopener&quot;&gt;MDN web docs&lt;/a&gt; has a full list of values and explanations of how to use
them correctly.&lt;/p&gt;
&lt;p id=&quot;stable-name-id&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;As well as using appropriate autocomplete values, help browsers autofill forms by giving form fields
&lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#stable-name-id&quot;&gt;stable values&lt;/a&gt; that don&#39;t change between page loads or
website deployments.&lt;/p&gt;
&lt;/div&gt;
&lt;p id=&quot;billing-address&quot;&gt;&lt;/p&gt;
&lt;p&gt;By default, set the billing address to be the same as the delivery address. Reduce visual clutter by
providing a link to edit the billing address (or use &lt;a href=&quot;https://simpl.info/details/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;summary&lt;/code&gt; and &lt;code&gt;details&lt;/code&gt; elements&lt;/a&gt;)
rather than displaying the billing address in a form.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Example checkout page showing link to change billing address.&quot; decoding=&quot;async&quot; height=&quot;250&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/TIan7TU8goyoOXwLPYyd.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Add a link to review billing.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Use appropriate autocomplete values for the billing address, just as you do for shipping address,
so the user doesn&#39;t have to enter data more than once. Add a prefix word to autocomplete
attributes if you have different values for inputs with the same name in different sections.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;shipping address-line-1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;...&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;billing address-line-1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;validation&quot;&gt;Help users enter the right data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#validation&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Try to avoid &amp;quot;telling off&amp;quot; customers because they &amp;quot;did something wrong&amp;quot;. Instead, help users complete
forms more quickly and easily by helping them fix problems as they happen. Through the checkout process,
customers are trying to give your company money for a product or service—your job is to assist them,
not to punish them!&lt;/p&gt;
&lt;p&gt;You can add &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation#Intrinsic_and_basic_constraints&quot; rel=&quot;noopener&quot;&gt;constraint attributes&lt;/a&gt; to form elements to specify acceptable
values, including &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, and &lt;code&gt;pattern&lt;/code&gt;. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ValidityState&quot; rel=&quot;noopener&quot;&gt;validity state&lt;/a&gt;
of the element is set automatically depending on whether the element&#39;s value is valid, as are the
&lt;code&gt;:valid&lt;/code&gt; and &lt;code&gt;:invalid&lt;/code&gt; CSS pseudo-classes which can be used to style elements with valid or invalid
values.&lt;/p&gt;
&lt;p&gt;For example, the following HTML specifies input for a birth year between
1900 and 2020. Using &lt;code&gt;type=&amp;quot;number&amp;quot;&lt;/code&gt; constrains input values to numbers only, within the range
specified by &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;. If you attempt to enter a number outside the range, the input will be
set to have an invalid state.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 170px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/constraints?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;constraints on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;The following example uses &lt;code&gt;pattern=&amp;quot;[\d ]{10,30}&amp;quot;&lt;/code&gt; to ensure a valid payment card number, while
allowing spaces:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 170px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-card-input?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-card-input on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Modern browsers also do basic validation for inputs with type &lt;code&gt;email&lt;/code&gt; or &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 250px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/type-validation?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;type-validation on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Add the &lt;code&gt;multiple&lt;/code&gt; attribute to an input with &lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt; to enable built-in validation for
multiple comma-separated email addresses in a single input.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On form submission, browsers automatically set focus on fields with problematic or missing required
values. No JavaScript required!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a sign-in form in Chrome on desktop showing browser prompt and focus for an invalid email value.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;483&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/mPyN7THWJNRQIiBezq6l.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Basic built-in validation by the browser.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Validate inline and provide feedback to the user as they enter data, rather than providing a list of
errors when they click the submit button. If you need to validate data on your server after form
submission, list all problems that are found and clearly highlight all form fields with invalid
values, as well as displaying a message inline next to each problematic field explaining what needs
to be fixed. Check server logs and analytics data for common errors—you may need to redesign your form.&lt;/p&gt;
&lt;p&gt;You should also use JavaScript to do more robust validation while users are entering data and
on form submission. Use the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#constraints&quot; rel=&quot;noopener&quot;&gt;Constraint Validation API&lt;/a&gt;
(which is &lt;a href=&quot;https://caniuse.com/#feat=constraint-validation&quot; rel=&quot;noopener&quot;&gt;widely supported&lt;/a&gt;) to add custom
validation using built-in browser UI to set focus and display prompts.&lt;/p&gt;
&lt;p&gt;Find out more in &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms#use_javascript_for_more_complex_real-time_validation&quot; rel=&quot;noopener&quot;&gt;Use JavaScript for more complex real-time validation&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Even with client-side validation and data input constraints, you must still ensure that your
back-end securely handles input and output of data from users. Never trust user input: it could be
malicious. Find out more in &lt;a href=&quot;https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html&quot; rel=&quot;noopener&quot;&gt;OWASP Input Validation Cheat Sheet&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;required&quot;&gt;Help users avoid missing required data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#required&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;required&lt;/code&gt; attribute&lt;/a&gt;
on inputs for mandatory values.&lt;/p&gt;
&lt;p&gt;When a form is submitted &lt;a href=&quot;https://caniuse.com/mdn-api_htmlinputelement_required&quot; rel=&quot;noopener&quot;&gt;modern browsers&lt;/a&gt;
automatically prompt and set focus on &lt;code&gt;required&lt;/code&gt; fields with missing data, and you can use the
&lt;a href=&quot;https://caniuse.com/?search=required&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:required&lt;/code&gt; pseudo-class&lt;/a&gt; to highlight required fields. No
JavaScript required!&lt;/p&gt;
&lt;p&gt;Add an asterisk to the label for every required field, and add a note at the start of the form to
explain what the asterisk means.&lt;/p&gt;
&lt;h2 id=&quot;checkout-forms&quot;&gt;Simplify checkout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#checkout-forms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;m-commerce-gap&quot;&gt;Mind the mobile commerce gap! &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#m-commerce-gap&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Imagine that your users have a &lt;em&gt;fatigue budget&lt;/em&gt;. Use it up, and your users will leave.&lt;/p&gt;
&lt;p&gt;You need to reduce friction and maintain focus, especially on mobile. Many sites get more &lt;em&gt;traffic&lt;/em&gt;
on mobile but more &lt;em&gt;conversions&lt;/em&gt; on desktop—a phenomenon known as the &lt;a href=&quot;https://www.comscore.com/Insights/Presentations-and-Whitepapers/2017/Mobiles-Hierarchy-of-Needs&quot; rel=&quot;noopener&quot;&gt;mobile commerce gap&lt;/a&gt;. Customers may simply prefer to
complete a purchase on desktop, but lower mobile conversion rates are also a result of poor user
experience. Your job is to &lt;em&gt;minimize&lt;/em&gt; lost conversions on mobile and &lt;em&gt;maximize&lt;/em&gt; conversions
on desktop. &lt;a href=&quot;https://www.comscore.com/Insights/Presentations-and-Whitepapers/2017/Mobiles-Hierarchy-of-Needs&quot; rel=&quot;noopener&quot;&gt;Research has shown&lt;/a&gt; that there&#39;s a huge opportunity to provide a better mobile form experience.&lt;/p&gt;
&lt;p&gt;Most of all, users are more likely to abandon forms that look long, that are complex, and without a sense of
direction. This is especially true when users are on smaller screens, distracted, or in a rush. Ask for as
little data as possible.&lt;/p&gt;
&lt;h3 id=&quot;guest-checkout&quot;&gt;Make guest checkout the default &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#guest-checkout&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For an online store, the simplest way to reduce form friction is to make guest checkout the default.
Don&#39;t force users to create an account before making a purchase. Not allowing guest checkout is cited
as a major reason for shopping cart abandonment.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Reasons for shopping cart abandonment during checkout.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;503&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/a7OQLnCRb0FZglj07N7z.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;From &lt;a href=&quot;https://baymard.com/checkout-usability&quot;&gt;baymard.com/checkout-usability&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You can offer account sign-up after checkout.  At that point, you already have most of the data you
need to set up an account, so account creation should be quick and easy for the user.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;If you do offer sign-up after checkout, make sure that the purchase the user just made is linked to
their newly created account!&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;checkout-progress&quot;&gt;Show checkout progress  &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#checkout-progress&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can make your checkout process feel less complex by showing progress and making it clear what
needs to be done next. The video below shows how UK retailer &lt;a href=&quot;https://www.johnlewis.com/&quot; rel=&quot;noopener&quot;&gt;johnlewis.com&lt;/a&gt;
achieves this.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot; poster=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/ViftAUUUHr4TDXNec0Ch.png?auto=format&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/6gIb1yWrIMZFiv775B2y.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Show checkout progress.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;You need to maintain momentum! For each step towards payment, use page headings and descriptive
button values that make it clear what needs to be done now, and what checkout step is next.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/address-form-save.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Give form buttons meaningful names that show what&#39;s next.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Use the &lt;code&gt;enterkeyhint&lt;/code&gt; attribute on form inputs to set the mobile keyboard enter key label. For
example, use &lt;code&gt;enterkeyhint=&amp;quot;previous&amp;quot;&lt;/code&gt; and &lt;code&gt;enterkeyhint=&amp;quot;next&amp;quot;&lt;/code&gt; within a multi-page form,
&lt;code&gt;enterkeyhint=&amp;quot;done&amp;quot;&lt;/code&gt; for the final input in the form, and &lt;code&gt;enterkeyhint=&amp;quot;search&amp;quot;&lt;/code&gt; for a search
input.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of an address form on Android showing how the enterkeyhint input attribute changes the enter key button icon.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;684&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/QoY8Oynpw0CqjPACtCdG.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Enter key buttons on Android: &#39;next&#39; and &#39;done&#39;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;enterkeyhint&lt;/code&gt; attribute is &lt;a href=&quot;https://caniuse.com/mdn-html_global_attributes_enterkeyhint&quot; rel=&quot;noopener&quot;&gt;supported on Android and iOS&lt;/a&gt;.
You can find out more from the &lt;a href=&quot;https://github.com/dtapuska/enterkeyhint&quot; rel=&quot;noopener&quot;&gt;enterkeyhint explainer&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;checkout-details&quot;&gt;&lt;/p&gt;
&lt;p&gt;Make it easy for users to go back and forth within the checkout process, to easily adjust
their order, even when they&#39;re at the final payment step. Show full details of the order, not just
a limited summary. Enable users to easily adjust item quantities from the payment page. Your priority at checkout is to
avoid interrupting progress towards conversion.&lt;/p&gt;
&lt;h3 id=&quot;reduce-checkout-exits&quot;&gt;Remove distractions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#reduce-checkout-exits&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Limit potential exit points by removing visual clutter and distractions such as product promotions.
Many successful retailers even remove navigation and search from checkout.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots on mobile showing progress through johnlewis.com checkout. Search, navigation and other distractions are removed.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;683&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/UR97R2LqJ5MRkL5H4V0U.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Search, navigation and other distractions removed for checkout.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Keep the journey focused. This is not the time to tempt users to do something else!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of checkout page on mobile showing distracting promotion for FREE STICKERS.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;735&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 350px) 350px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/lKJwd5e2smBfDjNxV22N.jpg?auto=format&amp;w=700 700w&quot; width=&quot;350&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Don&#39;t distract customers from completing their purchase.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For returning users you can simplify the checkout flow even more, by hiding data they don&#39;t need to
see. For example: display the delivery address in plain text (not in a form) and allow users to
change it via a link.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of &amp;#x27;Review order&amp;#x27; section of checkout page, showing text in plain text, with links to change delivery address, payment method and billing address, which are not displayed.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;219&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 450px) 450px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/xEAYOeEFYhOZLaB2aeCY.png?auto=format&amp;w=900 900w&quot; width=&quot;450&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Hide data customers don&#39;t need to see.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;address-forms&quot;&gt;Make it easy to enter name and address &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-forms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;unneeded-data&quot;&gt;Only ask for the data you need &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#unneeded-data&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before you start coding your name and address forms, make sure to understand what data is required.
Don&#39;t ask for data you don&#39;t need! The simplest way to reduce form complexity is to remove unnecessary
fields. That&#39;s also good for customer privacy and can reduce back-end data cost and liability.&lt;/p&gt;
&lt;h3 id=&quot;single-name-input&quot;&gt;Use a single name input &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#single-name-input&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Allow your users to enter their name using a single input, unless you have a good reason for
separately storing given names, family names, honorifics, or other name parts. Using a single name
input makes forms less complex, enables cut-and-paste, and makes autofill simpler.&lt;/p&gt;
&lt;p&gt;In particular, unless you have good reason not to, don&#39;t bother adding a separate input for a
prefix or title (like Mrs, Dr or Lord). Users can type that in with their name if they want to. Also,
&lt;code&gt;honorific-prefix&lt;/code&gt; autocomplete currently doesn&#39;t work in most browsers, and so adding a field for
name prefix or title will break the address form autofill experience for most users.&lt;/p&gt;
&lt;h3 id=&quot;enable-name-autofill&quot;&gt;Enable name autofill &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#enable-name-autofill&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;name&lt;/code&gt; for a full name:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If you really do have a good reason to split out name parts, make sure to to use appropriate
autocomplete values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;honorific-prefix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;given-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nickname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;additional-name-initial&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;additional-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;family-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;honorific-suffix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;unicode-matching&quot;&gt;Allow international names &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#unicode-matching&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You might want to validate your name inputs, or restrict the characters allowed for name data. However,
you need to be as unrestrictive as possible with alphabets. It&#39;s rude to be told your name is &amp;quot;invalid&amp;quot;!&lt;/p&gt;
&lt;p&gt;For validation, avoid using regular expressions that only match Latin characters. Latin-only excludes
users with names or addresses that include characters that aren&#39;t in the Latin alphabet. Allow Unicode
letter matching instead—and ensure your back-end supports Unicode securely as both input and output.
Unicode in regular expressions is well supported by modern browsers.&lt;/p&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--worse&quot;&gt;Don&#39;t&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Names with non-Latin characters (such as Françoise or Jörg) are &#39;invalid&#39;. --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\w \-]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;Do&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Accepts Unicode letters. --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\p{L} \-]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/unicode-letter-matching.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Unicode letter matching compared to Latin-only letter matching.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can find out more about &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#internationalization-localization&quot;&gt;internationalization and localization&lt;/a&gt;
below, but make sure your forms work for names in all regions where you have users. For example,
for Japanese names you should consider having a field for phonetic names. This helps customer
support staff say the customer&#39;s name on the phone.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;address-variety&quot;&gt;Allow for a variety of address formats &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-variety&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When you&#39;re designing an address form, bear in mind the bewildering variety of address formats,
even within a single country. Be careful not to make assumptions about &amp;quot;normal&amp;quot; addresses. (Take a
look at &lt;a href=&quot;http://www.paulplowman.com/stuff/uk-address-oddities/&quot; rel=&quot;noopener&quot;&gt;UK Address Oddities!&lt;/a&gt; if you&#39;re not
convinced!)&lt;/p&gt;
&lt;h4 id=&quot;make-address-forms-flexible&quot;&gt;Make address forms flexible &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#make-address-forms-flexible&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Don&#39;t force users to try to squeeze their address into form fields that don&#39;t fit.&lt;/p&gt;
&lt;p&gt;For example, don&#39;t insist on a house number and street name in separate inputs, since many addresses
don&#39;t use that format, and incomplete data can break browser autofill.&lt;/p&gt;
&lt;p&gt;Be especially careful with &lt;code&gt;required&lt;/code&gt; address fields. For example, addresses in large cities in the
UK do not have a county, but many sites still force users to enter one.&lt;/p&gt;
&lt;p&gt;Using two flexible address lines can work well enough for a variety of address formats.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Add labels to match:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;Address line 1 (or company name)&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;Address line 2 (optional)&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line-2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address-line2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You can try this out by remixing and editing the demo embedded below.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Research shows that &lt;a href=&quot;https://baymard.com/blog/address-line-2&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Address line 2&lt;/strong&gt; may be problematic for users&lt;/a&gt;.
Bear this in mind when designing address forms—you should consider alternatives such as using a
single &lt;code&gt;textarea&lt;/code&gt; (see below) or other options.&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&quot;address-textarea&quot;&gt;Consider using a single textarea for address &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-textarea&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The most flexible option for addresses is to provide a single &lt;code&gt;textarea&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;textarea&lt;/code&gt; approach fits any address format, and it&#39;s great for cutting and pasting—but bear in
mind that it may not fit your data requirements, and users may miss out on autofill if they previously
only used forms with &lt;code&gt;address-line1&lt;/code&gt; and &lt;code&gt;address-line2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For a textarea, use &lt;code&gt;street-address&lt;/code&gt; as the autocomplete value.&lt;/p&gt;
&lt;p&gt;Here is an example of a form that demonstrates the use of a single &lt;code&gt;textarea&lt;/code&gt; for address:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 980px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/address-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;address-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h4 id=&quot;internationalization-localization&quot;&gt;Internationalize and localize your address forms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#internationalization-localization&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;It&#39;s especially important for address forms to consider &lt;a href=&quot;https://www.smashingmagazine.com/2020/11/internationalization-localization-static-sites/&quot; rel=&quot;noopener&quot;&gt;internationalization and localization&lt;/a&gt;, depending
on where your users are located.&lt;/p&gt;
&lt;p&gt;Be aware that the naming of address parts varies as well as address formats, even within the same
language.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    ZIP code: US&lt;br /&gt; Postal code: Canada&lt;br /&gt;    Postcode: UK&lt;br /&gt;     Eircode: Ireland&lt;br /&gt;         PIN: India&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;It can be irritating or puzzling to be presented with a form that doesn&#39;t fit your address or that
doesn&#39;t use the words you expect.&lt;/p&gt;
&lt;p&gt;Customizing address forms &lt;a href=&quot;https://www.smashingmagazine.com/2020/11/internationalization-localization-static-sites#determining-user-s-language-and-region&quot; rel=&quot;noopener&quot;&gt;for multiple locales&lt;/a&gt; may be necessary for your site, but using techniques
to maximize form flexibility (as described above) may be adequate. If you don&#39;t localize your address
forms, make sure to understand the key priorities to cope with a range of address formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid being over-specific about address parts, such as insisting on a street name or house number.&lt;/li&gt;
&lt;li&gt;Where possible avoid making fields &lt;code&gt;required&lt;/code&gt;. For example, addresses in many countries don&#39;t
have a postal code, and rural addresses may not have a street or road name.&lt;/li&gt;
&lt;li&gt;Use inclusive naming: &#39;Country/region&#39; not &#39;Country&#39;; &#39;ZIP/postal code&#39; not &#39;ZIP&#39;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep it flexible! The &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#address-textarea&quot;&gt;simple address form example above&lt;/a&gt; can be adapted to work
&#39;well enough&#39; for many locales.&lt;/p&gt;
&lt;h4 id=&quot;postal-code-address-lookup&quot;&gt;Consider avoiding postal code address lookup &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#postal-code-address-lookup&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Some websites use a service to look up addresses based on postal code or ZIP. This may be sensible
for some use cases, but you should be aware of the potential downsides.&lt;/p&gt;
&lt;p&gt;Postal code address suggestion doesn&#39;t work for all countries—and in some regions, post codes can
include a large number of potential addresses.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/long-list-of-addresses.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;ZIP or postal codes may include a lot of addresses!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It&#39;s difficult for users to select from a long list of addresses—especially on mobile if they&#39;re
rushed or stressed. It can be easier and less error prone to let users take advantage of autofill,
and enter their complete address filled with a single tap or click.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/full-name-autofill.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A single name input enables one-tap (one-click) address entry.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;general-guidelines&quot;&gt;Simplify payment forms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#general-guidelines&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Payment forms are the single most critical part of the checkout process. Poor payment form design is
a &lt;a href=&quot;https://www.comscore.com/Insights/Presentations-and-Whitepapers/2017/Mobiles-Hierarchy-of-Needs&quot; rel=&quot;noopener&quot;&gt;common cause of shopping cart abandonment&lt;/a&gt;. The &lt;a href=&quot;https://en.wikipedia.org/wiki/The_devil_is_in_the_detail#cite_note-Titelman-1&quot; rel=&quot;noopener&quot;&gt;devil&#39;s in the details&lt;/a&gt;: small
glitches can tip users towards abandoning a purchase, particularly on mobile. Your job is to design
forms to make it as easy as possible for users to enter data.&lt;/p&gt;
&lt;h3 id=&quot;payment-form-autocomplete&quot;&gt;Help users avoid re-entering payment data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#payment-form-autocomplete&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Make sure to add appropriate &lt;code&gt;autocomplete&lt;/code&gt; values in payment card forms, including the payment card
number, name on the card, and the expiry month and year:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cc-number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-exp-month&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-exp-year&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This enables browsers to help users by securely storing payment card details and correctly entering form
data. Without autocomplete, users may be more likely to keep a physical record of payment card details,
or store payment card data insecurely on their device.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Don&#39;t add a selector for payment card type, since this can always be inferred from the payment card
number.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;avoid-using-custom-elements-for-payment-card-dates&quot;&gt;Avoid using custom elements for payment card dates &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#avoid-using-custom-elements-for-payment-card-dates&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If not properly designed, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot; rel=&quot;noopener&quot;&gt;custom elements&lt;/a&gt;
can interrupt payment flow by breaking autofill, and won&#39;t work on older browsers. If all other
payment card details are available from autocomplete but a user is forced to find their physical
payment card to look up an expiry date because autofill didn&#39;t work for a custom element, you&#39;re
likely to lose a sale. Consider using standard HTML elements instead, and style them accordingly.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of payment form showing custom elements for card expiry date that interrupt autofill.&quot; decoding=&quot;async&quot; height=&quot;916&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/1LIQm2Jt5PHxN0I7tni3.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Autocomplete filled all the fields—except the expiry date!&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;single-number-input&quot;&gt;Use a single input for payment card and phone numbers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#single-number-input&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For payment card and phone numbers use a single input: don&#39;t split the number into parts. That makes
it easier for users to enter data, makes validation simpler, and enables browsers to autofill.
Consider doing the same for other numeric data such as PIN and bank codes.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of payment form showing a credit card field split into four input elements.&quot; decoding=&quot;async&quot; height=&quot;833&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/7cUwamPstwSQTlbmQ4CT.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Don&#39;t use multiple inputs for a credit card number.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;validate&quot;&gt;Validate carefully &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#validate&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You should validate data entry both in realtime and before form submission. One way to do this is by
adding a &lt;code&gt;pattern&lt;/code&gt; attribute to a payment card input. If the user attempts to submit the payment form
with an invalid value, the browser displays a warning message and sets focus on the input. No
JavaScript required!&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 170px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-card-input?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-card-input on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;However, your &lt;code&gt;pattern&lt;/code&gt; regular expression must be flexible enough to handle &lt;a href=&quot;https://github.com/jaemok/credit-card-input/blob/master/creditcard.js#L35&quot; rel=&quot;noopener&quot;&gt;the range of payment card
number lengths&lt;/a&gt;: from 14
digits (or possibly less) to 20 (or more). You can find out more about payment card number structuring
from &lt;a href=&quot;https://ldapwiki.com/wiki/Bank%20Card%20Number&quot; rel=&quot;noopener&quot;&gt;LDAPwiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Allow users to include spaces when they&#39;re entering a new payment card number, since this is how
numbers are displayed on physical cards. That&#39;s friendlier to the user (you won&#39;t have to tell them
&amp;quot;they did something wrong&amp;quot;), less likely to interrupt conversion flow, and it&#39;s straightforward to
remove spaces in numbers before processing.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You may want to use a one-time passcode for identity or payment verification. However, asking users
to manually enter a code or copy it from an email or an SMS text is error-prone and a source of friction.
Learn about better ways to enable one-time passcodes in &lt;a href=&quot;https://web.dev/sms-otp-form&quot;&gt;SMS OTP form best practices&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;test-platforms&quot;&gt;Test on a range of devices, platforms, browsers and versions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#test-platforms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It&#39;s particularly important to test address and payment forms on the platforms most common for
your users, since form element functionality and appearance may vary, and differences in viewport
size can lead to problematic positioning. BrowserStack enables &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;free testing for open source projects&lt;/a&gt; on a range of devices and browsers.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of a payment form, payment-form.glitch.me, on iPhone 7 and 11. The Complete Payment button is shown on iPhone 11 but not 7&quot; decoding=&quot;async&quot; height=&quot;707&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Uk7WhpDMuHtvjmWlFnJE.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The same page on iPhone 7 and iPhone 11.&lt;br /&gt;Reduce padding for
    smaller mobile viewports to ensure the &lt;strong&gt;Complete payment&lt;/strong&gt; button isn&#39;t hidden.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;analytics-rum&quot;&gt;Implement analytics and RUM &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#analytics-rum&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Testing usability and performance locally can be helpful, but you need real-world data to properly
understand how users experience your payment and address forms.&lt;/p&gt;
&lt;p&gt;For that you need analytics and Real User Monitoring—data for the experience of actual users, such
as how long checkout pages take to load or how long payment takes to complete:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page analytics&lt;/strong&gt;: page views, bounce rates and exits for every page with a form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interaction analytics&lt;/strong&gt;: &lt;a href=&quot;https://support.google.com/analytics/answer/6180923?hl=en&quot; rel=&quot;noopener&quot;&gt;goal funnels&lt;/a&gt;
and &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/gtagjs/events&quot; rel=&quot;noopener&quot;&gt;events&lt;/a&gt;
indicate where users abandon your checkout flow and what actions do they take when interacting
with your forms.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website performance&lt;/strong&gt;: &lt;a href=&quot;https://web.dev/user-centric-performance-metrics&quot;&gt;user-centric metrics&lt;/a&gt; can tell you if your
checkout pages are slow to load and, if so—what&#39;s the cause.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Page analytics, interaction analytics, and real user performance measurement become especially
valuable when combined with server logs, conversion data, and A/B testing, enabling you to answer
questions such as whether discount codes increase revenue, or whether a change in form layout
improves conversions.&lt;/p&gt;
&lt;p&gt;That, in turn, gives you a solid basis for prioritizing effort, making changes, and rewarding success.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Keep learning &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/payment-and-address-form-best-practices/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices&quot;&gt;Sign-in form best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices&quot;&gt;Sign-up form best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/web-otp&quot;&gt;Verify phone numbers on the web with the WebOTP API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms&quot; rel=&quot;noopener&quot;&gt;Create Amazing Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/08/best-practices-for-mobile-form-design/&quot; rel=&quot;noopener&quot;&gt;Best Practices For Mobile Form Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/more-capable-form-controls&quot;&gt;More capable form controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webaim.org/techniques/forms/&quot; rel=&quot;noopener&quot;&gt;Creating Accessible Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api&quot; rel=&quot;noopener&quot;&gt;Streamlining the Sign-up Flow Using Credential Management API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.columbia.edu/~fdc/postal/&quot; rel=&quot;noopener&quot;&gt;Frank&#39;s Compulsive Guide to Postal Addresses&lt;/a&gt; provides
useful links and extensive guidance for address formats in over 200 countries.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.countries-list.info/Download-List&quot; rel=&quot;noopener&quot;&gt;Countries Lists&lt;/a&gt; has a tool for downloading country
codes and names in multiple languages, in multiple formats.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@rupixen&quot; rel=&quot;noopener&quot;&gt;@rupixen&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/Q59HmzK38eQ&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Sign-up form best practices</title>
    <link href="https://web.dev/sign-up-form-best-practices/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/sign-up-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;Ev2mCzJZLtY&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;p&gt;If users ever need to log in to your site, then good sign-up form design is
critical. This is especially true for people on poor connections, on mobile, in
a hurry, or under stress. Poorly designed sign-up forms get high bounce rates.
Each bounce could mean a lost and disgruntled user—not just a missed sign-up
opportunity.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--codelab&quot;&gt;
&lt;p&gt;&lt;strong&gt;Try it&lt;/strong&gt;!
If you would prefer to learn these best practices with a hands-on tutorial,
check out the &lt;a href=&quot;https://web.dev/codelab-sign-up-form-best-practices&quot;&gt;Sign-up form best practices codelab&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example of a very simple sign-up form that demonstrates all of the best practices:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 700px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/signup-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;signup-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
This post is about form best practices.&lt;/p&gt;
&lt;p&gt;It does not explain how to implement sign-up via a third-party identity provider (federated login)
or show how to build backend services to authenticate users, store credentials, and manage accounts.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/identity/sign-in/web/sign-in&quot; rel=&quot;noopener&quot;&gt;Integrating Google Sign-In into your web app&lt;/a&gt;
explains how to add federated login to your sign-up options.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/gcp/12-best-practices-for-user-account&quot; rel=&quot;noopener&quot;&gt;12 best practices for user
account, authorization and password management&lt;/a&gt; outlines core back-end principles for managing user accounts.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;checklist&quot;&gt;Checklist &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#checklist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#no-forced-sign-in&quot;&gt;Avoid sign-in if you can&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#obvious-account-creation&quot;&gt;Make it obvious how to create an account&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#obvious-account-details&quot;&gt;Make it obvious how to access account details&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#cut-clutter&quot;&gt;Cut form clutter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#session-length&quot;&gt;Consider session length&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#help-password-managers&quot;&gt;Help password managers securely suggest and store passwords&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#no-compromised-passwords&quot;&gt;Don&#39;t allow compromised passwords&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#allow-password-pasting&quot;&gt;Do allow password pasting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#salt-and-hash&quot;&gt;Never store or transmit passwords in plain text&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#no-forced-password-updates&quot;&gt;Don&#39;t force password updates&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#password-change&quot;&gt;Make it simple to change or reset passwords&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#federated-login&quot;&gt;Enable federated login&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#account-switching&quot;&gt;Make account switching simple&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#multi-factor-authentication&quot;&gt;Consider offering multi-factor authentication&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#username&quot;&gt;Take care with usernames&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#analytics-rum&quot;&gt;Test in the field as well as the lab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#test-platforms&quot;&gt;Test on a range of browsers, devices and platforms&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;no-forced-sign-in&quot;&gt;Avoid sign-in if you can &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#no-forced-sign-in&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before you implement a sign-up form and ask users to create an account on your site, consider
whether you really need to. Wherever possible you should avoid gating features behind login.&lt;/p&gt;
&lt;p&gt;The best sign-up form is no sign-up form!&lt;/p&gt;
&lt;p&gt;By asking a user to create an account, you come between them and what they&#39;re trying to achieve.
You&#39;re asking a favor, and asking the user to trust you with personal data. Every password and item
of data you store carries privacy and security &amp;quot;data debt&amp;quot;, becoming a cost and liability for
your site.&lt;/p&gt;
&lt;p&gt;If the main reason you ask users to create an account is to save information between navigations or
browsing sessions, &lt;a href=&quot;https://web.dev/storage-for-the-web&quot;&gt;consider using client-side storage&lt;/a&gt; instead. For shopping
sites, forcing users to create an account to make a purchase is cited as a major reason for shopping
cart abandonment. You should &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#guest-checkout&quot;&gt;make guest checkout the default&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;obvious-account-creation&quot;&gt;Make sign-in obvious &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#obvious-account-creation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make it obvious how to create an account on your site, for example with a &lt;strong&gt;Login&lt;/strong&gt; or &lt;strong&gt;Sign in&lt;/strong&gt;
button at the top right of the page. Avoid using an ambiguous icon or vague wording (&amp;quot;Get on board!&amp;quot;,
&amp;quot;Join us&amp;quot;) and don&#39;t hide login in a navigational menu. The usability expert Steve Krug summed up
this approach to website usability: &lt;a href=&quot;https://uxplanet.org/dont-make-me-think-20-wise-thoughts-about-usability-from-steve-krug-876b563f1d63&quot; rel=&quot;noopener&quot;&gt;Don&#39;t make me think!&lt;/a&gt; If you need to
convince others on your web team, use &lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#analytics-rum&quot;&gt;analytics&lt;/a&gt; to show the impact of different
options.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of a mockup ecommerce website viewed on an Android phone. The one on the left uses an icon for the sign-in link that&amp;#x27;s somewhat ambiguous; the one on the right simply says &amp;#x27;Sign in&amp;#x27;&quot; decoding=&quot;async&quot; height=&quot;737&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/KeztoU8KgAqrQ5CKBSWw.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Make sign-in obvious. An icon may be ambiguous, but a &lt;b&gt;Sign
  in&lt;/b&gt; button or link is obvious.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You may be wondering whether to add a button (or link) to create an account and another one for
existing users to sign in. Many popular sites now simply display a single &lt;strong&gt;Sign in&lt;/strong&gt; button. When
the user taps or clicks on that, they also get a link to create an account if necessary. That&#39;s a
common pattern now, and your users are likely to understand it, but you can use
&lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#analytics-rum&quot;&gt;interaction analytics&lt;/a&gt; to monitor whether or not a single button works best.&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshots of sign-in for Gmail: one page, showing Sign in button, when clicked leads to form that also has a Create account link.&quot; decoding=&quot;async&quot; height=&quot;545&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/WUgCNqhEgvoWEVwGjfrA.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The Gmail sign-in page has a link to create an account.&lt;br /&gt;
    At window sizes larger than shown here, Gmail displays a &lt;b&gt;Sign in&lt;/b&gt; link and a &lt;b&gt;Create an
  account&lt;/b&gt; button.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Make sure to link accounts for users who sign up via an identity provider such as Google and who
also sign up using email and password. That&#39;s easy to do if you can access a user&#39;s email address
from the profile data from the identity provider, and match the two accounts. The code below shows
how to access email data for a Google Sign-in user.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// auth2 is initialized with gapi.auth2.init()&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;auth2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isSignedIn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; profile &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; auth2&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;currentUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBasicProfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Email: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;profile&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p id=&quot;obvious-account-details&quot;&gt;&lt;/p&gt;
&lt;p&gt;Once a user has signed in, make it clear how to access account details. In particular, make it
obvious how to &lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#password-change&quot;&gt;change or reset passwords&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;cut-clutter&quot;&gt;Cut form clutter &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#cut-clutter&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the sign-up flow, your job is to minimize complexity and keep the user focused. Cut the clutter.
This is not the time for distractions and temptations!&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/avoid-distractions.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Don&#39;t distract users from completing sign-up.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;On sign-up, ask for as little as possible. Collect additional user data (such as name and address)
only when you need to, and when the user sees a clear benefit from providing that data. Bear in mind
that every item of data you communicate and store incurs cost and liability.&lt;/p&gt;
&lt;p&gt;Don&#39;t double up your inputs just to make sure users get their contact details right. That slows down
form completion and doesn&#39;t make sense if form fields are autofilled. Instead, send a confirmation
code to the user once they&#39;ve entered their contact details, then continue with account creation
once they respond. This is a common sign-up pattern: users are used to it.&lt;/p&gt;
&lt;p&gt;You may want to consider password-free sign-in by sending users a code every time they sign in on
a new device or browser. Sites such as Slack and Medium use a version of this.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/medium-sign-in.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Password-free sign-in on medium.com.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;As with federated login, this has the added benefit that you don&#39;t have to manage user passwords.&lt;/p&gt;
&lt;h2 id=&quot;session-length&quot;&gt;Consider session length &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#session-length&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whatever approach you take to user identity, you&#39;ll need to make a careful decision about session
length: how long the user remains logged in, and what might cause you to log them out.&lt;/p&gt;
&lt;p&gt;Consider whether your users are on mobile or desktop, and whether
they are sharing on desktop, or sharing devices.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You can get around some of the issues of shared devices by enforcing re-authentication for sensitive
features, for example when a purchase is made or an account updated. You can find out more about
ways to implement re-authentication from the codelab &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/webauthn-reauth/#0&quot; rel=&quot;noopener&quot;&gt;Your First WebAuthn App&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;help-password-managers&quot;&gt;Help password managers securely suggest and store passwords &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#help-password-managers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can help third party and built-in browser password managers suggest and store passwords, so that
users don&#39;t need to choose, remember or type passwords themselves. Password managers work well in
modern browsers, synchronizing accounts across devices, across platform-specific and web apps—and
for new devices.&lt;/p&gt;
&lt;p&gt;This makes it extremely important to code sign-up forms correctly, in particular to use the correct
autocomplete values. For sign-up forms use &lt;code&gt;autocomplete=&amp;quot;new-password&amp;quot;&lt;/code&gt; for new passwords, and add
correct autocomplete values to other form fields wherever possible, such as &lt;code&gt;autocomplete=&amp;quot;email&amp;quot;&lt;/code&gt;
and &lt;code&gt;autocomplete=&amp;quot;tel&amp;quot;&lt;/code&gt;. You can also help password managers by using different &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;
values in sign-up and sign-in forms, for the &lt;code&gt;form&lt;/code&gt; element itself, as well as any &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;
and &lt;code&gt;textarea&lt;/code&gt; elements.&lt;/p&gt;
&lt;p&gt;You should also use the appropriate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;type&lt;/code&gt; attribute&lt;/a&gt;
to provide the right keyboard on mobile and enable basic built-in validation by the browser.
You can find out more from &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#type&quot;&gt;Payment and address form best practices&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices&quot;&gt;Sign-in form best practices&lt;/a&gt; has lots more tips on how to improve
form design, layout and accessibility, and how to code forms correctly in order to take advantage
of built-in browser features.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;secure-passwords&quot;&gt;Ensure users enter secure passwords &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#secure-passwords&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enabling password managers to suggest passwords is the best option, and you should encourage
users to accept the strong passwords suggested by browsers and third-party browser managers.&lt;/p&gt;
&lt;p&gt;However, many users want to enter their own passwords, so you need to implement rules for password
strength. The US National Institute of Standards and Technology explains
&lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html#5-authenticator-and-verifier-requirements&quot; rel=&quot;noopener&quot;&gt;how to avoid insecure passwords&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Sign-up forms on some sites have password validation rules that don&#39;t allow the strong passwords
generated by browser and third-party password managers. Make sure your site doesn&#39;t do this,
since it interrupts form completion, annoys users, and requires users to make up their own
passwords, which may be less secure than those generated by password managers.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;no-compromised-passwords&quot;&gt;Don&#39;t allow compromised passwords &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#no-compromised-passwords&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whatever rules you choose for passwords, you should never allow passwords that have been &lt;a href=&quot;https://haveibeenpwned.com/PwnedWebsites&quot; rel=&quot;noopener&quot;&gt;exposed in
security breaches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once a user has entered a password, you need to check that it&#39;s not a password that&#39;s already been
compromised. The site &lt;a href=&quot;https://haveibeenpwned.com/Passwords&quot; rel=&quot;noopener&quot;&gt;Have I Been Pwned&lt;/a&gt; provides an API for password
checking, or you can run this as a service yourself.&lt;/p&gt;
&lt;p&gt;Google&#39;s Password Manager also allows you to &lt;a href=&quot;https://passwords.google.com/checkup&quot; rel=&quot;noopener&quot;&gt;check if any of your existing passwords have been
compromised&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you do reject the password that a user proposes, tell them specifically why it was rejected.
&lt;a href=&quot;https://baymard.com/blog/inline-form-validation&quot; rel=&quot;noopener&quot;&gt;Show problems inline and explain how to fix them&lt;/a&gt;,
as soon as the user has entered a value—not after they&#39;ve submitted the sign-up form and had to
wait for a response from your server.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
   &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
     &lt;source src=&quot;https://samdutton.com/password-validation.mp4&quot; type=&quot;video/mp4&quot; /&gt;
   &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Be clear why a password is rejected.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;allow-password-pasting&quot;&gt;Don&#39;t prohibit password pasting &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#allow-password-pasting&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some sites don&#39;t allow text to be pasted into password inputs.&lt;/p&gt;
&lt;p&gt;Disallowing password pasting annoys users, encourages passwords that are memorable (and therefore
may be easier to compromise) and, according to organizations such as the UK National
Cyber Security Centre, may actually &lt;a href=&quot;https://www.ncsc.gov.uk/blog-post/let-them-paste-passwords&quot; rel=&quot;noopener&quot;&gt;reduce security&lt;/a&gt;.
Users only become aware that pasting is disallowed &lt;em&gt;after&lt;/em&gt; they try to paste their password, so
&lt;a href=&quot;https://github.com/OWASP/owasp-masvs/issues/106&quot; rel=&quot;noopener&quot;&gt;disallowing password pasting doesn&#39;t avoid clipboard vulnerabilities&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;salt-and-hash&quot;&gt;Never store or transmit passwords in plain text &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#salt-and-hash&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make sure to &lt;a href=&quot;https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#Use_a_cryptographically_strong_credential-specific_salt&quot; rel=&quot;noopener&quot;&gt;salt and hash&lt;/a&gt; passwords—and &lt;a href=&quot;https://www.schneier.com/blog/archives/2011/04/schneiers_law.html&quot; rel=&quot;noopener&quot;&gt;don&#39;t try to invent your own hashing algorithm&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;no-forced-password-updates&quot;&gt;Don&#39;t force password updates &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#no-forced-password-updates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://pages.nist.gov/800-63-3/sp800-63b.html#-5112-memorized-secret-verifiers:~:text=Verifiers%20SHOULD%20NOT%20require%20memorized%20secrets%20to%20be%20changed%20arbitrarily%20(e.g.%2C%20periodically).&quot; rel=&quot;noopener&quot;&gt;Don&#39;t force users to update their passwords arbitrarily.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Forcing password updates can be costly for IT departments, annoying to users, and &lt;a href=&quot;https://pages.nist.gov/800-63-FAQ/#q-b05&quot; rel=&quot;noopener&quot;&gt;doesn&#39;t have much
impact on security&lt;/a&gt;. It&#39;s also likely to encourage people
to use insecure memorable passwords, or to keep a physical record of passwords.&lt;/p&gt;
&lt;p&gt;Rather than force password updates, you should monitor for unusual account activity and warn users.
If possible you should also monitor for passwords that become compromised because of data breaches.&lt;/p&gt;
&lt;p&gt;You should also provide your users with access to their account login history, showing them where
and when a login happened.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Gmail account activity page&quot; decoding=&quot;async&quot; height=&quot;469&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/zZXmhWc9bZ1GtvrE5Ooq.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;&lt;a href=&quot;https://support.google.com/mail/answer/45938?hl=en-GB&quot; title=&quot;Find out how to view Gmail account activity.&quot;&gt;Gmail account activity page&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;password-change&quot;&gt;Make it simple to change or reset passwords &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#password-change&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make it obvious to users where and how to &lt;strong&gt;update&lt;/strong&gt; their account password. On some sites, it&#39;s
surprisingly difficult.&lt;/p&gt;
&lt;p&gt;You should, of course, also make it simple for users to &lt;strong&gt;reset&lt;/strong&gt; their password if they forget it.
The Open Web Application Security Project provides detailed guidance on &lt;a href=&quot;https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html&quot; rel=&quot;noopener&quot;&gt;how to handle lost
passwords&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To keep your business and your users safe, it&#39;s especially important to help users change their
password if they discover that it&#39;s been compromised. To make this easier, you should add a
&lt;a href=&quot;https://w3c.github.io/webappsec-change-password-url/&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;/.well-known/change-password&lt;/code&gt;&lt;/a&gt; URL to your
site that redirects to your password management page. This enables password managers to navigate
your users directly to the page where they can change their password for your site. This feature is
now implemented in Safari, Chrome, and is coming to other browsers. &lt;a href=&quot;https://web.dev/change-password-url&quot;&gt;Help users change passwords
easily by adding a well-known URL for changing passwords&lt;/a&gt; explains how to
implement this.&lt;/p&gt;
&lt;p&gt;You should also make it simple for users to delete their account if that&#39;s what they want.&lt;/p&gt;
&lt;h2 id=&quot;federated-login&quot;&gt;Offer login via third-party identity providers &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#federated-login&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many users prefer to log in to websites using an email address and password sign-up form.
However, you should also enable users to log in via a third party identity provider, also known as
federated login.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;WordPress login page&quot; decoding=&quot;async&quot; height=&quot;513&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/jubgwX1shLB7qAIiioTU.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;WordPress login page, with Google and Apple login options.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This approach has several advantages. For users who create an account using federated login, you
don&#39;t need to ask for, communicate, or store passwords.&lt;/p&gt;
&lt;p&gt;You may also be able to access additional verified profile information from federated login, such
as an email address—which means the user doesn&#39;t have to enter that data and you don&#39;t need to do
the verification yourself. Federated login can also make it much easier for users when they get a
new device.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/identity/sign-in/web/sign-in&quot; rel=&quot;noopener&quot;&gt;Integrating Google Sign-In into your web app&lt;/a&gt;
explains how to add federated login to your sign-up options. &lt;a href=&quot;https://en.wikipedia.org/wiki/Federated_identity#Examples&quot; rel=&quot;noopener&quot;&gt;Many other&lt;/a&gt; identity platforms are available.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&amp;quot;First day experience&amp;quot; when you get a new device is increasingly important. Users expect to log in from
multiple devices including their phone, laptop, desktop, tablet, TV, or from a car. If your sign-up
and sign-in forms aren&#39;t seamless, this is a moment where you risk losing users, or at least losing
contact with them until they get set up again. You need to make it as quick and easy as possible for
users on new devices to get up and running on your site. This is another area where federated login
can help.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;account-switching&quot;&gt;Make account switching simple &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#account-switching&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many users share devices and swap between accounts using the same browser. Whether users access
federated login or not, you should make account switching simple.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Gmail, showing account switching&quot; decoding=&quot;async&quot; height=&quot;494&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/sPDZJIY5Vo2ijqyuofCy.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Account switching on Gmail.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;multi-factor-authentication&quot;&gt;Consider offering multi-factor authentication &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#multi-factor-authentication&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Multi-factor authentication means ensuring that users provide authentication in more than one way.
For example, as well as requiring the user to set a password, you might also enforce verification
using a one-time-passcode sent by email or an SMS text message, or by using an app-based one-time
code, security key or fingerprint sensor. &lt;a href=&quot;https://web.dev/sms-otp-form&quot;&gt;SMS OTP best practices&lt;/a&gt; and
&lt;a href=&quot;https://developers.google.com/web/updates/2018/05/webauthn&quot; rel=&quot;noopener&quot;&gt;Enabling Strong Authentication with WebAuthn&lt;/a&gt;
explain how to implement multi-factor authentication.&lt;/p&gt;
&lt;p&gt;You should certainly offer (or enforce) multi-factor authentication if your site handles personal or
sensitive information.&lt;/p&gt;
&lt;h2 id=&quot;username&quot;&gt;Take care with usernames &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#username&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Don&#39;t insist on a username unless (or until) you need one. Enable users to sign up and sign in with
only an email address (or telephone number) and password—or &lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#federated-login&quot;&gt;federated login&lt;/a&gt;
if they prefer. Don&#39;t force them to choose and remember a username.&lt;/p&gt;
&lt;p&gt;If your site does require usernames, don&#39;t impose unreasonable rules on them, and don&#39;t stop users
from updating their username. On your backend you should generate a unique ID for every user account,
not an identifier based on personal data such as username.&lt;/p&gt;
&lt;p&gt;Also make sure to use &lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt; for usernames.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
As with personal names, ensure that usernames aren&#39;t restricted to characters from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types:~:text=Latin%20alphabet&quot; rel=&quot;noopener&quot;&gt;Latin
alphabet&lt;/a&gt;. &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#unicode-matching&quot;&gt;Payment and address form best practices&lt;/a&gt;
explains how and why to validate using Unicode letter matching.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;test-platforms&quot;&gt;Test on a range of devices, platforms, browsers and versions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#test-platforms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Test sign-up forms on the platforms most common for your users. Form element functionality may vary,
and differences in viewport size can cause layout problems. BrowserStack enables &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;free testing for
open source projects&lt;/a&gt; on a range of devices and browsers.&lt;/p&gt;
&lt;h2 id=&quot;analytics-rum&quot;&gt;Implement analytics and Real User Monitoring &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#analytics-rum&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You need &lt;a href=&quot;https://web.dev/how-to-measure-speed/#lab-data-vs-field-data&quot;&gt;field data as well as lab data&lt;/a&gt;
to understand how users experience your sign-up forms. Analytics and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Performance/Rum-vs-Synthetic#Real_User_Monitoring&quot; rel=&quot;noopener&quot;&gt;Real User Monitoring&lt;/a&gt;
(RUM) provide data for the actual experience of your users, such as how long sign-up pages take to
load, which UI components users interact with (or not) and how long it takes users to complete
sign-up.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page analytics&lt;/strong&gt;: &lt;a href=&quot;https://analytics.google.com/analytics/academy/course/6&quot; rel=&quot;noopener&quot;&gt;page views, bounce rates and exits&lt;/a&gt; for every page in your sign-up flow.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interaction analytics&lt;/strong&gt;: &lt;a href=&quot;https://support.google.com/analytics/answer/6180923?hl=en&quot; rel=&quot;noopener&quot;&gt;goal funnels&lt;/a&gt;
and &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/gtagjs/events&quot; rel=&quot;noopener&quot;&gt;events&lt;/a&gt;
indicate where users abandon the sign-up flow and what proportion of users click buttons,
links, and other components of your sign-up pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website performance&lt;/strong&gt;: &lt;a href=&quot;https://web.dev/user-centric-performance-metrics&quot;&gt;user-centric metrics&lt;/a&gt;
can tell you if your sign-up flow is slow to load or &lt;a href=&quot;https://web.dev/cls&quot;&gt;visually unstable&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Small changes can make a big difference to completion rates for sign-up forms. Analytics and RUM
enable you to optimize and prioritize changes, and monitor your site for problems that aren&#39;t
exposed by local testing.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Keep learning &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/sign-up-form-best-practices/#resources&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices&quot;&gt;Sign-in form best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices&quot;&gt;Payment and address form best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms&quot; rel=&quot;noopener&quot;&gt;Create Amazing Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/08/best-practices-for-mobile-form-design/&quot; rel=&quot;noopener&quot;&gt;Best Practices For Mobile Form Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/more-capable-form-controls&quot;&gt;More capable form controls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webaim.org/techniques/forms/&quot; rel=&quot;noopener&quot;&gt;Creating Accessible Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api&quot; rel=&quot;noopener&quot;&gt;Streamlining the Sign-up Flow Using Credential Management API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/web-otp&quot;&gt;Verify phone numbers on the web with the WebOTP API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@ecowarriorprincess&quot; rel=&quot;noopener&quot;&gt;@ecowarriorprincess&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/lUShu7PHIGA&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Address form best practices codelab</title>
    <link href="https://web.dev/codelab-address-form-best-practices/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/codelab-address-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;How can you design a form that works well for a variety of names and address formats? Minor form
glitches irritate users and can cause them to leave your site or give up on completing a purchase
or sign-up.&lt;/p&gt;
&lt;p&gt;This codelab shows you how to build an easy-to-use, accessible form that works well for most users.&lt;/p&gt;
&lt;h2 id=&quot;step-1:-make-the-most-of-html-elements-and-attributes&quot;&gt;Step 1: Make the most of HTML elements and attributes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#step-1:-make-the-most-of-html-elements-and-attributes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You&#39;ll start this part of the codelab with an empty form, just a heading and a button all on
their own. Then you&#39;ll begin adding inputs. (CSS and a little bit of JavaScript are already
included.)&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 300px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/address-form-codelab-0?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=css%2Fmain.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;address-form-codelab-0 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; to make the project editable.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Add a name field to your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element with the following code:&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;That may look complicated and repetitive for just one name field, but it already does a lot.&lt;/p&gt;
&lt;p&gt;You associated the &lt;code&gt;label&lt;/code&gt; with the &lt;code&gt;input&lt;/code&gt; by matching the &lt;code&gt;label&lt;/code&gt;&#39;s &lt;code&gt;for&lt;/code&gt; attribute with the
&lt;code&gt;input&lt;/code&gt;&#39;s &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;. A tap or click on a label moves focus to its input, making a much bigger
target than the input on its own—which is good for fingers, thumbs and mouse clicks! Screenreaders
announce label text when the label or the label&#39;s input gets focus.&lt;/p&gt;
&lt;p&gt;What about &lt;code&gt;name=&amp;quot;name&amp;quot;&lt;/code&gt;? This is the name (which happens to be &#39;name&#39;!) associated with the data
from this input which is sent to the server when the form is submitted. Including a &lt;code&gt;name&lt;/code&gt; attribute
also means that the data from this element can be accessed by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects&quot; rel=&quot;noopener&quot;&gt;FormData API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;step-2:-add-attributes-to-help-users-enter-data&quot;&gt;Step 2: Add attributes to help users enter data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#step-2:-add-attributes-to-help-users-enter-data&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What happens when you tap or click in the &lt;strong&gt;Name&lt;/strong&gt; input in Chrome? You should see autofill
suggestions that the browser has stored and guesses are appropriate for this input, given its
&lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; values.&lt;/p&gt;
&lt;p&gt;Now add &lt;code&gt;autocomplete=&amp;quot;name&amp;quot;&lt;/code&gt; to your input code so it looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Reload the page in Chrome and tap or click in the &lt;strong&gt;Name&lt;/strong&gt; input. What differences do you see?&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Ever wondered how to delete autofill suggestions in Chrome?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;delete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mac: &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;fn&lt;/code&gt; + &lt;code&gt;delete&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;You should notice a subtle change: with &lt;code&gt;autocomplete=&amp;quot;name&amp;quot;&lt;/code&gt;, the suggestions are now specific
values that were used previously in form inputs that also had &lt;code&gt;autocomplete=&amp;quot;name&amp;quot;&lt;/code&gt;. The browser
isn&#39;t just guessing what might be appropriate: you have control. You&#39;ll also see the &lt;strong&gt;Manage…&lt;/strong&gt;
option to view and edit the names and addresses stored by your browser.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of Chrome on an Android phone showing a form with a single input, with and without an autocomplete value. One shows browser UI heuristicically suggestions values; the other shows UI when there are stored autocomplete values.&quot; decoding=&quot;async&quot; height=&quot;684&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/uSc6aqRgHoL2qIDyj803.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;UI for autofill with guessed values, versus autocomplete.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If an &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#autocomplete-attribute&quot;&gt;appropriate autocomplete value&lt;/a&gt;
is available for an &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;, you should use it!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now add &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot; rel=&quot;noopener&quot;&gt;constraint validation attributes&lt;/a&gt;
&lt;code&gt;maxlength&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt; and &lt;code&gt;required&lt;/code&gt; so your input code looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;100&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\p{L} \-\.]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;maxlength=&amp;quot;100&amp;quot;&lt;/code&gt; means the browser won&#39;t allow any input longer than 100 characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pattern=&amp;quot;[\p{L} \-\.]+&amp;quot;&lt;/code&gt; uses a regular expression that allows &lt;a href=&quot;https://javascript.info/regexp-unicode&quot; rel=&quot;noopener&quot;&gt;Unicode letter characters&lt;/a&gt;,
hyphens and periods (full stops). That means names such as Françoise or Jörg aren&#39;t classed as
&#39;invalid&#39;. That isn&#39;t the case if you use the value &lt;code&gt;\w&lt;/code&gt; which [only allows characters from the
&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices/#unicode-matching&quot;&gt;Latin alphabet&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;required&lt;/code&gt; means… required! The browser will not allow the form to be submitted without data for
this field, and will warn and highlight the input if you attempt to submit it. No extra code
required!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
This codelab doesn&#39;t address (😜) localization or internationalization. Depending on where your users
are located, you need to consider address &lt;em&gt;formats&lt;/em&gt; as well as the different &lt;em&gt;names&lt;/em&gt; used for
address components, even within the same language: ZIP, postal code, Eircode or PIN? It may be
necessary for your site to &lt;a href=&quot;https://www.smashingmagazine.com/2020/11/internationalization-localization-static-sites#determining-user-s-language-and-region&quot; rel=&quot;noopener&quot;&gt;customize for multiple locales&lt;/a&gt;,
but the address form in this codelab is designed for flexibility, and should work &amp;quot;well enough&amp;quot; for
a range of addresses.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To test how the form works with and without these attributes, try entering data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try entering values that don&#39;t fit the &lt;code&gt;pattern&lt;/code&gt; attribute.&lt;/li&gt;
&lt;li&gt;Try submitting the form with an empty input. You&#39;ll see built-in browser functionality warning of
the empty required field and setting focus on it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;step-3:-add-a-flexible-address-field-to-your-form&quot;&gt;Step 3: Add a flexible address field to your form &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#step-3:-add-a-flexible-address-field-to-your-form&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To add an address field, add the following code to your form:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Address&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;textarea&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;300&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;textarea&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;A &lt;code&gt;textarea&lt;/code&gt; is the most flexible way for your users to enter their address, and it&#39;s great for
cutting and pasting.&lt;/p&gt;
&lt;p&gt;You should avoid splitting your address form into components such as street name and number unless
you really need to. Don&#39;t force users to try to fit their address into fields that don&#39;t make sense.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Consider the way that address data from your form is being used. What&#39;s it for? Make sure to
understand data requirements and who sets them.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now add fields for &lt;strong&gt;ZIP or postal code&lt;/strong&gt;, and &lt;strong&gt;Country or region&lt;/strong&gt;. For simplicity,
only the first five countries are included here. A full list is included in the &lt;a href=&quot;https://address-form.glitch.me/&quot; rel=&quot;noopener&quot;&gt;completed address form&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;postal-code&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;ZIP or postal code (optional)&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;postal-code&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;postal-code&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;postal-code&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;20&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;country-region&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Country or region&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;select&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;country&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;selected&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;SPACER&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;AF&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Afghanistan&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;AX&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Åland Islands&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;AL&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Albania&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;DZ&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Algeria&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;option&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;AS&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;American Samoa&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;You&#39;ll see that &lt;strong&gt;Postal code&lt;/strong&gt; is optional: that&#39;s because &lt;a href=&quot;https://hellowahab.wordpress.com/2011/05/24/list-of-countries-without-postal-codes/&quot; rel=&quot;noopener&quot;&gt;many countries don&#39;t use postal codes&lt;/a&gt;.
(&lt;a href=&quot;https://www.grcdi.nl/gsb/global%20sourcebook.html&quot; rel=&quot;noopener&quot;&gt;Global Sourcebook&lt;/a&gt; provides information about
address formats for 194 different countries, including sample addresses.) The label &lt;strong&gt;Country or
region&lt;/strong&gt;  is used instead of &lt;strong&gt;Country&lt;/strong&gt;, because some options from the full list (such as the
United Kingdom) are not single countries (despite the &lt;code&gt;autocomplete&lt;/code&gt; value).&lt;/p&gt;
&lt;h2 id=&quot;step-4:-enable-customers-to-easily-enter-shipping-and-billing-addresses&quot;&gt;Step 4: Enable customers to easily enter shipping and billing addresses &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#step-4:-enable-customers-to-easily-enter-shipping-and-billing-addresses&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You&#39;ve built a highly functional address form, but what if your site requires more than one
address, for shipping and billing, for example? Try updating your form to enable customers to enter
shipping and billing addresses. How can you make data entry as quick and easy as possible,
especially if the two addresses are the same? The article that goes with this codelab explains
&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#billing-address&quot;&gt;techniques for handling multiple addresses&lt;/a&gt;.
Whatever you do, make sure to use the correct &lt;code&gt;autocomplete&lt;/code&gt; values!&lt;/p&gt;
&lt;h2 id=&quot;step-5:-add-a-telephone-number-field&quot;&gt;Step 5: Add a telephone number field &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#step-5:-add-a-telephone-number-field&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To add a telephone number input, add the following code to the form:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Telephone&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tel&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;30&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\d \-\+]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;enterkeyhint&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;done&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For phone numbers use a single input: don&#39;t split the number into parts. That makes it easier for
users to enter data or copy and paste, makes validation simpler, and enables browsers to autofill.&lt;/p&gt;
&lt;p&gt;There are two attributes that can improve the user experience of entering a telephone number:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type=&amp;quot;tel&amp;quot;&lt;/code&gt; ensures mobile users get the right keyboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enterkeyhint=&amp;quot;done&amp;quot;&lt;/code&gt; sets the mobile keyboard enter key label to show that this is the last
field and the form can now be submitted (the default is &lt;code&gt;next&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of a form on Android showing how the enterkeyhint input attribute changes the enter key button icon.&quot; decoding=&quot;async&quot; height=&quot;684&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/vReqMRQjLSI7e6UQ5WwX.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Use the enterkeyhint attribute to set the Enter button label:
    &#39;next&#39; and &#39;done&#39;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--gotchas&quot;&gt;&lt;strong&gt;Gotchas!&lt;/strong&gt;
&lt;p&gt;Using &lt;code&gt;type=&amp;quot;number&amp;quot;&lt;/code&gt; adds an up/down arrow to increment numbers, which makes no sense for data such
as telephone, payment card, or account numbers. Instead, you should use &lt;code&gt;type=&amp;quot;tel&amp;quot;&lt;/code&gt; for telephone
numbers. For other numbers, use &lt;code&gt;type=&amp;quot;text&amp;quot;&lt;/code&gt; (or leave off the attribute, since &lt;code&gt;text&lt;/code&gt; is the
default) and add &lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt; to get a numeric keyboard on mobile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Can you see any problems with using a single input for telephone number? Do you store phone
number parts (country and area code) separately? If so, why?&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Your complete address form should now look like this:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 970px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/address-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;address-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Try out your form on different devices. What devices and browsers are you targeting? How could
the form be improved?&lt;/li&gt;
&lt;/ul&gt;
&lt;p id=&quot;different-devices&quot;&gt;There are several ways to test your form on different devices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode&quot; rel=&quot;noopener&quot;&gt;Use Chrome DevTools Device Mode&lt;/a&gt;
to simulate mobile devices.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/chrome/answer/9430554&quot; rel=&quot;noopener&quot;&gt;Send the URL from your computer to your phone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use a service such as &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;BrowserStack&lt;/a&gt; to test on a range
of devices and browsers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Before you start building forms, make sure to understand what data is required and if that data is
strictly necessary. Don&#39;t ask for data you don&#39;t need! The simplest way to reduce form complexity
and improve privacy is to remove unnecessary fields. Storing less data also reduces back-end data
cost and liability.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;going-further&quot;&gt;Going further &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-address-form-best-practices/#going-further&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#analytics-rum&quot;&gt;Analytics and Real User Monitoring&lt;/a&gt;:
enable the performance and usability of your form design to be tested and monitored for real users,
and to check if changes are successful. You should monitor load performance and other &lt;a href=&quot;https://web.dev/vitals&quot;&gt;Web Vitals&lt;/a&gt;,
as well as page analytics (what proportion of users bounce from your address form without completing
it? how long do users spend on your address form pages?) and interaction analytics (which page
components do users interact with, or not?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where are your users located? How do they format their address? What names do they use for address
components, such as ZIP or postal code? &lt;a href=&quot;http://www.columbia.edu/~fdc/postal/&quot; rel=&quot;noopener&quot;&gt;Frank&#39;s Compulsive Guide to Postal Addresses&lt;/a&gt;
provides useful links and extensive guidance detailing address formats in over 200 countries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Country selectors are notorious for &lt;a href=&quot;https://www.smashingmagazine.com/2011/11/redesigning-the-country-selector/&quot; rel=&quot;noopener&quot;&gt;poor usability&lt;/a&gt;.
It&#39;s &lt;a href=&quot;https://baymard.com/blog/drop-down-usability#in-general-avoid-drop-downs-when-there-are-more-than-10-or-fewer-than-5-options&quot; rel=&quot;noopener&quot;&gt;best to avoid select elements for a long list of items&lt;/a&gt;
and the ISO 3166 country-code standard &lt;a href=&quot;https://www.iso.org/obp/ui/#search/code/&quot; rel=&quot;noopener&quot;&gt;currently lists 249 countries&lt;/a&gt;!
Instead of a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; you may want to consider an alternative such as the
&lt;a href=&quot;https://baymard.com/labs/country-selector&quot; rel=&quot;noopener&quot;&gt;Baymard Institute country selector&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can you design a better selector for lists with a lot of items? How would you ensure your design is
accessible across a range of devices and platforms? (The &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element doesn&#39;t work well for a
large number of items, but at least it&#39;s usable on virtually all browsers and assistive devices!)&lt;/p&gt;
&lt;p&gt;The blog post
&lt;a href=&quot;https://shkspr.mobi/blog/2017/11/input-type-country/&quot; rel=&quot;noopener&quot;&gt;&amp;lt;input type=&amp;quot;country&amp;quot; /&amp;gt;&lt;/a&gt; discusses
the complexity of standardizing a country selector. Localization of country names can also be
problematic. &lt;a href=&quot;http://www.countries-list.info/Download-List&quot; rel=&quot;noopener&quot;&gt;Countries Lists&lt;/a&gt; has a tool for
downloading country codes and names in multiple languages, in multiple formats.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Payment form best practices codelab</title>
    <link href="https://web.dev/codelab-payment-form-best-practices/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/codelab-payment-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This codelab shows you how to build a payment form that is secure, accessible and easy to use.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
This article is about frontend best practices for payment forms. It does not explain how to
implement transactions on your site. To find out more about adding payment functionality to your
website, see &lt;a href=&quot;https://web.dev/payments&quot;&gt;Web Payments&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;step-1:-use-html-as-intended&quot;&gt;Step 1: Use HTML as intended &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-payment-form-best-practices/#step-1:-use-html-as-intended&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use elements built for the job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you&#39;ll see, these elements enable built-in browser functionality, improve accessibility, and
add meaning to your markup.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; to make the project editable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Take a look at the HTML for your form in &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Payment form&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Card number&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Name on card&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Expiry date&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Security code&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;explanation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Last 3 digits on back of card&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;complete-payment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Complete payment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;There are &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements for card number, name on card, expiry date and security code. They&#39;re all
wrapped in &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; elements, and each has a label. The &lt;strong&gt;Complete Payment&lt;/strong&gt; button is an HTML
&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;. Later in this codelab you&#39;ll learn about the browser features you can access by using
these elements.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements don&#39;t have closing tags. That&#39;s because they are &lt;a href=&quot;https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements&quot; rel=&quot;noopener&quot;&gt;void&lt;/a&gt; (empty) elements: they don&#39;t have any
content in themselves. A &amp;quot;/&amp;quot; character at the end of a void element is optional: either &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;
or &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; is OK.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to preview your payment form.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the form work well enough as it is?&lt;/li&gt;
&lt;li&gt;Is there anything you would change to make it work better?&lt;/li&gt;
&lt;li&gt;How about on mobile?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click &lt;strong&gt;View Source&lt;/strong&gt; to return to your source code.&lt;/p&gt;
&lt;h2 id=&quot;step-2:-design-for-mobile-and-desktop&quot;&gt;Step 2: Design for mobile and desktop &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-payment-form-best-practices/#step-2:-design-for-mobile-and-desktop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The HTML you added is valid, but the default browser styling makes the form hard to use, especially
on mobile. It doesn&#39;t look too good, either.&lt;/p&gt;
&lt;p&gt;You need to ensure your forms work well on a range of devices by adjusting padding, margins, and
font sizes.&lt;/p&gt;
&lt;p&gt;Copy all the CSS below and paste it into your own &lt;code&gt;css/main.css&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 400px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-form-codelab-2?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=css%2Fmain.css&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-form-codelab-2 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;That&#39;s a lot of CSS! The main things to be aware of are the changes to sizes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;margin&lt;/code&gt; are added to inputs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;font-size&lt;/code&gt; and other values are different for different viewport sizes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you&#39;re ready, click &lt;strong&gt;View App&lt;/strong&gt; to see the styled form.  You&#39;ll also notice that borders have
been adjusted, and &lt;code&gt;display: block;&lt;/code&gt; is used for labels so they go on a line on their own, and
inputs can be full width. &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#label:~:text=put%20your%20labels%20above%20your%20inputs&quot;&gt;Sign-in form best practices&lt;/a&gt;
explains the benefits of this approach in more detail.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:invalid&lt;/code&gt; selector is used to indicate when an input has an invalid value. (You&#39;ll use this
later in the codelab.)&lt;/p&gt;
&lt;p&gt;The CSS is mobile-first:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The default CSS is for viewports less than &lt;code&gt;400px&lt;/code&gt; wide.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Media_queries&quot; rel=&quot;noopener&quot;&gt;Media queries&lt;/a&gt; are
used to override the default for viewports that are at least &lt;code&gt;400px&lt;/code&gt; wide, and then again for
viewports that are at least &lt;code&gt;500px&lt;/code&gt; wide. This should work well for smaller phones, mobile devices
with larger screens, and on desktop.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whenever you build for the web, you need to test on different devices and viewport sizes. That&#39;s
especially true for forms, because one small glitch can make them unusable. You should always adjust
&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#breakpoints&quot;&gt;CSS breakpoints&lt;/a&gt; to ensure they work well with your
content and your target devices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is the whole form visible?&lt;/li&gt;
&lt;li&gt;Are the form inputs big enough?&lt;/li&gt;
&lt;li&gt;Is all the text readable?&lt;/li&gt;
&lt;li&gt;Did you notice any differences between using a real mobile device, and viewing the form in
Device Mode in Chrome DevTools?&lt;/li&gt;
&lt;li&gt;Did you need to adjust breakpoints?&lt;/li&gt;
&lt;/ul&gt;
&lt;p id=&quot;different-devices&quot;&gt;There are several ways to test your form on different devices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode&quot; rel=&quot;noopener&quot;&gt;Use Chrome DevTools Device Mode&lt;/a&gt;
to simulate mobile devices.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/chrome/answer/9430554&quot; rel=&quot;noopener&quot;&gt;Send the URL from your computer to your phone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use a service such as &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;BrowserStack&lt;/a&gt; to test on a range
of devices and browsers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;step-3:-add-attributes-to-help-users-enter-data&quot;&gt;Step 3: Add attributes to help users enter data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-payment-form-best-practices/#step-3:-add-attributes-to-help-users-enter-data&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enable the browser to store and autofill input values, and provide access to secure built-in
payment and validation features.&lt;/p&gt;
&lt;p&gt;Add attributes to the form in your &lt;code&gt;index.html&lt;/code&gt; file so it looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Payment form&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Card number&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-number&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;inputmode&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;numeric&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\d ]{10,30}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Name on card&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\p{L} \-\.]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Expiry date&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-exp&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;MM/YY&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;5&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Security code&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;cc-csc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;inputmode&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;numeric&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;3&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;explanation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Back of card, last 3 digits&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;complete-payment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Complete payment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;View your app again and then tap or click in the &lt;strong&gt;Card number&lt;/strong&gt; field. Depending on the device and
platform, you may see a chooser showing payment methods stored for the browser, like the one below.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two screenshots of a payment form in Chrome on an Android phone. One shows the built-in browser payment card selector; the other shows dummy autofilled values.&quot; decoding=&quot;async&quot; height=&quot;684&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/yPPoZYFMeSILBjgyjcFI.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Built-in browser payment chooser and autofill.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Once you select a payment method and enter your security code, the browser autofills the form using
the payment card &lt;code&gt;autocomplete&lt;/code&gt; values you added to the form:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cc-number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-exp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc-csc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many browsers also check and confirm the validity of credit card numbers and security codes.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Don&#39;t be alarmed! Your browser may be able to autofill the form with stored payment card data, but
no payment can be made, and no data is transferred or saved.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On a mobile device you&#39;ll also notice that you get a numeric keyboard as soon as you tap into the
&lt;strong&gt;Card number&lt;/strong&gt; field. That&#39;s because you used &lt;code&gt;inputmode=&amp;quot;numeric&amp;quot;&lt;/code&gt;. For numeric fields this makes
it easier to enter numbers and impossible to enter non-numeric characters, and nudges users to
remember the type of data they&#39;re entering.&lt;/p&gt;
&lt;p&gt;It&#39;s extremely important to correctly add all available &lt;code&gt;autocomplete&lt;/code&gt; values to payment forms. It&#39;s
quite common for sites to miss out the &lt;code&gt;autocomplete&lt;/code&gt; value for the card expiry date and other
fields. If a single &lt;code&gt;autofill&lt;/code&gt; value is wrong or missing, users will need to retrieve their actual
card to manually enter card data, and you may lose out on a sale. If autofill on payment forms
doesn&#39;t work properly, users may also decide to keep a record of payment card details on their phone
or computer, which is highly insecure.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Research shows that &lt;a href=&quot;https://baymard.com/blog/how-to-format-expiration-date-fields&quot; rel=&quot;noopener&quot;&gt;it may be better to use separate select elements for month and year&lt;/a&gt; rather than a single input. It&#39;s up to you which you think is
best. Test this out by remixing and editing the HTML from our complete
&lt;a href=&quot;https://glitch.com/~payment-form&quot; rel=&quot;noopener&quot;&gt;payment form demo&lt;/a&gt;, which includes code for both types of expiry
date field.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Try submitting the payment form with an empty field. The browser prompts to complete missing
data. Now add a letter to the value in the &lt;strong&gt;Card number&lt;/strong&gt; field and try submitting the form. The
browser warns that value is invalid. This happens because you used the &lt;code&gt;pattern&lt;/code&gt; attribute to
specify valid values for a field. The same works for &lt;code&gt;maxlength&lt;/code&gt; and other
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot; rel=&quot;noopener&quot;&gt;validation constraints&lt;/a&gt;
No JavaScript required.&lt;/p&gt;
&lt;p&gt;Your payment form should now look this:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 750px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-form-codelab-3?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-form-codelab-3 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Try removing &lt;code&gt;autocomplete&lt;/code&gt; values and filling in the payment form. What difficulties do you
encounter?&lt;/li&gt;
&lt;li&gt;Try out payment forms on online stores. Consider what works well and what goes wrong. Are there
any common problems or best practices you should follow?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;step-4:-disable-the-payment-button-once-the-form-is-submitted&quot;&gt;Step 4: Disable the payment button once the form is submitted &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-payment-form-best-practices/#step-4:-disable-the-payment-button-once-the-form-is-submitted&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You should consider disabling a submit button once the user has tapped or clicked it—especially when
the user is making payment. &lt;a href=&quot;https://baymard.com/blog/users-double-click-online&quot; rel=&quot;noopener&quot;&gt;Many users tap or click buttons repeatedly&lt;/a&gt;,
even if they&#39;re working fine. That can cause problems with payment processing and add to server load.&lt;/p&gt;
&lt;p&gt;Add the following JavaScript to your &lt;code&gt;js/main.js&lt;/code&gt; file:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; completePaymentButton &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;button#complete-payment&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;submit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handleFormSubmission&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleFormSubmission&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Handle invalid form data.&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    completePaymentButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Making payment...&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    completePaymentButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;disabled &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Made payment!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Try submitting the payment form and see what happens.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
Some sites leave form submit buttons disabled until the user has correctly completed all form
fields. It&#39;s best not to do that, since users may accidentally leave out a required value, or use an
invalid value, then tap or click the disabled submit button and assume your site is broken! Even if
you mark form values as invalid or missing, the user may not see the warnings (especially for longer
forms, and on mobile). Better to validate inline while the user is entering data–&lt;em&gt;and&lt;/em&gt; when they
try to submit the form.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is how your code should look at this point, with the addition of some comments and a
&lt;code&gt;validate()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 500px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-form-codelab-4?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=js%2Fmain.js&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-form-codelab-4 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You&#39;ll notice that the JavaScript includes commented-out code for data validation. This code uses
the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#constraints&quot; rel=&quot;noopener&quot;&gt;Constraint Validation API&lt;/a&gt;
(which is &lt;a href=&quot;https://caniuse.com/#search=constraint%20validation&quot; rel=&quot;noopener&quot;&gt;widely supported&lt;/a&gt;) to add custom
validation, accessing built-in browser UI to set focus and display prompts. Un-comment the code and
try it out. You&#39;ll need to set appropriate values for &lt;code&gt;someregex&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt;, and set a value for
&lt;code&gt;someField&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What &lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#analytics-rum&quot;&gt;analytics and Real User Monitoring data&lt;/a&gt;
would you monitor in order to identify ways to improve your forms?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your complete payment form should now look like this:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 750px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/payment-form?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;payment-form on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/codelab-payment-form-best-practices/#different-devices&quot;&gt;Try out your form on different devices&lt;/a&gt;. What devices and browsers are you
targeting? How could the form be improved?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;going-further&quot;&gt;Going further &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-payment-form-best-practices/#going-further&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Consider the following crucial form features that are not covered in this codelab:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Link to your Terms of Service and privacy policy documents: make it clear to users how you
safeguard their data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Style and branding: make sure these match the rest of your site. When entering names and addresses
and making payment, users need to feel comfortable, trusting that they&#39;re still in the right place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#analytics-rum&quot;&gt;Analytics and Real User Monitoring&lt;/a&gt;:
enable the performance and usability of your form design to be tested and monitored for real users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Sign-up form best practices codelab</title>
    <link href="https://web.dev/codelab-sign-up-form-best-practices/"/>
    <updated>2020-12-09T00:00:00Z</updated>
    <id>https://web.dev/codelab-sign-up-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This codelab shows you how to build a sign-up form that&#39;s secure, accessible, and easy to use.&lt;/p&gt;
&lt;h2 id=&quot;step-1:-use-meaningful-html&quot;&gt;Step 1: Use meaningful HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#step-1:-use-meaningful-html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this step you&#39;ll learn how to use form elements to make the most of built-in browser features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; to make the project editable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Take a look at the HTML for your form in &lt;code&gt;index.html&lt;/code&gt;. You&#39;ll see there are inputs for name, email
and password. Each is in a section, and each has a label. The &lt;strong&gt;Sign up&lt;/strong&gt; button is… a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;!
Later in this codelab, you&#39;ll learn the special powers of all these elements.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements don&#39;t have closing tags. That&#39;s because they are &lt;a href=&quot;https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements&quot; rel=&quot;noopener&quot;&gt;void&lt;/a&gt; (empty) elements: they don&#39;t have any
content in themselves. A &amp;quot;/&amp;quot; character at the end of a void element is optional: either &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;
or &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; is OK.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign up&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Full name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sign-up&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign up&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to preview your sign-up form. This shows you what a form looks like with no CSS other than the
&lt;a href=&quot;https://bitsofco.de/a-look-at-css-resets-in-2018&quot; rel=&quot;noopener&quot;&gt;default browser styles&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do the default styles &lt;em&gt;look&lt;/em&gt; OK? What would you change to make the form look better?&lt;/li&gt;
&lt;li&gt;Do the default styles &lt;em&gt;work&lt;/em&gt; OK? What problems might be encountered using your form as it is? What
about on mobile? What about for screenreaders or other &lt;a href=&quot;https://web.dev/a11y-tips-for-web-dev&quot;&gt;assistive technologies&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Who are your users, and what devices and browsers are you targeting?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://browserdefaultstyles.com/&quot; rel=&quot;noopener&quot;&gt;Browser Default Styles&lt;/a&gt; lists default CSS for HTML elements.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;test-your-form&quot;&gt;Test your form &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#test-your-form&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You could acquire a lot of hardware and set up a
&lt;a href=&quot;https://www.smashingmagazine.com/2016/11/worlds-best-open-device-labs/&quot; rel=&quot;noopener&quot;&gt;device lab&lt;/a&gt;, but there are
cheaper and simpler ways to try out your form on a range of browsers, platforms and devices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode&quot; rel=&quot;noopener&quot;&gt;Use Chrome DevTools Device Mode&lt;/a&gt;
to simulate mobile devices.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/chrome/answer/9430554&quot; rel=&quot;noopener&quot;&gt;Send the URL from your computer to your phone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use a service such as &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;BrowserStack&lt;/a&gt; to test on a range
of devices and browsers.&lt;/li&gt;
&lt;li&gt;Try out the form using a screenreader tool such as the &lt;a href=&quot;https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en&quot; rel=&quot;noopener&quot;&gt;ChromeVox&lt;/a&gt; Chrome extension.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Testing your site on a range of devices and browsers is especially important for forms, because
&lt;a href=&quot;https://baymard.com/checkout-usability&quot; rel=&quot;noopener&quot;&gt;small problems can cause high bounce rates&lt;/a&gt; and cause users
to give up on creating an account or completing a purchase.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to preview your sign-up form.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try out your form on different devices using Chrome DevTools Device Mode.&lt;/li&gt;
&lt;li&gt;Now open the form on a phone or other real devices. What differences do you see?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;step-2:-add-css-to-make-the-form-work-better&quot;&gt;Step 2: Add CSS to make the form work better &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#step-2:-add-css-to-make-the-form-work-better&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Click &lt;strong&gt;View Source&lt;/strong&gt; to return to your source code.&lt;/p&gt;
&lt;p&gt;There&#39;s nothing wrong with the HTML so far, but you need to make sure your form works well for a
range of users on mobile and desktop.&lt;/p&gt;
&lt;p&gt;In this step you&#39;ll add CSS to make the form easier to use.&lt;/p&gt;
&lt;p&gt;Copy and paste all the following CSS into &lt;code&gt;css/main.css&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 400px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-up-form-codelab-2?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=css%2Fmain.css&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-up-form-codelab-2 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to see your styled sign-up form. Then click &lt;strong&gt;View Source&lt;/strong&gt; to return to
&lt;code&gt;css/main.css&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Does this CSS work for a variety of browsers and screen sizes?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try adjusting &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;margin&lt;/code&gt;, and &lt;code&gt;font-size&lt;/code&gt; to suit your test devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The CSS is mobile-first. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Media_queries&quot; rel=&quot;noopener&quot;&gt;Media queries&lt;/a&gt;
are used to apply CSS rules for viewports that are at least &lt;code&gt;400px&lt;/code&gt; wide, and then again for
viewports that are at least &lt;code&gt;500px&lt;/code&gt; wide. Are these &lt;a href=&quot;https://www.browserstack.com/guide/responsive-design-breakpoints&quot; rel=&quot;noopener&quot;&gt;breakpoints&lt;/a&gt;
adequate? How should you choose breakpoints for forms?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Viewport&lt;/strong&gt; in this context means the display area available for your page. Mobile phones have a
smaller viewport than laptops, and a small browser window on a desktop monitor has a smaller
viewport than a maximized browser window.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;step-3:-add-attributes-to-help-users-enter-data&quot;&gt;Step 3: Add attributes to help users enter data &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#step-3:-add-attributes-to-help-users-enter-data&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this step you add attributes to your input elements to enable the browser to store and autofill
form field values, and warn of fields with missing or invalid data.&lt;/p&gt;
&lt;p&gt;Update your &lt;code&gt;index.html&lt;/code&gt; file so the form code looks like this:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign up&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Full name&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;br /&gt;           &lt;span class=&quot;token attr-name&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;[\p{L}\.\- ]+&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;           &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;new-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;br /&gt;           &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sign-up&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign up&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;type&lt;/code&gt; values do a lot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type=&amp;quot;password&amp;quot;&lt;/code&gt; obscures text as it&#39;s entered and enables the browser&#39;s
&lt;a href=&quot;https://passwords.google.com/&quot; rel=&quot;noopener&quot;&gt;password manager&lt;/a&gt; to suggest a strong password.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt; provides basic validation and ensures mobile users get an appropriate keyboard. Try
it out!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; and then click the &lt;strong&gt;Email&lt;/strong&gt; label. What happens? Focus moves to the email
input because the label has a &lt;code&gt;for&lt;/code&gt; value that matches the email input&#39;s &lt;code&gt;id&lt;/code&gt;. The other labels and
inputs work the same way. Screenreaders also announce label text when the label (or the label&#39;s
associated input) gets focus. You can try that using the &lt;a href=&quot;https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en&quot; rel=&quot;noopener&quot;&gt;ChromeVox extension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Try submitting the form with an empty field. The browser won&#39;t submit the form, and it prompts to
complete missing data and sets focus. That&#39;s because you added the &lt;code&gt;require&lt;/code&gt; attribute to all the
inputs. Now try submitting with a password that has less than eight characters. The browser warns that
the password isn&#39;t long enough and sets focus on the password input because of the &lt;code&gt;minlength=&amp;quot;8&amp;quot;&lt;/code&gt;
attribute. The same works for &lt;code&gt;pattern&lt;/code&gt; (used for the name input) and other
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot; rel=&quot;noopener&quot;&gt;validation constraints&lt;/a&gt;.
The browser does all this automatically, without needing any extra code.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;autocomplete&lt;/code&gt; value &lt;code&gt;name&lt;/code&gt; for the &lt;strong&gt;Full name&lt;/strong&gt; input makes sense, but what about the
other inputs?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt; for the &lt;strong&gt;Email&lt;/strong&gt; input means the browser&#39;s password manager will store
the email address as the &#39;name&#39; for this user (the username!) to go with the password.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autocomplete=&amp;quot;new-password&amp;quot;&lt;/code&gt; for &lt;strong&gt;Password&lt;/strong&gt; is a hint to the password manager that it should
offer to store this value as the password for the current site. You can then use
&lt;code&gt;autocomplete=&amp;quot;current-password&amp;quot;&lt;/code&gt; to enable autofill in a sign-in form (remember, this is
&lt;em&gt;sign-up&lt;/em&gt; form).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/sign-in-form-best-practices&quot;&gt;Sign-in form best practices&lt;/a&gt; has more tips for improving form design,
layout, and accessibility.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;step-4:-help-users-enter-secure-passwords&quot;&gt;Step 4: Help users enter secure passwords &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#step-4:-help-users-enter-secure-passwords&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the form as it is, did you notice anything wrong with the password input?&lt;/p&gt;
&lt;p&gt;There are two issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s no way to know if there are constraints on the password value.&lt;/li&gt;
&lt;li&gt;You can&#39;t see the password to check if you got it right.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don&#39;t make users guess!&lt;/p&gt;
&lt;p&gt;Update the password section of &lt;code&gt;index.html&lt;/code&gt; with the following code:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Show password as plain text. &lt;br /&gt;          Warning: this will display your password on the screen.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;new-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;br /&gt;         &lt;span class=&quot;token attr-name&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-describedby&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Eight or more characters.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This adds new features to help users enter passwords:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A button (actually just text) to toggle password display. (The
button functionality will be added with JavaScript.)&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;aria-label&lt;/code&gt; attribute for the password-toggle button.&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;aria-describedby&lt;/code&gt; attribute for the password input. Screenreaders
read the label text, the input type (password), and then the description.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To enable the password-toggle button and show users information about password constraints, copy all the JavaScript below and paste it into your own &lt;code&gt;js/main.js&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 400px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-up-form-codelab-4?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=js%2Fmain.js&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-up-form-codelab-4 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;(The CSS is already in place from step 2. Take a look, to see how the password-toggle button is
styled and positioned.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Would an &lt;a href=&quot;https://web.dev/codelab-sign-up-form-best-practices/(https://material.io/resources/icons/?icon=visibility)&quot;&gt;icon&lt;/a&gt; work better than text to
toggle password display? Try &lt;a href=&quot;https://www.nngroup.com/articles/discount-usability-20-years/&quot; rel=&quot;noopener&quot;&gt;Discount Usability Testing&lt;/a&gt;
with a small group of friends or colleagues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To experience how screenreaders work with forms, install the &lt;a href=&quot;https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en&quot; rel=&quot;noopener&quot;&gt;ChromeVox extension&lt;/a&gt; and navigate through the form.
Could you complete the form using ChromeVox only? If not, what would you change?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&#39;s how your form should look at this point:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 690px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-up-form-codelab-4?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-up-form-codelab-4 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;going-further&quot;&gt;Going further &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-up-form-best-practices/#going-further&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This codelab doesn&#39;t cover several important features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Checking for compromised passwords. You should never allow passwords that have been compromised.
You can (and should) &lt;a href=&quot;https://web.dev/sign-up-form-best-practices/#no-compromised-passwords&quot;&gt;use a password-checking service to catch compromised passwords&lt;/a&gt;.
You can use an existing service or run one yourself on your own servers. Try it out! Add password
checking to your form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link to your Terms of Service and privacy policy documents: make it clear to users how you
safeguard their data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Style and branding: make sure these match the rest of your site. When entering names and addresses
and making payment, users need to feel comfortable, trusting that they&#39;re still in the right place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/payment-and-address-form-best-practices#analytics-rum&quot;&gt;Analytics and Real User Monitoring&lt;/a&gt;:
enable the performance and usability of your form design to be tested and monitored for real users.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Building a Stories component</title>
    <link href="https://web.dev/building-a-stories-component/"/>
    <updated>2020-11-25T00:00:00Z</updated>
    <id>https://web.dev/building-a-stories-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this post I want to share thinking on building a Stories component for
the web that is responsive, supports keyboard navigation, and works across
browsers.&lt;/p&gt;
&lt;figure class=&quot;w-figure w-figure--fullbleed&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;!-- &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.webm&quot; type=&quot;video/webm&quot;&gt; --&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/stories-desktop-demo.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figure&quot;&gt;
    &lt;a href=&quot;https://gui-challenges-stories.glitch.me/&quot;&gt;Demo&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you would prefer a hands-on demonstration of building this Stories component yourself,
check out the &lt;a href=&quot;https://web.dev/codelab-building-a-stories-component&quot;&gt;Stories component codelab&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you prefer video, here&#39;s a YouTube version of this post:&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;PzvdREGR0Xw&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Two popular examples of the Stories UX are Snapchat Stories and Instagram Stories (not to mention fleets).
In general UX terms, Stories are usually a mobile-only, tap-centric pattern for navigating
multiple subscriptions. For example, on Instagram, users open a friend&#39;s story
and go through the pictures in it. They generally do this many friends at a
time. By tapping on the right side of the device, a user skips ahead to that friend&#39;s
next story. By swiping right, a user skips ahead to a different friend.
A Story component is fairly similar to a carousel, but allows navigating a
multi-dimensional array as opposed to a single-dimensional array. It&#39;s as if there&#39;s a carousel inside
each carousel. 🤯&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Visualized multi-dimensional array using cards. Left to right is a stack of purple borders cards, and inside each card is 1-many cyan bordered cards. List in a list.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;255&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 716px) 716px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/0yVm8NC0TiAsl6hcDxys.png?auto=format&amp;w=1432 1432w&quot; width=&quot;716&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    &lt;span style=&quot;width: 1rem; height: 1rem; background: #EB00FF; display: inline-block; border-radius: 3px; position: relative; top: .2em;&quot;&gt;&lt;/span&gt; 1st carousel of friends
    &lt;br /&gt;&lt;span style=&quot;width: 1rem; height: 1rem; background: #00D8FF; display: inline-block; border-radius: 3px; position: relative; top: .2em;&quot;&gt;&lt;/span&gt; 2nd &quot;stacked&quot; carousel of stories
    &lt;br /&gt;👍 List in a list, aka: a multi-dimensional array
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;features&quot;&gt;Picking the right tools for the job &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#features&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All in all I found this component pretty straightforward to build, thanks to a few
critical web platform features. Let&#39;s cover them!&lt;/p&gt;
&lt;h3 id=&quot;grid&quot;&gt;CSS Grid &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#grid&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our layout turned out to be no tall order for CSS Grid as it&#39;s equipped with some
powerful ways to wrangle content.&lt;/p&gt;
&lt;h4 id=&quot;friends-layout&quot;&gt;Friends layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#friends-layout&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Our primary &lt;code&gt;.stories&lt;/code&gt; component wrapper is a mobile-first horizontal scrollview:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.stories&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vh&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1fr / auto-flow 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ch&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pan-x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* desktop constraint */&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hover&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 480px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;max-inline-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 480px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;max-block-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 848px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/stories-overflow-columns.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/stories-overflow-columns.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Using Chrome DevTools&#39;
    &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode&quot;&gt;Device Mode&lt;/a&gt;
    to highlight the columns created by Grid
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Let&#39;s breakdown that &lt;code&gt;grid&lt;/code&gt; layout:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We explicitly fill the viewport on mobile with &lt;code&gt;100vh&lt;/code&gt; and &lt;code&gt;100vw&lt;/code&gt; and constrain the size on desktop&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt; separates our row and column templates&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auto-flow&lt;/code&gt; translates to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;grid-auto-flow: column&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The autoflow template is &lt;code&gt;100%&lt;/code&gt;, which in this case is whatever the scroll window width is&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Note that the location of the &lt;code&gt;/&lt;/code&gt; separator relative to &lt;code&gt;auto-flow&lt;/code&gt; is important.
If &lt;code&gt;auto-flow&lt;/code&gt; came before &lt;code&gt;/&lt;/code&gt; it would be shorthand for &lt;code&gt;grid-auto-flow: row&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;On a mobile phone, think of this like the row size being the viewport height and
each column being the viewport width. Continuing with the Snapchat Stories and
Instagram Stories example, each column will be a friend&#39;s story. We want friends
stories to continue outside of the viewport so we have somewhere to scroll to.
Grid will make however many columns it needs to layout your HTML for each friend
story, creating a dynamic and responsive scrolling container for us. Grid
enabled us to centralize the whole effect.&lt;/p&gt;
&lt;h4 id=&quot;stacking&quot;&gt;Stacking &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#stacking&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For each friend we need their stories in a pagination-ready state.
In preparation for animation and other fun patterns, I chose a stack.
When I say stack, I mean like you&#39;re looking down on a
sandwich, not like you&#39;re looking from the side.&lt;/p&gt;
&lt;p&gt;With CSS grid, we can define a single-cell grid (i.e. a square), where the rows
and columns share an alias (&lt;code&gt;[story]&lt;/code&gt;), and then each child gets assigned to that
aliased single-cell space:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.user&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [story] 1fr / [story] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.story&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cover&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  …&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This puts our HTML in control of the stacking order and also keeps all elements
in flow. Notice how we didn&#39;t need to do anything with &lt;code&gt;absolute&lt;/code&gt; positioning or &lt;code&gt;z-index&lt;/code&gt; and
we didn&#39;t need to box correct with &lt;code&gt;height: 100%&lt;/code&gt; or &lt;code&gt;width: 100%&lt;/code&gt;. The parent grid
already defined the size of the story picture viewport, so none of these story components
needed to be told to fill it!&lt;/p&gt;
&lt;h3 id=&quot;scroll-snap-points&quot;&gt;CSS Scroll Snap Points &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#scroll-snap-points&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3.org/TR/css-scroll-snap-1/&quot; rel=&quot;noopener&quot;&gt;CSS Scroll Snap Points spec&lt;/a&gt; makes it
a cinch to lock elements into the viewport on scroll. Before these CSS properties existed,
you had to use JavaScript, and it was… tricky, to say the least. Check out
&lt;a href=&quot;https://css-tricks.com/introducing-css-scroll-snap-points/&quot; rel=&quot;noopener&quot;&gt;Introducing CSS Scroll Snap Points&lt;/a&gt;
by Sarah Drasner for a great breakdown of how to use them.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;!-- &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.webm&quot; type=&quot;video/webm&quot;&gt; --&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/scroll-snap-example.mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Horizontal scrolling without and with &lt;code&gt;scroll-snap-points&lt;/code&gt; styles.
    Without it, users can free scroll as normal. With it, the browser rests gently on each item.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-columns&quot;&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;parent&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.stories&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1fr / auto-flow 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ch&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pan-x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;Parent with overscroll defines snap behavior.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-compare&quot;&gt;&lt;p class=&quot;w-compare__label w-compare__label--better&quot;&gt;child&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.user&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [story] 1fr / [story] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figcaption class=&quot;w-compare__caption&quot;&gt;
&lt;p&gt;Children opt into being a snap target.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;I chose Scroll Snap Points for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Free accessibility&lt;/strong&gt;. The Scroll Snap Points spec states that pressing the
&lt;kbd&gt;Left Arrow&lt;/kbd&gt; and &lt;kbd&gt;Right Arrow&lt;/kbd&gt; keys should move through the snap points
by default.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A growing spec&lt;/strong&gt;. The Scroll Snap Points spec is getting new features and improvements
all the time, which means that my Stories component will probably only get better from
here on out.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ease of implementation&lt;/strong&gt;. Scroll Snap Points are practically built for the
touch-centric horizontal-pagination use case.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Free platform-style inertia&lt;/strong&gt;. Every platform will scroll and rest in its style, as opposed to
normalized inertia which can have an uncanny scrolling and resting style.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;compatibility&quot;&gt;Cross-browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;!-- TODO(kayce): Clear up what browsers were tested on what operating systems. --&gt;
&lt;p&gt;We tested on Opera, Firefox, Safari, and Chrome, plus Android and iOS. Here&#39;s
a brief rundown of the web features where we found differences in capabilities and support.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--success&quot;&gt;
&lt;p&gt;&lt;strong&gt;Success&lt;/strong&gt;:
All of the features chosen were supported and none were buggy.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We did though have some CSS not apply, so some platforms are currently missing out on UX
optimizations. I did enjoy not needing to manage these features and feel confident
that they&#39;ll eventually reach other browsers and platforms.&lt;/p&gt;
&lt;h3 id=&quot;scroll-snap-stop&quot;&gt;&lt;code&gt;scroll-snap-stop&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#scroll-snap-stop&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Carousels were one of the major UX use cases that prompted the creation of the
CSS Scroll Snap Points spec. Unlike Stories, a carousel doesn&#39;t always need to stop
on each image after a user interacts with it. It might be fine or encouraged to
quickly cycle through the carousel. Stories, on the other hand, are best navigated one-by-one,
and that&#39;s exactly what &lt;code&gt;scroll-snap-stop&lt;/code&gt; provides.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.user&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;At the time of writing this post, &lt;code&gt;scroll-snap-stop&lt;/code&gt; is only supported on Chromium-based
browsers. Check out
&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser compatibility&lt;/a&gt;
for updates. It&#39;s not a blocker, though. It just means that on unsupported browsers
users can accidentally skip a friend. So users will just have to be more careful, or
we&#39;ll need to write JavaScript to ensure that a skipped friend isn&#39;t marked as viewed.&lt;/p&gt;
&lt;p&gt;Read more in &lt;a href=&quot;https://www.w3.org/TR/css-scroll-snap-1/#scroll-snap-stop&quot; rel=&quot;noopener&quot;&gt;the
spec&lt;/a&gt; if you&#39;re
interested.&lt;/p&gt;
&lt;h3 id=&quot;overscroll-behavior&quot;&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#overscroll-behavior&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;!-- TODO(kayce): Video would be helpful. --&gt;
&lt;p&gt;Have you ever been scrolling through a modal when all of a sudden you
start scrolling the content behind the modal?
&lt;a href=&quot;https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt;&lt;/a&gt;
lets the developer trap that scroll and never let it
leave. It&#39;s nice for all sorts of occasions. My Stories component uses it
to prevent additional swipes and scrolling gestures from leaving the
component.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.stories&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Safari and Opera were the 2 browsers that didn&#39;t
&lt;a href=&quot;https://caniuse.com/#search=overscroll-behavior&quot; rel=&quot;noopener&quot;&gt;support&lt;/a&gt; this, and that&#39;s
totally OK. Those users will get an overscroll experience like they&#39;re used to
and may never notice this enhancement. I&#39;m personally a big fan and like
including it as part of nearly every overscroll feature I implement. It&#39;s a
harmless addition that can only lead to improved UX.&lt;/p&gt;
&lt;!-- TODO(kayce): Describe what Safari and Opera users will see. --&gt;
&lt;h3 id=&quot;scrollintoview&quot;&gt;&lt;code&gt;scrollIntoView({behavior: &#39;smooth&#39;})&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#scrollintoview&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When a user taps or clicks and has reached the end of a friend&#39;s set of stories,
it&#39;s time to move to the next friend in the scroll snap point set. With
JavaScript, we were able to reference the next friend and request for it to be
scrolled into view. The support for the basics of this are great; every browser
scrolled it into view. But, not every browser did it &lt;code&gt;&#39;smooth&#39;&lt;/code&gt;. This just means
it&#39;s scrolled into view instead of snapped.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;element&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scrollIntoView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  behavior&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;smooth&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Safari was the only browser not to support &lt;code&gt;behavior: &#39;smooth&#39;&lt;/code&gt; here. Check out
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser compatibility&lt;/a&gt;
for updates.&lt;/p&gt;
&lt;h2 id=&quot;hands-on&quot;&gt;Hands-on &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#hands-on&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that you know how I did it, how would you?! Let&#39;s diversify our
approaches and learn all the ways to build on the web. Create a &lt;a href=&quot;https://glitch.com/&quot; rel=&quot;noopener&quot;&gt;Glitch&lt;/a&gt;,
&lt;a href=&quot;https://twitter.com/argyleink&quot; rel=&quot;noopener&quot;&gt;tweet me&lt;/a&gt; your version, and I&#39;ll add it to
the &lt;a href=&quot;https://web.dev/building-a-stories-component/#community-remixes&quot;&gt;Community remixes&lt;/a&gt; section below.&lt;/p&gt;
&lt;h2 id=&quot;remixes&quot;&gt;Community remixes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/building-a-stories-component/#remixes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;!-- TODO(kayce): Add a warning that this is community content that may change over time. --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/geoffrich_&quot; rel=&quot;noopener&quot;&gt;@geoffrich_&lt;/a&gt; with &lt;a href=&quot;https://svelte.dev/&quot; rel=&quot;noopener&quot;&gt;Svelte&lt;/a&gt;: &lt;a href=&quot;https://svelte-stories.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/geoffrich/svelte-stories&quot; rel=&quot;noopener&quot;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/GauteMeekOlsen&quot; rel=&quot;noopener&quot;&gt;@GauteMeekOlsen&lt;/a&gt; with &lt;a href=&quot;https://vuejs.org/&quot; rel=&quot;noopener&quot;&gt;Vue&lt;/a&gt;: &lt;a href=&quot;https://stackblitz.com/edit/stories&quot; rel=&quot;noopener&quot;&gt;demo + code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/AnaestheticsApp&quot; rel=&quot;noopener&quot;&gt;@AnaestheticsApp&lt;/a&gt; with &lt;a href=&quot;https://lit-element.polymer-project.org/&quot; rel=&quot;noopener&quot;&gt;Lit&lt;/a&gt;: &lt;a href=&quot;https://lit-stories.glitch.me/&quot; rel=&quot;noopener&quot;&gt;demo&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/anaestheticsapp/web-stories&quot; rel=&quot;noopener&quot;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Codelab: Building a Stories component</title>
    <link href="https://web.dev/codelab-building-a-stories-component/"/>
    <updated>2020-11-25T00:00:00Z</updated>
    <id>https://web.dev/codelab-building-a-stories-component/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This codelab teaches you how to build an experience like Instagram Stories
on the web. We&#39;ll build the component as we go, starting with HTML, then CSS,
then JavaScript.&lt;/p&gt;
&lt;p&gt;Check out my blog post &lt;a href=&quot;https://web.dev/building-a-stories-component&quot;&gt;Building a Stories component&lt;/a&gt;
to learn about the progressive enhancements made while building this component.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;PzvdREGR0Xw&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This post assumes that you&#39;re familiar with the Instagram Stories UX
and will use terminology from that experience (e.g. a &amp;quot;friend&#39;s story&amp;quot;).&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#setup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Click &lt;strong&gt;Remix to Edit&lt;/strong&gt; to make the project editable.&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;app/index.html&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;html&quot;&gt;HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I always aim to use &lt;a href=&quot;https://en.wikipedia.org/wiki/Semantic_HTML&quot; rel=&quot;noopener&quot;&gt;semantic HTML&lt;/a&gt;.
Since each friend can have any number of stories, I thought it was meaningful to use a
&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element for each friend and an &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element for each story.
Let&#39;s start from the beginning though. First, we need a container for our
stories component.&lt;/p&gt;
&lt;p&gt;Add a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element to your &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;!-- TODO(kayce): Why not use &quot;friend&quot; instead of &quot;user&quot;? --&gt;
&lt;p&gt;Add some &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; elements to represent friends:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Add some &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; elements to represent stories:&lt;/p&gt;
&lt;!--

Each friend has some pictures. We&#39;ll call each picture a `.story`.
Next, let&#39;s dig into how and where we&#39;ll put pictures in this component.

### Placeholder loading technique

Let&#39;s use a placeholder loading technique for each `.story`. We&#39;ll use CSS&#39;s
`background-image` property, which allows us to specify more than one background
image. We can put them in an order so that our user picture is on top and will
show up automatically when it&#39;s done loading. To enable this, we&#39;ll put
our image URL into a custom property (`--bg`), and use it within our CSS to
layer with the loading placeholder.

--&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/480/840&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/480/841&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/481/840&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/481/841&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/482/840&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/482/843&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/482/844&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;We&#39;re using an image service (&lt;code&gt;picsum.com&lt;/code&gt;) to help prototype stories.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;style&lt;/code&gt; attribute on each &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; is part of a placeholder loading
technique, which you&#39;ll learn more about in the next section.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;css&quot;&gt;CSS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#css&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our content is ready for style. Let&#39;s turn those bones into something folks will
want to interact with. We&#39;ll be working mobile-first today.&lt;/p&gt;
&lt;h3 id=&quot;.stories&quot;&gt;&lt;code&gt;.stories&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#.stories&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For our &lt;code&gt;&amp;lt;div class=&amp;quot;stories&amp;quot;&amp;gt;&lt;/code&gt; container we want a horizontal scrolling container.
We can achieve this by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Making the container a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&quot; rel=&quot;noopener&quot;&gt;Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Setting each child to fill the row track&lt;/li&gt;
&lt;li&gt;Making the width of each child the width of a mobile device viewport&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Grid will continue placing new &lt;code&gt;100vw&lt;/code&gt;-wide columns to the right of the previous
one, until it&#39;s placed all the HTML elements in your markup.&lt;/p&gt;
&lt;!-- TODO(kayce): Resize this screenshot so there&#39;s less whitespace --&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Chrome and DevTools open with a grid visual showing the full width layout&quot; decoding=&quot;async&quot; height=&quot;465&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/oLbxOrfO2rUqmxnnleXw.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Chrome DevTools showing grid column overflow, making a horizontal scroller.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Add the following CSS to the bottom of &lt;code&gt;app/css/index.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.stories&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1fr / auto-flow 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ch&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Feel free to stop and study the &lt;code&gt;body&lt;/code&gt; styles if you like!
They&#39;re handling the responsive nature of our Stories component.
You can also collapse the &lt;code&gt;body&lt;/code&gt; styles by clicking the &lt;strong&gt;∨&lt;/strong&gt;
symbol next to &lt;code&gt;body&lt;/code&gt; on line 1.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now that we have content extending beyond the viewport, it&#39;s time to tell that
container how to handle it. Add the highlighted lines of code to your &lt;code&gt;.stories&lt;/code&gt; ruleset:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.stories&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1fr / auto-flow 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1ch&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pan-x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;We want horizontal scrolling, so we&#39;ll set &lt;code&gt;overflow-x&lt;/code&gt; to
&lt;code&gt;auto&lt;/code&gt;. When the user scrolls we want the component to gently rest on the next story,
so we&#39;ll use &lt;code&gt;scroll-snap-type: x mandatory&lt;/code&gt;. Read more about this
CSS in the &lt;a href=&quot;https://web.dev/building-a-stories-component/#scroll-snap-points&quot;&gt;CSS Scroll Snap Points&lt;/a&gt;
and &lt;a href=&quot;https://web.dev/building-a-stories-component/#overscroll-behavior&quot;&gt;overscroll-behavior&lt;/a&gt;
sections of my blog post.&lt;/p&gt;
&lt;p&gt;It takes both the parent container and the children to agree to scroll snapping, so
let&#39;s handle that now. Add the following code to the bottom of &lt;code&gt;app/css/index.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.user&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Your app doesn&#39;t work yet, but the video below shows what happens when
&lt;code&gt;scroll-snap-type&lt;/code&gt; is enabled and disabled. When enabled, each horizontal
scroll snaps to the next story. When disabled, the browser uses its
default scrolling behavior.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;!-- &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.webm&quot; type=&quot;video/webm&quot;&gt; --&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/scroll-snap-example.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;That will get you scrolling through your friends, but we still have an issue
with the stories to solve.&lt;/p&gt;
&lt;h3 id=&quot;.user&quot;&gt;&lt;code&gt;.user&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#.user&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let&#39;s create a layout in the &lt;code&gt;.user&lt;/code&gt; section that wrangles those child story
elements into place. We&#39;re going to use a handy stacking trick to solve this.
We&#39;re essentially creating a 1x1 grid where the row and column have the same Grid
alias of &lt;code&gt;[story]&lt;/code&gt;, and each story grid item is going to try and claim that space,
resulting in a stack.&lt;/p&gt;
&lt;p&gt;Add the highlighted code to your &lt;code&gt;.user&lt;/code&gt; ruleset:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.user&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; always&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; [story] 1fr / [story] 1fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Add the following ruleset to the bottom of &lt;code&gt;app/css/index.css&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.story&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now, without absolute positioning, floats, or other layout directives that take
an element out of flow, we&#39;re still in flow. Plus, it&#39;s like barely any code,
look at that! This gets broken down in the video and the blog post in more detail.&lt;/p&gt;
&lt;h3 id=&quot;.story&quot;&gt;&lt;code&gt;.story&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#.story&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we just need to style the story item itself.&lt;/p&gt;
&lt;p&gt;Earlier we mentioned that the &lt;code&gt;style&lt;/code&gt; attribute on each &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element is part of a
placeholder loading technique:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;article&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;story&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token special-attr&quot;&gt;&lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token value css language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;--bg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;https://picsum.photos/480/840&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;article&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;We&#39;re going to use CSS&#39;s &lt;code&gt;background-image&lt;/code&gt; property, which allows us to specify
more than one background image. We can put them in an order so that our user
picture is on top and will show up automatically when it&#39;s done loading. To
enable this, we&#39;ll put our image URL into a custom property (&lt;code&gt;--bg&lt;/code&gt;), and use it
within our CSS to layer with the loading placeholder.&lt;/p&gt;
&lt;p&gt;First, let&#39;s update the &lt;code&gt;.story&lt;/code&gt; ruleset to replace a gradient with a background image
once it&#39;s done loading. Add the highlighted code to your &lt;code&gt;.story&lt;/code&gt; ruleset:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.story&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cover&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;to top&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;98 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Setting &lt;code&gt;background-size&lt;/code&gt; to &lt;code&gt;cover&lt;/code&gt; ensures there&#39;s no empty space in the
viewport because our image will be filling it up. Defining 2 background images
enables us to pull a neat CSS web trick called the &lt;em&gt;loading tombstone&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Background image 1 (&lt;code&gt;var(--bg)&lt;/code&gt;) is the URL we passed inline in the HTML&lt;/li&gt;
&lt;li&gt;Background image 2 (&lt;code&gt;linear-gradient(to top, lch(98 0 0), lch(90 0 0))&lt;/code&gt; is a gradient
to show while the URL is loading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSS will automatically replace the gradient with the image, once the image is done downloading.&lt;/p&gt;
&lt;p&gt;Next we&#39;ll add some CSS to remove some behavior, freeing up the browser to move faster.
Add the highlighted code to your &lt;code&gt;.story&lt;/code&gt; ruleset:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.story&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cover&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;to top&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;98 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;user-select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manipulation&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user-select: none&lt;/code&gt; prevents users from accidentally selecting text&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch-action: manipulation&lt;/code&gt; instructs the browser that these interactions
should be treated as touch events, which frees up the browser from trying to
decide whether you&#39;re clicking a URL or not&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last, let&#39;s add a little CSS to animate the transition between stories. Add the
highlighted code to your &lt;code&gt;.story&lt;/code&gt; ruleset:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-scss&quot;&gt;&lt;code class=&quot;language-scss&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.story &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;grid-area&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; cover&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--bg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;to top&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;98 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;lch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;90 0 0&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;user-select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;touch-action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manipulation&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; opacity .3s &lt;span class=&quot;token function&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0.4&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token selector&quot;&gt;&lt;span class=&quot;token parent important&quot;&gt;&amp;amp;&lt;/span&gt;.seen &lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;pointer-events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;.seen&lt;/code&gt; class will be added to a story that needs an exit.
I got the custom easing function (&lt;code&gt;cubic-bezier(0.4, 0.0, 1,1)&lt;/code&gt;)
from Material Design&#39;s &lt;a href=&quot;https://material.io/design/motion/speed.html#easing&quot; rel=&quot;noopener&quot;&gt;Easing&lt;/a&gt;
guide (scroll to the &lt;em&gt;Accerlerated easing&lt;/em&gt; section).&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://drafts.csswg.org/css-nesting-1/#nest-selector&quot; rel=&quot;noopener&quot;&gt;Nesting Selector: the &lt;code&gt;&amp;amp;&lt;/code&gt; selector&lt;/a&gt;
for an explanation of &lt;code&gt;&amp;amp;.seen&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you&#39;ve got a keen eye you probably noticed the &lt;code&gt;pointer-events: none&lt;/code&gt;
declaration and are scratching your head right now. I&#39;d say this is the only
downside of the solution so far. We need this because a &lt;code&gt;.seen.story&lt;/code&gt; element
will be on top and will receive taps, even though it&#39;s invisible. By setting the
&lt;code&gt;pointer-events&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;, we turn the glass story into a window, and steal no
more user interactions. Not too bad of a trade off, not too hard to manage here
in our CSS right now. We&#39;re not juggling &lt;code&gt;z-index&lt;/code&gt;. I&#39;m feeling good about this
still.&lt;/p&gt;
&lt;h2 id=&quot;javascript&quot;&gt;JavaScript &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#javascript&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The interactions of a Stories component are quite simple to the user: tap on the
right to go forward, tap on the left to go back. Simple things for users tends
to be hard work for developers. We&#39;ll take care of lots of it, though.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video playsinline=&quot;&quot; controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;!-- &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/macos-system-ui/system-ui_wght.webm&quot; type=&quot;video/webm&quot;&gt; --&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/gui-challenges/stories-desktop-demo.mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;setup-2&quot;&gt;Setup &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#setup-2&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To start out, let&#39;s compute and store as much information as we can.
Add the following code to &lt;code&gt;app/js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stories &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.stories&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; median &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientWidth &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Our first line of JavaScript grabs and stores a reference to our primary HTML
element root. The next line calculates where the middle of our element is, so we
can decide if a tap is to go forward or backward.&lt;/p&gt;
&lt;h3 id=&quot;state&quot;&gt;State &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#state&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next we make a small object with some state relevant to our logic. In this
case, we&#39;re only interested in the current story. In our HTML markup, we can
access it by grabbing the 1st friend and their most recent story. Add the highlighted code
to your &lt;code&gt;app/js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stories &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.stories&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; median &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientWidth &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  current_story&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;!-- TODO(kayce): All JS code needs semicolons: https://google.github.io/styleguide/jsguide.html#formatting-semicolons-are-required --&gt;
&lt;h3 id=&quot;listeners&quot;&gt;Listeners &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#listeners&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have enough logic now to start listening for user events and directing them.&lt;/p&gt;
&lt;h4 id=&quot;mouse&quot;&gt;Mouse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#mouse&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Let&#39;s start by listening to the &lt;code&gt;&#39;click&#39;&lt;/code&gt; event on our stories container.
Add the highlighted code to &lt;code&gt;app/js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stories &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.stories&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; median &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientWidth &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  current_story&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodeName &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ARTICLE&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token function&quot;&gt;navigateStories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; median&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;next&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;prev&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If a click happens and it&#39;s not on a &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element we bail and do nothing.
If it is an article, we grab the horizontal position of the mouse or finger with
&lt;code&gt;clientX&lt;/code&gt;. We haven&#39;t implemented &lt;code&gt;navigateStories&lt;/code&gt; yet, but the argument that
it takes specifies what direction we need to go. If that user position is
greater than the median, we know we need to navigate to &lt;code&gt;next&lt;/code&gt;, otherwise
&lt;code&gt;prev&lt;/code&gt; (previous).&lt;/p&gt;
&lt;h4 id=&quot;keyboard&quot;&gt;Keyboard &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#keyboard&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now, let&#39;s listen for keyboard presses. If the &lt;kbd&gt;Down Arrow&lt;/kbd&gt; is pressed we navigate
to &lt;code&gt;next&lt;/code&gt;. If it&#39;s the &lt;kbd&gt;Up Arrow&lt;/kbd&gt;, we go to &lt;code&gt;prev&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add the highlighted code to &lt;code&gt;app/js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stories &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.stories&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; median &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientWidth &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  current_story&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;stories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nodeName &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ARTICLE&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token function&quot;&gt;navigateStories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; median&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;next&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;      &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;prev&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;keydown&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ArrowDown&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ArrowUp&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token function&quot;&gt;navigateStories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      key &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ArrowDown&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;next&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;prev&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;stories-navigation&quot;&gt;Stories navigation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#stories-navigation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Time to tackle the unique business logic of stories and the UX they&#39;ve become
famous for. This looks chunky and tricky, but I think if you take it line by
line, you&#39;ll find it&#39;s quite digestible.&lt;/p&gt;
&lt;p&gt;Upfront, we stash some selectors that help us decide whether to scroll to a
friend or show/hide a story. Since the HTML is where we&#39;re working, we&#39;ll be
querying it for presence of friends (users) or stories (story).&lt;/p&gt;
&lt;p&gt;These variables will help us answer questions like, &amp;quot;given story x, does &amp;quot;next&amp;quot;
mean move to another story from this same friend or to a different friend?&amp;quot; I did it by using the tree
structure we built, reaching into parents and their children.&lt;/p&gt;
&lt;p&gt;Add the following code to the bottom of &lt;code&gt;app/js/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;navigateStories&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lastItemInUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstItemInUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hasNextUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hasPrevUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousElementSibling&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s our business logic goal, as close to natural language as possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Decide how to handle the tap
&lt;ul&gt;
&lt;li&gt;If there&#39;s a next/previous story: show that story&lt;/li&gt;
&lt;li&gt;If it&#39;s the last/first story of the friend: show a new friend&lt;/li&gt;
&lt;li&gt;If there&#39;s no story to go to in that direction: do nothing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stash the new current story into &lt;code&gt;state&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add the highlighted code to your &lt;code&gt;navigateStories&lt;/code&gt; function:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;navigateStories&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; lastItemInUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; firstItemInUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hasNextUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hasPrevUserStory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousElementSibling&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;direction &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;next&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastItemInUserStory &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;hasNextUserStory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastItemInUserStory &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hasNextUserStory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastElementChild&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scrollIntoView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        behavior&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;smooth&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;seen&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousElementSibling&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;direction &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;prev&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;firstItemInUserStory &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;hasPrevUserStory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;firstItemInUserStory &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; story &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hasPrevUserStory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousElementSibling&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;firstElementChild&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;previousElementSibling&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scrollIntoView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;        behavior&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;smooth&#39;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;seen&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;      state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current_story &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; story&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nextElementSibling&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/mark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;try-it-out&quot;&gt;Try it out &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#try-it-out&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To preview the site, press &lt;strong&gt;View App&lt;/strong&gt;. Then press
&lt;strong&gt;Fullscreen&lt;/strong&gt;
&lt;img src=&quot;https://web.dev/images/glitch/fullscreen.svg&quot; alt=&quot;fullscreen&quot; style=&quot;padding: 4px 8px; opacity: .5; border: 1px solid #c3c3c3; border-radius: 5px;&quot; /&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-building-a-stories-component/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That&#39;s a wrap up for the needs I had with the component. Feel free to build upon
it, drive it with data, and in general make it yours!&lt;/p&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author>
  </entry>
  
  <entry>
    <title>Next-generation web styling</title>
    <link href="https://web.dev/next-gen-css-2019/"/>
    <updated>2019-12-05T00:00:00Z</updated>
    <id>https://web.dev/next-gen-css-2019/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;There are a &lt;em&gt;ton&lt;/em&gt; of exciting things happening in CSS right now—and
many of them are already supported in today&#39;s browsers!
Our talk at CDS 2019, which you can watch below,
covers several new and upcoming features we thought should get some attention.&lt;/p&gt;
&lt;p&gt;This post focuses on the features you can use today,
so be sure to watch the talk
for a deeper discussion of upcoming features like Houdini.
You can also find demos for all the features we discuss on our
&lt;a href=&quot;https://a.nerdy.dev/css-at-cds&quot; rel=&quot;noopener&quot;&gt;CSS@CDS page&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;youtube&quot;&gt;  &lt;lite-youtube videoid=&quot;-oyeaIirVC0&quot;&gt;  &lt;/lite-youtube&gt;&lt;/div&gt;
&lt;h2 id=&quot;contents&quot;&gt;Contents &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#contents&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#scroll-snap&quot;&gt;Scroll Snap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#:focus-within&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#media-queries-level-5&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#logical-properties&quot;&gt;Logical properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#position:-sticky&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#backdrop-filter&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#is&quot;&gt;&lt;code&gt;:is()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#css-houdini&quot;&gt;CSS Houdini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/next-gen-css-2019/#overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;scroll-snap&quot;&gt;Scroll Snap &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#scroll-snap&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap/Basic_concepts&quot; rel=&quot;noopener&quot;&gt;Scroll Snap&lt;/a&gt; lets you define snap points as the user scrolls your content vertically, horizontally, or  both. It offers built-in scroll inertia and deceleration, and it&#39;s touch enabled.&lt;/p&gt;
&lt;p&gt;This sample code sets up horizontal scrolling in a &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element with snap points aligned to the left sides of child &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; elements:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overflow-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;overscroll-behavior-x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; contain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x mandatory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;section &gt; picture&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;scroll-snap-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s how it works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the parent &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element,
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overflow-x&lt;/code&gt; is set to &lt;code&gt;auto&lt;/code&gt; to allow horizontal scrolling.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overscroll-behavior-x&lt;/code&gt; is set to &lt;code&gt;contain&lt;/code&gt; to prevent any parent elements from scrolling when the user reaches the boundaries of the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element&#39;s scroll area. (This isn&#39;t strictly necessary for snapping, but it&#39;s usually a good idea.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scroll-snap-type&lt;/code&gt; is set to &lt;code&gt;x&lt;/code&gt;—for horizontal snapping—and &lt;code&gt;mandatory&lt;/code&gt;—to ensure that the viewport always snaps to the closest snap point.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;On the child &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; elements, &lt;code&gt;scroll-snap-align&lt;/code&gt; is set to start, which sets the snap points on the left side of each picture (assuming &lt;code&gt;direction&lt;/code&gt; is set to &lt;code&gt;ltr&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And here&#39;s a live demo:&lt;/p&gt;
&lt;iframe height=&quot;520&quot; style=&quot;display: block; width: 400px; max-width: 100%; margin: 0 auto;&quot; scrolling=&quot;no&quot; title=&quot;Awww Scroll Snap [horizontal]&quot; src=&quot;https://codepen.io/argyleink/embed/zYYZPqb?height=916&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/argyleink/pen/zYYZPqb&quot;&gt;Awww Scroll Snap [horizontal]&lt;/a&gt; by Adam Argyle
  (&lt;a href=&quot;https://codepen.io/argyleink&quot;&gt;@argyleink&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;You can also take a look at demos for &lt;a href=&quot;https://codepen.io/argyleink/pen/oNNZoZj&quot; rel=&quot;noopener&quot;&gt;vertical scroll snap&lt;/a&gt; and &lt;a href=&quot;https://codepen.io/argyleink/pen/MWWpOmz&quot; rel=&quot;noopener&quot;&gt;matrix scroll snap&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;While scroll snap supports vertical snapping, be cautious when using it at the page level since it can feel like control is being taken from the user in some cases. It&#39;s usually best to apply snapping to a component on your page rather than the page itself.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;:focus-within&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#:focus-within&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:focus-within&lt;/code&gt;&lt;/a&gt; addresses a long-standing accessibility issue: there are many cases when focusing a child element should affect the presentation of a parent element so that the UI is accessible to users of assistive technologies.&lt;/p&gt;
&lt;p&gt;For example, if you have a dropdown menu with several items, the menu should remain visible while any of the items has focus. Otherwise, the menu disappears for keyboard users.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:focus-within&lt;/code&gt; tells the browser to apply a style when focus is on any child element of a specified element. Returning to the menu example, by setting &lt;code&gt;:focus-within&lt;/code&gt; on the menu element, you can make sure it stays visible when a menu item has focus:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.menu:focus-within&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; visible&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;img alt=&quot;An illustration showing the difference in behavior between focus and focus-within.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NmLEz3wQMUv0QYIuhv2c.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Try tabbing through the focusable elements in the demo below. You&#39;ll notice that the menus remain visible as you focus on the menu items:&lt;/p&gt;
&lt;iframe height=&quot;275&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Simple CSS Dropdown Menu with Hover and :focus-within and Focus states&quot; src=&quot;https://codepen.io/una/embed/RMmogp?height=265&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/RMmogp&quot;&gt;Simple CSS Dropdown Menu with Hover and :focus-within and Focus states&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;media-queries-level-5&quot;&gt;Media Queries Level 5 &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#media-queries-level-5&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#environment-blending&quot; rel=&quot;noopener&quot;&gt;New media queries&lt;/a&gt; give us powerful ways to adjust the user experience of our apps based on a user&#39;s device preferences. Basically, the browser serves as a proxy for system-level preferences that we can respond to in our CSS using the &lt;code&gt;prefers-*&lt;/code&gt; group of media queries:&lt;/p&gt;
&lt;img alt=&quot;A diagram showing media queries interpreting system-level user preferences.&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/f5Y9OhN3VMQz8nZMcZar.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Here are the new queries we think developers will be most excited about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/03/prefers-reduced-motion&quot; rel=&quot;noopener&quot;&gt;prefers-reduced-motion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/prefers-color-scheme/&quot;&gt;prefers-color-scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast&quot; rel=&quot;noopener&quot;&gt;prefers-contrast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-transparency&quot; rel=&quot;noopener&quot;&gt;prefers-reduced-transparency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors&quot; rel=&quot;noopener&quot;&gt;forced-colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/inverted-colors&quot; rel=&quot;noopener&quot;&gt;inverted-colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These queries are a huge win for accessibility. Previously we had no way to know, for example, that a user had set their OS to high-contrast mode. If you wanted to provide a high-contrast mode for a web app that remained true to your brand, you had to ask users to choose it from UI within your app. Now you can detect the high-contrast setting from the OS using &lt;code&gt;prefers-contrast&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One exciting implication of these media queries is that we can design for multiple combinations of system-level user preferences to accommodate the wide range of user preferences and accessibility needs. If a user wants high-contrast dark mode when in dimly lit environments, you can do that!&lt;/p&gt;
&lt;p&gt;It&#39;s important to Adam that &amp;quot;prefers reduced motion&amp;quot; doesn&#39;t get implemented as &amp;quot;no motion.&amp;quot; The user is saying they prefer less motion, not that they don&#39;t want any animation. He asserts reduced motion is not no motion. Here&#39;s an example that uses a crossfade animation when the user prefers reduced motion:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/reduced-motion.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/reduced-motion.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;In Chrome Canary, you can test CSS that uses &lt;code&gt;prefers-reduced-motion&lt;/code&gt; or &lt;code&gt;prefers-color-scheme&lt;/code&gt; by choosing the appropriate settings in the DevTools &lt;strong&gt;Rendering&lt;/strong&gt; drawer. To access &lt;strong&gt;Rendering&lt;/strong&gt;, &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/command-menu&quot; rel=&quot;noopener&quot;&gt;open the Command Menu&lt;/a&gt; and run the &lt;code&gt;Show Rendering&lt;/code&gt; command.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;logical-properties&quot;&gt;Logical properties &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#logical-properties&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties&quot; rel=&quot;noopener&quot;&gt;Logical properties&lt;/a&gt; solve a problem that has gained visibility as more developers tackle internationalization. Many layout properties like &lt;code&gt;margin&lt;/code&gt; and &lt;code&gt;padding&lt;/code&gt; assume a language that is read top-to-bottom and left-to-right.&lt;/p&gt;
&lt;img alt=&quot;A diagram showing traditional CSS layout properties.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/mLz4eB2iG7yGUJ92DA0D.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;When designing pages for multiple languages with varying writing modes, developers have had to adjust all those properties individually across multiple elements, which quickly becomes a maintainability nightmare.&lt;/p&gt;
&lt;p&gt;Logical properties let you maintain layout integrity across translations and writing modes. They dynamically update based on the semantic ordering of content rather than its spatial arrangement. With logical properties, each element has two dimensions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;block&lt;/strong&gt; dimension is &lt;strong&gt;perpendicular&lt;/strong&gt; to the flow of text in a line. (In English, &lt;code&gt;block-size&lt;/code&gt; is the same as &lt;code&gt;height&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;inline&lt;/strong&gt; dimension is &lt;strong&gt;parallel&lt;/strong&gt; to the flow of text in a line. (In English, &lt;code&gt;inline-size&lt;/code&gt; is the same as &lt;code&gt;width&lt;/code&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These dimension names apply to all logical layout properties. So, for example, in English, &lt;code&gt;block-start&lt;/code&gt; is the same as &lt;code&gt;top&lt;/code&gt;, and &lt;code&gt;inline-end&lt;/code&gt; is the same as &lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;A diagram showing new CSS logical layout properties.&quot; decoding=&quot;async&quot; height=&quot;559&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/NcIz3jADhMnRMqRTUPKr.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;With logical properties, you can automatically update your layout for other languages by simply changing the &lt;code&gt;writing-mode&lt;/code&gt; and &lt;code&gt;direction&lt;/code&gt; properties for your page rather than updating dozens of layout properties on individual elements.&lt;/p&gt;
&lt;p&gt;You can see how logical properties work in the demo below by setting the &lt;code&gt;writing-mode&lt;/code&gt; property on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element to different values:&lt;/p&gt;
&lt;iframe height=&quot;750&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Logical Properties Demo&quot; src=&quot;https://codepen.io/una/embed/mddxpaY?height=265&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/mddxpaY&quot;&gt;Logical Properties Demo&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;position:-sticky&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#position:-sticky&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An element with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/position#Sticky_positioning&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;position: sticky&lt;/code&gt;&lt;/a&gt; remains in block flow until it starts to go offscreen,
at which point it stops scrolling with the rest of the page
and sticks to the position specified by the element&#39;s &lt;code&gt;top&lt;/code&gt; value.
The space allocated for that element remains in the flow,
and the element returns to it when the user scrolls back up.&lt;/p&gt;
&lt;p&gt;Sticky positioning lets you create many useful effects that previously required JavaScript. To show some of the possibilities, we&#39;ve created several demos. Each demo uses largely the same CSS and only slightly adjusts the HTML markup to create each effect.&lt;/p&gt;
&lt;h3 id=&quot;sticky-stack&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/YzzZyMx&quot; rel=&quot;noopener&quot;&gt;Sticky Stack&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-stack&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this demo, all sticky elements share the same container. That means that each sticky element slides over the previous one as the user scrolls down. The sticky elements share the same stuck position.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-stack.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-stack.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;sticky-slide&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/abbJOjP&quot; rel=&quot;noopener&quot;&gt;Sticky Slide&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-slide&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here, the sticky elements are cousins. (That is, their parents are siblings.) When a sticky element hits the lower boundary of its container, it moves up with the container, creating the impression that lower sticky elements are pushing up higher ones. In other words, they appear to compete for the stuck position.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-slide.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-slide.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;sticky-desperado&quot;&gt;&lt;a href=&quot;https://codepen.io/argyleink/pen/qBBrbyx&quot; rel=&quot;noopener&quot;&gt;Sticky Desperado&lt;/a&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#sticky-desperado&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Like Sticky Slide, the sticky elements in this demo are cousins. However, they&#39;ve been placed in containers set to a two-column grid layout.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-desperado.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/sticky-desperado.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;backdrop-filter&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#backdrop-filter&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt; property lets you apply graphical effects to the area &lt;em&gt;behind&lt;/em&gt; an element rather than to the element itself. This makes lots of cool effects that were previously only achievable using complicated CSS and JavaScript hacks doable with one line of CSS.&lt;/p&gt;
&lt;p&gt;For example, this demo uses &lt;code&gt;backdrop-filter&lt;/code&gt; to achieve OS-style blurring:&lt;/p&gt;
&lt;iframe height=&quot;510&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;mddjjor&quot; src=&quot;https://codepen.io/una/embed/mddjjor?height=265&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/una/pen/mddjjor&quot;&gt;mddjjor&lt;/a&gt; by Una Kravets
  (&lt;a href=&quot;https://codepen.io/una&quot;&gt;@una&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;We already have a &lt;a href=&quot;https://web.dev/backdrop-filter/&quot;&gt;great post about &lt;code&gt;backdrop-filter&lt;/code&gt;&lt;/a&gt;, so head there for more info.&lt;/p&gt;
&lt;h2 id=&quot;:is()&quot;&gt;&lt;code&gt;:is()&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#:is()&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:is&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;:is()&lt;/code&gt; pseudo-class&lt;/a&gt; is actually over ten years old, it still doesn&#39;t see as much use as we think it deserves. It takes a comma-separated list of selectors as its argument and matches any selectors in that list. That flexibility makes it incredibly handy and can significantly reduce the amount of CSS you ship.&lt;/p&gt;
&lt;p&gt;Here&#39;s a quick example:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/is-animation.webm&quot; type=&quot;video/webm; codecs=vp8&quot; /&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/next-gen-css-2019/is-animation.mp4&quot; type=&quot;video/mp4; codecs=h264&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;button.focus,&lt;br /&gt;button:focus&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;article &gt; h1,&lt;br /&gt;article &gt; h2,&lt;br /&gt;article &gt; h3,&lt;br /&gt;article &gt; h4,&lt;br /&gt;article &gt; h5,&lt;br /&gt;article &gt; h6&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* selects the same elements as the code above */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;button:is(.focus, :focus)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;article &gt; :is(h1,h2,h3,h4,h5,h6)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  …&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#gap&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&quot; rel=&quot;noopener&quot;&gt;CSS grid layout&lt;/a&gt; has had &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/gap&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt; (previously &lt;code&gt;grid-gap&lt;/code&gt;) for some time. By specifying the internal spacing of a containing element rather than the spacing around child elements, &lt;code&gt;gap&lt;/code&gt; solves many common layout issues. For example, with gap, you don&#39;t have to worry about margins on child elements causing unwanted whitespace around the edges of a containing element:&lt;/p&gt;
&lt;img alt=&quot;Illustration showing how the gap property avoids unintended spacing around edges of a container element.&quot; decoding=&quot;async&quot; height=&quot;846&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Jzlzz2MdQmMGudZxcvZk.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Even better news: &lt;code&gt;gap&lt;/code&gt; is coming to flexbox, bringing all the same spacing perks that grid has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s one spacing declaration rather than many.&lt;/li&gt;
&lt;li&gt;There&#39;s no need to establish conventions for your project about which child elements should own spacing—the containing element owns the spacing instead.&lt;/li&gt;
&lt;li&gt;The code is more easily understandable than older strategies like the &lt;a href=&quot;https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/&quot; rel=&quot;noopener&quot;&gt;lobotomized owl&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following video shows the benefits of using a single &lt;code&gt;gap&lt;/code&gt; property for two elements, one with a grid layout and one with a flex layout:&lt;/p&gt;
&lt;p&gt;Right now, only FireFox supports &lt;code&gt;gap&lt;/code&gt; in flex layouts, but play around with this demo to see how it works:&lt;/p&gt;
&lt;iframe height=&quot;600&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Gappy&quot; src=&quot;https://codepen.io/argyleink/embed/abbVqEv?height=265&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/argyleink/pen/abbVqEv&quot;&gt;Gappy&lt;/a&gt; by Adam Argyle
  (&lt;a href=&quot;https://codepen.io/argyleink&quot;&gt;@argyleink&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;css-houdini&quot;&gt;CSS Houdini &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#css-houdini&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Houdini&quot; rel=&quot;noopener&quot;&gt;Houdini&lt;/a&gt; is a set of low-level APIs for the browser&#39;s rendering engine that lets you tell the browser how to interpret custom CSS. In other words, it gives you access to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model&quot; rel=&quot;noopener&quot;&gt;CSS Object Model&lt;/a&gt;, letting you &lt;em&gt;extend&lt;/em&gt; CSS via JavaScript. This has several benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It gives you much more power to create custom CSS features.&lt;/li&gt;
&lt;li&gt;It&#39;s easier to separate rendering concerns from application logic.&lt;/li&gt;
&lt;li&gt;It&#39;s more performant than the CSS polyfilling we currently do with JavaScript since the browser will no longer have to parse scripts and do a second rendering cycle; Houdini code is parsed in the first rendering cycle.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Illustration showing how Houdini works compared to traditional JavaScript polyfills.&quot; decoding=&quot;async&quot; height=&quot;599&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Lh9zGq0HWW4amjfHbpRQ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Houdini is an umbrella name for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Houdini#The_Houdini_APIs&quot; rel=&quot;noopener&quot;&gt;several APIs&lt;/a&gt;. If you want more information about them and their current status, take a look at &lt;a href=&quot;https://ishoudinireadyyet.com/&quot; rel=&quot;noopener&quot;&gt;Is Houdini Ready Yet?&lt;/a&gt; In our talk, we covered the Properties and Values API, the Paint API, and the Animation Worklet because they&#39;re currently the most supported. We could easily dedicate a full post to each of these exciting APIs, but, for now, check out our talk for an overview and some cool demos that start to give a sense of what you can do with the APIs.&lt;/p&gt;
&lt;h2 id=&quot;overflow&quot;&gt;Overflow &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/next-gen-css-2019/#overflow&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few more things on the horizon that we wanted to discuss but didn&#39;t have time to cover in depth, so we ran through them in a speed round.⚡ If you haven&#39;t heard of some of these features yet, be sure to watch &lt;a href=&quot;https://youtu.be/-oyeaIirVC0?t=1825&quot; rel=&quot;noopener&quot;&gt;the last part of the talk&lt;/a&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: a property that will allow you to set height and width at the same time&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aspect-ratio&lt;/code&gt;: a property that sets an aspect ratio for elements that don&#39;t have one intrinsically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min()&lt;/code&gt;, &lt;code&gt;max()&lt;/code&gt;, and &lt;code&gt;clamp()&lt;/code&gt;: functions that will let you set numeric constraints on any CSS property, not just width and height&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list-style-type&lt;/code&gt; an existing property, but it will soon support a wider range of values, including emoji and SVGs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display: outer inner&lt;/code&gt;: The &lt;code&gt;display&lt;/code&gt; property will soon accept two parameters, which will let you explicitly specify its outer and inner layouts rather than using compound keywords like &lt;code&gt;inline-flex&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;CSS regions: will let you fill a specified, non-rectangular area that content can flow into and out of&lt;/li&gt;
&lt;li&gt;CSS modules: JavaScript will be able to request a CSS module and get a rich object back that&#39;s easy to perform operations on&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Adam Argyle</name>
    </author><author>
      <name>Una Kravets</name>
    </author>
  </entry>
  
  <entry>
    <title>Introduction to variable fonts on the web</title>
    <link href="https://web.dev/variable-fonts/"/>
    <updated>2018-02-19T00:00:00Z</updated>
    <id>https://web.dev/variable-fonts/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In this article, we will look at what variable fonts are, the benefits they
offer, and how we can use them in our work. First, let&#39;s review how typography
works on the web, and what innovations variable fonts bring.&lt;/p&gt;
&lt;h2 id=&quot;browser-compatibility&quot;&gt;Browser compatibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#browser-compatibility&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As of May 2020 variable fonts are supported in most browsers. See
&lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot; rel=&quot;noopener&quot;&gt;Can I use variable fonts?&lt;/a&gt;
and &lt;a href=&quot;https://web.dev/variable-fonts/#fallbacks&quot;&gt;Fallbacks&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#introduction&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The terms font and typeface are often used interchangeably by developers.
However there is a difference: A typeface is the underlying visual design that
can exist in many different typesetting technologies, and a font is one of these
implementations, in a digital file format. In other words, a typeface is what
you &lt;em&gt;see&lt;/em&gt;, and the font is what you &lt;em&gt;use&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Another concept that is often overlooked is the distinction between a style, and
a family. A style is a single and specific typeface, such as Bold Italic, and a
family is the complete set of styles.&lt;/p&gt;
&lt;p&gt;Before variable fonts, each style was implemented as a separate font file. With
variable fonts, all styles can be contained in a single file.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A specimen composition and list of different styles of the Roboto family&quot; decoding=&quot;async&quot; height=&quot;600&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/RbhgXwS81Y9PVRJnTjPX.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Left: a specimen of the Roboto typeface family. Right: named styles within the family.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;challenges-for-the-designer-and-developer&quot;&gt;Challenges for the designer and developer &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#challenges-for-the-designer-and-developer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a designer creates a print project they face some constraints, such as the
physical size of the page layout, the number of colors they can use (which is
determined by the kind of printing press that will be used), and so on. But they
can use as many typeface styles as they like. This means that the typography of
print media is often rich and sophisticated, so that the reading experience is
truly delightful. Think of the last time you enjoyed browsing an excellent
magazine.&lt;/p&gt;
&lt;p&gt;Web designers and developers have different constraints than print designers,
and an important one is the associated bandwidth costs of our designs. This
has been a sticking point for richer typographic experiences, as they come at
a cost. With traditional web fonts, each style used in our designs requires
users to download a separate font file, which increases latency and page
rendering time. Only including the Regular and Bold styles, plus their italic
counterparts, can amount to 500 KB or more of font data. This is even before
we have dealt with how the fonts are rendered, the fallback patterns we need
to use, or undesirable side-effects such as &lt;a href=&quot;https://www.zachleat.com/web/fout-vs-foit/&quot; rel=&quot;noopener&quot;&gt;FOIT and
FOUT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many font families offer a much wider range of styles, from Thin to Black
weights, narrow and wide widths, a variety of stylistic details, and even
size-specific designs (optimized for large or small text sizes.) Since you&#39;d
have to load a new font file for every style (or combinations of styles), many
web developers choose not to use these capabilities, reducing the reading
experience of their users.&lt;/p&gt;
&lt;h2 id=&quot;anatomy-of-a-variable-font&quot;&gt;Anatomy of a variable font &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#anatomy-of-a-variable-font&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Variable fonts address these challenges, by packing styles into a single file.&lt;/p&gt;
&lt;p&gt;This works by starting with a central or &#39;default&#39; style, usually the
&#39;Regular&#39;–an upright roman design with the most typical weight and width that
is most suitable for plain text. This is then connected to other styles in a
continuous range, called an &#39;axis.&#39; The most common axis is &lt;strong&gt;Weight&lt;/strong&gt;, which
can connect the default style through to a Bold style. Any individual style
can be located along an axis, and is called an &#39;instance&#39; of the variable
font. Some instances are named by the font developer, for example Weight axis
location 600 is called SemiBold.&lt;/p&gt;
&lt;p&gt;The variable font &lt;a href=&quot;https://github.com/TypeNetwork/Roboto-Flex&quot; rel=&quot;noopener&quot;&gt;Roboto Flex&lt;/a&gt;
has three styles for its &lt;strong&gt;Weight&lt;/strong&gt; axis. The Regular style is at the center,
and there are two styles at the opposite ends of the axis, one lighter and
the other heavier. Between these, you can choose from 900 instances:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The letter &amp;#x27;A&amp;#x27; shown in different weights&quot; decoding=&quot;async&quot; height=&quot;218&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Ecr5godvTKunVXP7W8aU.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption w-figcaption--fullbleed&quot;&gt;
    Above: Illustrated anatomy of the Weight axis for the typeface Roboto.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;The font developer can offer a set of different axes. You can combine them
because they all share the same default styles. Roboto has three styles in a
Width axis: the Regular is at the center of the axis, and two styles, narrower
and wider, are at each end. These provide all the widths of the Regular style,
and combine with the Weight axis to provide all the widths for every weight.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-dance.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption&gt;
    Roboto Flex in random combinations of Width and Weight
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This means there are thousands of styles! This may seem like massive overkill,
but the quality of the reading experience can be remarkably enhanced by this
diversity of type styles. And, if it is without performance penalty, web
developers can use a few or as many styles as they wish–it&#39;s up to their design.&lt;/p&gt;
&lt;h3 id=&quot;italics&quot;&gt;Italics &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#italics&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The way that Italics are handled in variable fonts is interesting, as there are
two difference approaches. Typefaces like Helvetica or Roboto have interpolation
compatible contours, so their Roman and Italic styles can be interpolated
between and the &lt;strong&gt;Slant&lt;/strong&gt; axis can be used to get from Roman to Italic.&lt;/p&gt;
&lt;p&gt;Other typefaces (such as Garamond, Baskerville, or Bodoni) have Roman and Italic
glyph contours that are not interpolation compatible. For example, the contours
that typically define a Roman lowercase &amp;quot;n&amp;quot; do not match the contours used to
define an Italic lowercase &amp;quot;n&amp;quot;. Instead of interpolating one contour to the
other, the &lt;strong&gt;Italic&lt;/strong&gt; axis toggles from Roman to Italic contours.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Example of the Weight Axes for the typeface Amstelvar&quot; decoding=&quot;async&quot; height=&quot;520&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/EySl1LIfX1QIrGq654PO.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Amstelvar&#39;s &quot;n&quot; contours in Italic (12 point, regular weight, normal width),
    and in Roman. Image supplied by David Berlow, type designer and typographer
    at Font Bureau.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;After the switch to Italic, the axes available to the user should be the same as
those for the Roman, just as the character set should be the same.&lt;/p&gt;
&lt;p&gt;A glyph substitution capability can also be seen for individual glyphs, and used
anywhere in the design space of a variable font. For example, a dollar sign
design with two vertical bars works best at larger point sizes, but at smaller
point sizes a design with only one bar is better. When we have fewer pixels for
rendering the glyph, a two bar design can become illegible. To combat this, much
like the Italic axis, a glyph substitution of one glyph for another can occur
along the &lt;strong&gt;Optical Size&lt;/strong&gt; axis at a point decided by the type designer.&lt;/p&gt;
&lt;p&gt;In summary, where the contours allow for it, type designers can create fonts
that interpolate between various styles in a multi-dimensional design space.
This gives you granular control over your typography, and a great deal of power.&lt;/p&gt;
&lt;h2 id=&quot;axes-definitions&quot;&gt;Axes definitions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#axes-definitions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are five &lt;a href=&quot;https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg#registered-axis-tags&quot; rel=&quot;noopener&quot;&gt;registered
axes&lt;/a&gt;,
which control known, predictable features of the font: weight, width, optical
size, slant and italics. Besides those, a font can contain custom axes. These
can control any design aspect of the font the type designer wishes: the size of
serifs, the length of swashes, the height of ascenders or the size of the dot on
the i.&lt;/p&gt;
&lt;p&gt;Even though axes can control the same feature, they might use different values.
For example, in the Oswald and Hepta Slab variable fonts there is only one axis
available, Weight, but the ranges are different–Oswald has the same range as
before it was upgraded to be variable, 200 to 700, but Hepta Slab has an extreme
hairline weight at 1 that goes all the up to 900.&lt;/p&gt;
&lt;p&gt;The five registered axes have 4-character lowercase tags that are used to
set their values in CSS:&lt;/p&gt;
&lt;table class=&quot;responsive&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th colspan=&quot;2&quot;&gt;Axis names and CSS values&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Weight
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;wght&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Width
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;wdth&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Slant
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;slnt&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Optical Size
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;opsz&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;
				Italics
			&lt;/td&gt;
			&lt;td&gt;
				&lt;code&gt;ital&lt;/code&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since the font developer defines which axes are available in a variable font,
and which values they can have, it is essential to find out what each font
offers. The font&#39;s documentation should provide this, or you can inspect the
font using a tool like &lt;a href=&quot;https://wakamaifondue.com/&quot; rel=&quot;noopener&quot;&gt;Wakamai Fondue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;use-cases-and-benefits&quot;&gt;Use cases and benefits &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#use-cases-and-benefits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Setting the axes values comes down to personal taste and applying typographic
best practices. The danger with any new technology is possible misuse, and
settings that are overly artistic or exploratory could also decrease legibility
of the actual text. For titles, exploring different axes to create great
artistic designs are exciting, but for body copy this risks making the text
illegible.&lt;/p&gt;
&lt;h3 id=&quot;exciting-expression&quot;&gt;Exciting expression &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#exciting-expression&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Grass example by Mandy Michael&quot; decoding=&quot;async&quot; height=&quot;174&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 495px) 495px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/Rh7wLaBLauEF02D2dqMC.png?auto=format&amp;w=990 990w&quot; width=&quot;495&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;One great example of artistic expression is shown above, an exploration of the
typeface
&lt;a href=&quot;https://www.typenetwork.com/brochure/decovar-a-decorative-variable-font-by-david-berlow&quot; rel=&quot;noopener&quot;&gt;Decovar&lt;/a&gt;
by Mandy Michael.&lt;/p&gt;
&lt;p&gt;You can view the working example and source code for the above sample
&lt;a href=&quot;https://codepen.io/mandymichael/pen/YYaWop&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;animation&quot;&gt;Animation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#animation&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/vgdbNJBYHma2o62ZqYmcnkq3j0o1/2Du2L0Ii5nUqz8n6S3Vz.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Typeface Zycon, designed for animation by David Berlow, type designer and
    typographer at Font Bureau.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;There is also a possibility to explore animating characters with variable fonts.
Above is an example of different axes being used with the typeface Zycon. See
the live &lt;a href=&quot;https://www.axis-praxis.org/specimens/zycon&quot; rel=&quot;noopener&quot;&gt;animation example on Axis
Praxis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://typogram.github.io/Anicons&quot; rel=&quot;noopener&quot;&gt;Anicons&lt;/a&gt; is the world&#39;s first animated
color icon font, based on Material Design Icons. Anicons is an experiment that
combines two cutting edge font technologies: variable fonts and color fonts.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/anicons-animation.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A few examples of hover animations from Anicon&#39;s color icon font
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;finesse&quot;&gt;Finesse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#finesse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/larger-widths.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Amstelvar using little bits of XTRA in opposite directions so the words&#39; widths are evened out
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/TypeNetwork/Roboto-Flex&quot; rel=&quot;noopener&quot;&gt;Roboto Flex&lt;/a&gt; and
&lt;a href=&quot;https://github.com/TypeNetwork/Amstelvar&quot; rel=&quot;noopener&quot;&gt;Amstelvar&lt;/a&gt; offer a set of
&amp;quot;Parametric Axes.&amp;quot; In these axes, the letters are deconstructed into 4
fundamental aspects of form: black or positive shapes, white or negative
shapes, and the x and y dimensions. In the same way that primary colors can be
blended with any other color to adjust it, these 4 aspects can be used to fine
tune any other axis.&lt;/p&gt;
&lt;p&gt;The XTRA axis in Amstelvar allows you to adjust the &amp;quot;white&amp;quot; per mille value,
as shown above. Using little bits of XTRA in opposite directions, the words&#39;
widths are evened out.&lt;/p&gt;
&lt;h2 id=&quot;variable-fonts-in-css&quot;&gt;Variable fonts in CSS &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#variable-fonts-in-css&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;loading-variable-font-files&quot;&gt;Loading variable font files &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#loading-variable-font-files&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Variable fonts are loaded though the same &lt;code&gt;@font-face&lt;/code&gt; mechanism as traditional
static web fonts, but with two new enhancements:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Roboto Flex&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2 supports variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;       &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2-variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25% 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;1. Source Formats:&lt;/strong&gt; We don&#39;t want the browser to download the font if it
doesn&#39;t support variable fonts, so we add a &lt;code&gt;format&lt;/code&gt; description: once in the
&lt;a href=&quot;https://www.w3.org/TR/css-fonts-4/#font-face-src-requirement-types&quot; rel=&quot;noopener&quot;&gt;future
format&lt;/a&gt;
(&lt;code&gt;woff2 supports variations&lt;/code&gt;), once in the current but soon to be deprecated
format (&lt;code&gt;woff2-variations&lt;/code&gt;). If the browser supports variable fonts and supports
the upcoming syntax, it will use the first declaration. If it supports variable
fonts and the current syntax, it will use the second declaration. They both
point to the same font file.&lt;/p&gt;
&lt;!-- TODO 2021 Q1 revisit this, based on progress in
     https://www.w3.org/TR/css-fonts-4/#font-face-src-requirement-types
     to allow removing the 2nd src --&gt;
&lt;p&gt;&lt;strong&gt;2. Style Ranges:&lt;/strong&gt; You&#39;ll notice we&#39;re supplying two values for &lt;code&gt;font-weight&lt;/code&gt;
and &lt;code&gt;font-stretch&lt;/code&gt;. Instead of telling the browser which specific weight this
font provides (for example &lt;code&gt;font-weight: 500;&lt;/code&gt;), we now give it the &lt;strong&gt;range&lt;/strong&gt; of
weights supported by the font. For Roboto Flex, the Weight axis ranges from 100
to 1000, and CSS directly maps the axis range to the &lt;code&gt;font-weight&lt;/code&gt; style
property. By specifying the range in &lt;code&gt;@font-face&lt;/code&gt;, any value outside this range
will be &amp;quot;capped&amp;quot; to the nearest valid value. The Width axis range is mapped in
the same way to the &lt;code&gt;font-stretch&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;If you&#39;re using the Google Fonts API, this will all be taken care of. Not only
will the CSS contain the proper source formats and ranges, Google Fonts will
also send static fallback fonts in case variable fonts aren&#39;t supported.&lt;/p&gt;
&lt;h3 id=&quot;using-weights-and-widths&quot;&gt;Using weights and widths &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-weights-and-widths&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Currently, the axes you can reliably set from CSS are the &lt;code&gt;wght&lt;/code&gt; axis through
&lt;code&gt;font-weight&lt;/code&gt;, and the &lt;code&gt;wdth&lt;/code&gt; axis through &lt;code&gt;font-stretch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Traditionally, you would set &lt;code&gt;font-weight&lt;/code&gt; as a keyword (&lt;code&gt;light&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;) or as
a numerical value between 100 and 900, in steps of 100. With variable fonts, you
can set any value within the font&#39;s Width range:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.kinda-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 125&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-weight.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Weight axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Likewise, we can set &lt;code&gt;font-stretch&lt;/code&gt; with keywords (&lt;code&gt;condensed&lt;/code&gt;,
&lt;code&gt;ultra-expanded&lt;/code&gt;) or with percentage values:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.kinda-narrow&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 33.3%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-wide&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-width.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Width axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-italics-and-obliques&quot;&gt;Using italics and obliques &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-italics-and-obliques&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ital&lt;/code&gt; axis is intended for fonts that contain both a regular style, and an
italic style. The axis is meant to be an on/off switch: value &lt;code&gt;0&lt;/code&gt; is off and
will show the regular style, value &lt;code&gt;1&lt;/code&gt; will show the italics. Unlike other axes,
there&#39;s no transition. A value of &lt;code&gt;0.5&lt;/code&gt; won&#39;t give you &amp;quot;half italics&amp;quot;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;slnt&lt;/code&gt; axis is different from italics in that it&#39;s not a new &lt;em&gt;style&lt;/em&gt;, but
just slants the regular style. By default its value is &lt;code&gt;0&lt;/code&gt;, which means the
default upright letter shapes. Roboto Flex has a maximum slant of -10 degrees,
meaning the letters will lean to the right when going from 0 to -10.&lt;/p&gt;
&lt;p&gt;It would be intuitive to set these axis through the &lt;code&gt;font-style&lt;/code&gt; property, but
as of April 2020, how to exactly do this is &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/3125&quot; rel=&quot;noopener&quot;&gt;still being worked
out&lt;/a&gt;. So for now, you should
treat these as custom axes, and set them through &lt;code&gt;font-variation-settings&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;i, em, .italic&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token comment&quot;&gt;/* Should be font-style: italic; */&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;ital&#39;&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token comment&quot;&gt;/* Should be font-style: oblique 10deg; */&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;slnt&#39;&lt;/span&gt; 10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-slant.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Slant axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-optical-sizes&quot;&gt;Using optical sizes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-optical-sizes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A typeface can be rendered very small (a 12px footnote) or very large (a 80px
headline). Fonts can respond to these size changes by changing its letter shapes
to better suit its size. A small size might be better off without fine details,
while a large size might benefit from more details and thinner strokes.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The letter &amp;#x27;a&amp;#x27; shown at different optical sizes&quot; decoding=&quot;async&quot; height=&quot;147&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/wrVCGSQNaGWhNp97BoRS.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The letter &#39;a&#39; in Roboto Flex at different pixel sizes, then scaled to be the same size,
    shows the differences in design.
    &lt;a href=&quot;https://codepen.io/RoelN/pen/PoPvdeV&quot;&gt;Try it yourself on Codepen&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;A new CSS property has been introduced for this axis: &lt;code&gt;font-optical-sizing&lt;/code&gt;. By
default it&#39;s set to &lt;code&gt;auto&lt;/code&gt;, which makes the browser set the axis value based on
the &lt;code&gt;font-size&lt;/code&gt;. This means the browser will pick the best optical size
automatically, but if you wish to turn this off you can set
&lt;code&gt;font-optical-sizing&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also set a custom value for the &lt;code&gt;opsz&lt;/code&gt; axis, if you deliberately want an
optical size that doesn&#39;t match the font size. The following CSS would cause
text to be displayed at a large size, but at an optical size as if it were
printed in &lt;code&gt;8pt&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.small-yet-large&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;opsz&#39;&lt;/span&gt; 8&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;using-custom-axes&quot;&gt;Using custom axes &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#using-custom-axes&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unlike registered axes, custom axes will not be mapped to an existing CSS
property, so you will always have to set them through &lt;code&gt;font-variation-settings&lt;/code&gt;.
Tags for custom axes are always in uppercase, to distinguish them from
registered axes.&lt;/p&gt;
&lt;p&gt;Roboto Flex offers a few custom axes, and the most important is Grade (&lt;code&gt;GRAD&lt;/code&gt;).
A Grade axis is interesting as it changes the weight of the font without
changing the widths, so line breaks do not change. By playing with a Grade axis,
you can avoid being forced to fiddle with changes to Weight axis that affects
the overall width, and then changes to the Width axis that affect the overall
weight.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video controls=&quot;&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; class=&quot;w-screenshot&quot;&gt;
    &lt;source src=&quot;https://storage.googleapis.com/web-dev-assets/variable-fonts/roboto-flex-grade.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    Roboto Flex&#39; Grade axis being changed from its minimum to its maximum.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;As &lt;code&gt;GRAD&lt;/code&gt; is a custom axis, with a range of -1 to 1, we need to address it with
&lt;code&gt;font-variation-settings&lt;/code&gt;:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` -1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-normal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; `GRAD` 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;variable-fonts-on-google-fonts&quot;&gt;Variable fonts on Google Fonts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#variable-fonts-on-google-fonts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Google Fonts has expanded their catalog with &lt;a href=&quot;https://fonts.google.com/?vfonly=true&quot; rel=&quot;noopener&quot;&gt;variable
fonts&lt;/a&gt;, and adding new ones regularly.
The interface is currently aimed at picking single instances from the font:
you select the variation you want, click &amp;quot;Select this style&amp;quot;, and it will be
added to the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element that fetches the CSS and fonts from Google Fonts.&lt;/p&gt;
&lt;p&gt;To use all the available axes, or ranges of values, you will have to &lt;a href=&quot;https://developers.google.com/fonts/docs/css2&quot; rel=&quot;noopener&quot;&gt;manually
compose&lt;/a&gt; the URL to the Google
Fonts API. The &lt;a href=&quot;https://fonts.google.com/variablefonts&quot; rel=&quot;noopener&quot;&gt;variable fonts overview&lt;/a&gt; lists all axes and values.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/RoelN/google-variable-fonts-links&quot; rel=&quot;noopener&quot;&gt;Google Variable Fonts Links&lt;/a&gt;
tool can also give you the latest URLs for the full variable fonts.&lt;/p&gt;
&lt;h2 id=&quot;font-variation-settings-inheritance&quot;&gt;Font-variation-settings inheritance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#font-variation-settings-inheritance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While all registered axes will soon be supported through existing CSS
properties, for the time being you might need to rely on
&lt;code&gt;font-variation-settings&lt;/code&gt; as a fallback. And if your font has custom axes,
you&#39;ll need &lt;code&gt;font-variation-settings&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;However, here&#39;s a little gotcha with &lt;code&gt;font-variation-settings&lt;/code&gt;. Every property
you &lt;em&gt;don&#39;t explicitly set&lt;/em&gt; will automatically be reset to its default.
Previously set values aren&#39;t inherited! This means the following will not work
as expected:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;slanted grade-light&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	I should be slanted and have a light grade&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;First the browser will apply &lt;code&gt;font-variation-settings: &#39;slnt&#39; 10&lt;/code&gt; from the
&lt;code&gt;.slanted&lt;/code&gt; class. Then it will apply &lt;code&gt;font-variation-settings: &#39;GRAD&#39; -1&lt;/code&gt; from
the &lt;code&gt;.grade-light&lt;/code&gt; class. But this will reset the &lt;code&gt;slnt&lt;/code&gt; back to its default of
0! The result will be text in a light grade, but not slanted.&lt;/p&gt;
&lt;p&gt;Luckily, we can work around this by using CSS variables:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set the default values */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--slnt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--GRAD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Change value for these elements and their children */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--slnt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-light&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-normal&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;--grad&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Apply whatever value is kept in the CSS variables */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.slanted,&lt;br /&gt;.grade-light,&lt;br /&gt;.grade-normal,&lt;br /&gt;.grade-heavy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;slnt&#39;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--slnt&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;GRAD&#39;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--GRAD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;CSS variables will cascade, so if an element (or one of its parents) will have
set the &lt;code&gt;slnt&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt;, it will keep that value, even if you set &lt;code&gt;GRAD&lt;/code&gt; to
something else. See
&lt;a href=&quot;https://pixelambacht.nl/2019/fixing-variable-font-inheritance/&quot; rel=&quot;noopener&quot;&gt;Fixing variable font inheritance&lt;/a&gt;
for an in-depth explanation of this technique.&lt;/p&gt;
&lt;p&gt;Note that animating CSS variables doesn&#39;t work (by design), so something like
this doesn&#39;t work:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@keyframes&lt;/span&gt; width-animation&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token selector&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;--wdth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;   &lt;span class=&quot;token selector&quot;&gt;to&lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;--wdth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 151&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;These animations will have to happen directly on &lt;code&gt;font-variation-settings&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;performance-gains&quot;&gt;Performance gains &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#performance-gains&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenType variable fonts allow us to store multiple variations of a type family
into a single font file.
&lt;a href=&quot;https://medium.com/@monotype/part-2-from-truetype-gx-to-variable-fonts-4c28b16997c3&quot; rel=&quot;noopener&quot;&gt;Monotype&lt;/a&gt;
ran an experiment by combining 12 input fonts to generate eight weights,
across three widths, across both the Italic and Roman styles. Storing 48
individual fonts in a single variable font file meant a &lt;em&gt;88% reduction in file
size&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However, if you are using a single font such as Roboto Regular and nothing
else, you might not see a net gain in font size if you were to switch to a
variable font with many axes. As always, it depends on your use-case.&lt;/p&gt;
&lt;p&gt;On the flip side, animating the font between settings may cause performance
issues. Although this will improve once variable font support in browsers gets
more mature, the problem can be reduced somewhat by only animating fonts that are
currently on screen. This handy snippet by
&lt;a href=&quot;https://abcdinamo.com/news/using-variable-fonts-on-the-web&quot; rel=&quot;noopener&quot;&gt;Dinamo&lt;/a&gt; pauses
animations in elements with the class &lt;code&gt;vf-animation&lt;/code&gt;, when they&#39;re not on
screen:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; observer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entries&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; observer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  entries&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Pause/Play the animation&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isIntersecting&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;animationPlayState &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;running&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;animationPlayState &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;paused&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; variableTexts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.vf-animation&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;variableTexts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; observer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;el&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;If your font responds to user interaction, it&#39;s a good idea to &lt;a href=&quot;https://css-tricks.com/debouncing-throttling-explained-examples/&quot; rel=&quot;noopener&quot;&gt;throttle or
debounce&lt;/a&gt;
input events. This will prevent the browser from rendering instances of the
variable font that changed so little from the previous instance the human eye
wouldn&#39;t see the difference.&lt;/p&gt;
&lt;p&gt;If you&#39;re using Google Fonts, it&#39;s a good idea to
&lt;a href=&quot;https://web.dev/preconnect-and-dns-prefetch/&quot;&gt;preconnect&lt;/a&gt; to &lt;code&gt;https://fonts.gstatic.com&lt;/code&gt;,
the domain where Google&#39;s fonts are hosted. This will make sure the browser
knows early on where to get the fonts when it comes across them in the CSS:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;preconnect&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://fonts.gstatic.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This tip works for other CDNs as well: the sooner you let the browser set up a
network connection, the sooner it can download your fonts.&lt;/p&gt;
&lt;p&gt;Find more performance tips for loading Google Fonts in &lt;a href=&quot;https://csswizardry.com/2020/05/the-fastest-google-fonts/&quot; rel=&quot;noopener&quot;&gt;The Fastest
Google Fonts&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;fallbacks&quot;&gt;Fallbacks and browser support &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#fallbacks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All modern browsers &lt;a href=&quot;https://caniuse.com/#feat=variable-fonts&quot; rel=&quot;noopener&quot;&gt;support variable
fonts&lt;/a&gt;. In case you need to support
older browsers, you can choose to build your site with static fonts, and use
variable fonts as progressive enhancement:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set up Roboto for old browsers, only regular + bold */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;Roboto-Regular.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;Roboto-Bold.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bold&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Roboto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.super-bold&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bold&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/* Set up Roboto for modern browsers, all weights */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@supports&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;font-variation-settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; normal&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@font-face&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Roboto&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2 supports variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string url&quot;&gt;&#39;RobotoFlex-VF.woff2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;woff2-variations&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-stretch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25% 151%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.super-bold&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1000&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For older browsers, text with the class &lt;code&gt;.super-bold&lt;/code&gt; will get rendered in the
normal bold, as that&#39;s the only bold font we have available. When variable fonts
are supported, we can actually use the heaviest weight of 1000.&lt;/p&gt;
&lt;p&gt;If you are using the Google Fonts API, it will take care of loading the proper
fonts for your visitor&#39;s browsers. Say you request the font Oswald in weight
range 200 to 700, like so:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&amp;amp;display=swap&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Modern browsers that can handle variable fonts will get the variable font, and
will have every weight between 200 and 700 available. Older browsers will get
served individual static fonts for every weight. In this case, this means
they&#39;ll download 6 font files: one for weight 200, one for weight 300, and so
on.&lt;/p&gt;
&lt;h2 id=&quot;thanks&quot;&gt;Thanks &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/variable-fonts/#thanks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article would have only been made possible with the help of the following
people:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/mustafa_x&quot; rel=&quot;noopener&quot;&gt;Mustafa Kurtuldu&lt;/a&gt;, UX designer and design advocate at Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/PixelAmbacht&quot; rel=&quot;noopener&quot;&gt;Roel Nieskens&lt;/a&gt;, UX designer/developer and typography expert at &lt;a href=&quot;https://kabisa.nl/&quot; rel=&quot;noopener&quot;&gt;Kabisa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/davelab6&quot; rel=&quot;noopener&quot;&gt;Dave Crossland&lt;/a&gt;, Program Manager, Google Fonts&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dberlow&quot; rel=&quot;noopener&quot;&gt;David Berlow&lt;/a&gt;, type designer and typographer at
&lt;a href=&quot;https://fontbureau.typenetwork.com/&quot; rel=&quot;noopener&quot;&gt;Font Bureau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/lorp&quot; rel=&quot;noopener&quot;&gt;Laurence Penney&lt;/a&gt;, developer of &lt;a href=&quot;https://axis-praxis.org/&quot; rel=&quot;noopener&quot;&gt;axis-praxis.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/Mandy_Kerr&quot; rel=&quot;noopener&quot;&gt;Mandy Michael&lt;/a&gt;, developer of &lt;a href=&quot;https://variablefonts.dev/&quot; rel=&quot;noopener&quot;&gt;variablefonts.dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hero image by &lt;a href=&quot;https://unsplash.com/@brunus&quot; rel=&quot;noopener&quot;&gt;Bruno Martins&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/photos/OhJmwB4XWLE&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;
</content>
    <author>
      <name>Mustafa Kurtuldu</name>
    </author><author>
      <name>Thomas Steiner</name>
    </author><author>
      <name>Dave Crossland</name>
    </author><author>
      <name>Roel Nieskens</name>
    </author>
  </entry>
  
  <entry>
    <title>Use cross-platform browser features to build a sign-in form</title>
    <link href="https://web.dev/codelab-sign-in-form-best-practices/"/>
    <updated>2020-06-29T00:00:00Z</updated>
    <id>https://web.dev/codelab-sign-in-form-best-practices/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This codelab teaches you how to build a sign-in form that&#39;s secure, accessible, and easy to use.&lt;/p&gt;
&lt;h2 id=&quot;1.-use-meaningful-html&quot;&gt;1. Use meaningful HTML &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#1.-use-meaningful-html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use these elements built for the job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you&#39;ll see, these elements enable built-in browser functionality, improve
accessibility, and add meaning to your markup.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click Remix to edit to make the project editable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following code to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign in&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign in&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Here&#39;s how your &lt;code&gt;index.html&lt;/code&gt; file should look at this point:&lt;/p&gt;
  &lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form-codelab-1?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form-codelab-1 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to preview your sign-in form.
The HTML that you added is valid and correct, but the default browser styling
makes it looks terrible and hard to use, especially on mobile devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;View Source&lt;/strong&gt; to return to your source code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;2.-design-for-fingers-and-thumbs&quot;&gt;2. Design for fingers and thumbs &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#2.-design-for-fingers-and-thumbs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Adjust padding, margins, and font sizes to ensure that your inputs work well on mobile.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copy the following CSS and paste it into your &lt;code&gt;style.css&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
  &lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form-codelab-2?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form-codelab-2 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;View App&lt;/strong&gt; to see your freshly styled sign-in form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;View Source&lt;/strong&gt; to return to your &lt;code&gt;style.css&lt;/code&gt; file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&#39;s quite a lot of code! The main things to be aware of are the changes to sizes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;margin&lt;/code&gt; are added to inputs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;font-size&lt;/code&gt; is different for mobile and desktop.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;:invalid&lt;/code&gt; selector is used to indicate when an input has an invalid value.
This doesn&#39;t work yet.&lt;/p&gt;
&lt;p&gt;The CSS layout is mobile-first:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The default CSS is for viewports less than 450 pixels wide.&lt;/li&gt;
&lt;li&gt;The media query section sets overrides for viewports that are at least 450 pixels wide.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When building your own form like this, it&#39;s very important at this point in the process to
test your code on real devices on desktop and mobile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is label and input text readable, especially for people with low vision?&lt;/li&gt;
&lt;li&gt;Are the inputs and &lt;strong&gt;Sign in&lt;/strong&gt; button large enough to use as touch targets for thumbs?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3.-add-input-attributes-to-enable-built-in-browser-features&quot;&gt;3. Add input attributes to enable built-in browser features &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#3.-add-input-attributes-to-enable-built-in-browser-features&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enable the browser to store and autofill input values, and provide access to
built-in password-management features.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add attributes to your form HTML so it looks like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;#&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign in&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autofocus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;        &lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;new-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sign-in&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Sign in&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;View your app again and then click &lt;strong&gt;Email&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Notice how focus moves to the email input. This is because the label is associated with the input through the &lt;code&gt;for=&amp;quot;email&amp;quot;&lt;/code&gt; attribute. Screenreaders also
announce the label text when the label or the label&#39;s associated input gets focus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Focus the email input on a mobile device.&lt;/p&gt;
&lt;p&gt;Notice how the keyboard is optimized for typing an email address. For example, the &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; characters might be shown on the primary keyboard, and the
operating system might show stored emails above the keyboard. All of this happens because the &lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt; attribute is applied to an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&quot;w-figure&quot;&gt;
    &lt;img alt=&quot;The default email keyboard on iOS.&quot; class=&quot;w-screenshot w-screenshot--filled&quot; decoding=&quot;async&quot; height=&quot;1504&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/tcFciHGuF3MxnTr1y5ue01OGLBn2/dUtDcvYy1RMzEYBi7Ce0.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;/figure&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;Type some text into the password input.&lt;/p&gt;
&lt;p&gt;The text is hidden by default because the &lt;code&gt;type=&amp;quot;password&amp;quot;&lt;/code&gt; attribute has been applied to the element.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;autocomplete&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;type&lt;/code&gt; attributes help browsers understand
the role of inputs in order to store data that can be used later for autofill.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;
&lt;p&gt;Focus the email input on a desktop device and type some text.&lt;/p&gt;
&lt;p&gt;You can see the URL of your app when you click &lt;strong&gt;Fullscreen&lt;/strong&gt; &lt;img src=&quot;https://web.dev/images/glitch/fullscreen.svg&quot; alt=&quot;The Fullscreen icon&quot; /&gt;. If you stored any email addresses in your
browser, you probably see a dialog that lets you select from those stored emails. This happens because the &lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt; attribute applied to the
email input.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt; and &lt;code&gt;autocomplete=&amp;quot;current-password&amp;quot;&lt;/code&gt; help browsers use
stored values to autofill the inputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;For email inputs, use &lt;code&gt;autocomplete=&amp;quot;username&amp;quot;&lt;/code&gt; because &lt;code&gt;username&lt;/code&gt; is recognized
by password managers in modern browsers, even though you should use &lt;code&gt;type=&amp;quot;email&amp;quot;&lt;/code&gt;,
and you may want to use &lt;code&gt;id=&amp;quot;email&amp;quot;&lt;/code&gt; and &lt;code&gt;name=&amp;quot;email&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Different browsers use &lt;a href=&quot;https://web.dev/sign-in-form-best-practices/#password-managers:~:text=Browser%20password%20and%20autofill%20systems%20are%20not%20simple&quot;&gt;different techniques&lt;/a&gt;
to work out the role of form inputs and provide autofill for a range of
different websites.&lt;/p&gt;
&lt;p&gt;Add and remove attributes to try this yourself.&lt;/p&gt;
&lt;p&gt;It&#39;s extremely important to test behavior across platforms. You should enter values
and submit the form in different browsers on different devices. It&#39;s easy to
test on a range of platforms with BrowserStack, which is &lt;a href=&quot;https://www.browserstack.com/open-source&quot; rel=&quot;noopener&quot;&gt;free for open source
projects&lt;/a&gt;. Try it!&lt;/p&gt;
&lt;p&gt;Here&#39;s how your &lt;code&gt;index.html&lt;/code&gt; file should look at this point:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form-codelab-3?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form-codelab-3 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;4.-add-ui-to-toggle-password-display&quot;&gt;4. Add UI to toggle password display &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#4.-add-ui-to-toggle-password-display&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Usability experts &lt;a href=&quot;https://www.nngroup.com/articles/stop-password-masking/&quot; rel=&quot;noopener&quot;&gt;strongly recommend&lt;/a&gt; the addition of an icon or button that lets users see the text that they enter in the &lt;strong&gt;Password&lt;/strong&gt; field. There&#39;s &lt;a href=&quot;https://twitter.com/sw12/status/1251191795377156099&quot; rel=&quot;noopener&quot;&gt;no built-in way to do this&lt;/a&gt;, so you need to implement it yourself with JavaScript.&lt;/p&gt;
&lt;p&gt;The code to add this functionality is straightforward. This example uses text, not an icon.&lt;/p&gt;
&lt;p&gt;Update the &lt;a href=&quot;https://glitch.com/edit/#!/sign-in-form-codelab-4?path=index.html:22:2&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://glitch.com/edit/#!/sign-in-form-codelab-4?path=style.css:34:0&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;style.css&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://glitch.com/edit/#!/sign-in-form-codelab-4?path=script.js&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;script.js&lt;/code&gt;&lt;/a&gt; files as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a toggle to the password section in the &lt;code&gt;index.html&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Show password as plain text. Warning: this will display your password on the screen.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Add the following CSS to the bottom of the &lt;code&gt;style.css&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;button#toggle-password&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; pointer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 300&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -4px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -2px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This makes the &lt;strong&gt;Show password&lt;/strong&gt; button look like plain text and displays it in the top-right corner of the password section.&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Add the following JavaScript to the &lt;code&gt;script.js&lt;/code&gt; file to toggle password display and set the appropriate &lt;code&gt;aria-label&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; passwordInput &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; togglePasswordButton &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;toggle-password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; togglePassword&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;togglePassword&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Hide password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;aria-label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Hide password.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;Show password&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    togglePasswordButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;aria-label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Show password as plain text. &#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token string&quot;&gt;&#39;Warning: this will display your password on the screen.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;Try the show password logic now.&lt;/p&gt;
&lt;p&gt;a. View your app.
b. Enter some text in the password field.
c. Click &lt;strong&gt;Show password&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repeat the fourth step on multiple browsers on different operating systems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Think about UX design: will users notice &lt;strong&gt;Show password&lt;/strong&gt; and understand it? Is there a better way to provide this functionality? This is a good moment to try &lt;a href=&quot;https://www.nngroup.com/articles/discount-usability-20-years/&quot; rel=&quot;noopener&quot;&gt;discount usability testing&lt;/a&gt; with a small group of friends or colleagues.&lt;/p&gt;
&lt;p&gt;To understand how this functionality works for screenreaders, install the &lt;a href=&quot;https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en&quot; rel=&quot;noopener&quot;&gt;ChromeVox Classic Extension&lt;/a&gt; and navigate through the form. Do the &lt;code&gt;aria-label&lt;/code&gt; values work as intended?&lt;/p&gt;
&lt;p&gt;Some websites, such as &lt;a href=&quot;https://mail.google.com/&quot; rel=&quot;noopener&quot;&gt;Gmail&lt;/a&gt;, use icons, not
text, to toggle password display. When you&#39;re done with this codelab, implement this with SVG images.
&lt;a href=&quot;https://material.io/resources/icons/?icon=visibility&quot; rel=&quot;noopener&quot;&gt;Material Design&lt;/a&gt; offers high-quality icons that you can download for free.&lt;/p&gt;
&lt;p&gt;Here&#39;s how your code should look at this point:&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form-codelab-4?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form-codelab-4 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;5.-add-form-validation&quot;&gt;5. Add form validation &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#5.-add-form-validation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can help users enter their data correctly when you let them validate their data before form submission and show them what they need to change.&lt;/p&gt;
&lt;p&gt;HTML form elements and attributes have built-in features for basic validation,
but you should also use JavaScript to do more robust validation while users enter data and when they attempt to submit the form.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--warning&quot;&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;:
Client-side validation helps users enter data and can avoid unnecessary server load,
but you must always validate and sanitize data on your backend.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This step uses the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#constraints&quot; rel=&quot;noopener&quot;&gt;Constraint Validation API&lt;/a&gt;
(which is &lt;a href=&quot;https://caniuse.com/#search=constraint%20validation&quot; rel=&quot;noopener&quot;&gt;widely supported&lt;/a&gt;)
to add custom validation with built-in browser UI that sets focus and displays prompts.&lt;/p&gt;
&lt;p&gt;Tell users the constraints for passwords and any other inputs. Don&#39;t make them guess!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the password section of the &lt;code&gt;index.html&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;toggle-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Show password as plain text. Warning: this will display your password on the screen.&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show password&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;autocomplete&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current-password&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-describedby&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;password-constraints&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;At least eight characters, with at least one lowercase and one uppercase letter.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This adds two new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Information about password constraints&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;aria-describedby&lt;/code&gt; attribute for the password input (Screenreaders read the label text, the input type (password), and then the description.)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Add the following CSS to the bottom of the &lt;code&gt;style.css&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;div#password-constraints&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px 0 0 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 16px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Add the following JavaScript to &lt;code&gt;script.js&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resetCustomValidity&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;resetCustomValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// A production site would use more stringent password testing. &lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;validatePassword&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; message&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;.{8,}&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;At least eight characters. &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;.*[A-Z].*&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    message &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;At least one uppercase letter. &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;.*[a-z].*&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    message &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;At least one lowercase letter.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  passwordInput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; signinButton &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;button#sign-in&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;submit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handleFormSubmission&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;                       &lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleFormSubmission&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;validatePassword&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reportValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkValidity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// On a production site do form submission.&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Logging in!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    signinButton&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;disabled &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;true&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;Try it!&lt;/p&gt;
&lt;p&gt;All recent browsers have built-in features for form validation and
support validation with JavaScript.&lt;/p&gt;
&lt;p&gt;a. Enter an invalid email address and click &lt;strong&gt;Sign in&lt;/strong&gt;. The browser displays a warning—no JavaScript required!&lt;/p&gt;
&lt;p&gt;b. Enter a valid email address, but then click &lt;strong&gt;Sign in&lt;/strong&gt; without a password value. The browser warns that you missed a required value and sets focus on the
password input.&lt;/p&gt;
&lt;p&gt;c. Enter an invalid password and click &lt;strong&gt;Sign in&lt;/strong&gt;. Now you see different messages depending on what&#39;s wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try different ways to help users enter email addresses and passwords. &lt;a href=&quot;https://aerotwist.com/blog/better-password-form-fields/&quot; rel=&quot;noopener&quot;&gt;Better password form fields&lt;/a&gt;
offers some clever suggestions.&lt;/p&gt;
&lt;p&gt;Here&#39;s how your code should look at this point:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 480px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/sign-in-form-codelab-5?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=0&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;sign-in-form-codelab-5 on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&quot;go-further&quot;&gt;Go further &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/codelab-sign-in-form-best-practices/#go-further&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;They&#39;re not shown in this codelab, but you still need these four crucial sign-in form features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;strong&gt;Forgot your password?&lt;/strong&gt;, a button that makes it easy for users to reset their passwords.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link to your terms of service and privacy policy documents so that your users know how you safeguard their data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consider style and branding, and ensure that these additional features match the rest of your website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;a href=&quot;https://web.dev/sign-in-form-best-practices#analytics&quot;&gt;Analytics and RUM&lt;/a&gt; so that you can test and monitor the performance and usability of your form design.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    <author>
      <name>Sam Dutton</name>
    </author>
  </entry>
  
  <entry>
    <title>Measure performance with the RAIL model</title>
    <link href="https://web.dev/rail/"/>
    <updated>2020-06-10T00:00:00Z</updated>
    <id>https://web.dev/rail/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;&lt;strong&gt;RAIL&lt;/strong&gt; is a &lt;strong&gt;user-centric&lt;/strong&gt; performance model that provides a structure for
thinking about performance. The model breaks down the user&#39;s experience into key
actions (for example, tap, scroll, load) and helps you define performance goals
for each of them.&lt;/p&gt;
&lt;p&gt;RAIL stands for four distinct aspects of web app life cycle: response,
animation, idle, and load. Users have different performance expectations for
each of these contexts, so performance goals are defined based on the context
and &lt;a href=&quot;https://www.nngroup.com/articles/response-times-3-important-limits/&quot; rel=&quot;noopener&quot;&gt;UX research on how users perceive
delays&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The 4 parts of the RAIL performance model: response, animation, idle, and load.&quot; decoding=&quot;async&quot; height=&quot;290&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/uc1IWVOW2wEhIY6z4KjJ.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The 4 parts of the RAIL performance model
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;focus-on-the-user&quot;&gt;Focus on the user &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#focus-on-the-user&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make users the focal point of your performance effort. The table below describes
key metrics of how users perceive performance delays:&lt;/p&gt;
&lt;table class=&quot;w-table-wrapper&quot;&gt;
  &lt;thead&gt;
  User perception of performance delays
  &lt;/thead&gt;
  &lt;tr&gt;
    &lt;td&gt;0&amp;nbsp;to&amp;nbsp;16&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Users are exceptionally good at tracking motion, and they dislike it when animations aren&#39;t smooth. They perceive animations as smooth so long as 60 new frames are rendered every second. That&#39;s 16&amp;nbsp;ms per frame, including the time it takes for the browser to paint the new frame to the screen, leaving an app about 10&amp;nbsp;ms to produce a frame.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;0&amp;nbsp;to&amp;nbsp;100&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Respond to user actions within this time window and users feel like the result is immediate. Any longer, and the connection between action and reaction is broken.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;100&amp;nbsp;to&amp;nbsp;1000&amp;nbsp;ms&lt;/td&gt;
    &lt;td&gt;Within this window, things feel part of a natural and continuous progression of tasks. For most users on the web, loading pages or changing views represents a task.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;1000&amp;nbsp;ms&amp;nbsp;or&amp;nbsp;more&lt;/td&gt;
    &lt;td&gt;Beyond 1000 milliseconds (1 second), users lose focus on the task they are performing.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;10000&amp;nbsp;ms or more&lt;/td&gt;
    &lt;td&gt;Beyond 10000 milliseconds (10 seconds), users are frustrated and are likely to abandon tasks. They may or may not come back later.&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Users perceive performance delays differently, depending on network
conditions and hardware. For example, loading sites on a powerful desktop
machine over a fast Wi-Fi connection commonly happens in under 1 s and
users have grown accustomed to that. Loading sites on mobile devices with slow
3G connections takes more time, so mobile users are generally more patient and
loading in 5 s on mobile is a more realistic goal. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;goals-and-guidelines&quot;&gt;Goals and guidelines &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#goals-and-guidelines&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the context of RAIL, the terms &lt;strong&gt;goals&lt;/strong&gt; and &lt;strong&gt;guidelines&lt;/strong&gt; have specific
meanings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;. Key performance metrics related to user experience. For example,
tap to paint in under 100 milliseconds. Since human perception is relatively
constant, these goals are unlikely to change any time soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;. Recommendations that help you achieve goals. These may be
specific to current hardware and network connection conditions, and therefore
may change over time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;response:-process-events-in-under-50ms&quot;&gt;Response: process events in under 50ms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#response:-process-events-in-under-50ms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Complete a transition initiated by user input within 100 ms, so
users feel like the interactions are instantaneous.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To ensure a visible response within 100 ms, process user input events
within 50 ms. This applies to most inputs, such as clicking buttons,
toggling form controls, or starting animations. This does not apply to touch
drags or scrolls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Though it may sound counterintuitive, it&#39;s not always the right call to
respond to user input immediately. You can use this 100 ms window to do
other expensive work, but be careful not to block the user. If possible, do
work in the background.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For actions that take longer than 50 ms to complete, always provide
feedback.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;50-ms-or-100-ms&quot;&gt;50 ms or 100 ms? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#50-ms-or-100-ms&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The goal is to respond to input in under 100 ms, so why is our budget only
50 ms? This is because there is generally other work being done in addition
to input handling, and that work takes up part of the time available for
acceptable input response. If an application is performing work in the
recommended 50 ms chunks during idle time, that means input can be queued
for up to 50 ms if it occurs during one of those chunks of work. Accounting
for this, it&#39;s safe to assume only the remaining 50 ms is available for
actual input handling. This effect is visualized in the diagram below which
shows how input received during an idle task is queued, reducing the available
processing time:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Diagram showing how input received during an idle task is queued, reducing available input processing time to 50ms&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/I7HDZ9qGxe0jAzz6PxNq.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;How idle tasks affect input response budget.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;animation:-produce-a-frame-in-10-ms&quot;&gt;Animation: produce a frame in 10 ms &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#animation:-produce-a-frame-in-10-ms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Produce each frame in an animation in 10 ms or less. Technically, the
maximum budget for each frame is 16 ms (1000 ms / 60 frames per
second ≈ 16 ms), but browsers need about 6 ms to render each frame,
hence the guideline of 10 ms per frame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aim for visual smoothness. Users notice when frame rates vary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In high pressure points like animations, the key is to do nothing where you
can, and the absolute minimum where you can&#39;t. Whenever possible, make use of
the 100 ms response to pre-calculate expensive work so that you maximize
your chances of hitting 60 fps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/rendering&quot; rel=&quot;noopener&quot;&gt;Rendering
Performance&lt;/a&gt;
for various animation optimization strategies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Recognize all the types of animations. Animations aren&#39;t just fancy
UI effects. Each of these interactions are considered animations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual animations, such as entrances and exits,
&lt;a href=&quot;https://www.webopedia.com/TERM/T/tweening.html&quot; rel=&quot;noopener&quot;&gt;tweens&lt;/a&gt;, and loading
indicators.&lt;/li&gt;
&lt;li&gt;Scrolling. This includes flinging, which is when the user starts scrolling,
then lets go, and the page continues scrolling.&lt;/li&gt;
&lt;li&gt;Dragging. Animations often follow user interactions, such as panning a map or
pinching to zoom. &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id=&quot;idle:-maximize-idle-time&quot;&gt;Idle: maximize idle time &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#idle:-maximize-idle-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Maximize idle time to increase the odds that the page responds to user
input within 50 ms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use idle time to complete deferred work. For example, for the initial page
load, load as little data as possible, then use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback&quot; rel=&quot;noopener&quot;&gt;idle
time&lt;/a&gt;
to load the rest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perform work during idle time in 50 ms or less. Any longer, and you risk
interfering with the app&#39;s ability to respond to user input within 50 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a user interacts with a page during idle time work, the user interaction
should always take the highest priority and interrupt the idle time work.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;load:-deliver-content-and-become-interactive-in-under-5-seconds&quot;&gt;Load: deliver content and become interactive in under 5 seconds &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#load:-deliver-content-and-become-interactive-in-under-5-seconds&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When pages load slowly, user attention wanders, and users perceive the task as
broken. Sites that load quickly have &lt;a href=&quot;https://www.thinkwithgoogle.com/intl/en-154/insights-inspiration/research-data/need-mobile-speed-how-mobile-latency-impacts-publisher-revenue/&quot; rel=&quot;noopener&quot;&gt;longer average sessions, lower bounce
rates, and higher ad
viewability&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Goals&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Optimize for fast loading performance relative to the device and network
capabilities of your users. Currently, a good target for first loads is to
load the page and be &lt;a href=&quot;https://web.dev/interactive/&quot;&gt;interactive&lt;/a&gt; in &lt;a href=&quot;https://web.dev/performance-budgets-101/#establish-a-baseline&quot;&gt;5 seconds
or less on mid-range mobile devices with slow 3G
connections&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For subsequent loads, a good target is to load the page in under 2 seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Be aware that these targets may change over time.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Guidelines&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Test your load performance on the mobile devices and network connections that
are common among your users. You can use &lt;a href=&quot;https://web.dev/chrome-ux-report/&quot;&gt;Chrome User Experience
Report&lt;/a&gt; to find out the &lt;a href=&quot;https://web.dev/chrome-ux-report-data-studio-dashboard/#using-the-dashboard&quot;&gt;connection
distribution&lt;/a&gt;
of your users. If the data is not available for your site, &lt;a href=&quot;https://www.gsma.com/mobileeconomy/&quot; rel=&quot;noopener&quot;&gt;The Mobile Economy
2019&lt;/a&gt; suggests that a good global
baseline is a mid-range Android phone, such as a Moto G4, and a slow 3G
network (defined as 400 ms RTT and 400 kbps transfer speed). This
combination is available on &lt;a href=&quot;https://www.webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep in mind that although your typical mobile user&#39;s device might claim that
it&#39;s on a 2G, 3G, or 4G connection, in reality the &lt;a href=&quot;https://web.dev/adaptive-serving-based-on-network-quality/#how-it-works&quot;&gt;effective connection
speed&lt;/a&gt;
is often significantly slower, due to packet loss and network variance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/render-blocking-resources/&quot;&gt;Eliminate render blocking
resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You don&#39;t have to load everything in under 5 seconds to produce the perception
of a complete load. Consider &lt;a href=&quot;https://web.dev/browser-level-image-lazy-loading/&quot;&gt;lazy-loading
images&lt;/a&gt;, &lt;a href=&quot;https://web.dev/reduce-javascript-payloads-with-code-splitting/&quot;&gt;code-splitting JavaScript
bundles&lt;/a&gt;, and
other &lt;a href=&quot;https://web.dev/fast/&quot;&gt;optimizations suggested on web.dev&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;Recognize the factors that affect page load performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Network speed and latency&lt;/li&gt;
&lt;li&gt;Hardware (slower CPUs, for example)&lt;/li&gt;
&lt;li&gt;Cache eviction&lt;/li&gt;
&lt;li&gt;Differences in L2/L3 caching&lt;/li&gt;
&lt;li&gt;Parsing JavaScript &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id=&quot;tools-for-measuring-rail&quot;&gt;Tools for measuring RAIL &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#tools-for-measuring-rail&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few tools to help you automate your RAIL measurements. Which one you
use depends on what type of information you need, and what type of workflow you
prefer.&lt;/p&gt;
&lt;h3 id=&quot;chrome-devtools&quot;&gt;Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#chrome-devtools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot; rel=&quot;noopener&quot;&gt;Chrome DevTools&lt;/a&gt;
provides in-depth analysis on everything that happens while your page loads or
runs. See &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance&quot; rel=&quot;noopener&quot;&gt;Get Started With Analyzing Runtime
Performance&lt;/a&gt;
to get familiar with the &lt;strong&gt;Performance&lt;/strong&gt; panel UI.&lt;/p&gt;
&lt;p&gt;The following DevTools features are especially relevant:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#cpu-throttle&quot; rel=&quot;noopener&quot;&gt;Throttle your
CPU&lt;/a&gt;
to simulate a less-powerful device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#network-throttle&quot; rel=&quot;noopener&quot;&gt;Throttle the
network&lt;/a&gt;
to simulate slower connections.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#main&quot; rel=&quot;noopener&quot;&gt;View main thread
activity&lt;/a&gt;
to view every event that occurred on the main thread while you were recording.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#activities&quot; rel=&quot;noopener&quot;&gt;View main thread activities in a
table&lt;/a&gt;
to sort activities based on which ones took up the most time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#fps&quot; rel=&quot;noopener&quot;&gt;Analyze frames per second
(FPS)&lt;/a&gt;
to measure whether your animations truly run smoothly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/11/devtools-release-notes#perf-monitor&quot; rel=&quot;noopener&quot;&gt;Monitor CPU usage, JS heap size, DOM nodes, layouts per second, and
more&lt;/a&gt;
in real-time with the &lt;strong&gt;Performance Monitor&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#network&quot; rel=&quot;noopener&quot;&gt;Visualize network
requests&lt;/a&gt;
that occurred while you were recording with the &lt;strong&gt;Network&lt;/strong&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#screenshots&quot; rel=&quot;noopener&quot;&gt;Capture screenshots while
recording&lt;/a&gt;
to play back exactly how the page looked while the page loaded, or an
animation fired, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#interactions&quot; rel=&quot;noopener&quot;&gt;View
interactions&lt;/a&gt;
to quickly identify what happened on a page after a user interacted with it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#scrolling-performance-issues&quot; rel=&quot;noopener&quot;&gt;Find scroll performance issues in
real-time&lt;/a&gt;
by highlighting the page whenever a potentially problematic listener fires.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference#paint-flashing&quot; rel=&quot;noopener&quot;&gt;View paint events in
real-time&lt;/a&gt;
to identify costly paint events that may be harming the performance of your
animations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lighthouse&quot;&gt;Lighthouse &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#lighthouse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt; is available in
Chrome DevTools,  at &lt;a href=&quot;https://web.dev/measure/&quot;&gt;web.dev/measure&lt;/a&gt;, as a
Chrome Extension, as a Node.js module, and within WebPageTest. You give it a
URL, it simulates a mid-range device with a slow 3G connection, runs a series of
audits on the page, and then gives you a report on load performance, as well as
suggestions on how to improve.&lt;/p&gt;
&lt;p&gt;The following audits are especially relevant:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/lighthouse-max-potential-fid/&quot;&gt;Max Potential First Input
Delay&lt;/a&gt;. Estimates how long your
app will take to respond to user input, based on main thread idle time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-passive-event-listeners/&quot;&gt;Does not use passive listeners to improve scrolling
performance&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/lighthouse-total-blocking-time/&quot;&gt;Total Blocking Time&lt;/a&gt;.
Measures the total amount of time that a page is blocked from responding to
user input, such as mouse clicks, screen taps, or keyboard presses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/consistently-interactive&quot; rel=&quot;noopener&quot;&gt;Time To
Interactive&lt;/a&gt;.
Measures when a user can consistently interact with all page elements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Load&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/service-worker/&quot;&gt;Does not register a service worker that controls page and
start_url&lt;/a&gt;. A service worker can cache common
resources on a user&#39;s device, reducing time spent fetching resources over the
network.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/load-fast-enough-for-pwa/&quot;&gt;Page load is not fast enough on mobile
networks&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/blocking-resources&quot; rel=&quot;noopener&quot;&gt;Eliminate render-blocking
resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/offscreen-images/&quot;&gt;Defer offscreen images&lt;/a&gt;. Defer the loading
of offscreen images until they&#39;re needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-responsive-images/&quot;&gt;Properly size images&lt;/a&gt;. Don&#39;t serve
images that are significantly larger than the size that&#39;s rendered in the
mobile viewport.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/critical-request-chains/&quot;&gt;Avoid chaining critical requests&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-http2/&quot;&gt;Does not use HTTP/2 for all of its resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-optimized-images/&quot;&gt;Efficiently encode images&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/uses-text-compression/&quot;&gt;Enable text compression&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/total-byte-weight/&quot;&gt;Avoid enormous network payloads&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://web.dev/dom-size/&quot;&gt;Avoid an excessive DOM size&lt;/a&gt;. Reduce network bytes
by only shipping DOM nodes that are needed for rendering the page.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;webpagetest&quot;&gt;WebPageTest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#webpagetest&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebPageTest is a web performance tool that uses real browsers to access web
pages and collect timing metrics. Enter a URL at
&lt;a href=&quot;https://webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;webpagetest.org/easy&lt;/a&gt; to get a detailed report on
the page&#39;s load performance on a real Moto G4 device with a slow 3G connection.
You can also configure it to include a Lighthouse audit.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/rail/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;RAIL is a lens for looking at a website&#39;s user experience as a journey composed
of distinct interactions. Understand how users perceive your site in order to
set performance goals with the greatest impact on user experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Focus on the user.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Respond to user input in under 100 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Produce a frame in under 10 ms when animating or scrolling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maximize main thread idle time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load interactive content in under 5000 ms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Responsive web design basics</title>
    <link href="https://web.dev/responsive-web-design-basics/"/>
    <updated>2019-02-12T00:00:00Z</updated>
    <id>https://web.dev/responsive-web-design-basics/</id>
    <content type="text/html" mode="escaped">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#viewport&quot;&gt;Set the viewport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#size-content&quot;&gt;Size content to the viewport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#media-queries&quot;&gt;Use CSS media queries for responsiveness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#breakpoints&quot;&gt;How to choose breakpoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/responsive-web-design-basics/#devtools&quot;&gt;View media query breakpoints in Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The use of mobile devices to surf the web continues to grow at an astronomical pace, and these devices are often constrained by display size and require a different approach to how content is laid out on the screen.&lt;/p&gt;
&lt;p&gt;Responsive web design, originally defined by &lt;a href=&quot;http://alistapart.com/article/responsive-web-design/&quot; rel=&quot;noopener&quot;&gt;Ethan Marcotte in A List Apart&lt;/a&gt;, responds to the needs of the users and the devices they&#39;re using. The layout changes based on the size and capabilities of the device. For example, on a phone users would see content shown in a single column view; a tablet might show the same content in two columns.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;video autoplay=&quot;&quot; class=&quot;w-screenshot&quot; controls=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;      &lt;source src=&quot;https://storage.googleapis.com/web-dev-uploads/video/tcFciHGuF3MxnTr1y5ue01OGLBn2/8RKRFvbuoXGkOSuEArb7.mp4&quot; type=&quot;video/mp4&quot; /&gt;    &lt;/video&gt;
&lt;/figure&gt;
&lt;p&gt;A multitude of different screen sizes exist across phones, &amp;quot;phablets,&amp;quot; tablets, desktops, game consoles, TVs, and even wearables. Screen sizes are always changing, so it&#39;s important that your site can adapt to any screen size, today or in the future. In addition, devices have different features with which we interact with them. For example some of your visitors will be using a touchscreen. Modern responsive design considers all of these things to optimize the experience for everyone.&lt;/p&gt;
&lt;h2 id=&quot;viewport&quot;&gt;Set the viewport &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#viewport&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pages optimized for a variety of devices must include a meta viewport tag in the head of the document.
A meta viewport tag gives the browser instructions on how to control the page&#39;s dimensions and scaling.&lt;/p&gt;
&lt;p&gt;To attempt to provide the best experience, mobile browsers render
the page at a desktop screen width (usually about &lt;code&gt;980px&lt;/code&gt;, though this varies
across devices), and then try to make the content look better by increasing
font sizes and scaling the content to fit the screen.
This means that font sizes may appear inconsistent to users,
who may have to double-tap or pinch-to-zoom
in order to see and interact with the content.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  …&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Using the meta viewport value &lt;code&gt;width=device-width&lt;/code&gt; instructs the page to match
the screen&#39;s width in device-independent pixels. A device (or density) independent pixel being a representation of a single pixel, which may on a high density screen consist of many physical pixels. This allows the page to reflow
content to match different screen sizes, whether rendered on a small mobile
phone or a large desktop monitor.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a page with the text hard to read as it is very zoomed out&quot; decoding=&quot;async&quot; height=&quot;640&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/SrMBH5gokGU06S0GsjLS.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    An example of how the page loads in a device without the viewport meta tag. &lt;a href=&quot;https://without-vp-meta.glitch.me/&quot;&gt;See this example on Glitch&lt;/a&gt;.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of the same page with the text at a size that can be read&quot; decoding=&quot;async&quot; height=&quot;888&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/9NrJxt3aEv37A3E7km65.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    An example of how the page loads in a device with the viewport meta tag. &lt;a href=&quot;https://with-vp-meta.glitch.me/&quot;&gt;See this example on Glitch&lt;/a&gt;.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/probably-use-initial-scale1/&quot; rel=&quot;noopener&quot;&gt;Some browsers&lt;/a&gt;
keep the page&#39;s width constant when rotating to landscape
mode, and zoom rather than reflow to fill the screen. Adding the value
&lt;code&gt;initial-scale=1&lt;/code&gt; instructs browsers to establish a 1:1 relationship between CSS
pixels and device-independent pixels regardless of device orientation, and
allows the page to take advantage of the full landscape width.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--caution&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;:
To ensure that older browsers can properly parse the attributes,
use a comma to separate attributes.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/viewport/&quot;&gt;Does not have a &lt;code&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot;&amp;gt;&lt;/code&gt; tag with &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;initial-scale&lt;/code&gt;&lt;/a&gt;
Lighthouse audit can help you automate the process of making sure that your HTML documents are using the viewport meta tag correctly.&lt;/p&gt;
&lt;h3 id=&quot;accessible-viewport&quot;&gt;Ensure an accessible viewport &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#accessible-viewport&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In addition to setting an &lt;code&gt;initial-scale&lt;/code&gt;,
you can also set the following attributes on the viewport:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;minimum-scale&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maximum-scale&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user-scalable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When set, these can disable the user&#39;s ability to zoom the viewport,
potentially causing accessibility issues.
Therefore we would not recommend using these attributes.&lt;/p&gt;
&lt;h2 id=&quot;size-content&quot;&gt;Size content to the viewport &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#size-content&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On both desktop and mobile devices,
users are used to scrolling websites vertically but not horizontally;
forcing the user to scroll horizontally or to zoom out
in order to see the whole page results in a poor user experience.&lt;/p&gt;
&lt;p&gt;When developing a mobile site with a meta viewport tag,
it&#39;s easy to accidentally create page content that doesn&#39;t quite fit within the specified viewport.
For example, an image that is displayed at a width wider than the viewport
can cause the viewport to scroll horizontally.
You should adjust this content to fit within the width of the viewport,
so that the user does not need to scroll horizontally.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://web.dev/content-width/&quot;&gt;Content is not sized correctly for the viewport&lt;/a&gt;
Lighthouse audit can help you automate the process of detecting overflowing content.&lt;/p&gt;
&lt;h3 id=&quot;images&quot;&gt;Images &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#images&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An image has fixed dimensions and if it is larger than the viewport will cause a scrollbar.
A common way to deal with this problem is to give all images a &lt;code&gt;max-width&lt;/code&gt; of &lt;code&gt;100%&lt;/code&gt;.
This will cause the image to shrink to fit the space it has,
should the viewport size be smaller than the image.
However because the &lt;code&gt;max-width&lt;/code&gt;, rather than the &lt;code&gt;width&lt;/code&gt; is &lt;code&gt;100%&lt;/code&gt;,
the image will not stretch larger than its natural size.
It is generally safe to add the following to your stylesheet
so that you will never have a problem with images causing a scrollbar.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h4 id=&quot;image-dimensions&quot;&gt;Add the dimensions of the image to the img element &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#image-dimensions&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;When using &lt;code&gt;max-width: 100%&lt;/code&gt; you are overriding the natural dimensions of the image,
however you should still use the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes on your &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.
This is because modern browsers will use this information to reserve space for the image
before it loads in,
this will help to avoid &lt;a href=&quot;https://web.dev/optimize-cls/&quot;&gt;layout shifts&lt;/a&gt; as content loads.&lt;/p&gt;
&lt;h3 id=&quot;layout&quot;&gt;Layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#layout&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Since screen dimensions and width in CSS pixels vary widely between devices
(for example, between phones and tablets, and even between different phones),
content should not rely on a particular viewport width to render well.&lt;/p&gt;
&lt;p&gt;In the past, this required setting elements used to create layout in percentages.
In the example below, you can see a two-column layout with floated elements, sized using pixels.
Once the viewport becomes smaller than the total width of the columns, we have to scroll horizontally
to see the content.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a two-column layout with most of the second column outside the viewport&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;504&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/exFCZNQLUveUnpMFjvcj.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    A floated layout using pixels. &lt;a href=&quot;https://layout-floats-px.glitch.me/&quot;&gt;See this example on Glitch&lt;/a&gt;.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;By using percentages for the widths, the columns always remain a certain percentage of the container.
This means that the columns become narrower, rather than creating a scrollbar.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/layout-floats-percent?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=README.md&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;layout-floats-percent on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Modern CSS layout techniques such as Flexbox, Grid Layout, and Multicol
make the creation of these flexible grids much easier.&lt;/p&gt;
&lt;h4 id=&quot;flexbox&quot;&gt;Flexbox &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#flexbox&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This layout method is ideal when you have a set of items of different sizes
and you would like them to fit comfortably in a row or rows,
with smaller items taking less space and larger ones getting more space.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.items&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; space-between&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In a responsive design, you can use Flexbox to display items as a single row,
or wrapped onto multiple rows as the available space decreases.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 220px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/responsive-flexbox?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;responsive-flexbox on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox&quot; rel=&quot;noopener&quot;&gt;Read more about Flexbox&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;grid&quot;&gt;CSS Grid Layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#grid&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;CSS Grid Layout allows for the straightforward creation of flexible grids.
If we consider the earlier floated example,
rather than creating our columns with percentages,
we could use grid layout and the &lt;code&gt;fr&lt;/code&gt; unit,
which represents a portion of the available space in the container.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1fr 3fr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/two-column-grid?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;two-column-grid on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Grid can also be used to create regular grid layouts,
with as many items as will fit.
The number of available tracks will be reduced as the screen size shrinks.
In the below demo, we have as many cards as will fit on each row,
with a minimum size of &lt;code&gt;200px&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/grid-as-many-as-fit?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;grid-as-many-as-fit on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids&quot; rel=&quot;noopener&quot;&gt;Read more about CSS Grid Layout&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;multicol&quot;&gt;Multiple-column layout &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#multicol&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For some types of layout you can use Multiple-column Layout (Multicol),
which can create responsive numbers of columns with the &lt;code&gt;column-width&lt;/code&gt; property.
In the demo below, you can see that columns are added if there is room for another &lt;code&gt;200px&lt;/code&gt; column.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/responsive-multicol?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;responsive-multicol on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout&quot; rel=&quot;noopener&quot;&gt;Read more about Multicol&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;media-queries&quot;&gt;Use CSS media queries for responsiveness &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#media-queries&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes you will need to make more extensive changes to your layout
to support a certain screen size than the techniques shown above will allow.
This is where media queries become useful.&lt;/p&gt;
&lt;p&gt;Media queries are simple filters that can be applied to CSS styles.
They make it easy to change styles based on the types of device rendering the content,
or the features of that device, for example width, height, orientation, ability to hover,
and whether the device is being used as a touchscreen.&lt;/p&gt;
&lt;p&gt;To provide different styles for printing,
you need to target a &lt;em&gt;type&lt;/em&gt; of output so you could include a stylesheet with print styles as follows:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;mark class=&quot;highlight-line highlight-line-active&quot;&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;print.css&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;print&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/mark&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;highlight-line&quot;&gt;  …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Alternatively, you could include print styles within your main stylesheet using a media query:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; print&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* print styles go here */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;It is also possible to include separate stylesheets in your main CSS file using the &lt;code&gt;@import&lt;/code&gt; syntax,
&lt;code&gt;@import url(print.css) print;&lt;/code&gt;, however this use is not recommended for performance reasons.
See &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/page-speed-rules-and-recommendations#avoid_css_imports&quot; rel=&quot;noopener&quot;&gt;Avoid CSS imports&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For responsive web design, we are typically querying the &lt;em&gt;features&lt;/em&gt; of the device
in order to provide a different layout for smaller screens,
or when we detect that our visitor is using a touchscreen.&lt;/p&gt;
&lt;h3 id=&quot;viewport-media-queries&quot;&gt;Media queries based on viewport size &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#viewport-media-queries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Media queries enable us to create a responsive experience
where specific styles are applied to small screens, large screens, and anywhere in between.
The feature we are detecting here is therefore screen size,
and we can test for the following things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt; (&lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;height&lt;/code&gt; (&lt;code&gt;min-height&lt;/code&gt;, &lt;code&gt;max-height&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;orientation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aspect-ratio&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/media-queries-size?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;media-queries-size on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;All of these features have excellent browser support,
for more details including browser support information see
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/width&quot; rel=&quot;noopener&quot;&gt;width&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/height&quot; rel=&quot;noopener&quot;&gt;height&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/orientation&quot; rel=&quot;noopener&quot;&gt;orientation&lt;/a&gt;, and
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/aspect-ratio&quot; rel=&quot;noopener&quot;&gt;aspect-ratio&lt;/a&gt; on MDN.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;The specification did include tests for &lt;code&gt;device-width&lt;/code&gt; and &lt;code&gt;device-height&lt;/code&gt;. These have been deprecated and should be avoided.
&lt;code&gt;device-width&lt;/code&gt; and &lt;code&gt;device-height&lt;/code&gt; tested for the actual size of the device window which was not useful in practice because
this may be different from the viewport the user is looking at,
for example if they have resized the browser window.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;capability-media-queries&quot;&gt;Media queries based on device capability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#capability-media-queries&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Given the range of devices available, we cannot make the assumption that every large device is a regular desktop
or laptop computer, or that people are only using a touchscreen on a small device.
With some newer additions to the media queries specification
we can test for features such as the type of pointer used to interact with the device
and whether the user can hover over elements.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hover&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pointer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any-hover&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any-pointer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try viewing this demo on different devices,
such as a regular desktop computer and a phone or tablet.&lt;/p&gt;
&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/media-query-pointer?attributionHidden=true&amp;sidebarCollapsed=true&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;media-query-pointer on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;These newer features have good support in all modern browsers. Find out more on the MDN pages for
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover&quot; rel=&quot;noopener&quot;&gt;hover&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover&quot; rel=&quot;noopener&quot;&gt;any-hover&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer&quot; rel=&quot;noopener&quot;&gt;pointer&lt;/a&gt;,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer&quot; rel=&quot;noopener&quot;&gt;any-pointer&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;using-any-hover-and-any-pointer&quot;&gt;Using &lt;code&gt;any-hover&lt;/code&gt; and &lt;code&gt;any-pointer&lt;/code&gt; &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#using-any-hover-and-any-pointer&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The features &lt;code&gt;any-hover&lt;/code&gt; and &lt;code&gt;any-pointer&lt;/code&gt; test if the user has the capability
to hover, or use that type of pointer even if it is not the primary way they are interacting with their device.
Be very careful when using these.
Forcing a user to switch to a mouse when they are using their touchscreen is not very friendly!
However, &lt;code&gt;any-hover&lt;/code&gt; and &lt;code&gt;any-pointer&lt;/code&gt; may be useful if it is important to work out what kind of device a user has.
For example, a laptop with a touchscreen and trackpad should match coarse and fine pointers,
in addition to the ability to hover.&lt;/p&gt;
&lt;h2 id=&quot;breakpoints&quot;&gt;How to choose breakpoints &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#breakpoints&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Don&#39;t define breakpoints based on device classes.
Defining breakpoints based on specific devices, products, brand names,
or operating systems that are in use today can result in a maintenance nightmare.
Instead, the content itself should determine how the layout adjusts to its container.&lt;/p&gt;
&lt;h3 id=&quot;major-breakpoints&quot;&gt;Pick major breakpoints by starting small, then working up &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#major-breakpoints&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Design the content to fit on a small screen size first,
then expand the screen until a breakpoint becomes necessary.
This allows you to optimize breakpoints based on content
and maintain the least number of breakpoints possible.&lt;/p&gt;
&lt;p&gt;Let&#39;s work through the example we saw at the beginning: the weather forecast.
The first step is to make the forecast look good on a small screen.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a weather app at a mobile width&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;667&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/3KPWtKzDFCwImLyHprRP.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The app at a narrow width.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Next, resize the browser until there is too much white space between the elements,
and the forecast simply doesn&#39;t look as good.
The decision is somewhat subjective, but above &lt;code&gt;600px&lt;/code&gt; is certainly too wide.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a weather app with wide gaps between items&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;240&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/sh1P84rvjvviENlVFED4.png?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The app at a point where we feel we should tweak the design.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To insert a breakpoint at &lt;code&gt;600px&lt;/code&gt;, create two media queries at the end of your CSS for the component,
one to use when the browser is &lt;code&gt;600px&lt;/code&gt; and below, and one for when it is wider than &lt;code&gt;600px&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 600px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 601px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Finally, refactor the CSS. Inside the media query for a &lt;code&gt;max-width&lt;/code&gt; of &lt;code&gt;600px&lt;/code&gt;,
add the CSS which is only for small screens. Inside the media query for a
&lt;code&gt;min-width&lt;/code&gt; of &lt;code&gt;601px&lt;/code&gt; add CSS for larger screens.&lt;/p&gt;
&lt;h4 id=&quot;pick-minor-breakpoints-when-necessary&quot;&gt;Pick minor breakpoints when necessary &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#pick-minor-breakpoints-when-necessary&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In addition to choosing major breakpoints when layout changes significantly,
it is also helpful to adjust for minor changes.
For example, between major breakpoints it may be helpful to adjust the margins or padding on an element,
or increase the font size to make it feel more natural in the layout.&lt;/p&gt;
&lt;p&gt;Let&#39;s start by optimizing the small screen layout.
In this case, let&#39;s boost the font when the viewport width is greater than &lt;code&gt;360px&lt;/code&gt;.
Second, when there is enough space,
we can separate the high and low temperatures so that they&#39;re on the same line
instead of on top of each other.
And let&#39;s also make the weather icons a bit larger.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 360px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1.0em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 500px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.seven-day-fc .temp-low,&lt;br /&gt;  .seven-day-fc .temp-high&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; inline-block&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 45%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.seven-day-fc .seven-day-temp&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.seven-day-fc .icon&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 64px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 64px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Similarly, for the large screens it&#39;s best to limit to maximum width of the forecast panel
so it doesn&#39;t consume the whole screen width.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;.weather-forecast&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 700px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/responsive-forecast?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=style.css&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;responsive-forecast on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;optimize-text-for-reading&quot;&gt;Optimize text for reading &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#optimize-text-for-reading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Classic readability theory suggests that an ideal column should contain 70 to 80 characters per line
(about 8 to 10 words in English).
Thus, each time the width of a text block grows past about 10 words,
consider adding a breakpoint.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a a page of text on a mobile device&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;488&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 400px) 400px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/C4IGJw9hbPXKnTSovEXS.jpg?auto=format&amp;w=800 800w&quot; width=&quot;400&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The text as read on a mobile device.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of a a page of text on a desktop browser&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;377&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/rmsa1EB5FpvWV0vFIpTF.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    The text as read on a desktop browser with a breakpoint added to constrain the line length.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Let&#39;s take a deeper look at the above blog post example.
On smaller screens, the Roboto font at &lt;code&gt;1em&lt;/code&gt; works perfectly giving 10 words per line,
but larger screens require a breakpoint.
In this case, if the browser width is greater than &lt;code&gt;575px&lt;/code&gt;, the ideal content width is &lt;code&gt;550px&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 575px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 550px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class=&quot;glitch-embed-wrap&quot; style=&quot;height: 420px; width: 100%;&quot;&gt;
  &lt;iframe allow=&quot;camera; clipboard-read; clipboard-write; encrypted-media; geolocation; microphone; midi&quot; loading=&quot;lazy&quot; src=&quot;https://glitch.com/embed/#!/embed/rwd-reading?attributionHidden=true&amp;sidebarCollapsed=true&amp;path=index.html&amp;previewSize=100&quot; style=&quot;height: 100%; width: 100%; border: 0;&quot; title=&quot;rwd-reading on Glitch&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&quot;avoid-simply-hiding-content&quot;&gt;Avoid simply hiding content &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#avoid-simply-hiding-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Be careful when choosing what content to hide or show depending on screen size.
Don&#39;t simply hide content just because you can&#39;t fit it on the screen.
Screen size is not a definitive indication of what a user may want.
For example, eliminating the pollen count from the weather forecast
could be a serious issue for spring-time allergy sufferers who need the information
to determine if they can go outside or not.&lt;/p&gt;
&lt;h2 id=&quot;devtools&quot;&gt;View media query breakpoints in Chrome DevTools &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/responsive-web-design-basics/#devtools&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you&#39;ve got your media query breakpoints set up,
you&#39;ll want to see how your site looks with them.
You could resize your browser window to trigger the breakpoints,
but Chrome DevTools has a built-in feature that makes it easy to see how a page looks
under different breakpoints.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of DevTools with our weather app open and a width of 822 pixels selected.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;522&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/DhaeCbVo5AmzZ0CyLtVp.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    DevTools showing the weather app as it looks at a wider viewport size.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Screenshot of DevTools with our weather app open and a width of 436 pixels selected.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;521&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/35IEQnhGox93PHvbeglM.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;
    DevTools showing the weather app as it looks at a narrower viewport size.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To view your page under different breakpoints:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools#open&quot; rel=&quot;noopener&quot;&gt;Open DevTools&lt;/a&gt;
and then turn on &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode#toggle&quot; rel=&quot;noopener&quot;&gt;Device Mode&lt;/a&gt;.
This opens in &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode#responsive&quot; rel=&quot;noopener&quot;&gt;responsive mode&lt;/a&gt; by default.&lt;/p&gt;
&lt;p&gt;To see your media queries, open the Device Mode menu and select
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/device-mode#queries&quot; rel=&quot;noopener&quot;&gt;Show media queries&lt;/a&gt;
to display your breakpoints as colored bars above your page.&lt;/p&gt;
&lt;p&gt;Click on one of the bars to view your page while that media query is active.
Right-click on a bar to jump to the media query&#39;s definition.&lt;/p&gt;
</content>
    <author>
      <name>Pete LePage</name>
    </author><author>
      <name>Rachel Andrew</name>
    </author>
  </entry>
  
  <entry>
    <title>Ensure your website is available and usable for everyone during COVID-19</title>
    <link href="https://web.dev/covid19/"/>
    <updated>2020-04-03T00:00:00Z</updated>
    <id>https://web.dev/covid19/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;This page provides guidance to help ensure your website is available,
accessible, secure, and usable for everyone at all times.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;If you&#39;re building or maintaining a health organization website
that qualifies as a national health ministry or US state-level agency, you can
request to join the COVID-19 Google Search technical support group. Visit
&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/health-organizations-covid19.html&quot; rel=&quot;noopener&quot;&gt;Helping health organizations make COVID-19 information more
accessible&lt;/a&gt;
to learn more. &lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The guidance on this page comes from a cross-functional collection of teams
within Google that are shifting their short-term focus to support websites that are
helping people stay safe during the COVID-19 situation. These Googlers have seen that sites
are facing unprecedented increases in demand from people looking for critical
information, many of whom have rarely or never used the web before. It can be a challenge
to ensure sites are available during this time and accessible to all.&lt;/p&gt;
&lt;h2 id=&quot;guidance&quot;&gt;Guidance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#guidance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;This guidance is a work in progress and will be updated frequently.
If you have any suggestions, please &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/issues/new/choose&quot; rel=&quot;noopener&quot;&gt;file an
issue&lt;/a&gt;, or &lt;a href=&quot;https://github.com/GoogleChrome/web.dev/blob/master/src/site/content/en/blog/covid19/index.md&quot; rel=&quot;noopener&quot;&gt;edit
this page&lt;/a&gt;
and then open a pull request.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;availability&quot;&gt;Availability, reliability, resilience, and stability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#availability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your site is seeing traffic spikes and it&#39;s failing, or you want to prevent it
from failing, the guidance below can help you quickly fix problems or detect them
before they become major issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;a href=&quot;https://web.dev/overloaded-server&quot;&gt;Fix an overloaded server&lt;/a&gt; to learn
how to detect, mitigate, and prevent traffic spike issues.&lt;/li&gt;
&lt;li&gt;Remove unnecessary images, videos, scripts, and fonts. Ensure each page focuses
on just delivering the functionality that the people using your site really
need.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/fast/#optimize-your-images&quot;&gt;Optimizing your images&lt;/a&gt; may
significantly reduce your server bandwidth usage because &lt;a href=&quot;https://images.guide/#introduction&quot; rel=&quot;noopener&quot;&gt;images are the
number one source of bloat on the web&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Offload as much of your static content to CDNs as possible.
More details from common providers:
&lt;a href=&quot;https://aws.amazon.com/cloudfront/&quot; rel=&quot;noopener&quot;&gt;AWS&lt;/a&gt;,
&lt;a href=&quot;https://azure.microsoft.com/en-us/services/cdn/&quot; rel=&quot;noopener&quot;&gt;Azure&lt;/a&gt;,
&lt;a href=&quot;https://www.cloudflare.com/cdn/&quot; rel=&quot;noopener&quot;&gt;Cloudflare&lt;/a&gt;,
&lt;a href=&quot;https://cloud.google.com/cdn&quot; rel=&quot;noopener&quot;&gt;Google Cloud&lt;/a&gt;,
&lt;a href=&quot;https://firebase.google.com/docs/hosting&quot; rel=&quot;noopener&quot;&gt;Firebase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check if your CDN has any optimizations that are easy to turn on, such as
dynamic image compression, text compression, or automatic minification of JS
and CSS resources.&lt;/li&gt;
&lt;li&gt;Optimizing HTTP caching can significantly reduce demands on your servers with
minimal code change. Check out &lt;a href=&quot;https://web.dev/http-cache/&quot;&gt;The HTTP cache: your first line of
defense&lt;/a&gt; for an overview and &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot; rel=&quot;noopener&quot;&gt;HTTP
caching&lt;/a&gt;
and &lt;a href=&quot;https://jakearchibald.com/2016/caching-best-practices/&quot; rel=&quot;noopener&quot;&gt;Caching best
practices&lt;/a&gt; for
specific recommendations. The &lt;a href=&quot;https://web.dev/uses-long-cache-ttl/&quot;&gt;Serve static assets with an efficient cache
policy&lt;/a&gt; audit in Lighthouse can help you
quickly detect resources that aren&#39;t being cached. Keep in mind that different
types of resources will have different freshness requirements and will
therefore require different caching strategies.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/service-workers-cache-storage/&quot;&gt;Service workers&lt;/a&gt; are another
way to significantly reduce demands on your servers but may require significant technical
investment. They also enable your website to work
&lt;a href=&quot;https://developers.google.com/web/fundamentals/codelabs/offline&quot; rel=&quot;noopener&quot;&gt;offline&lt;/a&gt;,
enabling you to present opening hours, phone numbers, and other information to
returning users without a connection. &lt;a href=&quot;https://web.dev/workbox/&quot;&gt;Workbox&lt;/a&gt; is
the recommended approach for adding service workers to websites because it
automates a lot of boilerplate, makes it easier to follow best practices, and
prevents subtle bugs that are common when using the low-level &lt;code&gt;ServiceWorker&lt;/code&gt;
API directly.&lt;/li&gt;
&lt;li&gt;If your site is seeing major increased usage, check whether you have adequate
protection against &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot; rel=&quot;noopener&quot;&gt;DDoS
attacks&lt;/a&gt; because your
site may now be a more attractive target. More details from common providers:
&lt;a href=&quot;https://aws.amazon.com/answers/networking/aws-ddos-attack-mitigation/&quot; rel=&quot;noopener&quot;&gt;AWS&lt;/a&gt;,
&lt;a href=&quot;https://azure.microsoft.com/en-us/services/ddos-protection/&quot; rel=&quot;noopener&quot;&gt;Azure&lt;/a&gt;,
&lt;a href=&quot;https://www.cloudflare.com/learning/ddos/ddos-mitigation/&quot; rel=&quot;noopener&quot;&gt;Cloudflare&lt;/a&gt;,
&lt;a href=&quot;https://cloud.google.com/files/GCPDDoSprotection-04122016.pdf&quot; rel=&quot;noopener&quot;&gt;Google Cloud&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/reliable/&quot;&gt;Network reliability&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;accessibility&quot;&gt;Accessibility &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#accessibility&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Focusing on accessibility is more important than ever because more people with a
variety of needs are probably accessing your site. Follow the guidelines below
to ensure that the core functionality of your website is accessible for
everyone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accessibility is a team effort and everyone has a role to play. Start by
reviewing Google&#39;s &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/a11y-for-teams&quot; rel=&quot;noopener&quot;&gt;Accessibility for Teams
guide&lt;/a&gt;
as well as &lt;a href=&quot;https://accessibility.digital.gov/&quot; rel=&quot;noopener&quot;&gt;the team guide from the U.S. Digital
Service&lt;/a&gt;. These guides explain what each
team member (product managers, engineers, designers, QA, and so on) can
contribute.&lt;/li&gt;
&lt;li&gt;Do an &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/how-to-review&quot; rel=&quot;noopener&quot;&gt;Accessibility
Review&lt;/a&gt;
to determine what&#39;s working well, and what needs improvement.
The &lt;a href=&quot;https://wave.webaim.org/extension/&quot; rel=&quot;noopener&quot;&gt;WAVE browser extensions&lt;/a&gt; can help
guide you through a manual accessibility audit of your site.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href=&quot;https://web.dev/accessible&quot;&gt;Accessibility Guides&lt;/a&gt; to better understand
specific topics like keyboard navigation and screen reader support.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse#devtools&quot; rel=&quot;noopener&quot;&gt;Run a Lighthouse
audit&lt;/a&gt; to catch
common accessibility issues. The report also provides a list of manual checks
that you can perform to improve the operability of your site. Note that an
Accessibility score of 100 does not guarantee that your site is accessible. There
are many important issues that Lighthouse can&#39;t test for in an automated
fashion so it&#39;s still important to do manual reviews. Other automated auditing
tools include the &lt;a href=&quot;https://wave.webaim.org/api/&quot; rel=&quot;noopener&quot;&gt;WAVE API&lt;/a&gt; and the &lt;a href=&quot;https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd&quot; rel=&quot;noopener&quot;&gt;AXE
extension&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Complete the &lt;a href=&quot;https://egghead.io/courses/start-building-accessible-web-applications-today&quot; rel=&quot;noopener&quot;&gt;Start Building Accessible Web Applications Today course
on
egghead.io&lt;/a&gt;
course or check out the &lt;a href=&quot;https://www.udacity.com/course/web-accessibility--ud891&quot; rel=&quot;noopener&quot;&gt;Web Accessibility course on
Udacity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Watch the &lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g&quot; rel=&quot;noopener&quot;&gt;A11ycast
playlist&lt;/a&gt;
for more quick tips on specific accessibility topics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;PII&quot;&gt;Identity, security, and privacy &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#PII&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It can be tempting to take shortcuts to get critical fixes out the door, but
always be careful that you are not opening up security holes in doing so. People
need to access content on topics that are extremely private. Websites need to
protect this sensitive user data at all costs and convince people that their
&lt;a href=&quot;https://en.wikipedia.org/wiki/Personal_data&quot; rel=&quot;noopener&quot;&gt;personally identifiable
information&lt;/a&gt; (PII) is safe.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand &lt;a href=&quot;https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https&quot; rel=&quot;noopener&quot;&gt;why all websites should be protected with
HTTPS&lt;/a&gt;,
not just those that handle sensitive PII data.&lt;/li&gt;
&lt;li&gt;Switch to a hosting provider that uses HTTPS by default, or use &lt;a href=&quot;https://letsencrypt.org/getting-started/&quot; rel=&quot;noopener&quot;&gt;Let&#39;s
Encrypt&lt;/a&gt; or similar services to
enable HTTPS on your servers.&lt;/li&gt;
&lt;li&gt;Review &lt;a href=&quot;https://web.dev/samesite-cookies-explained/&quot;&gt;SameSite cookies explained&lt;/a&gt; to learn
how to make your use of cookies more secure. Note that
&lt;a href=&quot;https://blog.chromium.org/2020/04/temporarily-rolling-back-samesite.html&quot; rel=&quot;noopener&quot;&gt;the enforcement of SameSite cookie labeling has been temporarily rolled back&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/secure/&quot;&gt;Safe and secure&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;usability&quot;&gt;Usability, UI, and UX &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#usability&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;People are relying more heavily on the web to fulfill basic needs. Many of these
people don&#39;t use the web frequently. It&#39;s worthwhile to audit the usability of
your site&#39;s core functionality and make sure it&#39;s as simple and easy to use as
possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consider adding a prominent banner (that can be removed with an &lt;strong&gt;X&lt;/strong&gt; button)
to the top of your website that clearly communicates service updates. Use a
call-to-action in the banner to direct people to more specific resources.
Consider using distinct colors and fonts that stand out from the rest of your
page content. Keep your writing empathetic, focused on people&#39;s needs, and
transparent about what kind of service to expect.&lt;/li&gt;
&lt;li&gt;Look for opportunities to minimize physical interactions in your &lt;a href=&quot;https://www.nngroup.com/articles/journey-mapping-101/&quot; rel=&quot;noopener&quot;&gt;critical
user journeys&lt;/a&gt; (CUJs)
and suggest those changes to your product team. For example, if your delivery
service usually requires a signature, see if there&#39;s any way to work around
that.&lt;/li&gt;
&lt;li&gt;Double-check that your CUJs are as simple and intuitive as possible and
suggest changes to your product team if you see any opportunities to improve.&lt;/li&gt;
&lt;li&gt;Review the &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/principles&quot; rel=&quot;noopener&quot;&gt;principles of good mobile
design&lt;/a&gt;
and try out your CUJs on various mobile devices to make sure there aren&#39;t any
glaring issues. The people who don&#39;t use the web often and are suddenly finding
themselves having to rely on the web more are probably accessing your site from
mobile devices.&lt;/li&gt;
&lt;li&gt;Refactor your site to use &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/responsive&quot; rel=&quot;noopener&quot;&gt;responsive design
patterns&lt;/a&gt;
as much as possible.&lt;/li&gt;
&lt;li&gt;Ensure that your forms are
&lt;a href=&quot;https://www.smashingmagazine.com/2017/06/designing-efficient-web-forms/&quot; rel=&quot;noopener&quot;&gt;efficient&lt;/a&gt;
and
&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ux/input/forms&quot; rel=&quot;noopener&quot;&gt;well-designed&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;seo&quot;&gt;SEO &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#seo&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;People are looking for critical health- and job-related information. It&#39;s
important to ensure that your sites are discoverable by all search engines.
The &lt;a href=&quot;https://web.dev/lighthouse-seo/&quot;&gt;Lighthouse SEO audits&lt;/a&gt; can help you detect basic problems.
Follow the official blogs of search engines for the latest guidance and updates:
&lt;a href=&quot;https://webmasters.googleblog.com/&quot; rel=&quot;noopener&quot;&gt;Google&lt;/a&gt;,
&lt;a href=&quot;https://blogs.bing.com/webmaster/&quot; rel=&quot;noopener&quot;&gt;Bing&lt;/a&gt;,
&lt;a href=&quot;http://research.baidu.com/Blog&quot; rel=&quot;noopener&quot;&gt;Baidu&lt;/a&gt;,
&lt;a href=&quot;https://spreadprivacy.com/tag/duckduckgo/&quot; rel=&quot;noopener&quot;&gt;DuckDuckGo&lt;/a&gt;,
&lt;a href=&quot;https://yandex.com/blog/yacompany-com&quot; rel=&quot;noopener&quot;&gt;Yandex&lt;/a&gt;.
Recent COVID-19-related posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/how-to-pause-your-business-online-in.html&quot; rel=&quot;noopener&quot;&gt;How to change your online activities while minimizing impact on your Google
Search
presence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/new-properties-virtual-or-canceled-events.html&quot; rel=&quot;noopener&quot;&gt;New properties for virtual, postponed, and canceled
events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.bing.com/webmaster/march-2020/Bing-adopts-schema-org-mark-up-for-Special-Announcements-about-COVID-19&quot; rel=&quot;noopener&quot;&gt;Bing adopts schema.org markup for special announcements for
COVID-19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/data-types/special-announcements&quot; rel=&quot;noopener&quot;&gt;Add structured data to COVID-19 announcements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/03/health-organizations-covid19.html&quot; rel=&quot;noopener&quot;&gt;Helping health organizations make COVID-19 information more
accessible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/webmasters/answer/9781983&quot; rel=&quot;noopener&quot;&gt;General best practices for Search for health &amp;amp; government
sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/discoverable/&quot;&gt;Discoverable&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;h3 id=&quot;performance&quot;&gt;Performance &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/covid19/#performance&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some ISPs (&lt;a href=&quot;https://economictimes.indiatimes.com/tech/internet/brace-yourself-for-slower-data-speeds/articleshow/74702264.cms&quot; rel=&quot;noopener&quot;&gt;in India for
example&lt;/a&gt;)
are seeing a &lt;a href=&quot;https://www.npr.org/2020/03/17/817154787/internet-traffic-surges-as-companies-and-schools-send-people-home&quot; rel=&quot;noopener&quot;&gt;sharp increase in home internet
usage&lt;/a&gt;
and don&#39;t have the infrastructure to meet the increased demand. In situations
like this your website speed may be getting slower through no fault of your own.
Optimizing your load performance could be a way to offset the headwind of
reduced bandwidth. In other words, by reducing the number of bytes that need to
be sent over the network in order to load your pages, you can offset the
performance impact of reduced bandwidth.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Images are the &lt;a href=&quot;https://images.guide/#introduction&quot; rel=&quot;noopener&quot;&gt;number one cause of bloat on the
web&lt;/a&gt;. You might be able to significantly
reduce your website&#39;s bandwidth usage by &lt;a href=&quot;https://web.dev/fast/#optimize-your-images&quot;&gt;optimizing your
images&lt;/a&gt;.
&lt;a href=&quot;https://squoosh.app/&quot; rel=&quot;noopener&quot;&gt;Squoosh&lt;/a&gt; is a simple open source image compression tool
that can help you quickly compress your images.&lt;/li&gt;
&lt;li&gt;Run &lt;a href=&quot;https://webpagetest.org/easy&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt; or
&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/#get-started&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
to discover your top performance improvement opportunities.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/uses-text-compression/&quot;&gt;Enable text compression&lt;/a&gt; to reduce
the network size of text resources. This is often an easy performance win that
requires minimal technical investment.&lt;/li&gt;
&lt;li&gt;Read &lt;a href=&quot;https://web.dev/fixing-website-speed-cross-functionally/&quot;&gt;Fixing website speed
cross-functionally&lt;/a&gt;
to learn how to collaborate with and get buy-in from other departments.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/browser-level-image-lazy-loading/&quot;&gt;Use standardized lazy-loading for images&lt;/a&gt; to
minimize requests for images that people may never actually see. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Browser_compatibility&quot; rel=&quot;noopener&quot;&gt;Browser
compatibility&lt;/a&gt;
is not 100% but the feature can be treated as a progressive enhancement. In
other words, if a certain browser doesn&#39;t support standardized lazy-loading, the
image should load as it normally does.&lt;/li&gt;
&lt;li&gt;Check if your site has any A/B testing or personalization scripts that can be
loaded more asynchronously or if there&#39;s any non-critical functionality in the
scripts that can be disabled. A/B testing and personalization scripts usually
can&#39;t be loaded &lt;em&gt;completely&lt;/em&gt; asynchronously because they need to run before
the page content loads, but there may be some opportunity to load parts of the
scripts more asynchronously. See &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path&quot; rel=&quot;noopener&quot;&gt;Critical Rendering Path&lt;/a&gt; to understand
the fundamental tradeoff between synchronous scripts (also known as
render-blocking scripts) in general and page load time, and then decide
whether you need to prioritize the render-blocking scripts over page load
time, or vice versa.&lt;/li&gt;
&lt;li&gt;Third-party code constitutes &lt;a href=&quot;https://almanac.httparchive.org/en/2019/third-parties&quot; rel=&quot;noopener&quot;&gt;around half of all
requests&lt;/a&gt; for most
websites. Consider
&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript&quot; rel=&quot;noopener&quot;&gt;optimizing&lt;/a&gt;
or temporarily removing or disabling third-party code that isn&#39;t fundamental
to running your site.&lt;/li&gt;
&lt;li&gt;If feature releases are deprioritized, this might be the perfect time to clean
up. Remove tags from your tag managers, clean up bloated CSS and JS, and
remove deprecated features or code. The
&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/coverage&quot; rel=&quot;noopener&quot;&gt;Coverage tab&lt;/a&gt;
in Chrome DevTools and the
&lt;a href=&quot;https://pptr.dev/#?product=Puppeteer&amp;amp;version=v2.1.1&amp;amp;show=api-class-coverage&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Coverage&lt;/code&gt;&lt;/a&gt; class
in Puppeteer can help you detect unused code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href=&quot;https://web.dev/fast/&quot;&gt;Fast load times&lt;/a&gt; for more guidance.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://unsplash.com/photos/Q1p7bh3SHj8&quot; rel=&quot;noopener&quot;&gt;Hero image&lt;/a&gt; by
&lt;a href=&quot;https://unsplash.com/@nasa&quot; rel=&quot;noopener&quot;&gt;NASA&lt;/a&gt; on
&lt;a href=&quot;https://unsplash.com/s/photos/earth&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</content>
    
  </entry>
  
  <entry>
    <title>Accessibility tips for web developers</title>
    <link href="https://web.dev/a11y-tips-for-web-dev/"/>
    <updated>2019-12-06T00:00:00Z</updated>
    <id>https://web.dev/a11y-tips-for-web-dev/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;It&#39;s awesome to build sites that are inclusive and accessible to everyone.
There are at least six key areas of disability you can optimize for:
&lt;strong&gt;visual&lt;/strong&gt;, &lt;strong&gt;hearing&lt;/strong&gt;, &lt;strong&gt;mobility&lt;/strong&gt;, &lt;strong&gt;cognition&lt;/strong&gt;, &lt;strong&gt;speech&lt;/strong&gt;, and &lt;strong&gt;neural&lt;/strong&gt;.
Many tools and resources can help here,
even if you&#39;re totally new to web accessibility.&lt;/p&gt;
&lt;p&gt;Over one billion people live with some form of disability.
You might have been in a loud room at some point
trying to hear the conversation around you
or in a low-lighting condition trying to find something in the dark.
Do you remember the frustration you felt with that circumstance?
Now imagine if that temporary condition were permanent.
How different would your experience on the web be?&lt;/p&gt;
&lt;p&gt;To be accessible, sites need to work across multiple devices
with varying screen sizes and different kinds of input, such as screen readers.
Moreover, sites should be usable by the broadest group of users,
including those with disabilities.
Here&#39;s a sample of just a few disabilities your users may have:&lt;/p&gt;
&lt;div class=&quot;w-table-wrapper&quot;&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Vision&lt;/th&gt;
        &lt;th&gt;Hearing&lt;/th&gt;
        &lt;th&gt;Mobility&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Low vision&lt;/li&gt;
            &lt;li&gt;Blindness&lt;/li&gt;
            &lt;li&gt;Color blindness&lt;/li&gt;
            &lt;li&gt;Cataracts&lt;/li&gt;
            &lt;li&gt;Sun glare&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Hard of hearing&lt;/li&gt;
            &lt;li&gt;Deafness&lt;/li&gt;
            &lt;li&gt;Noise&lt;/li&gt;
            &lt;li&gt;Ear infection&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Spinal cord injury&lt;/li&gt;
            &lt;li&gt;Limited dexterity&lt;/li&gt;
            &lt;li&gt;Hands full&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;th&gt;Cognitive&lt;/th&gt;
        &lt;th&gt;Speech&lt;/th&gt;
        &lt;th&gt;Neural&lt;/th&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Learning disability&lt;/li&gt;
            &lt;li&gt;Sleepiness or distraction&lt;/li&gt;
            &lt;li&gt;Migraine&lt;/li&gt;
            &lt;li&gt;Autism&lt;/li&gt;
            &lt;li&gt;Seizure&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Ambient noise&lt;/li&gt;
            &lt;li&gt;Sore throat&lt;/li&gt;
            &lt;li&gt;Speech impediment&lt;/li&gt;
            &lt;li&gt;Unable to speak&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;ul&gt;
            &lt;li&gt;Depression&lt;/li&gt;
            &lt;li&gt;PTSD&lt;/li&gt;
            &lt;li&gt;Bipolar disorder&lt;/li&gt;
            &lt;li&gt;Anxiety&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Visual issues&lt;/strong&gt; range from an inability to distinguish colors to no vision at all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure text content meets a minimum
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast&quot; rel=&quot;noopener&quot;&gt;contrast ratio threshold&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Avoid communicating information
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-without-color&quot; rel=&quot;noopener&quot;&gt;using solely color&lt;/a&gt;
and ensure that all text is
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-scale&quot; rel=&quot;noopener&quot;&gt;resizable&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ensure all user interface components can be used with assistive technologies
such as screen readers, magnifiers, and braille displays.
This entails ensuring that UI components are marked up
such that accessibility APIs can programmatically determine
the &lt;em&gt;role&lt;/em&gt;, &lt;em&gt;state&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;, and &lt;em&gt;title&lt;/em&gt; of any element.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The element inspection feature in the Chrome, Edge, and Firefox developer
tools displays a tooltip of CSS properties
that includes a quick check for color contrast ratio.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the Chrome DevTools Inspect Element tooltip.&quot; decoding=&quot;async&quot; height=&quot;370&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/avwZaOjEWT7pES1OqUly.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;I personally live with low vision, and I often find myself zooming in on sites,
their DevTools, and the terminal.
While supporting zoom is almost never at the top of developers&#39; to-do lists,
it can make a world of difference to users like me.🤓&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hearing issues&lt;/strong&gt; mean a user may have issues hearing sound emitted from a page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#media-equiv-av-only-alt&quot; rel=&quot;noopener&quot;&gt;text alternatives&lt;/a&gt;
for all content that is not strictly text.&lt;/li&gt;
&lt;li&gt;Test that your UI components are still functional
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#content-structure-separation-understanding&quot; rel=&quot;noopener&quot;&gt;without sound&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Screenshot of the ChromeVox screen reader reading a web page.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/ZIbJHF5vyMxmKAN9juO1.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;strong&gt;Mobility issues&lt;/strong&gt; can include the inability to operate a mouse, a keyboard, or a touch screen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the content of your UI components
&lt;a href=&quot;http://www.w3.org/TR/wai-aria-practices/#keyboard&quot; rel=&quot;noopener&quot;&gt;functionally accessible from a keyboard&lt;/a&gt;
for any actions one would otherwise use a mouse for.&lt;/li&gt;
&lt;li&gt;Ensure pages are correctly marked up for assistive technologies—including
screen readers, voice control software, and physical switch controls—which
tend to use the same APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cognitive issues&lt;/strong&gt; mean a user may require assistive technologies
to help them with reading text, so it&#39;s important to ensure text alternatives exist.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be mindful when using animations. Avoid video and animation that
&lt;a href=&quot;http://www.w3.org/TR/WCAG20/#time-limits&quot; rel=&quot;noopener&quot;&gt;repeat&lt;/a&gt;
or flash, which can cause &lt;a href=&quot;http://www.w3.org/TR/WCAG20/#seizure&quot; rel=&quot;noopener&quot;&gt;issues&lt;/a&gt;
for some users.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/web/updates/2019/03/prefers-reduced-motion#too_much_motion_in_real_life_and_on_the_web&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;&lt;/a&gt;
CSS media query allows you to limit animations
and autoplaying videos for users who prefer reduced motion:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/*&lt;br /&gt;If the user expresses a preference for reduced motion, don&#39;t use animations on buttons.&lt;br /&gt;*/&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reduce&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid interactions that are
&lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Understanding/no-timing.html&quot; rel=&quot;noopener&quot;&gt;timing-based&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This may seem like a lot of bases to cover,
but we&#39;ll walk through the process for assessing
and then improving the accessibility of your UI components.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; The GOV.UK accessibility team has made some great
&lt;a href=&quot;https://accessibility.blog.gov.uk/2016/09/02/dos-and-donts-on-designing-for-accessibility/&quot; rel=&quot;noopener&quot;&gt;accessibility dos and don&#39;ts digital posters&lt;/a&gt;
to spread awareness of best practices in your team:&lt;/p&gt;
&lt;img alt=&quot;Digital posters showing accessibility dos and don&amp;#x27;ts.&quot; decoding=&quot;async&quot; height=&quot;721&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/lmcS2dTmBHuUo3j0ERCp.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;h2 id=&quot;are-your-ui-components-accessible&quot;&gt;Are your UI components accessible? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#are-your-ui-components-accessible&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Summary (tl;dr)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When auditing your page&#39;s UI components for accessibility, ask yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can you use your UI component with the keyboard only?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Does the component manage focus and avoid focus traps?
Can it respond to the appropriate keyboard events?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can you use your UI component with a screen reader?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Have you provided text alternatives for any information presented visually?
Have you added semantic information using ARIA?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work without sound?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Turn off your speakers and go through your use cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work without color?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ensure your UI component can be used by someone who cannot see colors.
A helpful tool for simulating color blindness is a Chrome extension called
&lt;a href=&quot;https://chrome.google.com/webstore/detail/see/dkihcccbkkakkbpikjmpnbamkgbjfdcn&quot; rel=&quot;noopener&quot;&gt;SEE&lt;/a&gt;.
(Try all four forms of color blindness simulation available.)
You may also be interested in the
&lt;a href=&quot;https://chrome.google.com/webstore/detail/daltonize/obcnmdgpjakcffkcjnonpdlainhphpgh&quot; rel=&quot;noopener&quot;&gt;Daltonize&lt;/a&gt;
extension, which is similarly useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Can your UI component work with high-contrast mode enabled?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All modern operating systems support a high contrast mode.
&lt;a href=&quot;https://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph?hl=en&quot; rel=&quot;noopener&quot;&gt;High Contrast&lt;/a&gt;
is a Chrome extension that can help here.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standardized controls (such as &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;)
have accessibility built in by the browser.
They are focusable using the &lt;code&gt;Tab&lt;/code&gt; key;
they respond to keyboard events (like the &lt;code&gt;Enter&lt;/code&gt;, &lt;code&gt;Space&lt;/code&gt;, and arrow keys);
and they have semantic roles, states, and properties used by accessibility tools.
Their default styling should also meet the accessibility requirements listed above.&lt;/p&gt;
&lt;p&gt;Custom UI components
(with the exception of components that extend standard elements like &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;)
do not have any built-in functionality, including accessibility,
so you need to provide it.
A good place to start when implementing accessibility
is to compare your component to an analogous standard element
(or a combination of several standard elements,
depending on how complex your component is).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Most browser developer tools support inspecting the accessibility tree of a page.
In Chrome DevTools, this is available via the &lt;strong&gt;Accessibility&lt;/strong&gt; tab in the &lt;strong&gt;Elements&lt;/strong&gt; panel:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the accessibility tree view in Chrome DevTools.&quot; decoding=&quot;async&quot; height=&quot;486&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/FcpD3oNA1C39KbQuNinf.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Firefox also has an &lt;strong&gt;Accessibility&lt;/strong&gt; panel:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the accessibility tree view in FireFox DevTools.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/DRqDC9mtfcejAIjLImdR.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;Safari exposes accessibility information in the &lt;strong&gt;Elements&lt;/strong&gt; panel&#39;s &lt;strong&gt;Node&lt;/strong&gt; tab.&lt;/p&gt;
&lt;p&gt;The following is a list of questions you can ask yourself when attempting to make your UI components more accessible.&lt;/p&gt;
&lt;h2 id=&quot;can-your-ui-component-be-used-with-the-keyboard-alone&quot;&gt;Can your UI component be used with the keyboard alone? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-your-ui-component-be-used-with-the-keyboard-alone&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ideally, ensure that all functionality
in your UI component can be accessed via keyboard.
When designing your user experience,
think about how you would use your element with the keyboard alone
and figure out a consistent set of keyboard interactions.&lt;/p&gt;
&lt;p&gt;First, ensure that you have a sensible focus target for each component.
For example, a complex component like a menu may be one focus target within a page
but should then manage focus within itself so that the active menu item always takes focus.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of a menu and submenu that requires focus management.&quot; decoding=&quot;async&quot; height=&quot;377&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/8zpJMaaY0DuAHdugbSr3.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Managing focus within a complex element.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;using-tabindex&quot;&gt;Using tabindex &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#using-tabindex&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;tabindex&lt;/code&gt; attribute allows elements and UI components to be focused using the keyboard. Keyboard-only and assistive technology users both need to be able to place keyboard focus on elements to interact with them. Built-in interactive elements (like &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;) are implicitly focusable, so they don&#39;t need a &lt;code&gt;tabindex&lt;/code&gt; attribute unless you wish to change their position in the tab order.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;There are three types of &lt;code&gt;tabindex&lt;/code&gt; values:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;tabindex=&amp;quot;0&amp;quot;&lt;/code&gt;&lt;/strong&gt; is the most common and places the element in the natural tab order (defined by the DOM order).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;a &lt;code&gt;tabindex&lt;/code&gt; value greater than 0&lt;/strong&gt; places the element in a manual tab order—all elements in the page with a positive &lt;code&gt;tabindex&lt;/code&gt; value are visited in numerical order before elements in the natural tab order.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;a &lt;code&gt;tabindex&lt;/code&gt; value equal to -1&lt;/strong&gt; causes the element to be programmatically focusable, but not in the tab order.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For custom UI components, always use &lt;code&gt;tabindex&lt;/code&gt; values of 0 or -1, as you won&#39;t be able to determine the order of elements on a given page ahead of time—and even if you did, the order may change. A &lt;code&gt;tabindex&lt;/code&gt; value of -1 is particularly useful for managing focus within complex components as described above.&lt;/p&gt;
&lt;p&gt;Also ensure that focus is always visible, whether by allowing the default focus ring style or by applying a discernible custom focus style. Remember not to trap keyboard users—they should be able to move focus away from an element using only the keyboard.&lt;/p&gt;
&lt;div class=&quot;w-aside w-aside--note&quot;&gt;
&lt;p&gt;You may also be interested in the roving &lt;code&gt;tabindex&lt;/code&gt; or &lt;code&gt;aria-activedescendant&lt;/code&gt; approaches,
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets#Technique_1_Roving_tabindex&quot; rel=&quot;noopener&quot;&gt;covered over on MDN&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;using-autofocus&quot;&gt;Using autofocus &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#using-autofocus&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The HTML autofocus attribute allows an author to specify
that a particular element should automatically take focus
when the page is loaded.
&lt;code&gt;autofocus&lt;/code&gt; is already supported on
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#association-of-controls-and-forms&quot; rel=&quot;noopener&quot;&gt;all web form controls&lt;/a&gt;,
including buttons.
To autofocus elements in your own custom UI components,
call the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.focus&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;focus()&lt;/code&gt;&lt;/a&gt; method,
supported on all HTML elements that can be focused
(for example, &lt;code&gt;document.querySelector(&#39;myButton&#39;).focus()&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&quot;adding-keyboard-interaction&quot;&gt;Adding keyboard interaction &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#adding-keyboard-interaction&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once your UI component is focusable,
provide a good keyboard interaction story
when a component is focused by handling appropriate keyboard events.
For example, allow the user to use arrow keys to select menu options
and &lt;code&gt;Space&lt;/code&gt; or &lt;code&gt;Enter&lt;/code&gt; to activate buttons.
The ARIA &lt;a href=&quot;http://www.w3.org/TR/wai-aria-practices/#aria_ex&quot; rel=&quot;noopener&quot;&gt;design patterns guide&lt;/a&gt;
provides some guidance here.&lt;/p&gt;
&lt;p&gt;Finally, ensure that your keyboard shortcuts are discoverable.
A common practice is to have a keyboard shortcut legend (on-screen text)
to inform the user that shortcuts exist.
For example, &amp;quot;Press ? for keyboard shortcuts.&amp;quot;
Alternatively, a hint such a tooltip can be used
to inform the user about a shortcut.&lt;/p&gt;
&lt;p&gt;The importance of managing focus cannot be overstated.
One example is a navigation drawer.
If you add a UI component to the page,
you need to direct focus to an element inside of it;
otherwise, users may have to tab through the entire page to get there.
This can be a frustrating experience,
so be sure to test focus for all keyboard navigable components in your page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can use &lt;a href=&quot;https://github.com/puppeteer/puppeteer&quot; rel=&quot;noopener&quot;&gt;Puppeteer&lt;/a&gt;
to automate running keyboard accessibility tests for toggling UI states.
&lt;a href=&quot;https://medium.com/walkme-engineering/web-accessibility-testing-d499a7f7a032&quot; rel=&quot;noopener&quot;&gt;WalkMe Engineering&lt;/a&gt;
has a great guide on this I recommend reading.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;WalkMe state toggle test.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;400&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 441px) 441px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/3lZosaL1YXafLn4ZRINl.gif?auto=format&amp;w=882 882w&quot; width=&quot;441&quot; /&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Example for expanding and collapsing a category with the Space key&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.category&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify tabIndex, role and focus&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;tabindex&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;activeElement &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify aria-expanded = false&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;aria-expanded&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// toggle category by pressing Space&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keyboard&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;press&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Space&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// verify aria-expanded = true&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; elem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;aria-expanded&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;can-you-use-your-ui-component-with-a-screen-reader&quot;&gt;Can you use your UI component with a screen reader? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-you-use-your-ui-component-with-a-screen-reader&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Around 1–2% of people use a screen reader.
Can you understand all important information
and interact with the component using the screen reader and keyboard alone?&lt;/p&gt;
&lt;p&gt;The following questions should help you address screen reader accessibility.&lt;/p&gt;
&lt;h3 id=&quot;do-all-components-and-images-have-meaningful-text-alternatives&quot;&gt;Do all components and images have meaningful text alternatives? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#do-all-components-and-images-have-meaningful-text-alternatives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wherever information about the &lt;em&gt;name&lt;/em&gt; or &lt;em&gt;purpose&lt;/em&gt;
of an interactive component is conveyed visually,
provide an accessible text alternative.&lt;/p&gt;
&lt;p&gt;For example, if your &lt;code&gt;&amp;lt;fancy-menu&amp;gt;&lt;/code&gt; UI component only displays a gear icon
to indicate that it&#39;s a settings menu,
it needs an accessible text alternative, such as &amp;quot;settings,&amp;quot;
that conveys the same information.
Depending on context,
you can provide a text alternative using an &lt;code&gt;alt&lt;/code&gt; attribute,
an &lt;code&gt;aria-label&lt;/code&gt; attribute, an &lt;code&gt;aria-labelledby&lt;/code&gt; attribute,
or plain text in the Shadow DOM.
You can find general technical tips in &lt;a href=&quot;http://webaim.org/resources/quickref/&quot; rel=&quot;noopener&quot;&gt;WebAIM Quick Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any UI component that displays an image should provide a mechanism
for providing alternative text for that image, analogous to the &lt;code&gt;alt&lt;/code&gt; attribute.&lt;/p&gt;
&lt;h3 id=&quot;do-your-components-provide-semantic-information&quot;&gt;Do your components provide semantic information? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#do-your-components-provide-semantic-information&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Assistive technology conveys semantic information
that is otherwise expressed to sighted users via visual cues
such as formatting, cursor style, or position.
Standardized elements have this semantic information built-in by the browser,
but for custom components you need to use
&lt;a href=&quot;http://www.w3.org/WAI/PF/aria/&quot; rel=&quot;noopener&quot;&gt;ARIA&lt;/a&gt; to add the information.&lt;/p&gt;
&lt;p&gt;As a rule of thumb, any component that listens to a mouse click or hover event
should not only have some kind of keyboard event listener,
but also an ARIA role and potentially ARIA states and attributes.&lt;/p&gt;
&lt;p&gt;For example, a custom &lt;code&gt;&amp;lt;fancy-slider&amp;gt;&lt;/code&gt; UI component might take an ARIA role of slider,
which has some related ARIA attributes: &lt;code&gt;aria-valuenow&lt;/code&gt;, &lt;code&gt;aria-valuemin&lt;/code&gt; and &lt;code&gt;aria-valuemax&lt;/code&gt;.
By binding these attributes to the relevant properties on your custom component,
you can allow users of assistive technology to interact with the element,
change its value, and even cause the element&#39;s visual presentation to change accordingly.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A screenshot of a slider.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;56&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 159px) 159px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=159 159w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=181 181w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=207 207w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=236 236w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=269 269w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=306 306w, https://web-dev.imgix.net/image/admin/BD2bS6XEEUlORVOGHwhe.png?auto=format&amp;w=318 318w&quot; width=&quot;159&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;A range slider component.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;fancy-slider&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;slider&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuemin&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuemax&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;5&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-valuenow&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;2.5&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;fancy-slider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h3 id=&quot;can-users-understand-everything-without-relying-on-color&quot;&gt;Can users understand everything without relying on color? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#can-users-understand-everything-without-relying-on-color&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Color shouldn&#39;t be used as the only means of conveying information,
such as indicating a status, prompting the user for a response,
or visualizing data.
For example, if you have a pie chart,
provide labels and values for each slice
so users who have visual impairments can understand the information
even if they can&#39;t tell where the slices begin and end:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;A pie chart with labels and values to ensure accessibility.&quot; decoding=&quot;async&quot; height=&quot;442&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 500px) 500px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/4DlbNfCX7AYYrPSpQg4L.png?auto=format&amp;w=1000 1000w&quot; width=&quot;500&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;An accessible pie chart. (From the &lt;a href=&quot;https://www.w3.org/WAI/GL/low-vision-a11y-tf/wiki/Informational_Graphic_Contrast_(Minimum)&quot; rel=&quot;noopener&quot;&gt;W3C Web Accessibility Initiative&lt;/a&gt;.)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;is-there-sufficient-contrast-between-text-and-images-and-their-background&quot;&gt;Is there sufficient contrast between text and images and their background? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#is-there-sufficient-contrast-between-text-and-images-and-their-background&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Any text content displayed in your component should meet the
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast&quot; rel=&quot;noopener&quot;&gt;minimum WCAG AA-level contrast threshold&lt;/a&gt;.
Consider providing a high-contrast theme that meets the
&lt;a href=&quot;http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast7&quot; rel=&quot;noopener&quot;&gt;higher AAA threshold&lt;/a&gt;,
and ensure that user agent style sheets can be applied
if users require custom contrast or different colors.
You can use this &lt;a href=&quot;http://webaim.org/resources/contrastchecker/&quot; rel=&quot;noopener&quot;&gt;Color Contrast Checker&lt;/a&gt;
as an aid when designing your component.&lt;/p&gt;
&lt;h3 id=&quot;is-the-moving-or-flashing-content-in-your-components-stoppable-and-safe&quot;&gt;Is the moving or flashing content in your components stoppable and safe? &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#is-the-moving-or-flashing-content-in-your-components-stoppable-and-safe&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Content that moves, scrolls, or blinks for more than five seconds
should be able to be paused, stopped or hidden.
In general, avoid flashing content.
If something must flash, make sure it flashes no more than three times per second.&lt;/p&gt;
&lt;h2 id=&quot;accessibility-tooling&quot;&gt;Accessibility Tooling &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#accessibility-tooling&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A number of tools are available that can assist with
debugging the accessibility of your visual components.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deque.com/products/axe/&quot; rel=&quot;noopener&quot;&gt;Axe&lt;/a&gt; provides automated accessibility testing
for your framework or browser of choice.
&lt;a href=&quot;https://www.deque.com/blog/axe-and-attest-integration-puppeteer/&quot; rel=&quot;noopener&quot;&gt;Axe Puppeteer&lt;/a&gt;
can be used for writing automated accessibility tests.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;
Accessibility audits provide helpful insights for discovering common accessibility issues.
The accessibility score is a weighted average of all accessibility audits
based on &lt;a href=&quot;https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md&quot; rel=&quot;noopener&quot;&gt;Axe user impact assessments&lt;/a&gt;.
For monitoring accessibility via continuous integration, see &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot; rel=&quot;noopener&quot;&gt;Lighthouse CI&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;Screenshot of the Lighthouse accessibility audit.&quot; decoding=&quot;async&quot; height=&quot;649&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Bft9DABqWge4ZRpF6wzK.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://tenon.io/&quot; rel=&quot;noopener&quot;&gt;Tenon.io&lt;/a&gt; is useful for testing common accessibility problems.
Tenon has strong integration support across build tools, browsers (via extensions), and even text editors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many library- and framework-specific tools
for highlighting accessibility issues with components.
For example, &lt;a href=&quot;https://web.dev/accessibility-auditing-react/&quot;&gt;web.dev&lt;/a&gt;
explains how to use &lt;a href=&quot;https://www.npmjs.com/package/eslint-plugin-jsx-a11y&quot; rel=&quot;noopener&quot;&gt;eslint-plugin-jsx-a11y&lt;/a&gt;
to highlight accessibility issues for React components in your editor:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of a code editor with an accessibility issue flagged by eslint-plugin-jsx-a11y.&quot; decoding=&quot;async&quot; height=&quot;500&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/9bAOYq7Cr11vzf4P04d2.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;If you use Angular, &lt;a href=&quot;https://web.dev/accessible-angular-with-codelyzer&quot;&gt;codelyzer&lt;/a&gt;
provides in-editor accessibility audits too:&lt;/p&gt;
&lt;img alt=&quot;Screenshot of a code editor with an accessibility issue flagged by codelyzer.&quot; decoding=&quot;async&quot; height=&quot;433&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/Ca3rCQlJ53C7ILx3hwot.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can examine the way that assistive technologies see web content by using
&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html#//apple_ref/doc/uid/TP40001078-CH210-SW1&quot; rel=&quot;noopener&quot;&gt;Accessibility Inspector&lt;/a&gt; (Mac)
or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/dd373661(v=vs.85).aspx&quot; rel=&quot;noopener&quot;&gt;Windows Automation API Testing Tools&lt;/a&gt;
and &lt;a href=&quot;http://accessibility.linuxfoundation.org/a11yweb/util/accprobe/&quot; rel=&quot;noopener&quot;&gt;AccProbe&lt;/a&gt; (Windows).
You can also see the full accessibility tree that Chrome creates
by navigating to &lt;code&gt;about://accessibility&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The best way to test for screen reader support on a Mac is using the VoiceOver utility.
Use &lt;code&gt;⌘F5&lt;/code&gt; to enable or disable it, &lt;code&gt;Ctrl+Option ←→&lt;/code&gt; to move through the page,
and &lt;code&gt;Ctrl+Shift+Option + ↑↓&lt;/code&gt; to move up and down the accessibility tree.
For more detailed instructions,
see the &lt;a href=&quot;http://www.apple.com/voiceover/info/guide/_1131.html&quot; rel=&quot;noopener&quot;&gt;full list of VoiceOver commands&lt;/a&gt;
and the &lt;a href=&quot;http://www.apple.com/voiceover/info/guide/_1131.html#vo27972&quot; rel=&quot;noopener&quot;&gt;list of VoiceOver Web commands&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://khan.github.io/tota11y/&quot; rel=&quot;noopener&quot;&gt;tota11y&lt;/a&gt; is a useful visualizer
for assistive technology issues built by Khan Academy.
It&#39;s a script that adds a button to your document that triggers several plugins
for annotating things like insufficient contrast ratio and other a11y violations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Windows, &lt;a href=&quot;http://www.nvaccess.org/&quot; rel=&quot;noopener&quot;&gt;NVDA&lt;/a&gt; is a free, open source screen reader
that&#39;s fully featured and rapidly gaining in popularity.
However, note that it has a much steeper learning curve for sighted users than VoiceOver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://chromelens.xyz/&quot; rel=&quot;noopener&quot;&gt;ChromeLens&lt;/a&gt; helps develop for the visually impaired.
It also has great support for visualizing keyboard navigation paths.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of ChromeLens.&quot; decoding=&quot;async&quot; height=&quot;514&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/RcDZ95ALFvNeDdpdv2Mo.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.chromevox.com/&quot; rel=&quot;noopener&quot;&gt;ChromeVox&lt;/a&gt; is a screen reader available as a Chrome extension and built into ChromeOS devices.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/a11y-tips-for-web-dev/#conclusions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We still have a long way to go to improve accessibility on the web.
Per the &lt;a href=&quot;https://almanac.httparchive.org/en/2019/accessibility&quot; rel=&quot;noopener&quot;&gt;Web Almanac&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 out of every 5 sites have text that easily blends into the background, making it unreadable.&lt;/li&gt;
&lt;li&gt;49.91% of pages still fail to provide &lt;code&gt;alt&lt;/code&gt; attributes for some of their images.&lt;/li&gt;
&lt;li&gt;Only 24% of pages that use buttons or links include textual labels for them.&lt;/li&gt;
&lt;li&gt;Only 22.33% of pages provide labels for all their form inputs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about accessibility fundamentals and help improve those statistics,
I recommend the &lt;a href=&quot;https://web.dev/accessible/&quot;&gt;Accessible to all&lt;/a&gt; docs on web.dev.
There&#39;s much we can do to build experiences that are more accessible for everyone.&lt;/p&gt;
&lt;img alt=&quot;Screenshot of the web.dev &amp;#x27;Accessible to all&amp;#x27; collection page.&quot; decoding=&quot;async&quot; height=&quot;513&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/iMaXm08LsbVKpkNCZEwA.jpg?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
</content>
    <author>
      <name>Addy Osmani</name>
    </author>
  </entry>
  
  <entry>
    <title>Fixing layout instability</title>
    <link href="https://web.dev/fixing-layout-instability/"/>
    <updated>2019-09-30T00:00:00Z</updated>
    <id>https://web.dev/fixing-layout-instability/</id>
    <content type="text/html" mode="escaped">&lt;p&gt;In an earlier post I wrote about &lt;a href=&quot;https://dev.to/chromiumdev/measuring-cumulative-layout-shift-cls-in-webpagetest-5cle&quot; rel=&quot;noopener&quot;&gt;measuring Cumulative Layout Shift&lt;/a&gt; (CLS) in WebPageTest. CLS is an aggregation of all layout shifts, so in this post I thought it&#39;d be interesting to dive deeper and inspect each individual layout shift on a page to try to understand what could be causing the instability and actually try to fix the issue(s).&lt;/p&gt;
&lt;h2 id=&quot;measuring-layout-shifts&quot;&gt;Measuring layout shifts &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#measuring-layout-shifts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Using the Layout Instability API, we can get a list of all layout shift events on a page:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hadRecentInput&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layout-shift&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This produces an array of layout shifts that are not preceded by input events:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;entryType&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layout-shift&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;startTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;210.78500000294298&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;duration&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.0001045969445437389&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;hadRecentInput&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;lastInputTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;In this example there was a single very tiny shift of 0.01% at 210ms.&lt;/p&gt;
&lt;p&gt;Knowing the time and severity of the shift is useful to help narrow down what could have caused the shift. Let&#39;s turn back to &lt;a href=&quot;https://webpagetest.org/&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt; for a lab environment to do more testing.&lt;/p&gt;
&lt;h2 id=&quot;measuring-layout-shifts-in-webpagetest&quot;&gt;Measuring layout shifts in WebPageTest &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#measuring-layout-shifts-in-webpagetest&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Similar to measuring CLS in WebPageTest, measuring individual layout shifts will require a custom metric. Fortunately, the process is easier now that Chrome 77 is stable. The Layout Instability API is enabled by default, so you should be able to execute that JS snippet on any website within Chrome 77 and get results immediately. In WebPageTest, you can use the default Chrome browser and not have to worry about command line flags or using Canary.&lt;/p&gt;
&lt;p&gt;So let&#39;s modify that script to produce a custom metric for WebPageTest:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;LayoutShifts&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;entry&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hadRecentInput&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layout-shift&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; buffered&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The promise in this script resolves to a JSON representation of the array rather than the array itself. This is because custom metrics can only produce primitive data types like strings or numbers.&lt;/p&gt;
&lt;p&gt;The website I&#39;ll use for the test is &lt;a href=&quot;https://ismyhostfastyet.com/&quot; rel=&quot;noopener&quot;&gt;ismyhostfastyet.com&lt;/a&gt;, a site I built to compare real world loading performance of web hosts.&lt;/p&gt;
&lt;h2 id=&quot;identifying-causes-of-layout-instability&quot;&gt;Identifying causes of layout instability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#identifying-causes-of-layout-instability&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&quot;http://webpagetest.org/custom_metrics.php?test=190918_6E_ef3c166b4a34033171d47e389cf82939&amp;amp;run=5&amp;amp;cached=0&quot; rel=&quot;noopener&quot;&gt;results&lt;/a&gt; we can see the LayoutShifts custom metric has this value:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;entryType&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layout-shift&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;startTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3087.2349999990547&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;duration&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.3422101449275362&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;hadRecentInput&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;lastInputTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;To summarize, there is a single layout shift of 34.2% happening at 3087ms. To help identify the culprit, let&#39;s use WebPageTest&#39;s &lt;a href=&quot;http://webpagetest.org/video/compare.php?tests=190918_6E_ef3c166b4a34033171d47e389cf82939-r%3A5-c%3A0&amp;amp;thumbSize=200&amp;amp;ival=100&amp;amp;end=visual&quot; rel=&quot;noopener&quot;&gt;filmstrip view&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Two cells in the filmstrip, showing screenshots before and after the layout shift.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;341&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/h1QidJnqWmFsk25yq1iu.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Two cells in the filmstrip, showing screenshots before and after the layout shift.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Scrolling to the ~3 second mark in the filmstrip shows us exactly what the cause of the 34% layout shift is: the colorful table. The website asynchronously fetches a JSON file, then renders it to a table. The table is initially empty, so waiting to fill it up when the results are loaded is causing the shift.&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;Web font header appearing out of nowhere.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;336&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/hlbsiYTsFfVjpNk18ii4.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;Web font header appearing out of nowhere.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;But that&#39;s not all. When the page is visually complete at ~4.3 seconds, we can see that the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; of the page &amp;quot;Is my host fast yet?&amp;quot; appears out of nowhere. This happens because the site uses a web font and hasn&#39;t taken any steps to optimize rendering. The layout doesn&#39;t actually appear to shift when this happens, but it&#39;s still a poor user experience to have to wait so long to read the title.&lt;/p&gt;
&lt;h2 id=&quot;fixing-layout-instability&quot;&gt;Fixing layout instability &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#fixing-layout-instability&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that we know the asynchronously generated table is causing one-third of the viewport to shift, it&#39;s time to fix it. We don&#39;t know the contents of the table until the JSON results are actually loaded, but we can still populate the table with some kind of &lt;em&gt;placeholder data&lt;/em&gt; so that the layout itself is relatively stable when the DOM is rendered.&lt;/p&gt;
&lt;p&gt;Here&#39;s the code to generate placeholder data:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomFiller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;maxLength&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; filler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;█&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; len &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; maxLength&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;len&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;filler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomDistribution&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; fast &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; avg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; fast&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; slow &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fast &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; avg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fast&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; avg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; slow&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Temporary placeholder data.&lt;/span&gt;&lt;br /&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fast&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; avg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; slow&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomDistribution&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    platform&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomFiller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    client&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomFiller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    n&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRandomFiller&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    fast&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    avg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    slow&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;updateResultsTable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sortResults&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;fast&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The placeholder data is generated randomly before being sorted. It includes the &amp;quot;█&amp;quot; character repeated a random number of times to create visual placeholders for the text and a randomly generated distribution of the three main values. I also added some styles to desaturate all color from the table to make it clear that the data is not fully loaded yet.&lt;/p&gt;
&lt;p&gt;The appearance of the placeholders you use don&#39;t matter for layout stability. The purpose of the placeholders is to assure users that content &lt;em&gt;is&lt;/em&gt; coming and the page isn&#39;t broken.&lt;/p&gt;
&lt;p&gt;Here&#39;s what the placeholders look like while the JSON data is loading:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;The data table is rendered with placeholder data.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;486&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/hF2EmHSpJArXA6TQ6Cm7.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;The data table is rendered with placeholder data.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Addressing the web font issue is much simpler. Because the site is using Google Fonts, we just need to pass in the &lt;code&gt;display=swap&lt;/code&gt; property in the CSS request. That&#39;s all. The Fonts API will add the &lt;code&gt;font-display: swap&lt;/code&gt; style in the font declaration, enabling the browser to render text in a fallback font immediately. Here&#39;s the corresponding markup with the fix included:&lt;/p&gt;
&lt;div&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://fonts.googleapis.com/css?family=Chivo:900&amp;amp;display=swap&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;h2 id=&quot;verifying-the-optimizations&quot;&gt;Verifying the optimizations &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#verifying-the-optimizations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After rerunning the page through WebPageTest, we can generate a before and after &lt;a href=&quot;http://webpagetest.org/video/compare.php?tests=190918_6E_ef3c166b4a34033171d47e389cf82939%2C190918_WF_60f9c9a1c669b20039860c09ca27df7c&amp;amp;thumbSize=200&amp;amp;ival=100&amp;amp;end=visual&quot; rel=&quot;noopener&quot;&gt;comparison&lt;/a&gt; to visualize the difference and measure the new degree of layout instability:&lt;/p&gt;
&lt;figure class=&quot;w-figure&quot;&gt;
  &lt;img alt=&quot;WebPageTest filmstrip showing both sites loading side-by-side with and without layout optimizations.&quot; class=&quot;w-screenshot&quot; decoding=&quot;async&quot; height=&quot;288&quot; loading=&quot;lazy&quot; sizes=&quot;(min-width: 800px) 800px, calc(100vw - 48px)&quot; src=&quot;https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&quot; srcset=&quot;https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=200 200w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=228 228w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=260 260w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=296 296w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=338 338w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=385 385w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=439 439w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=500 500w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=571 571w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=650 650w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=741 741w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=845 845w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=964 964w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=1098 1098w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=1252 1252w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=1428 1428w, https://web-dev.imgix.net/image/admin/1BJlP3HxeynRw0gRt52H.png?auto=format&amp;w=1600 1600w&quot; width=&quot;800&quot; /&gt;
  &lt;figcaption class=&quot;w-figcaption&quot;&gt;WebPageTest filmstrip showing both sites loading side-by-side with and without layout optimizations.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;entryType&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layout-shift&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;startTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3070.9349999997357&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;duration&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.000050272187989256116&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;hadRecentInput&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;lastInputTime&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;According to the &lt;a href=&quot;http://webpagetest.org/custom_metrics.php?test=190918_WF_60f9c9a1c669b20039860c09ca27df7c&amp;amp;run=9&amp;amp;cached=0&quot; rel=&quot;noopener&quot;&gt;custom metric&lt;/a&gt;, there is still a layout shift occurring at 3071ms (about the same time as before) but the severity of the shift is &lt;em&gt;much&lt;/em&gt; smaller: 0.005%. I can live with this.&lt;/p&gt;
&lt;p&gt;It&#39;s also clear from the filmstrip that the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; font is immediately falling back to a system font, enabling users to read it sooner.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Complex websites will probably experience many more layout shifts than in this example, but the remediation process is still the same: add layout instability metrics to WebPageTest, cross-reference the results with the visual loading filmstrip to identify the culprits, and implement a fix using placeholders to reserve the screen real estate.&lt;/p&gt;
&lt;h3 id=&quot;(one-more-thing)-measuring-layout-instability-experienced-by-real-users&quot;&gt;(One more thing) Measuring layout instability experienced by real users &lt;a class=&quot;w-headline-link&quot; href=&quot;https://web.dev/fixing-layout-instability/#(one-more-thing)-measuring-layout-instability-experienced-by-real-users&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It&#39;s nice to be able to run WebPageTest on a page before and after an optimization and see an improvement to a metric, but what really matters is that the user experience is actually getting better. Isn&#39;t that why we&#39;re trying to make the site better in the first place?&lt;/p&gt;
&lt;p&gt;So what would be great is if we start measuring the layout instability experiences of real users along with our traditional web performance metrics. This is a crucial piece of the optimization feedback loop because having data from the field tells us where the problems are and whether our fixes made a positive difference.&lt;/p&gt;
&lt;p&gt;In addition to collecting your own layout instability data, check out the &lt;a href=&quot;https://twitter.com/ChromeUXReport/status/1138555303379816448&quot; rel=&quot;noopener&quot;&gt;Chrome UX Report&lt;/a&gt;, which includes Cumulative Layout Shift data from real user experiences on millions of websites. It allows you to find out how you (or your competitors) are performing, or you can use it to explore the state of layout instability across the web.&lt;/p&gt;
</content>
    <author>
      <name>Rick Viscomi</name>
    </author>
  </entry>
</feed>
